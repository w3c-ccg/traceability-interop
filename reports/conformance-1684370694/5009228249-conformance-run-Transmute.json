{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f01d6a92-2e54-4d30-b606-eaecd297c566",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e0bb953b-69f2-4b03-997d-28bae9921fd4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f473b3ba-d4ff-4522-a18b-d38308f4521f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bc615914-4325-414e-b30a-5e2fc81eef8a"
                }
              }
            ]
          },
          {
            "id": "9bfb5f35-317d-411c-8e64-f60ec80b9c2d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10fc8d71-e7c9-4152-b744-24c4ced8e7d6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3714169f-51e2-4ec4-938c-c723bd29e493"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "31d25160-c094-46ca-b2d0-56daf65088d6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "19bc5c97-7f32-4fcf-b459-136a73139d7a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "826ad318-b450-415d-82e5-cbf9ee47a30a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "010af2a2-66c9-4317-b800-0758774a58aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c401c4aa-fe6d-4667-8545-e5616578b17e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c37eb28c-a7e6-4e86-a8e0-81442a5a6bff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "280be3d9-faaf-441a-90c3-0f0ea83950d3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10371a58-d92a-4b3f-b317-308a28e7252b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e048d5c-d39f-4916-a902-cf94f7e42ca4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "828e2928-87c0-4e86-921f-5749b57cdee1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7a207fa3-7b35-4664-9633-b7d841660c33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bc5182d-1135-471a-b13a-41f19cc917a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "617ac3e3-183a-4078-99b2-95d68d5fbb5e"
            }
          }
        ]
      },
      {
        "id": "bc5a6d41-7b2f-4257-8c19-76db31bfeb6e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3f10b554-77c6-4493-acfa-d855cd7fc536",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06ad4470-d3cb-4913-8cd4-402cf6fad878",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d62c1b42-3e53-4202-b9bf-67e276866408",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b80624d-1988-47da-9e8e-55a6f9930514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98fcb75e-2adf-4f13-9ce1-7324519a62ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e79f8b-c979-4c01-a0ce-cf883dd3e289",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114af650-679f-42a1-b935-084126f9e1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70ec17b9-94a0-42e4-848f-450e63f53b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7652c4da-d4d6-41cf-bcb1-f39827b1bc45",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5931a124-91e0-4336-a156-19b27a796c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2aebf4bb-6e01-48fc-b8a6-64219e37becf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e098df8-37be-4f4e-9a27-86fd9829580a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "901b063b-7e37-4f18-95b8-e7066272a7de",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b44722f-a9e8-447f-bb4b-c1aaebfdcd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1776acf-1071-43ad-9c10-723e77dccf80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2eeea6-4179-4dfd-a242-f6df443f4713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c6427c-868c-417c-bf9d-7d437e7ce7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d9ad8d-2893-450d-8bad-d5f28b342bf7",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d458718d-a1a8-499b-8c3e-8c66a15320db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08c3845f-d3b3-4922-a1f5-25b8c8428d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c52fc6-2620-47b1-8c93-f2df8ea6167e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3db7203a-8960-40fb-9b2c-a57b7df8f838"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "60b392e7-26b2-4814-b7e4-ca83c0a4e19f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7399284-b4af-4178-928f-5aac39988843",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "818b6750-af74-477a-852c-699b23ef27dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bdec720b-1ba8-41a9-af02-d3d23fc87e39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f36ab989-2713-402b-82a2-1702b9c16feb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "82f240bb-41e9-4eb4-aaad-ea26fd5b311e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c996fb94-90ef-4b32-9fae-1d2a3870d510",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6eedc2b-edcf-4cef-82b2-fdf248566d36"
            }
          }
        ]
      },
      {
        "id": "3bd3b52b-a4f5-4675-a950-68460ea8cb4f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "720e4af9-f972-49ef-99a5-387937e3a576",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1060487-0cff-46e4-80fc-27ab265f754a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7e3c4b7c-62d4-48c2-8f39-d7ae6084871e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9817cde-aeb3-450f-a625-6a9b913f8f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349bfe15-3600-45ea-b3c1-dd605637dc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3971dfb7-0cf1-47b2-b73c-07b9ae158fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c24fd69-f92d-4bd3-9825-c407b0e3c3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc1e726-a26b-45b2-bc40-6791f3c2b51d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87810b1b-73b1-43a6-b56e-fd294724f5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445cfa7f-603a-4302-9103-af70cbca2e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bef896-5c08-4cf3-8457-5bd5d8c9a811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1817a7f7-695d-4549-96a5-5f2ce33be769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f9a139-d7b3-43ff-b57d-74e6cb34b230",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2eccd5d-c9c9-4dd4-a245-c9e1c2321e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234d2af5-5c71-48a2-abff-af18bd36cd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f3a604-4d21-4164-a12c-971efa8d1247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e3ae2e9-12b7-47b2-8107-bae60bc26cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9b92c2-7734-41cb-be21-1592b8f26691",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e56775-6767-47ab-9cb0-9e0681002b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf0e941-eed4-4579-a738-9a9e39c3552c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2060fb-3ede-4957-8f9b-65bca092ef4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "418158ba-c519-4449-9328-333876f641f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e214ec-adb1-4674-91cb-9e9decd46def",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cf194a-5269-42ff-9f11-eac782adc3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34d3c89-f322-4a94-81c6-edde7bf8f6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daae06c1-a4ce-4da9-9ec0-959781959a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6918318e-c8ee-4546-89a6-577c69e582bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87009eb-2968-4ab3-99cc-0542e2d7a678",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f069d3-2038-4bdd-8f3c-6c4f446eb6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b70453b-f439-48ff-94ad-4e456f636656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc08eab-480e-4934-bca2-933630eea242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b93a90f-e67d-4c43-875b-1adba7ebb0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0ecbd6-121e-4920-905a-0539af771efe",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa39910-41a7-4beb-9eb6-6d981ea8d59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcb41f6-360d-4e7e-8af5-9b720e4f2868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f70cefb-070a-486b-b424-3f7e3f3ed6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "185a7b9c-7f74-4ef5-ae9b-07049e7a2faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a1c212-9429-4ff8-bab6-357ea15af1b7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db86b4e-ef2f-4106-a75a-696c566afb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c741a0d5-b209-4097-92e8-6f78cb2501f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28aa286-bda7-470f-bed3-83601d8f47f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cc0cfd9-af47-485f-9d1d-2cf3cd11a4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769636d9-41ed-466a-8ba9-77a21a003cab",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c288b2-7c82-414a-8a17-3eeda11e30c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a6bd5a-e0f0-4f6a-bc5e-3a313146dabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e01dff-1927-4511-819f-983a40104fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08c6481e-2f7f-444a-82a0-d90f295bd27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0d8bc2-ee3a-4e74-a66a-f515cdce78c5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca164b7b-49e5-49d7-9905-4bc4284075a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e1b8e1-e382-48a4-a214-7212710cdbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a3fe62-be42-41c1-aa5d-0c2c582e2db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6addbf7b-0005-434a-b5cb-be05102135b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22107824-01d9-4d0a-8123-859143c9d000",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c134d4-3f38-408a-9545-390f02c73c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04587738-7863-4fa9-8fb4-60175bdccab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20380a85-9932-449b-b1b0-562aac6d1f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c537786-44b6-4b1b-907d-ec80f1e52774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece214d0-2969-4fce-a701-33b871db8af1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419128be-612d-447c-94a9-3b0c5379e65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13e9a5a-8a6f-4478-b8dc-4e880412b4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611c05fb-fd4a-4c01-9501-6809992c5ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36ab812d-fdd0-48e2-a031-3d1e58427b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1040dfad-d63f-440a-aefd-7dd3e84bcfa5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a157e16-8eb0-484c-9278-a88ce4faee09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0374ea1-e3eb-4c55-aeb0-1b8800e3cc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b530081f-eee6-4f30-a41e-46f29c2077ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f391c0f5-397f-458f-ac92-7a9009027733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c45adf8-29a2-4778-b198-8fa702f5d6f2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462315aa-91dd-47a9-89f4-a6d621809af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7a7954-f906-46b3-890c-918c008fbc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d703167-520f-40f7-b203-5369766db159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fde43f5-0a23-4238-a0dd-4bcbdb30b2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd92ed99-298a-484b-ba9e-2b59733e10b6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5a2726-bf1b-4693-b9f9-17f3b9a01438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2531a94d-4fa9-4ea1-8372-2b6ef308774d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae8d6d9-4847-40bf-9c92-1109ebd03d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "869bf932-8b4d-4beb-8f8c-375b616aa1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c69d67-83ae-487d-bb71-fa8c971be554",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba80aa3-163f-4e82-a4db-b9db7ad3882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd63a51-7ec7-4199-ac8a-991c92b63172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e650b573-659c-498c-8540-380d2f96981c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aab39945-194a-4a35-94b8-bf92bd1939bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86849a49-fb9f-4e9d-a92a-9490d1c79abb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050f02d0-56e1-4422-b135-e12cd2cb40a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b374065-ac9f-443d-a476-4e08c9e65dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03b8b4b-9bec-42d4-bfa7-4e3dc3828056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "582d4851-bcdc-400b-9b21-e6a9af2e1589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74ab6e3-cc89-4801-8a6b-cc951350a6c8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcacb385-5241-4666-bf18-aeb4ab60c9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01365efa-6339-443e-875c-f92275be00c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f09f50d-302a-4020-9cec-b9a60c615020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5979919e-388c-4f96-a789-c64ad668f40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45258b2e-8b89-44b2-a832-114658c69de1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838f9fa8-1d5b-4abd-a223-d51c58173f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d385a5-d536-4e5a-a7dc-8064350f3e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be73584-33d7-4733-92e2-17b6f8d68178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ef804b-ee87-4525-91bb-e5a6d05086a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e394c22-1f66-44a3-995e-f15eac4e46b2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0b3230-b763-46b1-af97-e23d62947769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467d4162-46f0-4010-ad0f-33cdb4f4e023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38a3cb1-c688-4dd0-9f50-d40522bc59ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "735c52d9-72d3-4542-b446-ff63602552b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efd9e2d-a12a-4c5e-ad68-f8d48b5f5830",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46064c7-27f5-47ca-ba4e-de8a5782187e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8dd996-7dea-4b6c-af9d-7d7cff9261e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2479923f-ef96-44bb-bfe6-0f9e1a46e51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5257306-84b6-4ee1-9fdb-c4035a06cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e2d614-af75-4c99-abe6-1fd1d733cab6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfeeec2-7093-4240-9d24-29f4a665f3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5608931-9cb6-452a-b091-5e1dd1600a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe42fb1-978e-4710-9a18-fbccf2402c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1492401-e0fb-4753-a9a6-020f2af297b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe391ce-b69e-44a7-947e-6841bcdc449a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151e81df-865b-43b6-88db-efb305b68eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b19538-c2a4-4086-8bf3-195a36aca502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abcb4a0-9d29-45f8-bcf8-c91880bda4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e09ac9ba-340c-4e2f-a295-22d5ad27c5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a035b700-5471-4aeb-86bb-3c1c8541e378",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39e2236-9379-44ac-a539-6c0a33977dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf0506a-abc8-47bf-8845-72e1b94bd8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9274baf9-a4f2-454d-9449-c612e3e98663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "792ba838-f191-4b43-b7b1-bb14c260dcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29db004-2876-4eaa-820c-35dd1f3a00cb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c515a887-62c7-4c2d-8413-a5d250852c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c883b1-1078-4f5a-a159-83d13a0056d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd538de5-8c62-493f-a078-d661766bd53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba124cfe-8a48-4170-83ec-26529f8ef281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7724f8cf-6359-476e-a7a9-d4d135f01c35",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cddf7d5-ca1b-41ba-88ce-2b2ef99154b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edc4533-636a-402b-b282-f5418d5b704a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1898f83d-048c-4216-a3cb-c5e89b35664e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fef67f7-01cb-4b07-a0e9-9bcc85f1fd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc72a65-49be-4433-9bc9-cc38ad2bfc10",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43451560-e57d-4866-b59c-4f6230860574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a51b3c5-5947-4062-ba94-c991a1897bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596ead31-10d3-4b90-a284-eef2a8533f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84caaf02-d967-4039-929d-1fd5f6a58f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f48926-34cf-41d1-bc2b-dbb9fae1584f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19f14d8-3e0b-4824-ab94-aca65301b8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e53590-1d84-4466-a1e2-7e3174307b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4623004-5fd7-450e-8fa6-fc2f782ee96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b723e18-0ff5-48a2-92e1-6db595caf357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d30cac0-7495-4770-a3a7-2df0d2021ffe",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d135a5-8345-45c4-a55f-68020f6cfffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792ddbe7-44ba-4876-847d-0adb5965140b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe5b2af-d260-44f2-8bea-f5cb6fcce266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c045e1b-504e-4a6e-a2a4-8903558062fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c043f1e-cdb4-47e3-9337-657e501182d9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d508c93-2f51-4be1-8d48-f2f51b7a6818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c1dafe-4d47-4d41-a255-353b6ca06718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee78acde-ee21-419f-8e2f-bcdf30a7b81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e862440-ecde-42c0-ac03-13065e395405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f08c2f6-a462-4c0a-bb26-eaf82fe0cd49",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7827c6-8d82-4e7d-9167-51b1c71dff89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d678f7d9-069b-422d-b4cb-f51c6df7a9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c9f17a-f7e1-4231-8571-8be729e1304d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa8ff0d-9b1a-4bb4-a508-9004981542aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518c8f1f-6990-4a97-97c3-5a7b974727d4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5087b02c-64e9-4700-a7d3-96cc4f72e10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85eb9827-4385-401f-a843-77b054d54071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae214d6d-4cb3-4ad2-8bc1-0d970708e28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac38c4c-8436-4436-837f-1174b2ab98c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf922882-3c0c-417b-9210-907b62d56dc8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167e9e3c-7435-40b1-84e5-5a9099e488b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea396444-57c6-41ae-9c56-3a828886cc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bee0fed-7bad-42b3-98bf-fc248da95d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3143a7-b911-4cf2-b275-3a26122c510f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b4daf4-844e-42a9-9f68-1f2ebe4dc1e5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292e4023-c303-4608-ae35-9d9c604cd359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40171346-ba56-445c-8c29-9a0b84fc65a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73148195-db63-43c4-be6e-7c1055b09489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2c29f7-8de9-407e-9d49-54f96b0b9446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eee245c-842f-4ec5-8488-265b54e93f30",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9501a66-aeb4-4640-91b5-abdbfaed89b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cd73da-c921-43cf-bccc-c8d450f8905b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd36e60-8783-4213-a0c0-071930775060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6354d325-1685-40e9-bdbd-8e7292ee3ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4034e6-1265-4aa7-b439-0b4b06736ce6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82505c9c-a2a1-400f-b7a1-2024dd4872f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe31aa85-4677-41c2-b04b-025f92cba32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c12d54-415f-404e-b3f6-919d51742162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "626c5d51-d44b-4926-a31e-c27a0860c15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e862e743-ff64-4e02-a570-a86a697752d2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a72ba6-f84e-450a-b267-8530f51139eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce313bb-3a6e-4166-a1a1-ff8975f1733a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5333c17-86ea-48ce-bf48-825e9dd0b224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a02b201c-d0b2-4916-b36c-34162900863f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d837a72-9d03-4cc5-8271-af27daf612eb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bcb138-aea6-4a07-8ded-57509af644d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82390103-f569-4be7-af7e-89836b084e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0906a6c2-2f85-4d4e-b26b-e56aaf574b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b37a68-0f3b-4791-be9d-7c6da734ab1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747fe607-2851-4a28-8c9c-84531ad3a217",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a602dca1-a6f7-4c47-b209-d2d7f8b28f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910abd62-4fc0-4172-b221-17627182aeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a822865-ef79-4dd0-a0b8-6d3cca4c36c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a88984ac-da08-47d7-ac26-b129076ef895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac89fbd8-d18b-48a7-93b6-21fe24db1c82",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7782e51-fa2f-4b45-9678-468da799098e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4ccc3a-8fed-4402-bf20-a8b601b750ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacfc4e1-d048-4a9e-91ee-b225cee874a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b98366b1-28ef-48d0-8e6f-b470a904c0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546a056b-7ded-4a33-acb0-07a951eaa20b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c72fbf-7ed6-454c-872e-d6310c24a33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c38f7db-5197-4a07-bdaa-582e51bb83c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32b5b9e-8bfb-47f9-8cd2-ec99e6bc0b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5302c00a-2ca3-408c-944d-5fe3d3d217b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8842c93-9557-417d-bc08-87ec58014ebc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392b9532-702c-4303-a923-76d0899379bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716f9a22-8bc4-44a2-8472-2cbbe58ced4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a926164-d89e-4ea4-938c-675aca47b2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ef05bf-4ba3-4cf7-a0e3-c1c19ea57cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec2a5da-b239-4c9c-a503-b1e3cd8a3dd0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f266be-eb57-4d82-90de-a54493f8040c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e50e73-79c9-4ba4-8a18-a68539cdd50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4aaa890-92f5-45d3-b20a-266301b23c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74c5d35a-74b2-49d8-8d2e-609f7b30d9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2242e7-0c40-4917-94c3-10984293a3b4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084a3570-18a6-4f33-8e15-c1388ba7ae10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835382ac-caf2-4830-8455-c8ca2b709bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bfa775-ee94-4620-9334-12970fcaa8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d2a154-45c6-47e2-9b78-b50a8bae8d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5506c44-4d56-4da4-b803-996d76f0e0a0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5751a11-4dd2-4b67-a83c-3fd6d20a7327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284c1b16-300c-425b-bbf6-500d6d6330d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38c8d0b-e295-46e6-9370-b9497d8b23a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "171a9554-4c4d-42e5-b2e3-4f9761be5c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51e9048-1344-48a3-86aa-f74228955784",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f0e3ab-45fc-4131-b1e6-f127e493c8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a11e64f-9ac5-44cf-914b-847b3e069798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec40239b-827f-40be-b572-ddd239c63856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c69cc722-b616-47b4-b715-9b65803aa4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c454b7-e4f6-4e84-85f7-81a290c78d52",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7e6769-204d-494a-a161-87010001383b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22a65fe-5fff-4027-9733-ba74b946edd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b98755-5c89-4bad-8c21-edf1219300df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d63d842-cff4-4c5e-8f0f-ea269d294bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845aa6f0-034f-4a00-b45d-590a7b281cc1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5f1941-3d18-42ea-bde9-1ec43f4c19ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4303dbd9-bad0-41d9-b3a4-c5d01ea4cfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec331c3-352c-4e4c-9f66-e2e2d3821c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba775d5-5b08-43fb-9d66-f017de4544b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04a721c-15aa-40d4-8aa8-1f2351977a9d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300ed124-bd33-464e-972e-a3d478b1e72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0fb593-7721-43f9-8ea2-f61a4ab9fab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46898d7b-fc71-41cb-b406-bd2e91658607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44a040b2-407c-4aa6-9e37-a997bcff0117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef68a5f8-10aa-45f5-bfcf-d9b65b768993",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d3391c-9743-4a89-8880-0dcbefda0cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19aafffa-c56d-43f8-8cbd-e84bbe6fb99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5d633a-a301-40c4-b0a0-d8ba94d5ba14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88c78cee-f72e-44ef-a258-4acbd195031a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf4e15e-c275-4928-ba71-efb2e22b5808",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe26a76-b8c1-401f-9068-c8b55bbc1a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e498fb-e4c6-4efa-81ef-4bfd4f76eb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98a9878-5013-4962-bab7-70c7cf263220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2775a6fd-b550-4934-bd6c-5706f3b29c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e14caf-06c1-4e83-b9ab-da5f613cfad9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c230cb-9a35-4b61-835b-1728d36b9e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a4f078-3340-41da-a4f7-f4600a23344f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e379d8-b101-4bb5-a1cb-ba13fc2e00e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d187091-2125-49eb-8d58-b8dc997a82e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8320b8f-8bf6-4b24-94d1-392dd0b34d75",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e56d115-e4b8-405b-b19d-0e67243a45e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43e1fcd-5dcb-428f-b939-d270b8af7eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32179d68-f170-472a-87f4-036b41143b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7664e4f8-4e34-492d-b5c6-67d4e9df3fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b8deea-10df-4868-9829-43653569dcc3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49892d7f-7ff3-4ec8-8b50-7b322be32c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc9a908-ad4b-41bc-aad0-3c984fc93ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49bebbb-eef3-488e-9473-a72568e84f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cad7edcd-3f20-4bde-8e7a-07a101297d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f6fc4e-22c0-4b5c-9e14-8100ca979b46",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1dbf68-7af6-44eb-a145-ff4f4e40a205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddb1dee-903c-484c-9dc6-1975bec56f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3c6909-df7b-4cd5-bdc0-6b1ec1b747a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1500e60-42f6-4a41-a6e5-5963147bbdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64ebc28-8395-4009-9140-bdf9b2bc1366",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5552f6af-1a31-4f23-a3b7-d5784f0f3491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a07d86-2556-4623-ba61-744309871023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6d2404-6feb-4694-91c0-ed7134c49d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "154707e3-6247-4cb4-9535-8dfccf0c307a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3ef3e7-19ff-4262-92db-061edb73fc59",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c75c48a-cdd3-413c-a7c6-049ef1e6c3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c25de0-646f-45f4-9a38-75dd007a11ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc3b232-c8d8-4844-b9a4-d328bde1004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "32fd33b6-cab5-4057-88e8-b2c25e294637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb4e46a-0a64-4e06-bf5b-2c4659ec05af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f3ea4c-ae99-4e6e-8020-934bbdf9d906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec865af9-c0f5-4c52-980e-5e7b261609b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a035680f-dafe-493f-877e-ee8c18fd6eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f771511-42e8-4ec3-b0ea-0418a727733c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892bd7d1-afdc-4353-8542-ee1eb2babd06",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94798304-a3c2-41b2-89c2-4bc421fdf2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a100b5a1-c7ff-47f6-b09b-be3f077551b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f620f2-77da-40c7-a5c9-481c9f173683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c889b22f-4083-429c-b029-51dc336cbbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3851b3-213a-44ce-adb2-8ab00addd057",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8851ab8b-2041-4bb2-a2e3-53203e499937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6573b651-88a7-4d8f-bb95-d30b5a66fc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebce3608-1e67-487c-ab7f-1cf49cdd2262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "36b53c75-1603-4606-a918-d9e7b9aacc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a0e923-fee1-48ba-982a-d4249603ed00",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31525f95-6958-4ec2-ba10-a93a08df6056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6407dd6-b2c5-4f9a-a4e4-4fe909fb3eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac22ae2-9353-4931-bad5-847b6fd80f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa0e85b-b499-4e37-a76b-52960957bed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd729f8c-ee6f-4995-88a4-abd922307001",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73af04a6-ce83-42fa-b109-5eb45be7bde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca29607-5e5a-4e1c-8ec7-4b56173a299a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f485b6-b2d5-44e5-931d-0b5c0b7bd1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "50aa2b57-abd1-4c27-8a51-7bb8bf460de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a9d332-07a2-4c02-b0c5-e640f8b9679a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3bc1a0-1c98-40a8-87ff-04ec778c0660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f406db93-e7ed-41e5-ba64-09f0812e75e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cede9404-2d88-4557-99fb-8146522a9f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c45b49-954c-4aee-a053-67b79f73a362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4eda0c-f57a-47d4-9e13-dc0d34b887e4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a7c607-4b89-42a3-b296-96c1753ef13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089e50d3-dcda-42ce-bdb6-f8de6b993708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5d165b-fbce-4169-a67f-c21cbb152786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d60dad7-3197-4be2-92c7-8d4d2fca28cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a948b09f-bb42-4602-a7f6-3707f57a8441",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0359e7a-4b42-48f3-9fb9-6b879d4eb5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911211f4-9abb-465b-b0ef-53af020cb920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3607ea0-81c0-4311-8120-e5d3f392496f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbf1a15-bb5b-417c-acd2-42764d3fbc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafe6376-6963-44d1-81a3-41cf03d79dc7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0daadf4-bd67-4dce-a2d5-77e1fa98283b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4409f8-0727-49a2-b598-2461a08e21e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261214bb-9542-4848-b252-28f96596154b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c12f50ea-adda-4ec5-aa22-443beb69694f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c32228f-a17f-4a9a-8dea-c2521fd61ad4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd0bc06-46ee-4f10-8a2e-9ed0cd3422e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5273aa5-f0fb-4d55-9099-77f4e4e574b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb449be6-80e8-4179-9748-11c091fd8128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe0c397-12c7-4759-b0be-17678051ecb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b22bed0-7351-4b6e-8ebc-5ff6e4844f09",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39feaf9-dd70-496b-8baa-2c78529475e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb30ad9-f590-4daa-86bc-7660aaae36b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6208f5-14d3-43b1-8fa1-26159f007721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "287eea09-617b-410d-b9cf-7db6268fb141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f55d68d-146b-4c1f-94c3-68330e4b9514",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7516d0-2126-4048-a1ef-02df588f0fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7974190-a3a4-4630-841b-c56197020f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b430eb8-cc74-402e-bd3d-fb4325e555c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7748498f-28e0-40ea-8075-ffdacc94318a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263267d8-1e65-4f87-bc17-653d92aea080",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2faedc2e-1e19-4a3e-b020-d7e1a964d71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbd60ee-a897-42b9-93fd-4a992163049d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d69cfd6-182e-4070-9e6d-6bc66f711e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7639409a-c066-42d0-acaa-eba91c5028f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d18d78-eaec-4b77-b6de-4b4a25d7fada",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620c1d54-0e77-4552-95a1-63c49d868d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb9a209-c9ac-4fc9-95b0-b8b413e6d3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d043f7-1ecb-4690-b9db-182738756a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b473b67-dd34-4283-b116-1b26acf4e62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc25ad69-d350-4faf-bbb9-6f7a27f608fe",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad48083-a7ff-46c7-8f14-f854c8521af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dff078-faf8-4cfb-b220-fac1ad4ce401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2eee9d-4c4c-408d-84be-f9e3dbd94d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d8b090-bcc4-46b3-b71e-8f5f98592254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af495685-d191-41d2-8a94-6370ec89460d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc71ac91-174b-45de-a98d-f876c4081ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a1f148-43b0-422a-b7ce-c9f53b9e1e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0938e54-24e5-4bea-a39d-79a4dd02f5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7585a874-2083-4d73-825b-c09f28927792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bc6fd4-84cc-4a6e-9d9b-c54666270280",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758b3298-6994-4bd1-a843-a9fb95e5c9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69479fd-8202-414c-a752-cdac60560243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17635c3c-88c2-4192-a517-24c99d69c3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d6b90b-8ad6-4fcc-9787-0ff3f1a4570f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54353e8-1f15-4188-8eec-cdf9bbfd3a89",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d155498-e220-4219-bda4-c2a78c9ff3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d4cbbb-4e48-4e17-985f-ebe22350d46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0928a411-e70b-403c-b84b-498edb97018d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95bbf9e9-6d07-4592-b7a9-b30111780b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f73025-f21c-4e16-bffa-1908a9582ca5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11261a6-d022-4733-a061-c4c56d00d832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be87c23b-f9d2-4dd2-80ab-cedc10cebc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99b171c-e85a-4a21-b4b2-1362541d1e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf03c12d-c719-4db2-9609-ba4bba390552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d820837b-4d20-46c1-95c2-9b3be78c594e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5682e8-83d3-4760-80b2-cc3c28af86a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd8ba37-ea95-483b-a8b3-f743b716bff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f743a87e-1939-4251-9c45-485b23e5be5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4813ef00-b5db-4c24-a84d-72ed17990031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdc4dc9-7822-4c22-9870-3814021e3477",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e42a22-899d-4032-963e-7bfad06a3db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5137779-b2ff-4343-8694-1db0ddf524ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305abec1-2e6f-49e2-8ad8-8405bc782d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffaf487-a73d-4a48-8c9a-7d688277707d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953fa979-4c5b-491c-9651-5c5584bcf0ed",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbef249c-28f0-41ac-a064-32234ef52607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4be163-9a81-4556-9e3a-8a32cd7d974a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca816f1-555d-4465-8d3c-a9d953b5556d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb14834-83a7-440a-96e3-8e31d08f9d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6939fa5f-bfc3-4cd2-b700-17348d6ad6b8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39dd4e4-ad35-403c-b51c-79ac579208c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00437696-44a0-49f0-bc8d-576ad1187e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d75203-35fe-461a-82a4-2bc81db9c19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bae0f3d1-9b0a-40bc-9a0a-6bc09f248301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ce5195-a0af-4c66-b2e6-a6549f726903",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9eb6e70-4d71-4c77-a281-42d6b094ae74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4743e38a-e9a1-47d4-a7e8-91ebfbba3b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e747f499-7cb1-4d78-99d1-eb0f0050c8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba29948c-1f6e-40e1-a9e3-55af30cee880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc87e42-43b9-4331-a6ea-c90b66789b7c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c322ded-b0f6-45de-af4b-156af4f1cc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2faf11-96b8-410c-8307-de5b1ff3989f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192dc6f0-cc0e-4888-8cfa-5910935ae6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "019bc497-0d60-4c04-8b0e-0489bcc7daf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31984a3-7d35-40c7-838e-9a595cb68f83",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73010e67-e002-4844-9f0f-d49f336e6118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7851a71-23e4-4312-ba32-59efe2e0c6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60237146-41a2-4373-810d-61ddbca50f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1290c34-0233-4ce7-b059-7f10748748e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25230689-c321-49a1-a28d-144b4d2cde02",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5c50cd-8dd4-424a-8bae-77e2abd51ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9f217d-7a28-4478-a269-6ee0a50889f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b231fc-dcd5-4dcf-97cf-abaeeac3bde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97111094-4ed7-4425-85c6-ca66a248acd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930efed0-9c0a-471d-bae8-e08c91c39e35",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f2d1fe-c082-4851-8bcc-2864b5d8c720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9742ba5-6f4a-43f4-8158-c42cae709386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4317925c-a91f-4e1d-90ba-8e2f6944e0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70198e3a-676b-43df-b5b4-0c950940f783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d207a6-1a90-439c-8b94-5955872d079d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180d3706-512e-432c-b7d4-e5a41401dd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e848a4ae-51f6-4e39-8c07-ab5075fbf186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ccbdde-bcb6-4fb4-8257-a4b00e61651f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0552a41-80bf-4485-b495-7ba01e01e180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2cdc74-3d8b-442e-bb60-be04c26fb436",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0b4919-c29b-4649-b7bf-893dbe6ab6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622ac757-5f34-4a1a-9a24-687659cde2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ee1e0b-15ce-4524-a01e-3116a2ac7f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "312edcf7-a88f-4c65-9649-70d51853697a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94637dff-8b84-48a9-a8c6-53e38c8ba3b1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1757751d-af61-40ef-ac44-1e555c437df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89de7902-fd93-4b3a-8e8e-4f2c50ec9ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75dd715-8b94-4108-b406-4efea0c38467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2f9e98-dfe0-47c7-a532-bfd20ccafc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f3cd67-831d-436f-ba12-6b175e4f6807",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ab1099-11c5-472b-8d5c-87500bae06bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4ed25e-2bb2-431e-baf7-df45e80d11e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced73010-ea3d-4d85-93c6-7a90d86aa84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "996252e0-2017-4d07-924f-30d002881443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3f5d5d-6bd4-43cc-8dea-a45d00aa58a3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a7e29c-46cd-4d8c-80d3-d0f525b7d0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87f681d-a7be-424d-88b8-2e17bebe9833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816c501c-d42d-4ded-8505-a07f47c9c484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e586ab84-8e62-4f3a-90d6-5703b2ea2607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d704618-2de2-422b-92ee-fd353bf8e5b7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b71e26-bda0-4f9b-a38b-c77fe059330f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906c5aae-c1df-47d7-b6f9-fffe1a83c1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d64cda-4370-4305-b6bf-d9df4c58af67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0f4085-bf29-4186-9fe9-4f3f3c2a672f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6475af-616c-461d-8e68-a14fcf8ac3ae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0cabb6-7753-4882-a6d9-b644ccb8e182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a4221cc1-f1b5-4152-a3ba-215ad72f0362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743c0b54-9fb7-4d2c-a958-a89fcef445af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "54b44880-0c69-448a-a6e7-05b770d7d16a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3afe855-3d97-410f-ad6f-2dc9b5133157",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61291252-5448-4e68-ad1e-c5bb9bd06400",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43988f9f-3a42-4563-852c-7bb6eae2cf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dcb99ef-3a7e-4813-bd51-70f7295b1424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e950312-8733-46f4-8efd-c638dc457a63",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "962c2c38-84cf-480c-bb35-13640aa634f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e64bc0b-f659-4911-b2b5-cc29f0eecea3",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885da7ac-b79e-4aec-a376-3eec432eb38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a81b8f8e-1841-43a5-a62b-5902b18d79f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37788c8f-8f1f-4bf7-a298-3a931611ca1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "821a93d7-34f7-431f-82db-30a067040ea5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eddde500-5dcc-45e1-894a-b8ba9ac4d86b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9fe9476-3cf8-4d5c-a7a7-575ce9b83e2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da10815b-4245-4eac-b9a9-64cc20503716",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df32bed4-5082-4732-a1ad-52186a90bdad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "587e6a3a-9159-48d4-885d-b3bc9e1ca92c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2d57e41-1bdd-4134-ac95-f12251de8ead"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "80654512-e6e5-45fc-b5e1-cdeccc86c310",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba25b47a-7dab-4949-91f0-cd11f14f4035"
                }
              }
            ]
          },
          {
            "id": "f7490d5d-933d-4a81-ba26-74f678d11ad8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "790ceb73-a0c9-4f77-a14c-cb5bf2b72705",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20892752-e147-49a8-9b3c-0a29f9c1a078",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed61457b-5ee9-47e7-ad11-47263daea631"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d76e8c3-3964-4697-8b8e-674f99de23ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0a2bce0-a583-4587-81c5-39f8af83af24"
                    }
                  }
                ]
              },
              {
                "id": "9638aad9-3ff9-42bf-9577-1dda6432458a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e62b2ae8-446f-4641-b649-176897e33ada",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4e25899-0b37-4301-9980-1edc9c63a3fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c548f98f-9b55-4eec-abf4-fad17430b6eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "271c7189-c2d8-47a1-bfd6-9e0ba47c2806"
                    }
                  }
                ]
              },
              {
                "id": "9a7c49df-aa62-4fb6-a93c-3f05a3b40502",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b678247c-c35b-4992-a231-29c2e4b2b1b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb76519e-b99a-44d7-8b9e-3f524fc652fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b60b331c-1f12-45ff-a695-11c8b8e93f6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c46957e-996b-43f0-913c-d02687e6bba9"
                    }
                  }
                ]
              },
              {
                "id": "03c8c369-ef30-4ae8-9275-850471a810e1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ef69eae-44ec-4bc5-9f36-70f4ec32607c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68f96446-d748-4d24-b0ca-e82976fc309b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed5c5400-050b-4a30-a8ed-f613622ad681",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6d290479-4c59-44e6-856d-a49705197ab7"
                    }
                  }
                ]
              },
              {
                "id": "142d195d-e4d9-4f6a-aaf5-f369e54fbca1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cbdf65c-66c0-4a67-ab39-c31daa822b5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1cc9da5-0b4a-4116-a0fe-5f0b62db5797"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c99090-2577-4acb-ba0e-7969527b40ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ddea4e65-d07d-400b-b079-843ed1096d18"
                    }
                  }
                ]
              },
              {
                "id": "0cba7087-1e0c-44eb-98cf-c94cc774ee00",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ee539e3-be45-4f7f-8518-8e5d0caaed7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bfe0467-a5b6-4c8b-a4ad-6ccf2e798b0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea6ac668-db62-4304-a514-249d7bd0a757",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d59542c9-af23-4102-b750-7a3bfc1bc6e0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de0e7c23-e5e8-4613-a904-fc3880e0d2a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e9431c1-82ae-4832-aab2-a91250a7d8f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b8e0b89-364f-488a-89b8-e52084469ec8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac70b62a-6c15-4a42-9690-9c58a2a9ec7a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3feaf713-1585-4852-89fa-a09ff2000294",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a25ecd08-9d31-4b25-a536-adb85a72b0ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec775970-d8d8-4291-9f18-3bdd343e5c93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "192cacea-cb26-42f3-b6d2-dd9a39b17e5e"
            }
          }
        ]
      },
      {
        "id": "cf743269-ea49-4dba-8d66-7553f2bc54e7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8bbd6c51-f108-4b4f-a1b1-5b465440d968",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80ea2c7a-1b38-4b8a-b680-8663f678fe57",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4f189cd7-997a-4085-a118-fed9c8d6389e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794e801d-8eec-4789-b860-86b84ac65783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c18bb6-884b-41af-92e9-369af6178e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f83c8c-020b-4f72-82f8-b5fa64c3d3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f94721-5edd-4d34-9a0c-809991759150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e62213-d2e5-408e-a112-43edfda65b8a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc74f49-ebce-4182-ad0f-baf45dabe6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac94d7a5-3a10-4268-a1fb-e120e47d75cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7792078-d3d6-4498-9725-c16054ddd6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "185b6bfa-04e6-4fa9-a3d1-1ad5656b7156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370009b1-58d9-443d-ac9a-8dbeb6beff08",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb59bd9-eb2e-4703-9ce1-89c6d721a396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c942d3-eabb-402d-9ec5-5342e0a84042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8488b281-0e5c-48f7-a83d-df9dda696fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18fab887-f232-4f8a-82a9-16497e43fc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23877c02-0df4-42a4-a129-8bee333fa7c4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e45920-6bd0-4d2a-9cd8-36aec09b9bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0f7d96-8a4b-4018-b1dd-766ec846a107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c63a7f8-0b7e-443a-a75f-7c8526580e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0db6eb-5fe9-4d15-8c4f-cde94827dddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b4a3c7-570d-405a-bc32-0cdcce794949",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaa98b1-258e-420f-9538-ef1913d64521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a989821a-9e90-45e2-bc18-3d9328e1b787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aeea4b-9e6b-4253-bb8a-28619339ccca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f9651d-9f29-47ba-874e-165398085ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f84e1d3-eadf-467b-8e4c-63c36e6638d6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c959d25-aca3-40a2-bbea-b9fcf6c446c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a286dba9-c99d-493d-922b-d634bea598d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8298162f-1e8d-4141-8df9-0ff9756923ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d35989c-3ea6-448d-88dd-c54b5b3a3a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aad5f22-c14f-4b40-882f-a9a67ad2f11d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbe557c-9bef-420b-a60e-6816217df360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068a9d24-47a8-4f2c-9ec2-a40f583532c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3581088e-0a0d-472f-bd23-40232dd004fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e29cfb-9ca6-4429-bf7e-81327001f84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b24b945-b5b6-4640-b8a2-92d7aeee835e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d14cca2-43a9-4af6-8926-c5483c20139c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dedeef8-516a-4386-8e43-5d6553a9eec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb3d219-b315-4159-a4b6-42faa9b4fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20324a8f-9647-4ef6-ae1b-9f44426ee98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772dda7a-0c11-40f6-b3a7-5e72d2e8bc4a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6673e64a-dda2-4dc5-bdf2-a1d14e06cf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9afb47e-1b55-43e8-bcc2-1a32f63ed7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2448eb76-b034-48bd-93fc-f8c852750ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5e88ad-0f09-42e5-a107-e97d5b35309a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d233c049-bdab-4c22-a69d-613d316f11b1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2553fb4-24eb-47ad-85ef-ff7fb6280080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff16e09-06ce-43d6-832a-e092c6cf13a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e72aa8e-576a-403a-b9c2-5ea8c17b4ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "706d981d-db4c-4d8d-b5e3-cf52c8dc3855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726aaca5-52d8-4684-81b3-1a146cc35a18",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11966a85-f624-467f-ac36-30dfaf1f630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cdf328-c371-4d99-bc23-5dee8df86bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6bc734-356f-453d-a57c-b43026077c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ccf38a-eae5-4796-b075-40acd9c3e92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b2c2dc-b70a-407e-9099-1092495c75e3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a0b5c9-83a6-448e-afea-96d558f22cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f1aaeb-9daf-4fdb-8e24-130d4a775cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c44325-1943-4311-a5eb-feadb3200e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86c6dd9e-52f1-43e9-b3d0-4b7c3bc5900a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a2eba4-952f-4ead-acea-c646869bf71e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335fd12d-23cc-465c-a8cd-bb9a71667b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d2e451-1920-41fa-a169-002bb0f0216b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaa6a73-96b3-49ec-a816-06e3da5d0ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbbd9dd-b1d0-438e-83f0-85cbb84b0d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940dc0fc-ab33-490b-bab5-ae8fb095dbab",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3aa430b-78ac-4ba6-bc23-c928e1365138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48540fdd-5809-4f05-9b25-62c3abf776c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dd8ecd-debf-4a69-a088-7d291693ba35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c20b30b9-2194-42f6-89d2-1f6f32d336c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816c377c-351c-494c-b7ce-37e9b76f0d09",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c2193d-7ca5-4298-a714-c828745e2b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a82e943-129a-4713-8937-6bd754869c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547ac5b6-112a-4366-968d-b41e5010d6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3468bbe7-c996-4855-9ac7-5634f68f2231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddec60ec-5b80-427d-861f-52e729ee85cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c30fbc-0ea4-410d-8ff3-36b54586d73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5dd65a-6598-46b0-82d7-26d8d97a96fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a1beab-1761-46da-9229-50e70bf694ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeab3d11-f080-41d9-8af6-37b02d83995a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490eb439-245f-4c8a-9869-e14a413e3e35",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7090e993-281a-4d37-8c15-581d57fa458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba4acc1-b322-4b4c-83da-00587ce9337d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c170dd6-7712-418a-acc2-e7fdfc1741a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed0433c-8ae7-4ed9-9958-563e7d47c084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c7b48d-c7c8-4681-92b6-2cc5ed170577",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09efbd08-e5ec-478a-8a53-d6d8d5c53d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7153f368-b419-416c-92fd-520462e42203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a8e692-3044-4eb3-be5a-80ffaf44dae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92965c2d-4d0c-43e9-8180-a2b920f3453f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84679a3-f4cd-46dc-8872-2bdd931c2a3f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290edd32-2ad3-4a4b-a14e-de490a7da50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba6fa42-30f0-4294-a153-cff4a2462fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5757cd25-a45e-4667-8d2d-6aa731514746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13825b1e-04bd-4914-b79d-0f2223fd4779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda98a8b-e3af-4ae2-9432-abce79ec86f6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd6d6ac-372a-45ad-8d7d-1d73e4b93b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1fed7d-ab01-48dd-b5d7-f7d6da205bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c69b3d-975c-4b86-b407-d178b2e357c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a133a1-4e89-41de-b0d0-24580463bdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a982b00-73ed-4c33-8c13-24f7a4956607",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55eeb59-d84a-4932-ac05-44c0400eca40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b50cf52-6ced-46fd-90b2-a94f698f5d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830de10b-ad29-41da-863f-a2ccebc1e014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70a10f05-be02-4687-a133-cd71d2d58fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bd8d5a-be53-4a98-a95d-d937d9b3d897",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f9ed58-c903-4cb8-951e-7ab8e07c812a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5980f9-51be-45c1-b9f4-381b77677513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb56f1e-e554-4863-be26-97fc29d56d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68463d2c-f59a-4450-b678-3aa05508c17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e86f66-e99b-43bf-b611-b15cd4e7eb72",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dd1b28-d35b-4701-820f-60be7abfee63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848227d4-4373-4ae8-9e59-b99ef4264aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9918c887-9cf0-4597-9172-f502333b0137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c289d29-d1d3-43aa-8b88-b7d8aeb937a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26b89cf-f8cd-4c93-bf1d-072978054780",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0502af59-1f54-4975-b72e-6799bf015711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26b62b8-07c7-41be-b777-bb5c808882c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b88c1a-3ecd-4fc7-8319-bd05a72522e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afe7f887-6783-447f-8b82-2c45dd3c64bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d90d8e-efaa-494c-9118-76a6a9fb3939",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79efe31a-681c-4241-bb63-13f62fca0b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179dce02-e4c7-4b19-a167-71fd8f6fe819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b603a6-6394-4c16-bab6-e64397d21070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8da984ad-088f-46db-831c-a5cc3ab22be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2085a841-765e-435e-839a-8125770bf373",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932cbe19-5b60-4500-8afe-f57dcde82136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de42332-6bfd-4868-ab9f-77f664e1f36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a3046f-03ee-4f76-a144-4774f16d0c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef36087-bf6e-4f63-a3d9-18a1073c1c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eb935a-3a17-4924-b565-eaa299f1e551",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494ce4af-9f5f-47b9-bcc1-76244a112ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a281ff80-591b-4d87-b8b2-f9cf2feb180d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08307c9e-fa67-4dc0-8b4f-9933e2525725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c18c181d-8e65-402c-a3af-85b7efc40cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681aaab0-6dc1-4571-a20d-5b91ea062608",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960eca7d-a8ab-4df5-8c96-15ab2830bf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154bbe4f-49bd-4bfe-8ab0-0ba9c33fc019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181c5a68-8be4-40eb-9866-b9e4827a5bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4eafc4-c260-4007-b595-5078e1baeb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eedf6d4-0800-48df-8e11-f3aff10014b7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b04caed-3e35-4169-92b0-55a8fa5fbac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7b2145-b744-4055-a954-daac449821cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9012282b-3578-40ec-966f-d6e51fb9f8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1814729a-e78a-4a96-9e08-68031afe0ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641bbdc9-7d19-46dc-8a3e-46caf6319508",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d594862-9994-4f70-ad26-829e35225132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a7930b-e39d-4c1c-b65e-2552de2ea5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990c3e05-9b84-4278-a564-5db3d2a89628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2b2cab-65be-4373-8c12-6f460a784928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e5f57a-56fc-427d-b23e-c54c9ca08e3e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8373d2-e129-4178-9c4c-73cef8bdf056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f289acd-74e3-4c23-a63f-468a35b6daca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2860ea43-3851-4868-a6d7-64803f584379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c16ccf-8b76-4554-af1a-34f14b461dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be867bbe-7790-4bfd-9010-d0f29cd1f98d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e587bc-a040-418d-ae6d-21f9ccc1fa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab66e41-9a8e-48fc-a725-eec59c94d1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b87aa61-7c5e-4d4e-a2fa-babfe1cda0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e87cef1-9cd6-453d-8ea0-29053ab92df2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3989a63a-02f5-49c8-b96d-e190ec535f08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d489dcc-ba6b-4740-9f52-76f9806ec210",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8146728d-1c0f-42a1-9cf8-1e8068694018",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "39234d64-4d83-4b2a-93d8-8a193d15fc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0919b5f-eef4-4f14-b04c-921378e29a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a0349da-609d-417d-a455-fa7cc888135d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8532cd-8acb-48ca-8d4e-31198e85b50b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9eed6f-0bb3-4584-824a-6f02b488d7fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ed67abc5-047d-47b2-ae73-2f20d7f32c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a67ec5-d40a-4617-8b51-46321bbf7f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "098ee8c3-939a-48b1-a858-5cbe0da29e0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4f68138-69ab-42c7-9e34-d22bd0e21e00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56fcfb4a-72b9-4243-839a-4e431e59eeca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "893cc960-69a8-44e9-be2d-11653229ca55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca2ddce4-6142-424d-ac7d-1a2761478490"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "464c581b-78b2-4e96-beeb-502b84af17f5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e67d8e9-73ad-4843-b435-f4101d632d89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bfaff66-9cb4-46ba-b8ce-13796671baaa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87e49cb9-a259-48a6-b80a-0a62fbd83391"
            }
          }
        ]
      },
      {
        "id": "3edeeabb-5d2e-4164-bf69-ef50aff189d6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a7c96d6e-b089-451c-b3d3-7bb6995fa75d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5536e29b-c364-4fcb-a956-63226cd0b067",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19dd6e34-164d-4968-bdff-10710ea63f01",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c40a61f-bb4b-41a9-9476-79b09edffba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf749e22-38f9-44a5-912b-4c25e855446a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aedb7d5-eb3c-4104-b362-80507edaedda",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb61747-caf9-49f4-937f-585c84b3f016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b058c2-bd35-438c-8ebf-e08808b343dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b3d4cd-7622-47f7-ad42-e8ac544458f4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edb696f-3efd-4beb-bae0-c3c2e890f11c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8810f73f-cfec-49cc-9794-be3cb9a96576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa650a79-1a32-4b0a-8d81-79e6bbe5ad88",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48b215a-71c9-4da6-bd10-fc02abdc2c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c3e36f-3639-4457-b5a6-3f299116ca8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb506c0-532d-4f65-a4af-6480efe82de1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d076f928-5413-4ae4-bec2-91aef19c89cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a78154c-9075-4c3f-b133-9e0b82a4a827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca235d1-a966-4efa-8331-29a909c5d5df",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c689590-879d-44c3-b2d7-26528bd859b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77513ad2-2efc-4b49-bead-c587096569f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65159699-71ff-4bca-a08a-a9333bd77176",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0c41e8-7793-4c41-b651-d94c5bcaf7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d30a0f5-9768-400a-b3d2-a6296df0b48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5e449b-bef5-4b90-8af7-d1fa2712b007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae1e163-28f4-424e-afa9-0286525465bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5247c0-8072-4788-9273-f2599afe72f1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cd614f-a4e9-4d2d-b3fc-db7b01d778cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0035cd33-43a8-4df1-8e13-5c94c9c43465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dec2c17-6c64-4651-bd8d-bc5a67e51a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6df2645-2e45-4dd5-85f5-31583125a6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18067e10-dd8a-4b6c-8a63-00af2878e7eb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5536fc6-5248-4926-b207-4a6b99fdfce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9846b596-04f1-47c5-921a-c46a48426a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4f699f-5738-4d13-81b9-8253c826d946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e484e4d-ba42-4e69-af8e-ccbce45f47ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f4a45f-b0d3-4593-9e30-04dfb7867d6f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d539fbc-19c1-4338-ab2f-08a9463b15d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d11d42-67db-4c57-9213-bf79d3c812d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf1d777-9052-4bb4-8ae8-394819a0b958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea25868-f12c-43fd-bf61-99fb05f6d8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612a3903-6aef-4542-ae04-9e8039b6210e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69de9aee-105b-443b-a4ac-88389f2a16cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17373c7e-2d7d-43f3-b5ba-82bbef122630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0008bc34-93db-49f9-bbd1-138f9266174e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b808ce6a-1333-4944-b17a-4eb5debeeef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92809d2d-66b7-4949-88e6-e6d1f01fc3f6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88074670-b7c0-4ace-a777-52cd02c88db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d986d88-97cb-4d6e-ab4d-8ccf87d23e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b883dc7f-9bdb-4b37-b3af-ea8ac5471fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da99e5e6-7c24-45c1-812d-03df57c2dffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fb71db-d64e-4cef-8b97-6c218fa6aab7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fa199e-ea8d-4f8a-a67b-811e13788af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867ec236-e343-4547-88ff-bdac8c756a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87520d62-2045-4fc7-88ed-c630fcc7a8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211e3a50-9536-4a0f-9f41-6b2cd84cbb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6844d2cb-79f2-4493-84aa-f146801ee9e7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f38196-cb56-4bc0-9d4b-26a01fb44877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7bdd80-40ad-43ca-a90a-2bea9e739527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b73dc77-be07-42a6-915a-25e71fca61d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44d8b46-9b9e-4ca1-b876-4400c3879ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92929b1-e5a8-4572-a363-41b6ea4e94c8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab68d75b-e1d2-4b12-a605-5201d98586f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b961daf-004f-40dc-89b7-e240bae641f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696bc213-11c9-4d18-a1f6-349cdc43127a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d1c8a4-d999-4d81-9213-df894ebbace2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb1c49e-b674-41a7-b1e7-d171e99f6f35",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64089e64-68b1-41d2-8094-fbd2e8446596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff862c0-700f-4dd7-adea-f72083e3eeb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce921bc-108a-4929-96f8-e3da663602ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7d310f-b6d8-41e0-a566-b1007e48668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc88674-e056-4589-ba98-22764ee53098",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2908ceb6-a5de-4636-90a0-4f855732da98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65700aa-955d-46c1-8b6e-7f8e6a8eda4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3c4f62-101e-4048-b7da-0a26e76dd1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b26a552-0f21-4478-86d9-6fc5726c8a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3116805f-84a3-4c90-933d-5a570178143c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee55b839-3bc9-41af-8593-8f2505aedd94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e72dbd-02a6-46ab-aee6-813a7bb4d634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2570a30-02c9-4079-b515-fc4b98397022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c23a50-8042-4c4e-801e-f7dfa16a8d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bc190a-50ee-4e9a-9886-a2904e09792e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d6ebfd-16e9-4aa5-9acf-da84bac2ea43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f661ce-022e-497e-b1da-829614087201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ca2b9f-740a-4f9e-8bd0-36a8e3440772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47537e0-5e18-4560-8011-0242d40d5431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ac1448-e47f-4ef6-b1b8-bcfcfdec1934",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd00e8c-e421-4355-a395-208a901c320f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a733d106-8e1f-44e8-91fd-236ac8f71dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5276bd-9cbb-45b3-a8c7-b3d7e9474ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad622b8-aebb-4cf2-9db6-4f370df8d0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cc7d43-2244-48d3-a320-aa1b6f986679",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996768e9-cb7f-4085-a0e6-202680a3f0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09984c7a-d07c-42f6-86a2-f0e570562ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad12d2e0-ce8e-4bcf-a0a7-42de9be29bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7292e4f4-ba64-40ed-8294-0488a18f4807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99b4451-980f-4e83-95b9-45ff5883727c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269a0704-3458-4bcc-83a9-c53b61b4dd84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae1177d-1d87-4aa2-8cfb-1e7b52144287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a613dea2-2295-499f-8f71-9829775f528e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9928b78-c743-4f28-a1b9-94ed75b83ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351ececc-dbb2-4dc6-baf3-c236c4af8e68",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12d0f1c-11f8-4aac-b40e-7ae69e2488cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a2d5bf-291c-4b20-a35b-26576ef0761d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e5aa12-6749-41bd-8956-a1fc11087e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6a4a13-00b2-405a-83b2-413af1d1dda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc9ec9a-dca7-42d8-bbb1-b7da96326739",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f10b8e5-019c-4c12-80ef-5da3987f1688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "557fa545-76e6-4011-929a-67f8ecc470f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3adc296-14f7-4d83-90f3-b1ab0ec78bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c5a9a1-cf9b-4f79-8a8d-4b88c1f37192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6572ac5-d9d5-4553-83af-dccc1e6a3273",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2936b5-9816-4fe8-8f44-bb2b9c97093b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e167a24-dcf2-426d-bf0d-e2fc02eaca86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff07791-a0a2-4960-83dc-552f8b5f73e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fb2906-e778-41c0-957f-7e36d418bd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deab9139-04e2-47bd-b1f2-2326a6df4303",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212dcd05-40e1-4521-93b2-8a757ab084f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa967e03-de1e-41de-bb7e-ac974fdb86e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cccf88-e7c9-47da-b797-b7f58dcbd01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63df802e-c72f-44b6-abfc-f10edad01e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e84d75-387c-459d-a7d5-9c09fdb801b2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22a6b4f-b0a7-4d56-b592-20bc64c6357b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7fde20c-21b4-4360-a8e4-19571705056e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f534181-f5af-4dea-9596-5fa424332cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f490ad7-7d26-46ca-b339-99678371ca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fabe06-c3db-45e1-9b8f-cc8e04a36b6a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cd60cb-0b0a-4f82-b011-7451f4102203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59e2801-a1ef-455d-a710-5ad97eebe419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925d62c1-650f-445a-a315-1e2164cc8915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a092ce14-dd71-4c7f-a031-530fb7f73d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42900cfb-a45f-46a8-a8ec-d5bb5c200512",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425b512f-e214-41fd-b406-b2d4df5b4538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f38f9730-a9dc-412c-9dab-0f65b554fc9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe90f9c-02f8-4693-bf47-bbb82d3ae117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2160e3-edf0-4dbc-ae1c-cac45ca79808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6734807b-3064-49bc-b89f-9be9f0728354",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ab7db0-e7d9-4881-80d9-9087caf39f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "469bd215-5053-4297-95f8-1963c00dcff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce557f7-2832-494d-b357-e508da3e15e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41d9c57-4c35-421f-8ac2-589a875a8a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6acabcd-e17f-448f-bb1a-c6d90beced1a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6e65b3-b337-4614-b7ed-49aa99ddc7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec4515ee-f760-45c4-a605-a4a7b9a364c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e43812-632d-4e4d-9136-090f0ea9b10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de9cd40-f946-4ec9-94aa-8b2e027d3e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed7ff5d-4578-4306-8c50-d6140d81fec8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68ebb29-07b5-4c9d-9c2f-4acf9e7f3892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41ab5885-d165-4ade-ac4a-2b4cc4149ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4988ca2-6b3d-4f2c-aba6-7cb9d737f497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23df3c9-e465-4857-b810-64bcf74f6421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f93c0e-896b-4d77-b10b-f9b74695373f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54d2e5e-3e70-46de-9731-6b45048eb34a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e4b60b-ec91-49dc-8e1c-2acc54d10910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28df6ef8-55cb-4a6d-a531-b767ab283ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795d17ce-d6ca-4afe-8b28-60d8c0f24bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a24dc4-f3a1-488d-93d4-0f4bdad78610",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bea995-2655-4783-97f8-804ece277246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff5a9a7f-7967-46de-a410-1cff2a955a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cc20f0-294c-4e83-8d05-176511265922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093c8881-7f9f-4254-bc34-b4309532d3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721fae55-5381-4a2e-862a-6bf168d4f388",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81d549f-877a-4716-95f6-cb26bb82befc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0060f443-61b8-4616-b634-3bf2352bfa31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356b9e99-9a71-41a2-af29-0a3e3dd55684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33d6004-18de-473e-bdf2-f845391eb4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf70f6c-df50-4828-a6b1-684807bb3e8c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27aca316-0d29-42a9-93b6-9a361a87ed61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72bbb8eb-f28f-4b1c-9bfc-d901fd44f977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a0d2e2-222f-4f35-9a3d-d32baea79a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d42670c-a561-4a8d-81ad-b7ed2a6191ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab1c043-2468-41f8-9347-6dee2469a5e5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b65691-831e-4b57-887b-ed5cad877278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088ace74-7586-4f58-bfbe-4991bbcefa95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362704a3-3b14-41ce-88ea-c22ff9106188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89e7b43-09e5-4e21-b99b-c21968e84f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4e178a-92b9-4e72-bc54-2d5c44b09de0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b009cad-ef6e-4fd2-aa93-73393301e3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f15f1e9-9c07-4b2f-b605-20be1b66ce1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3408c208-6d87-43b7-a039-cffee42eb490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8eb39f-4099-4ddb-9563-a1aa0a77409d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147ad23a-e8e3-4a83-9705-e55be4370cd6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160f9a7c-77d4-4630-959c-f4c5436d0b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890cc177-7602-49f2-9cf5-a6a3eb1e803d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe8c11b-2341-4e17-a6e7-08167e1b3e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a7018b-2641-46b8-8bc3-24ac26e2e74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b8f7b3-7963-4f3f-ab3e-7e065cdf906b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0c322b-d05d-4d15-bc3f-ab5ed3c83448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b1996c-a15c-43fd-a94a-804767c15558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6687fa5a-90dd-4053-b77d-856df4e6b918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a20863-4af4-4233-b498-87c76a898063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ed8937-1e49-4a75-927e-cb2cc467399e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99dedb9-33f3-47c8-954f-7c8809a44b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3717c558-8660-4f2b-866e-bd3bb2da3f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85901f0a-95d9-4994-8062-09b52a7f41ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd064bd8-4bf6-4515-8569-af301445ee69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b9bbc2-0d67-4a06-a972-c82632874fcc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306630c6-da1b-4799-8c22-508b60e9673c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f26164-8888-494c-945f-71cc53acb523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a85638-49a1-4ef6-a8b7-f611411a0c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049aa882-fff2-4209-be3b-5767dbc9ad2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0839686-4317-457d-bf11-4e661793ddd5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6fd296-e91d-4fdd-8d61-2ac99ddf76a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc88c6f-97b6-41f6-bf09-536de5e76b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d534fec-29e0-43c9-b1d4-7084f05dccf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38acb8b6-4d71-4a87-a996-f7bccb986d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e105d7-b416-436f-bbe7-20a339341c03",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3733b66d-7436-495e-8d56-aa8168adb765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f9f6fe-8e90-4a5c-bc3c-44fbc132a8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee55053-4c4e-432f-9f28-54f33c6719ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03a50c3-4291-430b-aa00-140c481bb64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc0b23b-3d8d-47eb-a133-805c6518cd87",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a4d087-26a6-4141-b2c7-a202b9f3efcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df1bd41-171a-46a1-aca4-90821227ae83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323b489a-348a-4611-b884-535f6d3d0fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033b1455-f12c-431a-aea6-cdbc666b49e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375b7ada-a02c-4c92-85f4-44560f77b0e7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3b1af3-42b6-4728-9c7b-c4e7a383a84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5f8a1a-1934-41ed-8b26-6cf0df624ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ca8f66-dbc5-4884-91ef-cbf7ac36d8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04abd04b-4715-4180-922e-a7cf0868d0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829a8312-7d1f-43b6-a374-3ddea97f0272",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439c41a0-0914-43bd-831c-8634141179dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbccd97-c498-4979-9b4e-7c1157f60416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9285d413-9afc-436d-bff7-853d32b06b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc2e466-d4a3-4048-a9e2-3be0193334a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05184be-66bf-4df4-92c1-3b46c9152054",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7600f7c8-ac46-4f85-a5b7-88a8faa1127d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba865d0-fc13-4395-830f-96f1f3b7d1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e1149c-f18f-4691-bba5-9ed755bf3319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87344394-10fb-477a-af48-ac642005efac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c41e011-45f0-4bf3-9d54-dcb2d86a2d2e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ba3056-7b90-4968-bfd5-bc5f56c59a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283e1b5a-6dd0-4472-829e-006111225d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30178bd-46d1-4123-96eb-2a9ef4e3bf6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04ac982-3a3b-4818-9da2-ea0557e465e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89f3432-db0c-4013-bfc5-2cb84a73f4ff",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0987401f-1f5d-4705-9716-d4f244e8afa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4664ec93-0e20-4bbf-8774-359d9aeab552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc95a0cd-5f91-4321-ac00-3e34546f47d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1545ad22-285a-416a-844d-07a1468627fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f38d80c-7b09-421c-a71d-ed968a01f1a6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9811f428-fe44-4f84-90e1-0af283a066fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5eb3c74-30be-4d15-9fdb-3c6e8b397f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9eef20a-4fdd-4f50-8a7f-af7f6ee2bce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020cb636-789f-4a12-9752-3ebec3eafd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac03ed0-de49-48a2-bda1-cfe5449ae626",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b9f1c1-e153-407d-a12f-dbd11344eb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbafc31-7f33-47da-a042-ac21fdadb6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7aefbf-d228-479a-b8e0-2b58c592cb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cd459a-3b5e-473f-9a14-c0949b0077d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9ea0c5-c796-4356-ad8f-a002077b12a7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b54b20a-273a-4a85-8045-bc07f46df8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99252907-4244-4223-8d3e-8baf31222b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf5a21d-3f2b-4fee-b583-c5670b8a7676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf0c940-9728-4372-adde-314140dd0c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0dd764-6407-4d87-beb3-087cd4232161",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05607263-6f65-47bd-8ec5-07fe23434943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94eb9320-a89f-48d2-952f-3b78eee0fb53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1647c6ef-aee9-4e17-acbd-927f9252da59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d922f22a-1325-413c-b9c9-59449100093d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000189aa-e1fe-405b-bac7-756035aa3e57",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b04a09-b008-4286-b26f-56687a0b7cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d730ef5-409f-42d7-8287-a24beb64c68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdddbd6d-23d0-437c-b6b8-6fddf94e9e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58330edc-2a70-4d96-84e8-0ff93642dfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ea9da2-ffd9-479e-a5b6-8cc3ab891e1e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a89c9ff-7c0b-46be-be63-4eaea7d48eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b057c8-3ba7-4d89-af69-7ccd65126768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f76fa63-fec0-4439-8090-5b1601bd6aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e153ffe9-e75a-4fdf-a600-2e26c52df151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d7ec00-641d-480f-8078-c9a7dbdd5816",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eac2e7-d4dc-457d-8763-06b80e5c25cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838d52b8-b529-469f-b2c7-cc3ce2d87d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd71d249-27a8-4b54-9929-9a4519477b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c61c7d-2994-4d61-990a-2e9ce6d2e813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09714a3-fb15-4ebf-9c2a-3f3be2ae68f1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a542945d-5dcd-4c13-b379-779b3994f4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80936f54-b270-4a00-b883-a38f57186210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500b89a7-bcce-412a-8fe6-f801b83f2195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2150717b-e93b-4e8d-9a45-d22a4aacd7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b26960e-f8da-4188-8f38-507680ab3149",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a907a50f-d19c-4cb1-8adc-8a116b9b831c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b34b86-ec84-4c54-a2fb-3ac1c471c9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5266c1b-b286-47ef-8ef1-be90201ed101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28cf6c6-6d4b-4f7a-b59d-92345fe18385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451885cb-1ba7-435a-8224-fbeb5fbbba7c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0721846-71b5-4fe9-b5a3-7d0f550cd3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5b36f0-840c-44d0-b03f-c3edfad9edd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf44f70-17b4-40e3-8afb-97235a87fb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff83790-bd17-407b-870d-64c19b254879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fff9f9b-7379-4e3a-9de5-822c6b879e5c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6db831-4800-4065-98b5-c3fba190e078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7027b8-e776-4487-be36-f5ca8dcdbc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c34110-f98d-4872-8578-63235ffc361c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66adc869-406f-4bed-9047-a16072f08d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de3e2d8-3187-4ec2-a121-7282074dd448",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa02723-57fc-444e-8212-57da5348e2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc88109-e249-43f6-bf40-0d9edc29a8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadd66fd-dd25-450a-9d34-23a1cdfef080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835e54ae-a663-4e80-8f8f-861e92ec8c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3af9e2-5ca2-4425-a428-8a658c6d0dbb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d143e4-c79a-4460-9501-9255f5b843ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21dfdd76-f5c1-4776-8309-2d2d647b6e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9369b522-3cf0-477e-bf2e-1e55b7d9e9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20403c72-fc5a-411a-ab8d-f160a97b0cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c54d11b-b7b3-4e67-8828-bca9c683bde2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc244291-bd7e-4085-a0b6-d65478e7cc87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b210aca8-c6bd-44f9-a412-5825eef75e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995ef365-98c8-40c8-a489-98d4d5c14b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92e0ee1-cabd-471c-a243-3f559f475696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9ffb88-9bc7-4a69-a0c1-3f6ee4a53b60",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a170c9-5eda-4dab-ba2c-5e271a966167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb5d946-2e1e-4cf9-8ede-d70711bc7b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5ae2be-f767-4935-8b20-780a7254cd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005a3755-9835-4fd9-a4da-00d4fd699364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f97516-46d2-4b97-9f22-5cc79b49aa01",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8973ccd1-9743-4261-98e9-85ab5f2d87b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe309915-121b-4f7c-bd08-b4f70cda054b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35cbce5-6f73-4e88-8474-c28a52df9896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323fd2b9-f721-436c-a033-1628eb1ffee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790e1cc0-f371-424a-9184-26447aff4f08",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e48a11-5a98-4ca9-84bf-0717085d2b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ea20924-c6ea-4198-9918-c1f138f13e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98697b9a-9f5b-450f-9c78-afccfd5982fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf59eeb2-d39e-4c69-8953-226521be7f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b214da5c-5b63-4704-91d3-68e795811990",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc17638-b046-4466-a144-225bd4281c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bdac658-c42c-413c-a11d-2cba8e6a0800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a0a0ef-c2a5-4cc8-9cae-072dbb8ffe94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8ab6c0-ca68-41cd-bb85-a25a692f32d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0a5556-9b35-4da3-b274-4ef52783b395",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929fddad-3ba1-4163-a4fc-125253987cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb29bff8-4d99-4280-ade2-96ce8b96ba50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660edc08-6bf2-4118-b30c-8cb6f2fdca95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f31619d-1790-4508-b4f7-b93d4388903c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfd1418-d8be-456f-ab36-f26673a91f7a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2818fc-c165-423e-8f54-56969f8c7d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcabd6fc-fcf5-4f8f-8c18-661f75c0e824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ff7d61-6b32-42ef-95bb-0ec47d0549ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d696f1a-ad5d-4b8a-95dc-57f4da87992f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1787fdbf-fef1-464c-b45b-6e4b2e0eeb57",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f9ddb6-6c01-4bf6-b3b0-137135bb7376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f1a2d9-d934-41d0-b951-3ec58fcd6901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f79bbc-bb69-4d36-8d18-e654691b0663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b579e19-b387-4540-b65b-051820b87874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de694af-02a6-4a42-b99a-892bcc26d375",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff51bc1b-aa9d-421e-bbf1-66a413683692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa307496-ee8c-4458-8979-05c6ab7f0db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f80807e-735b-4a9f-b65f-b17885df04f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd9b7c4-bc82-45a3-b0e7-d0aa712bff3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6461a6-98d2-4a43-82a9-89b4a53fdcf3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d074f901-2895-40ce-abfd-af6312994caa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283931c2-66f1-4dc5-9c17-33a4cec576ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0138670-041f-407a-b6be-887395860907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093b9ca9-96d6-4167-bc89-280aff8f9e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5ea076-4786-4e7f-83ea-41cc8066c835",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bed88d-02d7-480f-8ae1-bf22d4d87c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90081027-16b1-4bf5-bfa9-50d47836c13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f988fe-51a9-425c-b30a-82089349a667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4ee1b9-8631-4620-a529-70c60e7aea7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aeb87f7-c991-487d-9f72-1eac0cef0705",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be009cce-0b66-45c7-a196-7d3214b57494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa531ca-5feb-4377-8eb0-be7dc9f55a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18f380b-a7f1-461b-8ace-e3cafc6c2c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361e7885-eec8-4b29-9770-f33a07eee5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad93b78a-4efb-49c4-a808-231fe660633b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a7b7df-a261-49c7-beea-0a1b11ca9b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebc9f26c-71d5-45bc-8def-cf6bcc165875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14886a6d-aba6-49f5-b350-c81d3ec38d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fa35ab-dde8-43ca-8f89-3aee8110155b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a83ffd6-30f3-4698-8b00-e6f82b060fbb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1229ff89-ab90-4f07-b7eb-24fd4c0ecfea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c9b1154-6b27-49a6-b90c-349c26928f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99876b4-b339-4e2e-a9e2-e0cb6aa7a89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4a79b2-cf2e-48bc-b2fb-924c634de47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fa1068-4b24-4c35-9caa-179513dd96b8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3612d4e6-76f2-440d-9a56-f4bd4d28af35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad122966-ada5-48d1-a72e-7ec5b7e8b56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b96dc7c-fa9f-4307-91b9-4956258cf911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544b5a8f-084c-49f9-8d90-a028142c1054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f209b6-ee0a-43a6-8ed5-be7bbf78d749",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3495d41b-97c3-4558-a9c9-dad2b9e43710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0abf83c-7281-46a7-af04-e82924c4263e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2969c171-7c1d-4feb-b4d7-74ddb659d86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe140c5-6914-4b59-bdd3-fe35be5eee8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5626f9f1-2f57-49f3-a9e2-54a8a05d6d74",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f6335a-8958-4287-b342-c1c9efac77df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46fa8106-5f4d-4df7-86ac-b4925e2c272e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8686276e-9b86-4248-918d-88b38750e79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ea4d2e-08dc-4523-9ef1-12b58fba341f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e68343-2d26-4264-bda3-dfbe3c05aadc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754201b4-1750-4596-96c4-84963319372d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d913aa8-28db-4113-a948-581c498b619f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378fb4f9-dfd6-4065-b146-c9dbd2224dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4387e4-c336-4582-b73f-b31ef8c830cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f5fbf1-2077-4c93-91a9-6890c80e1abc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b4c71d-2d8c-415c-8aef-88cbc8f6084e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2973aab4-cc31-441c-b5e1-c597a5d495c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13683393-8eb9-4937-9272-50d3b7e78632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953f99e8-5c4c-424e-b948-c58b693b935a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c508daa-bc1b-46aa-92f6-aa34215d5c5e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedc450f-df87-4bee-b686-bb6da4f2f1d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c97d8b3-10b5-4aab-9ed5-be71abb330c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae1f8ee-ab65-42ee-a93e-f20e454afab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9089eb2e-fe2d-441a-b1bc-d7b1b6481322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236864ea-baf3-4aba-b8f7-cc2f4114a18f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e830994-9bd9-4ef6-94c2-8975fe45a186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c41e1fb-e12a-44ff-890a-fd9faa3a1123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fedd169-c0cf-4484-8bb9-5fa4606861ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36335cc0-481e-4135-8b54-7aa9e9537a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfda1ed-0273-4e28-aa9c-84b0243ab94f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8add411-0c6a-4e93-9d28-3af5b58871f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f00a3a5e-7ba0-4712-91d8-df90176b8653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a86935-0e07-4024-b2c1-debc37e86f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b488093-c40c-43b1-8232-4507717dc13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc7b6e0-53b5-42c2-95eb-80439c3589e7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ae6ee5-5051-4003-af64-46aa03ae1725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "858b74d6-135c-4dad-a9ed-d00fb47515b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090451f1-d980-4694-b0f9-4a1c4cf23b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7900fcaf-3136-482e-944e-bb97a716d50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cacded-bb3a-455b-a3df-f93624ad7610",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0323b5-fb22-49d5-ba10-1b2ce691ea91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "827195c2-2b22-4f4f-a44f-15ebe2569c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caee93f-a82c-4c31-98b1-b074eee0dbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3071ca2-a7e3-4070-b810-44e4d46d8188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ea3aba-b265-4301-b2da-437fcf01f638",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a84a5b-29dd-4f50-b37c-f75c5fc22738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234ac8ef-60cd-421d-89d1-1b9ac53b2908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9499664-6948-4397-be30-380ee50a0f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c82ddd-8a29-47bd-8396-de19da665899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0937ba25-d933-469f-8cbc-738d84d60f68",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e48f724-2206-4264-8b85-723f4522a438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0460b64-7514-4129-9c9e-b15113d0b140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559a7628-4051-4c8e-bb03-e8b6549abb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09ab461-16ff-4f30-af6c-e4f1c708ed8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c79a7a6-6c5b-4383-bd15-9469483311c9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9285c77-7e47-4c72-b053-8b06bee045f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae73c01b-9bbd-4511-9ba4-704055ca3868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311284e0-1a00-4a93-b642-95dedae57d84",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463d9b3d-8c80-4a16-9f0c-4c4f075f9398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf9b2ed-1762-4cbe-8052-ca1ba6955cfd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a380a482-4f26-44a8-912c-91d9dfca1d84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adda72ed-7d58-4a53-93b8-55cd5a1b559c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7817c4d9-36da-4461-96af-4524292dcf2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff5a033-e942-4ab1-ae61-440b80197bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aae2105-a73c-48e9-8dd8-8a8c5364ec46",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d20cc56-091e-4b0e-980c-2f9dd55f0fc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf35edb6-6c88-440a-8771-2c69dbd67214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338dbbf2-a968-49cb-9420-cd56abaf6062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdd6b0a-bad1-4fcd-88ea-ac95c266bad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf8847e-515f-471f-bf5b-f2c81227521d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacd52b8-81fe-4db5-ab3d-26f14b602f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e33ea8-230c-4ccf-9a2a-a6a08f48989f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b123c6-9cab-472c-b0af-f2f32b2db237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f693e3-8751-4a39-8b1c-c083bb82720f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06014634-d57e-4ddb-be02-3c1623827199",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7baa6a4-92a4-4f16-844d-26d5a443e854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1bc0120-61a9-4035-b51b-9435b67e7d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629c86f7-3c3d-4a7b-8a1f-a49bc02f4e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afafc358-e8c6-416c-b179-800b592ab4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77cb42e-2504-4f57-afd0-d43657d64b2f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efae2c7-6dde-4910-b390-2ccd0ddef718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df959fe3-2b67-41ff-b8ff-584144874ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949a5b94-d961-4503-a257-65f754cd48f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98052ddc-c456-4932-9c30-cfe727f793ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80198fb-fe76-4350-91e8-da4b114f22a5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d909e6c6-6d7c-44bc-a134-8035998d86fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f2c9c1-7e8a-4a0e-8f29-3d769ab290f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7177ad8f-3abf-4742-892f-259ba43b73cc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53e2170-39fa-4846-8527-7cbbfcfd3f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80938741-bf9b-4a07-ae0e-bd090369fb8f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94405e1b-88b7-425e-83b6-b347bd8ec7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef1150a3-54a2-449c-9e68-45f8aac55fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6240c6-abb6-4da1-bc1f-f614942ffc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ade375-2fc6-4dcd-8f84-52759a210c37"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a16bd429-3cfb-4e64-9fdf-e8a935a662c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fb37cd4-178c-478b-981e-b97a1de20509"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c746625c-3e64-4b35-b9bd-87c389990d0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71a77e45-c7a5-4404-a3e2-9a1ff67fd550"
                    }
                  }
                ]
              },
              {
                "id": "9bbddbbe-3cf1-4dd0-b1fb-b3bd165f76c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42fbfc41-a213-408f-a38e-371ac6657f47",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8c9cd5-4d9a-4078-a070-3967329344ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c9e9e62c-64d1-4e86-be34-23d357770e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817f69ad-35e6-49f5-8f1e-738d6eac4384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5c86aef-946c-4cc2-bd53-328e59e1ab3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b28d1e-9210-4ace-9fd7-7ea11d883773",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fe5327-1aac-4617-82e4-c902bc2d6f8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "da658cd7-3b98-4bc2-acb7-a35f2d578699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc54a5c-834d-4838-a4c3-45668617d484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "127129af-005e-4fd9-8445-cfbbc9371f1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bdc435c-ea80-4a32-85c8-c48ca5e9d929",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59355c5d-ef0e-4b33-bea5-eff96ca9da4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6a9aa0e-1682-49ea-be98-82664dd72a85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4225f9bf-71f9-4ec7-8702-e64fd904d532"
                    }
                  }
                ]
              },
              {
                "id": "b851ab43-f6f8-4207-a17a-8f5c445d56fb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "23847ab3-adeb-49a2-9b2e-7dd76451b182",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c828253-0be1-444e-973d-4b848e7f609b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c5a3dd65-bc73-4b06-b2ff-8fe745670bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619e7df1-a4cf-4713-8087-1e955b6ca3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89388c73-5543-4b42-9bb4-422c65b2e6f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "99810b7c-acd9-4021-9b55-c5a3d0b9909e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "528020ca-4af3-47db-9611-e6672a3adb67",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0cf7e03-aa3d-40cc-96e5-a84c803d458e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "85d3c4c6-4ec8-4806-8280-f2568f55256f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e8bbf42-4188-4359-b68e-f0b4fcfd0237",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e1dfc47-ca39-4ac5-bd24-1bef9912fd70"
                    }
                  }
                ]
              },
              {
                "id": "b9c8406c-8f79-4a1c-8921-50b28cfbde7a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f82ebfb-d9c3-496a-b0ed-efebb81d2ada",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "61f1f4fb-c511-4e18-ab38-45027638e953"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9559585f-fb13-4b7f-817f-1434a486394c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93969b48-1ebb-4fb5-b02b-3cfbc202060d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a1e7b30-1802-4188-b353-9efd94d970a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ac31392d-5f5c-4416-9981-773bbe6f3fbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21946dc5-0fd9-4208-962b-be28c306db61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c0cdbd6-52b7-4453-abd3-8efdb19f8977"
            }
          }
        ]
      },
      {
        "id": "9add1e15-42f5-4db6-a6dd-93214c188661",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "387e9f12-116a-4073-a73c-97ab924c7003",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3738969d-55f1-4b05-a550-8c91e34b9c17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ecc2f342-457a-48a6-abcd-74a1286da7c6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba73ffd5-2069-4f02-a0f7-2343408d53ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a618db3c-47fd-46de-9007-a26d95f7d188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452b1338-e9d6-4031-bc9e-9372f482bb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32eec2cd-d329-4c1c-83ac-0979bfea53a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f28f84-4724-41c7-8618-26dda6de03a5",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ae3125-d642-4bd9-a290-4a042ef2a730",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "10e32b39-8656-443e-9e00-d2cb2ba63e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b28b24b-ad95-4f39-9d51-e5cf90f52bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "398a91c5-bdab-4fb2-a989-bdd0b8463eac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9bb5fe7-fffa-417b-85f0-49aec37bd9fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d769d758-b383-45cc-a826-b1404273e746"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d4ee4e9-27b4-41e6-9322-3bbfb817e090",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3d9b695-e371-458d-a2de-b0bf2cde73e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc6792db-80a6-43ca-924d-f0774c2758b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fe9ee83a-2794-443f-a662-eb16487fca51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b4e355a-a9b7-45ad-b8b9-85fed6d3ba91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc2496fc-7731-43b6-9eb1-27e93c13e216"
            }
          }
        ]
      },
      {
        "id": "a76c4848-4767-4ee4-98e5-7d4f8b62000f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "753b1892-862e-4b29-9ed5-b77f3a3f0a25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ac47830-ec34-4344-9d2f-cbc8ee126cf4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1bfce353-cb4e-4bb6-b0cd-c295249959be",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdc1ae8-cac3-44e1-a827-602ce07f60ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1ecbc8a-11b0-4449-afa7-9c84237d1af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f836ba-86bb-441e-85ce-61da23c05a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e19783f-3f1c-4414-b3fe-f02d65a5958b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef297cc-3785-429e-ae2c-3900ed201e45",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483094ac-f5cb-491e-bc15-ff76ecb53a3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "23d773cf-bbc4-4443-9334-1f6e3aa3d0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874dbf19-7e8b-4a2c-8031-be89fc8c48d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57b96c1c-8198-4031-9331-b2f9eec4d0b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9104eeb3-a42a-4541-ac24-bd4b1121db5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a3c7555-0cbb-4592-b830-71617c6f5bdb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b9e2dcb-d35b-4030-a159-3f577fb140b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "289702f8-3b6d-4f6e-90ad-b089b65109f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "636d1aee-32fc-49b2-b270-ec3da43bc3db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d41d6b05-98f8-4bbf-9107-761ecb7ae07a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "728663f3-4b21-4f49-97e7-f74995115081",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90674120-f3f4-4115-9a3c-c26067032542"
            }
          }
        ]
      },
      {
        "id": "031ed96f-823e-401a-bc76-ddceade3fc52",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cbdcf88e-333c-4093-affc-18240a3666c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95f4c6ed-8873-4304-bb19-337d351b0bb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4acd8a95-95e0-4bde-942e-948d84bbf4f8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2afb1d-8725-46bf-9314-b7d5725ddd4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "954be1bf-4b5d-47a2-b09b-0d9286448eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60145b2d-2356-4470-a5aa-940d2d4063df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f281375a-b709-4f41-b397-ee584a42d993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeb3a64-1762-4381-be80-5f66693ac2db",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98863508-db40-4629-9d4f-6b39877db34a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "74f625f1-d5af-477f-9a31-e45848631c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea3220d-214c-4131-8fe8-0ab318c76eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99b16a33-a566-4f9f-9baa-2a694d287b13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6f5bc36-4812-4f94-9c9c-5050d01e3e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8f16bf8-e01f-4c86-9e2e-9fa98a1100c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffc0d475-b889-4fca-972a-c2cc0383338b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c71239a9-27e1-4b4a-b6a0-7aebe639d26f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ae56cdf-bf0a-401b-943b-22464bc7de7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "99f84740-779e-4255-bc66-d0fd051796ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bf2993c-ab32-48ec-9886-ed1c8808a112",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3b3c39d-fd2c-4e95-9031-3e758543b542"
            }
          }
        ]
      },
      {
        "id": "6d7d963e-26db-40a8-9f1f-d1495a18a8b5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7aa8cf0d-7198-480f-986f-ddb01ade9b06",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c5df097-a0e2-4176-96f8-119b8ec99e1c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3f85a799-f4b3-48dc-b839-91cc82f85a34",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c08a714-2eec-4129-9d0b-bfac078aed39",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2094662c-592e-4713-8a94-e128e15e403d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 792.823076923077,
      "responseMin": 19,
      "responseMax": 10571,
      "responseSd": 1211.4840293266789,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684370234857,
      "completed": 1684370451475
    },
    "executions": [
      {
        "id": "e0bb953b-69f2-4b03-997d-28bae9921fd4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "050305b0-5309-41af-bf77-32b2abb9e762",
          "httpRequestId": "da6c08d7-202d-466e-ac7d-3d7d184234a6"
        },
        "item": {
          "id": "e0bb953b-69f2-4b03-997d-28bae9921fd4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "50474fd7-b347-4467-b132-7e5c8e346ec5",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 0
        }
      },
      {
        "id": "9bfb5f35-317d-411c-8e64-f60ec80b9c2d",
        "cursor": {
          "ref": "316c2cca-a44f-4299-bb00-64ac92a6dc92",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4e1a8b2c-5f95-47a1-87d8-31234a326ca0"
        },
        "item": {
          "id": "9bfb5f35-317d-411c-8e64-f60ec80b9c2d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "35fd69d2-7100-4156-b936-047c0039c792",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "826ad318-b450-415d-82e5-cbf9ee47a30a",
        "cursor": {
          "ref": "9f77b675-7ddd-453e-b87d-5aef12c38fb3",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2cb97547-6634-4eba-959b-cfb4cc354f06"
        },
        "item": {
          "id": "826ad318-b450-415d-82e5-cbf9ee47a30a",
          "name": "did_json"
        },
        "response": {
          "id": "6a316ea3-1405-4a81-80f0-b33c179e2d4d",
          "status": "OK",
          "code": 200,
          "responseTime": 979,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62c1b42-3e53-4202-b9bf-67e276866408",
        "cursor": {
          "ref": "878bfeba-c3a4-4833-b9c2-ebc227c344cc",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e4a08bfa-6cfc-4288-b9bb-f6e975a90638"
        },
        "item": {
          "id": "d62c1b42-3e53-4202-b9bf-67e276866408",
          "name": "did:invalid"
        },
        "response": {
          "id": "3692488c-e0c7-452f-b3d7-13ccdd3effd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1110,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62c1b42-3e53-4202-b9bf-67e276866408",
        "cursor": {
          "ref": "878bfeba-c3a4-4833-b9c2-ebc227c344cc",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e4a08bfa-6cfc-4288-b9bb-f6e975a90638"
        },
        "item": {
          "id": "d62c1b42-3e53-4202-b9bf-67e276866408",
          "name": "did:invalid"
        },
        "response": {
          "id": "3692488c-e0c7-452f-b3d7-13ccdd3effd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1110,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e79f8b-c979-4c01-a0ce-cf883dd3e289",
        "cursor": {
          "ref": "3f74cb26-5314-49c6-b19d-119a8839ff55",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "debddaca-a113-49b5-8a30-b73bbbd65edb"
        },
        "item": {
          "id": "08e79f8b-c979-4c01-a0ce-cf883dd3e289",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6b73433c-c7aa-4f80-bc3a-c18c1749f71b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 791,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7652c4da-d4d6-41cf-bcb1-f39827b1bc45",
        "cursor": {
          "ref": "f4e5b86a-3b41-49fa-92d1-28c079bcc06f",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e118f8c4-b649-4bfa-8304-1f225aef7321"
        },
        "item": {
          "id": "7652c4da-d4d6-41cf-bcb1-f39827b1bc45",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cb7145ae-48b7-4f9a-b419-855b23e9730e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1451,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901b063b-7e37-4f18-95b8-e7066272a7de",
        "cursor": {
          "ref": "7ea55adc-1b2c-4c33-9aaa-3826ceaba8be",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "578a768c-fd2f-4b07-95bb-2c7fa5aa53e4"
        },
        "item": {
          "id": "901b063b-7e37-4f18-95b8-e7066272a7de",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "08cefbba-cd58-4ae2-9546-a186f648a6a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d9ad8d-2893-450d-8bad-d5f28b342bf7",
        "cursor": {
          "ref": "7132b535-5018-4a6d-88f1-b5583a186d2e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "245a4da7-0ca5-46f3-a8d4-84c35c531245"
        },
        "item": {
          "id": "e2d9ad8d-2893-450d-8bad-d5f28b342bf7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c2dc0673-d758-47d8-b036-0888700d47c2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 731,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d9ad8d-2893-450d-8bad-d5f28b342bf7",
        "cursor": {
          "ref": "7132b535-5018-4a6d-88f1-b5583a186d2e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "245a4da7-0ca5-46f3-a8d4-84c35c531245"
        },
        "item": {
          "id": "e2d9ad8d-2893-450d-8bad-d5f28b342bf7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c2dc0673-d758-47d8-b036-0888700d47c2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 731,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7399284-b4af-4178-928f-5aac39988843",
        "cursor": {
          "ref": "48e9e081-608c-4c55-a973-efffb8a69548",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0da5b847-e2a8-4fdf-b3d9-83341a52d71b"
        },
        "item": {
          "id": "c7399284-b4af-4178-928f-5aac39988843",
          "name": "identifiers"
        },
        "response": {
          "id": "2165468d-25bf-4bac-9075-280ec0280c70",
          "status": "OK",
          "code": 200,
          "responseTime": 1436,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3c4b7c-62d4-48c2-8f39-d7ae6084871e",
        "cursor": {
          "ref": "ce0b1c87-292a-428b-9817-6aa880c528d6",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2c2a0373-4a12-48c1-b07a-1e051c15b887"
        },
        "item": {
          "id": "7e3c4b7c-62d4-48c2-8f39-d7ae6084871e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "edd3612d-efed-4297-9e05-b2fcbc6bb457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3c4b7c-62d4-48c2-8f39-d7ae6084871e",
        "cursor": {
          "ref": "ce0b1c87-292a-428b-9817-6aa880c528d6",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2c2a0373-4a12-48c1-b07a-1e051c15b887"
        },
        "item": {
          "id": "7e3c4b7c-62d4-48c2-8f39-d7ae6084871e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "edd3612d-efed-4297-9e05-b2fcbc6bb457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc1e726-a26b-45b2-bc40-6791f3c2b51d",
        "cursor": {
          "ref": "723295de-2ab7-4d5c-9d4d-ea2e88619cf4",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a5904ae5-1ad1-4d4f-9dbe-c6a99afd7c28"
        },
        "item": {
          "id": "acc1e726-a26b-45b2-bc40-6791f3c2b51d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "462ddeb1-8e75-4f54-9d3c-5a648105cb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f9a139-d7b3-43ff-b57d-74e6cb34b230",
        "cursor": {
          "ref": "4365b7e4-94dc-4192-a6a5-29664e5a198e",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6de68ff4-f77b-48de-a54b-515a70b684c9"
        },
        "item": {
          "id": "28f9a139-d7b3-43ff-b57d-74e6cb34b230",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "156bd905-2095-49c8-b198-951f0b124c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9b92c2-7734-41cb-be21-1592b8f26691",
        "cursor": {
          "ref": "83ff9949-78a8-43eb-8292-339e0d3035bf",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "594c514b-a7c8-46fc-b013-d55bce3d504e"
        },
        "item": {
          "id": "6b9b92c2-7734-41cb-be21-1592b8f26691",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a2bec830-e2cb-4f8b-b830-ba81fdbe60c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e214ec-adb1-4674-91cb-9e9decd46def",
        "cursor": {
          "ref": "3be11410-3576-42f2-9ed2-355b5064861e",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a8a6662b-01e0-4ba4-9f38-d9cd796fc7c6"
        },
        "item": {
          "id": "f1e214ec-adb1-4674-91cb-9e9decd46def",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8c4763dc-62c0-4126-bf7f-1e62e562b925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87009eb-2968-4ab3-99cc-0542e2d7a678",
        "cursor": {
          "ref": "941703d6-6059-4bea-9f6c-1555ce330184",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e7bada2e-cc1f-4b4b-9c07-df8c98eb6e44"
        },
        "item": {
          "id": "f87009eb-2968-4ab3-99cc-0542e2d7a678",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "93deb846-895e-4f2f-ade3-4a31782ded50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0ecbd6-121e-4920-905a-0539af771efe",
        "cursor": {
          "ref": "e66dc932-89bd-4582-ac21-a9a03919f70c",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eb9fc469-049e-44a9-a0c5-95b32554ba71"
        },
        "item": {
          "id": "ff0ecbd6-121e-4920-905a-0539af771efe",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1c6dcc24-c8cf-4b65-9072-f9f331ba728a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a1c212-9429-4ff8-bab6-357ea15af1b7",
        "cursor": {
          "ref": "1539aea8-2b3a-499a-98d3-734e60be15ac",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3e884dbe-b6b4-4daa-9eee-f16fb0a61b0c"
        },
        "item": {
          "id": "f4a1c212-9429-4ff8-bab6-357ea15af1b7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b35212e4-2d01-41a8-8d4c-4109037dac98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769636d9-41ed-466a-8ba9-77a21a003cab",
        "cursor": {
          "ref": "38bd134d-4ea6-47eb-8d2e-ed020cd97dd2",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c8aaca0f-6eb1-4539-b17c-7f8e4fc6f42e"
        },
        "item": {
          "id": "769636d9-41ed-466a-8ba9-77a21a003cab",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0520c5c3-116e-46a7-a65e-7e116f08c9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0d8bc2-ee3a-4e74-a66a-f515cdce78c5",
        "cursor": {
          "ref": "08224826-3f40-45b1-9475-12595ac797d5",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "28ee06ac-5819-4385-b812-cb7676ccffde"
        },
        "item": {
          "id": "cb0d8bc2-ee3a-4e74-a66a-f515cdce78c5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5bc1f520-5f83-441d-86d2-99d06f7fa24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22107824-01d9-4d0a-8123-859143c9d000",
        "cursor": {
          "ref": "d5abd175-d7d4-486e-88f5-b376a0faf97f",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3fd858e2-12ce-48f7-bce1-c19c5cc23ca7"
        },
        "item": {
          "id": "22107824-01d9-4d0a-8123-859143c9d000",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d2faa22e-b029-45b8-b9e2-f8ccc3468d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece214d0-2969-4fce-a701-33b871db8af1",
        "cursor": {
          "ref": "28060335-3074-4ae0-8eca-6073e831c06b",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "52291b78-c269-4031-9467-5f75256814c5"
        },
        "item": {
          "id": "ece214d0-2969-4fce-a701-33b871db8af1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6da0f8b5-79a8-4ddd-8441-3e9eafa5d2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1040dfad-d63f-440a-aefd-7dd3e84bcfa5",
        "cursor": {
          "ref": "806773a3-4e16-482d-b5e3-f11e258ad6af",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1f440874-3ad7-46f5-9487-1f9ac0ee8368"
        },
        "item": {
          "id": "1040dfad-d63f-440a-aefd-7dd3e84bcfa5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "314de094-cf53-4299-9190-0cf2f9a970ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c45adf8-29a2-4778-b198-8fa702f5d6f2",
        "cursor": {
          "ref": "3e738419-3fe4-4517-a810-f1f8fd4e5658",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "52378690-f332-4ca8-addb-e7f42fd1e43c"
        },
        "item": {
          "id": "4c45adf8-29a2-4778-b198-8fa702f5d6f2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a99460db-ef21-4cff-839b-2ad04b8a0996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd92ed99-298a-484b-ba9e-2b59733e10b6",
        "cursor": {
          "ref": "81c1fc58-70ff-4462-92f7-597ada5abe19",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "abe5e709-3fdb-4959-8b56-c22caa068930"
        },
        "item": {
          "id": "cd92ed99-298a-484b-ba9e-2b59733e10b6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "874d1a40-7e89-4d95-9567-48f812f43b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c69d67-83ae-487d-bb71-fa8c971be554",
        "cursor": {
          "ref": "cd35e46b-d234-408d-830f-902085d38a9e",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "35e5ae61-4084-40ac-ab56-15472604a995"
        },
        "item": {
          "id": "e7c69d67-83ae-487d-bb71-fa8c971be554",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "78cd60ea-3e23-475e-8194-ffa682ee28fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2264,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86849a49-fb9f-4e9d-a92a-9490d1c79abb",
        "cursor": {
          "ref": "23393d64-3e9e-452f-b2f9-0c68d25dffff",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d1395332-83fe-4014-bbc8-00dba1af841b"
        },
        "item": {
          "id": "86849a49-fb9f-4e9d-a92a-9490d1c79abb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2d2a4f8d-598d-4325-ba39-3ef44ce9fd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1728,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74ab6e3-cc89-4801-8a6b-cc951350a6c8",
        "cursor": {
          "ref": "1301e074-2b94-4224-b2b2-581ba288836c",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a0a658b8-d201-4cc8-ba64-f0f3ed8ddea2"
        },
        "item": {
          "id": "e74ab6e3-cc89-4801-8a6b-cc951350a6c8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9c7cf2cf-f8ab-4ced-abf0-941b4621e6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2136,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45258b2e-8b89-44b2-a832-114658c69de1",
        "cursor": {
          "ref": "5dcb37ca-b02d-44c2-9b8c-f7eabc02191b",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8381dd9a-d644-4205-acf9-928b58b6b8e7"
        },
        "item": {
          "id": "45258b2e-8b89-44b2-a832-114658c69de1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "064fb020-e17e-4bae-98b3-c32867ce2e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1769,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e394c22-1f66-44a3-995e-f15eac4e46b2",
        "cursor": {
          "ref": "c92c31c1-3350-428e-94cd-82b85003bd0f",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d5b4ca9c-b64a-413a-84b4-65a2ccf5824c"
        },
        "item": {
          "id": "2e394c22-1f66-44a3-995e-f15eac4e46b2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "89a97d0c-ae0d-4efd-9b1c-88cde0440bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efd9e2d-a12a-4c5e-ad68-f8d48b5f5830",
        "cursor": {
          "ref": "ddb94aa1-b6f7-479f-9e4e-725cc18db766",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "85b782aa-c598-4e90-af11-30b09b126a72"
        },
        "item": {
          "id": "0efd9e2d-a12a-4c5e-ad68-f8d48b5f5830",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2d476d78-929d-484b-81d4-eb3decc96b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e2d614-af75-4c99-abe6-1fd1d733cab6",
        "cursor": {
          "ref": "cc33b640-5aa9-4224-9181-e9e71ca77bf1",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5a1d66a3-225a-4a37-a741-3989b680ea1c"
        },
        "item": {
          "id": "55e2d614-af75-4c99-abe6-1fd1d733cab6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9898dd43-9f3b-4f5b-98e5-2cc0978f9e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe391ce-b69e-44a7-947e-6841bcdc449a",
        "cursor": {
          "ref": "5dbbb4be-e4f1-4622-a0ad-81f9ceaf4e05",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2e36d25e-80fe-4ed8-aac4-6ea5521d66ef"
        },
        "item": {
          "id": "bbe391ce-b69e-44a7-947e-6841bcdc449a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bf869e33-f39d-4511-ac91-8990729f93c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a035b700-5471-4aeb-86bb-3c1c8541e378",
        "cursor": {
          "ref": "8fab7365-49c1-4426-bb50-f3f30bfae25c",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "770ec86a-8cf1-48d1-9c89-78b9946a8dcb"
        },
        "item": {
          "id": "a035b700-5471-4aeb-86bb-3c1c8541e378",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d5050b8d-ea73-446d-9250-5949c8ce78a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29db004-2876-4eaa-820c-35dd1f3a00cb",
        "cursor": {
          "ref": "3c32a556-759b-4fb7-ac2f-3d4b579ca7d1",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e40fe462-9665-43b2-9f2d-08314c51d50d"
        },
        "item": {
          "id": "e29db004-2876-4eaa-820c-35dd1f3a00cb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "36491129-700a-42da-999f-7595c14fc402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7724f8cf-6359-476e-a7a9-d4d135f01c35",
        "cursor": {
          "ref": "a3380c48-ca70-4127-a4c5-3499b5fc248c",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ed2cc959-256c-42a7-a464-c9cdfa9762b1"
        },
        "item": {
          "id": "7724f8cf-6359-476e-a7a9-d4d135f01c35",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b203ad52-315b-4250-a519-f60ad81f5db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc72a65-49be-4433-9bc9-cc38ad2bfc10",
        "cursor": {
          "ref": "8c4fab7c-b478-4ba3-89fb-b9d956234c4d",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "af95f476-0568-40f6-96f4-aa38c72c3b91"
        },
        "item": {
          "id": "1bc72a65-49be-4433-9bc9-cc38ad2bfc10",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5621effe-d22f-4608-930d-3161d72a0ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f48926-34cf-41d1-bc2b-dbb9fae1584f",
        "cursor": {
          "ref": "6d1035c0-1b31-42d5-a351-e7092c268a5f",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d26e26ce-0c28-4a8f-bc66-e89a1b60668e"
        },
        "item": {
          "id": "20f48926-34cf-41d1-bc2b-dbb9fae1584f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fdc82934-998e-4992-87a9-2732e789d240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d30cac0-7495-4770-a3a7-2df0d2021ffe",
        "cursor": {
          "ref": "37e43b0d-8703-44f8-830d-90a202fd883f",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "512d2100-e58b-4484-8466-a224992b1f29"
        },
        "item": {
          "id": "0d30cac0-7495-4770-a3a7-2df0d2021ffe",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a5a2ccc6-c929-4ad5-9012-f7124583a25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c043f1e-cdb4-47e3-9337-657e501182d9",
        "cursor": {
          "ref": "9b8c2402-95ec-403d-80fe-0f0f5ebcfde7",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e98fb621-b32d-42b6-ad2b-01c2b050959a"
        },
        "item": {
          "id": "1c043f1e-cdb4-47e3-9337-657e501182d9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ac5a168e-ac9f-4de6-8f2f-0e8c53fb27a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f08c2f6-a462-4c0a-bb26-eaf82fe0cd49",
        "cursor": {
          "ref": "1341bd50-c91f-4e99-b727-f867e915813d",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "49204015-74f2-4ee7-afdd-40d61169403f"
        },
        "item": {
          "id": "6f08c2f6-a462-4c0a-bb26-eaf82fe0cd49",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7c90fd50-c9a1-4ad9-a70f-83d9d2b970b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518c8f1f-6990-4a97-97c3-5a7b974727d4",
        "cursor": {
          "ref": "308090ab-99d3-42d0-a666-422553863207",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "12417e5a-5947-4ecc-b3c6-fdd1d95dc8be"
        },
        "item": {
          "id": "518c8f1f-6990-4a97-97c3-5a7b974727d4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "49dadd41-d252-4640-bb36-4e8f8487558f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf922882-3c0c-417b-9210-907b62d56dc8",
        "cursor": {
          "ref": "a267f2a1-77da-43d1-9aba-9577d1ad2dd1",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d240431b-f208-4880-9c42-9298d1247825"
        },
        "item": {
          "id": "cf922882-3c0c-417b-9210-907b62d56dc8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fdf6b2dd-628d-4b1a-9ca7-bc8ab8a56a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b4daf4-844e-42a9-9f68-1f2ebe4dc1e5",
        "cursor": {
          "ref": "f5bde6b6-6495-412c-9b58-284d467dc3fc",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f09e0dae-8cd1-4832-86ff-25883876261e"
        },
        "item": {
          "id": "d9b4daf4-844e-42a9-9f68-1f2ebe4dc1e5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "38b5768c-775d-4a47-92d0-72b52ce7a0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eee245c-842f-4ec5-8488-265b54e93f30",
        "cursor": {
          "ref": "bf1f552a-47fd-4bc1-a963-5a1784f60d72",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6d9920af-f810-4379-b31a-b0fd391675ef"
        },
        "item": {
          "id": "3eee245c-842f-4ec5-8488-265b54e93f30",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3ee0b993-03ee-4ae7-8055-42b4d47a975e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4034e6-1265-4aa7-b439-0b4b06736ce6",
        "cursor": {
          "ref": "f08857e6-deae-4fb8-a6fb-8d4eec99905a",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1a28df5e-9d9a-42f0-8286-54bb61df4e78"
        },
        "item": {
          "id": "fe4034e6-1265-4aa7-b439-0b4b06736ce6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9ec39d9b-718c-42ce-8423-b66eeaab7e06",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 692,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e862e743-ff64-4e02-a570-a86a697752d2",
        "cursor": {
          "ref": "514dc091-bfd2-44e0-bab3-e872e75b79fb",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ecc85fe9-e227-493c-90ae-e92fc059744a"
        },
        "item": {
          "id": "e862e743-ff64-4e02-a570-a86a697752d2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9c6ec0db-d4cb-491b-9397-029ebb0dc9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d837a72-9d03-4cc5-8271-af27daf612eb",
        "cursor": {
          "ref": "0d86a119-0407-4cde-b8cc-f8e177ed8567",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "842f19ad-5794-4b08-82d5-9712c463199f"
        },
        "item": {
          "id": "5d837a72-9d03-4cc5-8271-af27daf612eb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "eae6f30a-bb54-47ab-a6bb-1740973c1395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747fe607-2851-4a28-8c9c-84531ad3a217",
        "cursor": {
          "ref": "f4f43e7d-1d6a-4159-afad-3979609e7ebf",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "51d3c87b-0a89-4d14-86e6-71f37bb8e84c"
        },
        "item": {
          "id": "747fe607-2851-4a28-8c9c-84531ad3a217",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d76fa18f-dfa5-4288-a22d-49f97a81d7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac89fbd8-d18b-48a7-93b6-21fe24db1c82",
        "cursor": {
          "ref": "b8e279d2-ff11-4b7c-b486-7e70ff317f77",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9f194040-2e5c-41ec-b594-cdcec1a70d9a"
        },
        "item": {
          "id": "ac89fbd8-d18b-48a7-93b6-21fe24db1c82",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dd5420bf-1944-4dc7-986d-d3c9da03411a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546a056b-7ded-4a33-acb0-07a951eaa20b",
        "cursor": {
          "ref": "0258fe9b-69aa-4226-9cb2-47cc2fbca7fc",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ce9a0b4f-0762-4893-b274-e33528e3764b"
        },
        "item": {
          "id": "546a056b-7ded-4a33-acb0-07a951eaa20b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2d5d6113-e31c-418f-9df8-aba17d34dede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8842c93-9557-417d-bc08-87ec58014ebc",
        "cursor": {
          "ref": "2157a6b3-4d7d-4fd8-89eb-5f70ede53d28",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "891d849b-3d7d-46d8-b613-fe1f2b0f6c93"
        },
        "item": {
          "id": "e8842c93-9557-417d-bc08-87ec58014ebc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1ef803d6-2132-4cb4-8e1c-5917570b4d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec2a5da-b239-4c9c-a503-b1e3cd8a3dd0",
        "cursor": {
          "ref": "e94f37c0-906d-4507-adc9-73ce80464e76",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5cfd96b0-533a-447d-b07c-eeeb7793aaaa"
        },
        "item": {
          "id": "4ec2a5da-b239-4c9c-a503-b1e3cd8a3dd0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "90755225-b953-45d8-9ea9-c308730a74a4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 704,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2242e7-0c40-4917-94c3-10984293a3b4",
        "cursor": {
          "ref": "7ef00373-e990-44dc-9a9f-e7500e13b010",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d21beae2-4009-4ba2-a17d-b499e217704a"
        },
        "item": {
          "id": "db2242e7-0c40-4917-94c3-10984293a3b4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "97189806-07fa-41aa-aa14-a47a1bdd6db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5506c44-4d56-4da4-b803-996d76f0e0a0",
        "cursor": {
          "ref": "cb41b1f6-3cf0-4635-94c0-bd055163ed6d",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4192e475-7fbe-47cc-9c9f-89f546d2aa23"
        },
        "item": {
          "id": "c5506c44-4d56-4da4-b803-996d76f0e0a0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "79b73ecd-0965-42a6-ae46-5532a5fc5ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1062,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51e9048-1344-48a3-86aa-f74228955784",
        "cursor": {
          "ref": "1a3c77a6-42c2-476a-b511-51e0e6f210e7",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b0106f2f-ef34-414e-a8c1-c236874c195f"
        },
        "item": {
          "id": "a51e9048-1344-48a3-86aa-f74228955784",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2178aaaf-7133-4aba-a2e2-d411259f347d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c454b7-e4f6-4e84-85f7-81a290c78d52",
        "cursor": {
          "ref": "a0fd6534-afbf-43ae-b96d-758ef37b8459",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6062343b-07b5-40c2-bd89-833cfad575a2"
        },
        "item": {
          "id": "f2c454b7-e4f6-4e84-85f7-81a290c78d52",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9e9d4946-15f1-40d3-ba2c-4fd8f16683bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 978,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845aa6f0-034f-4a00-b45d-590a7b281cc1",
        "cursor": {
          "ref": "d064c0ea-ae0d-41ea-a9cc-08836007d40c",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8d80dbd3-a2ad-4b81-9a15-18b04e2762fa"
        },
        "item": {
          "id": "845aa6f0-034f-4a00-b45d-590a7b281cc1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "63575487-d328-4ef3-9ff1-6bba1051f5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1059,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04a721c-15aa-40d4-8aa8-1f2351977a9d",
        "cursor": {
          "ref": "238a3a32-5022-43da-9f1a-e87fa929bda8",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7a24e924-d5aa-4429-8b87-461372c5a5ac"
        },
        "item": {
          "id": "d04a721c-15aa-40d4-8aa8-1f2351977a9d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7d9ad658-4baf-4392-92d3-8f71eaba0124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1275,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef68a5f8-10aa-45f5-bfcf-d9b65b768993",
        "cursor": {
          "ref": "e69bdfc5-b768-451c-b21d-31d9472f0f90",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a3ced735-889e-456b-978f-73eece9c50b1"
        },
        "item": {
          "id": "ef68a5f8-10aa-45f5-bfcf-d9b65b768993",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "da32913a-512a-47b2-b328-ad54b8445f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf4e15e-c275-4928-ba71-efb2e22b5808",
        "cursor": {
          "ref": "bd7f4d8e-10be-44b5-bf60-6db54ee1a617",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d8155a32-c8cb-4c07-9292-91235bc13e9d"
        },
        "item": {
          "id": "2cf4e15e-c275-4928-ba71-efb2e22b5808",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ba28d805-6c4d-4a69-988e-0044370b25ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e14caf-06c1-4e83-b9ab-da5f613cfad9",
        "cursor": {
          "ref": "a80842f1-a650-4f68-bce1-a598715c5103",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ef453c6a-dd7d-4d72-84f4-93393c826dd2"
        },
        "item": {
          "id": "33e14caf-06c1-4e83-b9ab-da5f613cfad9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7b607a61-0ce0-4002-86bd-1c995b231cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8320b8f-8bf6-4b24-94d1-392dd0b34d75",
        "cursor": {
          "ref": "6cd1ddb3-4aae-4ad6-9831-1340dae9921d",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6770abb9-c8b0-4f1d-9c16-a5894367a85f"
        },
        "item": {
          "id": "b8320b8f-8bf6-4b24-94d1-392dd0b34d75",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ed74b66d-2694-48e3-976f-1cad882996f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b8deea-10df-4868-9829-43653569dcc3",
        "cursor": {
          "ref": "7d37ada2-f027-4cf7-a145-ea1a7e25ccf8",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c1ad9796-b9cd-4ac6-9c3c-02da895feab3"
        },
        "item": {
          "id": "e4b8deea-10df-4868-9829-43653569dcc3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c016af68-bf65-4c7c-b7f8-b737cb24f241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f6fc4e-22c0-4b5c-9e14-8100ca979b46",
        "cursor": {
          "ref": "2ce0184f-6e02-4f6f-97a7-9adf0d9d6c97",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b9a5e723-e2de-4be7-8abe-7d4349483aa6"
        },
        "item": {
          "id": "d2f6fc4e-22c0-4b5c-9e14-8100ca979b46",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d40d24f7-059e-42ea-96f5-d38b4e48f669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64ebc28-8395-4009-9140-bdf9b2bc1366",
        "cursor": {
          "ref": "369c6519-f0ed-4e13-8615-b5a2ada954c5",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2fc46ba5-d3b2-472f-8ea4-685a193196b4"
        },
        "item": {
          "id": "f64ebc28-8395-4009-9140-bdf9b2bc1366",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f1393b92-0308-4718-9190-4c800f042d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3ef3e7-19ff-4262-92db-061edb73fc59",
        "cursor": {
          "ref": "e4dcf482-f6b0-48fc-8e4d-f79f4beb27d9",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4e7de239-85da-46cd-bf8f-3e3106fe5609"
        },
        "item": {
          "id": "6c3ef3e7-19ff-4262-92db-061edb73fc59",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6e329079-fcb4-4728-b9f1-e39b882dbab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb4e46a-0a64-4e06-bf5b-2c4659ec05af",
        "cursor": {
          "ref": "fa6eecc6-6b35-435c-84fb-45028a92db55",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f888f068-3093-4790-8b1c-0c8f5a42764d"
        },
        "item": {
          "id": "2cb4e46a-0a64-4e06-bf5b-2c4659ec05af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8da76c7f-20c5-4021-a8a0-2c5f7b3e7057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892bd7d1-afdc-4353-8542-ee1eb2babd06",
        "cursor": {
          "ref": "0b5c4826-ccc8-4bde-aa53-f1a35d2f624f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5ef25efb-2af5-48f5-8e7a-a16754484a8e"
        },
        "item": {
          "id": "892bd7d1-afdc-4353-8542-ee1eb2babd06",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fc8f8160-9ceb-43d3-b17b-082453aeb1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3851b3-213a-44ce-adb2-8ab00addd057",
        "cursor": {
          "ref": "06b33024-e422-4933-b5a0-217e964c83ea",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "14edd11c-00d5-4a2c-b083-ff62201f0660"
        },
        "item": {
          "id": "db3851b3-213a-44ce-adb2-8ab00addd057",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fab7190c-62a5-45e2-9ae9-03e5c67f9b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 954,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a0e923-fee1-48ba-982a-d4249603ed00",
        "cursor": {
          "ref": "52e059ff-cd3e-4770-a3ab-530e8f9752f3",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b4fd17af-f3d1-4d46-90f6-02738a8a92cb"
        },
        "item": {
          "id": "e0a0e923-fee1-48ba-982a-d4249603ed00",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b4c1da04-2a15-4e12-b4be-670e2dfb1abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd729f8c-ee6f-4995-88a4-abd922307001",
        "cursor": {
          "ref": "15603325-6b12-4040-a965-052375ac98a9",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "259b71cd-46ad-450e-bd2c-20f41cea56e4"
        },
        "item": {
          "id": "fd729f8c-ee6f-4995-88a4-abd922307001",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9972ef64-d6ac-4803-92c2-b7e52781b9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1060,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a9d332-07a2-4c02-b0c5-e640f8b9679a",
        "cursor": {
          "ref": "cc9bd3f2-4663-40ca-a312-770bd47f1078",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "15220318-bd7c-4d02-b696-9b9219df91a8"
        },
        "item": {
          "id": "09a9d332-07a2-4c02-b0c5-e640f8b9679a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5c7d2c55-6768-4d77-a5f2-563a5383b21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4eda0c-f57a-47d4-9e13-dc0d34b887e4",
        "cursor": {
          "ref": "9b7c74a4-a6ff-4153-b415-f7324e10d686",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5d92cd47-b97c-4a66-bebc-d58ec84f012e"
        },
        "item": {
          "id": "4d4eda0c-f57a-47d4-9e13-dc0d34b887e4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6ff4e47d-9240-4330-9be0-117591bc3018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a948b09f-bb42-4602-a7f6-3707f57a8441",
        "cursor": {
          "ref": "f9b10053-2de9-47c6-a18e-a8375e8ede33",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "49ad68c4-7136-40f4-84c3-1d87b8ddb7a8"
        },
        "item": {
          "id": "a948b09f-bb42-4602-a7f6-3707f57a8441",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "011afa54-fb67-423b-9a09-90be59914361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafe6376-6963-44d1-81a3-41cf03d79dc7",
        "cursor": {
          "ref": "16fa6bff-5603-41d3-810b-34c193631d16",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8099996e-6bf1-4142-9624-24fe3ee99e10"
        },
        "item": {
          "id": "dafe6376-6963-44d1-81a3-41cf03d79dc7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ec2c345f-d9b3-42a8-bd53-a358cba27714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c32228f-a17f-4a9a-8dea-c2521fd61ad4",
        "cursor": {
          "ref": "a0997b35-0802-4a78-b458-fcf56dc684bd",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5a9bd898-2054-44ad-ad77-9889d82654f9"
        },
        "item": {
          "id": "8c32228f-a17f-4a9a-8dea-c2521fd61ad4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d4beeda8-3bad-4cec-ad24-27417ad4f57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b22bed0-7351-4b6e-8ebc-5ff6e4844f09",
        "cursor": {
          "ref": "88688821-0861-4093-9baf-5a3af2927f4d",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e85875e0-ae3c-4658-9bb9-e43c024f4c60"
        },
        "item": {
          "id": "7b22bed0-7351-4b6e-8ebc-5ff6e4844f09",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "14e9a368-1897-49fc-9e1d-55c5739f33e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f55d68d-146b-4c1f-94c3-68330e4b9514",
        "cursor": {
          "ref": "3ac1900b-0230-435c-84ff-d81bde153d40",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0042b176-2add-4274-9433-7569fe2a7d58"
        },
        "item": {
          "id": "6f55d68d-146b-4c1f-94c3-68330e4b9514",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "03b57081-e807-4a2f-8972-bec5087161e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263267d8-1e65-4f87-bc17-653d92aea080",
        "cursor": {
          "ref": "0d28b63a-d418-400a-80d3-db927db227b3",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c61283ca-b80a-4e80-abdc-2831f5eb86b1"
        },
        "item": {
          "id": "263267d8-1e65-4f87-bc17-653d92aea080",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cf6003e7-5a22-4542-a852-79175e741e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d18d78-eaec-4b77-b6de-4b4a25d7fada",
        "cursor": {
          "ref": "c0f0cdc9-e4af-4249-8ca5-856ea004ee64",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0fbaccf3-654d-45ba-9e8d-716b091cc0d3"
        },
        "item": {
          "id": "26d18d78-eaec-4b77-b6de-4b4a25d7fada",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ef849cb9-d686-459f-90bc-e9121f155ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc25ad69-d350-4faf-bbb9-6f7a27f608fe",
        "cursor": {
          "ref": "0a4d516e-d76b-46fd-a903-197e540bd944",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad252e66-1c7d-4c77-afa5-b9a70db7ea26"
        },
        "item": {
          "id": "fc25ad69-d350-4faf-bbb9-6f7a27f608fe",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "37cec2e6-4f9b-4588-b9ce-548ee2841fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af495685-d191-41d2-8a94-6370ec89460d",
        "cursor": {
          "ref": "e15010fa-9405-4d68-ab9d-30de9ef0b263",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3d4c15e6-12bf-4225-9e65-53bb334c1c4b"
        },
        "item": {
          "id": "af495685-d191-41d2-8a94-6370ec89460d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "071623b8-1318-4163-a776-6e47de5718ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bc6fd4-84cc-4a6e-9d9b-c54666270280",
        "cursor": {
          "ref": "02a052de-3c8c-434f-96de-a5bc68e78a65",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6596549d-ac93-4e8d-9105-4f9ed248e236"
        },
        "item": {
          "id": "85bc6fd4-84cc-4a6e-9d9b-c54666270280",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8024bcd6-1d5d-40b0-91ae-3ba8f7777516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54353e8-1f15-4188-8eec-cdf9bbfd3a89",
        "cursor": {
          "ref": "fcc33a6e-5919-4b1d-99c5-8bb8cac06ecf",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a4ab9de1-dbc5-414b-a3a2-dc9f1f23885d"
        },
        "item": {
          "id": "d54353e8-1f15-4188-8eec-cdf9bbfd3a89",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a7a709e8-0edb-49d7-8865-10f9b8557053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f73025-f21c-4e16-bffa-1908a9582ca5",
        "cursor": {
          "ref": "df23e4bd-1be8-442f-8f23-1bd36bb107be",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "50dc6d7f-4ba3-4508-91e3-1d8b8840a7a1"
        },
        "item": {
          "id": "05f73025-f21c-4e16-bffa-1908a9582ca5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8267b240-b537-4210-a0e0-9a344d17675d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d820837b-4d20-46c1-95c2-9b3be78c594e",
        "cursor": {
          "ref": "3fe7d44a-2399-4fca-8961-580c1c1803fd",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1866aacb-d4c9-46e4-a7c2-4b198093af0b"
        },
        "item": {
          "id": "d820837b-4d20-46c1-95c2-9b3be78c594e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4814bba6-4987-4d9a-b972-a7e86189842c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdc4dc9-7822-4c22-9870-3814021e3477",
        "cursor": {
          "ref": "98cbed69-0618-4801-b0a2-ddded704004b",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "79e276c4-f5f9-4bd4-bc32-911108c1f60f"
        },
        "item": {
          "id": "fbdc4dc9-7822-4c22-9870-3814021e3477",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "40dc4a4d-7990-4abb-9241-99686320be8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953fa979-4c5b-491c-9651-5c5584bcf0ed",
        "cursor": {
          "ref": "b870c714-3ca1-4054-a5b7-bb530b3b5d17",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "47f03139-fbd6-4d71-9b8e-7880a7dbda8b"
        },
        "item": {
          "id": "953fa979-4c5b-491c-9651-5c5584bcf0ed",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c639b256-0262-4ff9-85e7-aca76135e75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6939fa5f-bfc3-4cd2-b700-17348d6ad6b8",
        "cursor": {
          "ref": "f1c5c233-39d3-4298-8646-269b96c6c60f",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3b824bd8-b453-4f1b-b035-834dabe265a8"
        },
        "item": {
          "id": "6939fa5f-bfc3-4cd2-b700-17348d6ad6b8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5e8c09ba-5b43-4140-b794-20d91451d2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ce5195-a0af-4c66-b2e6-a6549f726903",
        "cursor": {
          "ref": "bbdd134a-0608-4f73-83d4-1dd971f1a19e",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "375164b6-05a3-47bf-aafd-6969f4e19b63"
        },
        "item": {
          "id": "88ce5195-a0af-4c66-b2e6-a6549f726903",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b610f078-c0fc-45f1-9c5b-1bfd6718130b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc87e42-43b9-4331-a6ea-c90b66789b7c",
        "cursor": {
          "ref": "868500cf-f24c-40de-966d-1752fb88dd8b",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "85410eef-170c-406f-80c4-7051574e3af1"
        },
        "item": {
          "id": "1dc87e42-43b9-4331-a6ea-c90b66789b7c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9489b6ad-068b-46d3-a470-bda19a3026a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31984a3-7d35-40c7-838e-9a595cb68f83",
        "cursor": {
          "ref": "b5669bfd-2cd5-4417-9c87-24f82e65a247",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b1b91880-50e5-4435-ae34-e4ecf19e27b4"
        },
        "item": {
          "id": "b31984a3-7d35-40c7-838e-9a595cb68f83",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "78f73fac-a232-4452-bb4a-1407080e1fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25230689-c321-49a1-a28d-144b4d2cde02",
        "cursor": {
          "ref": "ff2acd38-8283-46a3-bd18-5769e815a517",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7a0bd077-078f-4a29-928d-0b8d616315f5"
        },
        "item": {
          "id": "25230689-c321-49a1-a28d-144b4d2cde02",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "27d2c8aa-9731-48f5-bdbd-7e16b8a37e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930efed0-9c0a-471d-bae8-e08c91c39e35",
        "cursor": {
          "ref": "611716a3-b701-4314-9ab9-8e3aed1334b3",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4e4a7221-4f7d-4743-8325-bcc285346355"
        },
        "item": {
          "id": "930efed0-9c0a-471d-bae8-e08c91c39e35",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d7a3aa9a-685e-44b0-b26c-11906e6cdff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d207a6-1a90-439c-8b94-5955872d079d",
        "cursor": {
          "ref": "475476ea-a4d3-440c-bdcd-45daec6462bf",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2652ecff-8410-45c2-a072-e24e655c888f"
        },
        "item": {
          "id": "c2d207a6-1a90-439c-8b94-5955872d079d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4c07f6a8-064b-4f8a-9a8a-61f61a9a91e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2cdc74-3d8b-442e-bb60-be04c26fb436",
        "cursor": {
          "ref": "8677e13c-a240-4599-bc88-52a4da939813",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7cf903b7-5e5c-4387-bc55-28ffde205044"
        },
        "item": {
          "id": "8a2cdc74-3d8b-442e-bb60-be04c26fb436",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ccfeda51-35df-41a5-8e3f-cc078708790a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94637dff-8b84-48a9-a8c6-53e38c8ba3b1",
        "cursor": {
          "ref": "9935e054-7930-42d9-9d70-3342db1d58ee",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "38629cc0-9574-47a3-a5be-cc0723d98054"
        },
        "item": {
          "id": "94637dff-8b84-48a9-a8c6-53e38c8ba3b1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d9a335db-71b6-4083-a643-0ae1217bb614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f3cd67-831d-436f-ba12-6b175e4f6807",
        "cursor": {
          "ref": "00f0ae87-e2bc-4a8b-8438-c9fb9fb59d1d",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0cca2c8a-daed-49a4-8b1b-7c5429342a0a"
        },
        "item": {
          "id": "f6f3cd67-831d-436f-ba12-6b175e4f6807",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8757afeb-289e-4911-8422-04dd6cd56fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3f5d5d-6bd4-43cc-8dea-a45d00aa58a3",
        "cursor": {
          "ref": "6bcc0765-6362-4de0-89f9-6fa5b1eaaaa6",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a9ac74b3-9c38-43ad-b4be-1f1e00314749"
        },
        "item": {
          "id": "aa3f5d5d-6bd4-43cc-8dea-a45d00aa58a3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bee41fc3-4cb3-4791-9626-b1ab43524a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d704618-2de2-422b-92ee-fd353bf8e5b7",
        "cursor": {
          "ref": "561911d3-d465-4832-b571-319c267ed5be",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "18840e58-49bc-43fa-ae7c-3dc0c87cc025"
        },
        "item": {
          "id": "5d704618-2de2-422b-92ee-fd353bf8e5b7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "59678247-798f-4025-bb31-581250b38fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6475af-616c-461d-8e68-a14fcf8ac3ae",
        "cursor": {
          "ref": "e4731437-32df-4d60-bb6c-24e31a62edf4",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ae18b320-4fb2-4892-b381-443e0f00ed7c"
        },
        "item": {
          "id": "ca6475af-616c-461d-8e68-a14fcf8ac3ae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b557515c-6fcd-44f9-a17e-21e5288b662c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61291252-5448-4e68-ad1e-c5bb9bd06400",
        "cursor": {
          "ref": "6909b352-44c5-46d7-94f1-8bd8357d3bac",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7ad27028-2997-43a8-8561-58cd1052b5de"
        },
        "item": {
          "id": "61291252-5448-4e68-ad1e-c5bb9bd06400",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "28809dcc-f9fd-42ef-a631-9904e1479f00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e64bc0b-f659-4911-b2b5-cc29f0eecea3",
        "cursor": {
          "ref": "bcd3fefd-29e0-421d-a423-2a0d6a541db5",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6fc61132-084b-4f2a-9a31-1401c2b06949"
        },
        "item": {
          "id": "3e64bc0b-f659-4911-b2b5-cc29f0eecea3",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b0d3853e-84a8-4ab8-8fa3-b02578a4333e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 584,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790ceb73-a0c9-4f77-a14c-cb5bf2b72705",
        "cursor": {
          "ref": "67095360-3379-45ba-9019-9c5c6b2e1bab",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fd7ac9b8-28a1-4593-9ce7-648cefe72600"
        },
        "item": {
          "id": "790ceb73-a0c9-4f77-a14c-cb5bf2b72705",
          "name": "credentials_issue"
        },
        "response": {
          "id": "93e71ba0-f066-4b6f-9c4b-657509f101b8",
          "status": "Created",
          "code": 201,
          "responseTime": 7176,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9638aad9-3ff9-42bf-9577-1dda6432458a",
        "cursor": {
          "ref": "08ea2bf4-9641-4706-9df8-ea826b9fef48",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b9cec16e-b045-423a-9e8b-50a7c5535804"
        },
        "item": {
          "id": "9638aad9-3ff9-42bf-9577-1dda6432458a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ed6dc529-8653-445f-ab99-ada06993f7ed",
          "status": "Created",
          "code": 201,
          "responseTime": 10571,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7c49df-aa62-4fb6-a93c-3f05a3b40502",
        "cursor": {
          "ref": "eb8e9aad-9d28-4281-9bc1-8a074d838f84",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8774abc8-2fac-4071-a765-4f40d4720de6"
        },
        "item": {
          "id": "9a7c49df-aa62-4fb6-a93c-3f05a3b40502",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2a352ce1-8ecf-49de-bf76-57d1725daf2e",
          "status": "Created",
          "code": 201,
          "responseTime": 8798,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c8c369-ef30-4ae8-9275-850471a810e1",
        "cursor": {
          "ref": "b5b07151-15d5-44c8-97f4-d1af7e6dcf2a",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7401e1fa-1cfc-4fc8-988d-0461c5099199"
        },
        "item": {
          "id": "03c8c369-ef30-4ae8-9275-850471a810e1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5528c832-872f-48bc-a003-6b0669511d94",
          "status": "Created",
          "code": 201,
          "responseTime": 7832,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "142d195d-e4d9-4f6a-aaf5-f369e54fbca1",
        "cursor": {
          "ref": "c3e00a3f-a933-4b38-88ee-5ca55206ce78",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "659b067a-deb8-4c5a-ac52-0415321e1f72"
        },
        "item": {
          "id": "142d195d-e4d9-4f6a-aaf5-f369e54fbca1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "310102e3-37bb-4cb4-babc-c7ef549e3a10",
          "status": "Created",
          "code": 201,
          "responseTime": 7040,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cba7087-1e0c-44eb-98cf-c94cc774ee00",
        "cursor": {
          "ref": "d5a27341-5719-4758-b734-7e7890e62982",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dcdddb68-864a-4943-8efb-349bd4d2ee23"
        },
        "item": {
          "id": "0cba7087-1e0c-44eb-98cf-c94cc774ee00",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7cd93b79-3917-4b4d-b179-91770b2bbe64",
          "status": "Created",
          "code": 201,
          "responseTime": 7796,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f189cd7-997a-4085-a118-fed9c8d6389e",
        "cursor": {
          "ref": "0b46ac20-7903-4e4e-8fe6-ad81d63759fc",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b4e3d748-4d27-4133-8cda-5fea37028d24"
        },
        "item": {
          "id": "4f189cd7-997a-4085-a118-fed9c8d6389e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "843fc05f-7597-4195-90f2-f5c79a5415e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f189cd7-997a-4085-a118-fed9c8d6389e",
        "cursor": {
          "ref": "0b46ac20-7903-4e4e-8fe6-ad81d63759fc",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b4e3d748-4d27-4133-8cda-5fea37028d24"
        },
        "item": {
          "id": "4f189cd7-997a-4085-a118-fed9c8d6389e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "843fc05f-7597-4195-90f2-f5c79a5415e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e62213-d2e5-408e-a112-43edfda65b8a",
        "cursor": {
          "ref": "1596575c-9d8b-4be1-a58e-8ebdbd08edd8",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "24414a31-8f5a-447a-b5de-b56ece517726"
        },
        "item": {
          "id": "18e62213-d2e5-408e-a112-43edfda65b8a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8f1af015-72f0-4582-b523-f36bcaa66a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370009b1-58d9-443d-ac9a-8dbeb6beff08",
        "cursor": {
          "ref": "be304c60-5b19-4a72-b90b-9481b0f8996b",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fba6ef6e-8915-494b-b8c6-46afd8bc4739"
        },
        "item": {
          "id": "370009b1-58d9-443d-ac9a-8dbeb6beff08",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "62b4f5bb-62de-4014-b5f1-fda8a320aa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23877c02-0df4-42a4-a129-8bee333fa7c4",
        "cursor": {
          "ref": "235cca12-bee0-4808-857c-2975058f9361",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e2d44a30-7d5b-43b2-b280-73bc33037288"
        },
        "item": {
          "id": "23877c02-0df4-42a4-a129-8bee333fa7c4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5d1ab566-3bf2-4e8e-97c6-bc8028e4660b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b4a3c7-570d-405a-bc32-0cdcce794949",
        "cursor": {
          "ref": "af76c770-e4ed-49f8-8ca1-967b4bfeb3c8",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7565f0e9-9a06-4af7-8031-cd76fcf96606"
        },
        "item": {
          "id": "63b4a3c7-570d-405a-bc32-0cdcce794949",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3a13dcd6-0d78-4b68-9577-5bd4685f18e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f84e1d3-eadf-467b-8e4c-63c36e6638d6",
        "cursor": {
          "ref": "65ae92d7-6a82-40d3-90a5-634cf39dda99",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c5d4e746-8063-4239-a3eb-603be8c611a4"
        },
        "item": {
          "id": "5f84e1d3-eadf-467b-8e4c-63c36e6638d6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5c65c8e0-62c1-491b-93a7-ed91937c0e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aad5f22-c14f-4b40-882f-a9a67ad2f11d",
        "cursor": {
          "ref": "0c83a5e4-b16e-42e3-b116-946d969205dd",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1d98c130-604f-45a6-8963-f24d1cbb6018"
        },
        "item": {
          "id": "2aad5f22-c14f-4b40-882f-a9a67ad2f11d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "252a1c0c-8f39-470a-bab8-7b5b22091396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b24b945-b5b6-4640-b8a2-92d7aeee835e",
        "cursor": {
          "ref": "e26ee1aa-5ca2-4405-84ff-ca7af7ee6582",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bedf5971-dbb0-426a-b452-c4619a36a2f9"
        },
        "item": {
          "id": "7b24b945-b5b6-4640-b8a2-92d7aeee835e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8261fa38-ed30-4218-ba5c-76744fdce545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772dda7a-0c11-40f6-b3a7-5e72d2e8bc4a",
        "cursor": {
          "ref": "698d8edd-d786-4b4f-96cf-6ec00f798ae2",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "63111915-ae2d-4204-a930-da7037141035"
        },
        "item": {
          "id": "772dda7a-0c11-40f6-b3a7-5e72d2e8bc4a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "da98cb0a-5a2e-4ba9-85e6-c545a2917cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d233c049-bdab-4c22-a69d-613d316f11b1",
        "cursor": {
          "ref": "1ab07fd9-16e4-470c-86dc-bd6d6b85541c",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4219af04-35ce-40ed-83a4-c17a92b42356"
        },
        "item": {
          "id": "d233c049-bdab-4c22-a69d-613d316f11b1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5b707c7e-d083-4611-ab9b-15186a845dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726aaca5-52d8-4684-81b3-1a146cc35a18",
        "cursor": {
          "ref": "a15d4b35-27d5-4389-84bd-d6a8300bf3a2",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5c8570a8-b8f1-4476-9193-7fe443b6810c"
        },
        "item": {
          "id": "726aaca5-52d8-4684-81b3-1a146cc35a18",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b3216719-634a-4cf0-840c-81085cfe0d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b2c2dc-b70a-407e-9099-1092495c75e3",
        "cursor": {
          "ref": "6979b86c-c6cf-4b31-ae99-6880cf124697",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "afc151ba-aad3-43cc-8de0-59fa91fecb24"
        },
        "item": {
          "id": "d4b2c2dc-b70a-407e-9099-1092495c75e3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b71ee635-b0bb-4c7c-a92f-cbe5a8d6dd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a2eba4-952f-4ead-acea-c646869bf71e",
        "cursor": {
          "ref": "46bc53fe-993d-405e-8385-66662752a0c7",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e7a45491-d522-4d55-b36d-641e40822ec2"
        },
        "item": {
          "id": "05a2eba4-952f-4ead-acea-c646869bf71e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5100b975-d543-49f9-a712-3a488c2a1a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940dc0fc-ab33-490b-bab5-ae8fb095dbab",
        "cursor": {
          "ref": "78d56643-d43e-4d5e-b706-d4712b0d9cb9",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "13774e7b-324d-4f60-aed5-b970187ff890"
        },
        "item": {
          "id": "940dc0fc-ab33-490b-bab5-ae8fb095dbab",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "48008a6a-bb6f-4f38-a257-470de5dddaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816c377c-351c-494c-b7ce-37e9b76f0d09",
        "cursor": {
          "ref": "569f001f-4c30-49de-a50b-d809411b8921",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a0898383-8a40-4b47-9c3d-511875e35953"
        },
        "item": {
          "id": "816c377c-351c-494c-b7ce-37e9b76f0d09",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4cc51560-df6a-4f8c-b5b3-e64ec0bd66cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddec60ec-5b80-427d-861f-52e729ee85cf",
        "cursor": {
          "ref": "a9269867-b396-4936-be76-ea4786f61f7e",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d6785cb5-0184-4a02-a5a4-674fbbb5553d"
        },
        "item": {
          "id": "ddec60ec-5b80-427d-861f-52e729ee85cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "54d5e66c-5160-4e08-b939-071677a7be81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490eb439-245f-4c8a-9869-e14a413e3e35",
        "cursor": {
          "ref": "fb628315-b6c9-43f2-9180-3ccbcc69bd01",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "87815d64-d6c3-4d19-9fcf-57c4c7b870b0"
        },
        "item": {
          "id": "490eb439-245f-4c8a-9869-e14a413e3e35",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "564bb316-7dc2-467d-a4ba-345a5a6b72f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c7b48d-c7c8-4681-92b6-2cc5ed170577",
        "cursor": {
          "ref": "93e2f8fb-3f73-4f74-8a72-c414ea939e9a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6cab0ee2-e23d-4b55-9d3e-3046abc3d64a"
        },
        "item": {
          "id": "43c7b48d-c7c8-4681-92b6-2cc5ed170577",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d73f4890-babf-410d-a836-bf3d682506e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84679a3-f4cd-46dc-8872-2bdd931c2a3f",
        "cursor": {
          "ref": "ca879a33-9d80-4af1-8885-eee4766a0cf6",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dbc36e03-3346-4506-83bb-d2ca144c6108"
        },
        "item": {
          "id": "a84679a3-f4cd-46dc-8872-2bdd931c2a3f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ff65d2a3-3704-48c5-9cfa-526318d46bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda98a8b-e3af-4ae2-9432-abce79ec86f6",
        "cursor": {
          "ref": "2c47fdd8-b70a-4d54-806d-2ccd5a4db586",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c7ac70a1-1a33-4bcd-be06-b6afd7ac4ecc"
        },
        "item": {
          "id": "cda98a8b-e3af-4ae2-9432-abce79ec86f6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2b546bc1-c3a7-4a0c-8a5c-d94cde491399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a982b00-73ed-4c33-8c13-24f7a4956607",
        "cursor": {
          "ref": "5c5ce073-e8ab-4f59-aa96-b761180de8a5",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "104c8b98-b30e-418b-9c8c-997ed365078b"
        },
        "item": {
          "id": "4a982b00-73ed-4c33-8c13-24f7a4956607",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "71832359-937c-46d8-b75b-f68b41d8374c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bd8d5a-be53-4a98-a95d-d937d9b3d897",
        "cursor": {
          "ref": "a44d5292-c8a5-44b4-b2bb-3e6e5b9a388a",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5c6e30df-dc7d-4bd0-969b-fa61d4dc8988"
        },
        "item": {
          "id": "a0bd8d5a-be53-4a98-a95d-d937d9b3d897",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8ee3c120-a019-4481-9298-749ab550c710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e86f66-e99b-43bf-b611-b15cd4e7eb72",
        "cursor": {
          "ref": "967ea3f3-c761-4581-ac19-bd417c5f0ac6",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1fc529f0-6b6e-400e-a7f0-b71fe3242141"
        },
        "item": {
          "id": "b2e86f66-e99b-43bf-b611-b15cd4e7eb72",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a33482bf-5685-4745-a6e9-593a4da1b441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26b89cf-f8cd-4c93-bf1d-072978054780",
        "cursor": {
          "ref": "3d7b07db-8293-4195-b952-31095c8c62d7",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6cee322a-4c72-4e32-8d40-205b2186a222"
        },
        "item": {
          "id": "b26b89cf-f8cd-4c93-bf1d-072978054780",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c20c0143-4b2e-4210-b642-5b8fe709d4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d90d8e-efaa-494c-9118-76a6a9fb3939",
        "cursor": {
          "ref": "a8340f4e-7dbc-4556-98b2-6c965c4cba5d",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5d819c6b-3d52-40cd-a12a-d1b3e38cfc7a"
        },
        "item": {
          "id": "82d90d8e-efaa-494c-9118-76a6a9fb3939",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "aeccd3f6-787e-435f-b15a-df11443b3040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2085a841-765e-435e-839a-8125770bf373",
        "cursor": {
          "ref": "8a5f1a2a-0169-4b44-8464-b4496c94b4d9",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cbc0e6dd-2e49-47d3-bfb7-10a006fb6b99"
        },
        "item": {
          "id": "2085a841-765e-435e-839a-8125770bf373",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c8cfaf85-bd6d-45df-b8f4-096fa3ee1596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eb935a-3a17-4924-b565-eaa299f1e551",
        "cursor": {
          "ref": "4a3e3b83-3f94-4144-b81b-56995107a30b",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e45add43-5d8c-446e-805f-2f28495e0f17"
        },
        "item": {
          "id": "c2eb935a-3a17-4924-b565-eaa299f1e551",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "107f8d93-d4f2-41b0-b64d-f7e11f9eed05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681aaab0-6dc1-4571-a20d-5b91ea062608",
        "cursor": {
          "ref": "6136c36f-cf72-4d08-82f0-987ad79ca41d",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "90ce0e3d-18c2-4857-93c7-553e082e021e"
        },
        "item": {
          "id": "681aaab0-6dc1-4571-a20d-5b91ea062608",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3fe8da16-89e5-4ea7-b5c7-3100698c30b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eedf6d4-0800-48df-8e11-f3aff10014b7",
        "cursor": {
          "ref": "7e385e28-9683-4a4c-b978-053bfb8761b8",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e58262b9-7dc9-4df7-a065-76b1e92e7150"
        },
        "item": {
          "id": "0eedf6d4-0800-48df-8e11-f3aff10014b7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2bdc08b6-2116-4786-a2fe-1dff733f4fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641bbdc9-7d19-46dc-8a3e-46caf6319508",
        "cursor": {
          "ref": "58633c5b-5245-4d27-bcfa-be09faf63174",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "82761f91-9889-480f-89ae-d86db018eb3b"
        },
        "item": {
          "id": "641bbdc9-7d19-46dc-8a3e-46caf6319508",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e53f21f1-9298-4082-abca-773a967085f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e5f57a-56fc-427d-b23e-c54c9ca08e3e",
        "cursor": {
          "ref": "13a4eecb-d08f-43a8-b37f-a8536feaec45",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c2d369ae-f5c2-49b0-9331-d25ad6b4c17f"
        },
        "item": {
          "id": "70e5f57a-56fc-427d-b23e-c54c9ca08e3e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d251674c-8440-44a5-a5ec-dca181881a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be867bbe-7790-4bfd-9010-d0f29cd1f98d",
        "cursor": {
          "ref": "2f24ceba-2dfa-4bcd-a53d-a643ac0af83c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e67e8d8a-39bb-4fcf-bc1e-931d8ca44f9d"
        },
        "item": {
          "id": "be867bbe-7790-4bfd-9010-d0f29cd1f98d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "50a17e89-4bca-42e7-b596-6b6fa1333c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d489dcc-ba6b-4740-9f52-76f9806ec210",
        "cursor": {
          "ref": "0707d599-19e3-435b-9c78-db24c2121049",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7cce9312-fe0c-4eb3-b642-21333608f32b"
        },
        "item": {
          "id": "6d489dcc-ba6b-4740-9f52-76f9806ec210",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cc916752-b821-443a-8bb0-964b90cecb29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8532cd-8acb-48ca-8d4e-31198e85b50b",
        "cursor": {
          "ref": "84d26066-04d7-4572-badb-6bbe35bb3ae3",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f943cd4c-00e3-4e6c-bf21-48459a599183"
        },
        "item": {
          "id": "4f8532cd-8acb-48ca-8d4e-31198e85b50b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7a1065ff-4ed9-4e6c-9e43-731792294a57",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 574,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dd6e34-164d-4968-bdff-10710ea63f01",
        "cursor": {
          "ref": "3b205403-3769-4700-8153-97235138efd0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "baf3939e-af1b-4422-a20c-f9615282a34d"
        },
        "item": {
          "id": "19dd6e34-164d-4968-bdff-10710ea63f01",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5611d311-5949-4a7a-bbf3-6bfd1c73b8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dd6e34-164d-4968-bdff-10710ea63f01",
        "cursor": {
          "ref": "3b205403-3769-4700-8153-97235138efd0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "baf3939e-af1b-4422-a20c-f9615282a34d"
        },
        "item": {
          "id": "19dd6e34-164d-4968-bdff-10710ea63f01",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5611d311-5949-4a7a-bbf3-6bfd1c73b8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aedb7d5-eb3c-4104-b362-80507edaedda",
        "cursor": {
          "ref": "606fb95e-6aa2-40fd-95cc-2ee07073e7aa",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c99fe767-5784-41a9-9f65-c266dbf8b368"
        },
        "item": {
          "id": "4aedb7d5-eb3c-4104-b362-80507edaedda",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d879cc9a-2018-4e4e-8d0a-5bfd61d0884a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b3d4cd-7622-47f7-ad42-e8ac544458f4",
        "cursor": {
          "ref": "7d9f307e-6c6d-4e4f-b8f5-883668352cf7",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7223a689-bb2d-42c3-a8e4-d2c7787b010a"
        },
        "item": {
          "id": "d5b3d4cd-7622-47f7-ad42-e8ac544458f4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "66c056b2-3a7e-4437-a80b-424595ea2e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa650a79-1a32-4b0a-8d81-79e6bbe5ad88",
        "cursor": {
          "ref": "2b15d828-1b3e-4b48-b26b-28ce86821e26",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6fe192c7-3213-48aa-9cf0-e46dee7185d0"
        },
        "item": {
          "id": "fa650a79-1a32-4b0a-8d81-79e6bbe5ad88",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ff94ef15-30b3-4ee2-bac7-742cdd53dcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb506c0-532d-4f65-a4af-6480efe82de1",
        "cursor": {
          "ref": "623b3df4-d273-4c4e-b6fd-b2794104ac51",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "33ae61db-22b5-41b5-80d6-410771cc5811"
        },
        "item": {
          "id": "0bb506c0-532d-4f65-a4af-6480efe82de1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9c22d28b-31d9-4d90-a8f4-d4d8b7882db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca235d1-a966-4efa-8331-29a909c5d5df",
        "cursor": {
          "ref": "24b83c7d-87db-46d6-9023-dfc908e19310",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "19ed52e9-c3f2-4f42-b38a-c2d7318940b3"
        },
        "item": {
          "id": "2ca235d1-a966-4efa-8331-29a909c5d5df",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1a8dd763-3199-47b0-9327-3a2e1c59d46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65159699-71ff-4bca-a08a-a9333bd77176",
        "cursor": {
          "ref": "e736e946-e9af-4b2a-be67-abab7bddf408",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8f2ecc28-c9e0-4841-b250-50206349da7a"
        },
        "item": {
          "id": "65159699-71ff-4bca-a08a-a9333bd77176",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "82f8c40f-52c8-45f2-8a24-0fabba484469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5247c0-8072-4788-9273-f2599afe72f1",
        "cursor": {
          "ref": "fe246e54-bbb6-4059-8278-bbb19c7cd17b",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bd665178-d265-45f0-9d9b-2d76915016d6"
        },
        "item": {
          "id": "9a5247c0-8072-4788-9273-f2599afe72f1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d1c6d271-d4ab-4d10-b2c8-1cc6b5561b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18067e10-dd8a-4b6c-8a63-00af2878e7eb",
        "cursor": {
          "ref": "d2d5b860-fbc5-4ec8-9645-40707d50034e",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "85dc9531-c749-493a-8cb5-0bc45529b66f"
        },
        "item": {
          "id": "18067e10-dd8a-4b6c-8a63-00af2878e7eb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1a9b94b5-b0ce-413b-a938-82e9925ea403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f4a45f-b0d3-4593-9e30-04dfb7867d6f",
        "cursor": {
          "ref": "62146859-313d-42b4-876c-0185d65d6879",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b55d8c7f-a0a8-4217-8395-1f9ee2cc3c5e"
        },
        "item": {
          "id": "26f4a45f-b0d3-4593-9e30-04dfb7867d6f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e7740713-c037-4b46-9ebd-d0e382b29f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612a3903-6aef-4542-ae04-9e8039b6210e",
        "cursor": {
          "ref": "4d604352-32bd-4314-a1c3-888a3ffbe989",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2006b3d9-3a87-4e5e-befb-a983167f30e5"
        },
        "item": {
          "id": "612a3903-6aef-4542-ae04-9e8039b6210e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "48052236-89a3-429c-b9e7-dd4d0c3dfc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92809d2d-66b7-4949-88e6-e6d1f01fc3f6",
        "cursor": {
          "ref": "ca0b0f03-ee92-4d59-8f76-fb6c0a47539c",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cdb31d0d-29aa-4364-800b-e7e0e8c26662"
        },
        "item": {
          "id": "92809d2d-66b7-4949-88e6-e6d1f01fc3f6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "83185e7d-5a5a-48a3-b1f4-3876a5887bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fb71db-d64e-4cef-8b97-6c218fa6aab7",
        "cursor": {
          "ref": "d2662eda-3837-49d3-abdc-29689f438616",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "59f54f3e-7693-455a-970b-1b3203af3d31"
        },
        "item": {
          "id": "13fb71db-d64e-4cef-8b97-6c218fa6aab7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "528d43ea-f965-4941-8d3f-1ce9d8323f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6844d2cb-79f2-4493-84aa-f146801ee9e7",
        "cursor": {
          "ref": "a5c2f5cc-a246-4689-bcfd-3c969d72f1d7",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b6fbffee-fb0f-489d-99ae-38b24d5912f3"
        },
        "item": {
          "id": "6844d2cb-79f2-4493-84aa-f146801ee9e7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "092f6130-2d8f-4c5a-b961-24699f954392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92929b1-e5a8-4572-a363-41b6ea4e94c8",
        "cursor": {
          "ref": "71213018-9a90-4b45-9551-5863d5d225e0",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7900cbab-a3ab-4439-819c-ff4fb1760445"
        },
        "item": {
          "id": "c92929b1-e5a8-4572-a363-41b6ea4e94c8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4c0930a8-0e17-4fda-b9b4-9da75e1a4944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb1c49e-b674-41a7-b1e7-d171e99f6f35",
        "cursor": {
          "ref": "79fe72f8-067f-4228-b97e-5546f8ba4b4e",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "51b5e738-8990-4917-8f4e-361411a30f6d"
        },
        "item": {
          "id": "0eb1c49e-b674-41a7-b1e7-d171e99f6f35",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5522ca6e-bcde-4e93-a490-96e60b073a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc88674-e056-4589-ba98-22764ee53098",
        "cursor": {
          "ref": "b2fcca84-4cd5-4b16-aea3-7913733cc2c8",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c07003b3-6427-4b79-81d6-da62878b6538"
        },
        "item": {
          "id": "4cc88674-e056-4589-ba98-22764ee53098",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cee56e09-7f4e-468e-a3ba-f50ed3954a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3116805f-84a3-4c90-933d-5a570178143c",
        "cursor": {
          "ref": "dfd3a0e6-a43e-430d-8ec6-a523b5bfb7d9",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b9253abb-6b24-483f-a380-26b14d1ac42a"
        },
        "item": {
          "id": "3116805f-84a3-4c90-933d-5a570178143c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "55592dcb-6ff2-4ace-a336-551d2460ba3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bc190a-50ee-4e9a-9886-a2904e09792e",
        "cursor": {
          "ref": "34aebd45-2fa4-40df-a391-f445a6a511de",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8ae0f637-f58b-41dd-97c2-14334b8d7598"
        },
        "item": {
          "id": "24bc190a-50ee-4e9a-9886-a2904e09792e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dd5df4e5-d0ab-4d75-b044-25476ab5b4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ac1448-e47f-4ef6-b1b8-bcfcfdec1934",
        "cursor": {
          "ref": "8c8fef51-e8b6-44cb-90c4-67d918b02dee",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9918d82a-9b5b-4d43-902f-1bfbe5441d86"
        },
        "item": {
          "id": "f2ac1448-e47f-4ef6-b1b8-bcfcfdec1934",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d824b799-2fdb-451c-b0a9-0e08387cc247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cc7d43-2244-48d3-a320-aa1b6f986679",
        "cursor": {
          "ref": "6da37350-2b99-433e-a223-5d3910865ce2",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2d63b264-816d-4003-86c9-e092f5295123"
        },
        "item": {
          "id": "90cc7d43-2244-48d3-a320-aa1b6f986679",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fa1f2b76-6e4d-40f7-bbb9-84fa84d4626f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99b4451-980f-4e83-95b9-45ff5883727c",
        "cursor": {
          "ref": "b05c62c0-1490-4137-bafd-9ce810d22d6f",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "454cec31-e669-4521-9a51-0690eb285ca2"
        },
        "item": {
          "id": "b99b4451-980f-4e83-95b9-45ff5883727c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c0960834-ee04-449f-a186-931fbb7fb3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351ececc-dbb2-4dc6-baf3-c236c4af8e68",
        "cursor": {
          "ref": "44d9cc14-2eb8-44c3-a3be-a13a086dc81c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fd879cc2-61ac-46bf-9667-10c0903860d5"
        },
        "item": {
          "id": "351ececc-dbb2-4dc6-baf3-c236c4af8e68",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4b257a58-5405-4735-8798-a887d66db79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc9ec9a-dca7-42d8-bbb1-b7da96326739",
        "cursor": {
          "ref": "35bfe34f-668d-4be2-be0a-affd4fc65c73",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a16492c7-2f77-41a3-8d2a-da65a95195dd"
        },
        "item": {
          "id": "1cc9ec9a-dca7-42d8-bbb1-b7da96326739",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c23b5056-515a-459c-9c9a-62486279a21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6572ac5-d9d5-4553-83af-dccc1e6a3273",
        "cursor": {
          "ref": "0451f9d7-4ed9-47de-8486-6760d9dd5f8c",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0d162ac1-dc5c-4809-85a5-2df1cedc56e4"
        },
        "item": {
          "id": "f6572ac5-d9d5-4553-83af-dccc1e6a3273",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "92657884-889d-401a-9dbd-3e569425a8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deab9139-04e2-47bd-b1f2-2326a6df4303",
        "cursor": {
          "ref": "6ec0cac5-063e-4097-bd60-2ea9a87b4b1d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8499d5f4-355b-4716-ba67-912018b7ff64"
        },
        "item": {
          "id": "deab9139-04e2-47bd-b1f2-2326a6df4303",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "11a8a999-c241-47c0-a1cb-1f9df88278c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e84d75-387c-459d-a7d5-9c09fdb801b2",
        "cursor": {
          "ref": "676642ae-9730-4a72-931d-8d2168c4e4e4",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "326e96fa-f2b8-4130-87d8-4420e2af6362"
        },
        "item": {
          "id": "62e84d75-387c-459d-a7d5-9c09fdb801b2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2837a9ab-9c28-487c-a4b3-836b1b934f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fabe06-c3db-45e1-9b8f-cc8e04a36b6a",
        "cursor": {
          "ref": "fade572a-3b42-49a4-895b-66dd932a1bd9",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fb36e37b-e556-4154-a4da-1964015f4780"
        },
        "item": {
          "id": "75fabe06-c3db-45e1-9b8f-cc8e04a36b6a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c7b872e8-45b1-4b23-ae26-294af5682884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42900cfb-a45f-46a8-a8ec-d5bb5c200512",
        "cursor": {
          "ref": "8d1ae7ee-9aef-4812-b6c8-0f3e93f89f9b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1a6bb516-7b4a-4209-b186-27647aebe25c"
        },
        "item": {
          "id": "42900cfb-a45f-46a8-a8ec-d5bb5c200512",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "aff8853f-9c62-4fbb-a014-c44a55a64ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6734807b-3064-49bc-b89f-9be9f0728354",
        "cursor": {
          "ref": "eb71594c-2570-4504-9422-26ac523093c5",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9b6a607a-0b4c-4eb7-ad32-15dd4a36ea49"
        },
        "item": {
          "id": "6734807b-3064-49bc-b89f-9be9f0728354",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2d846908-8474-46d9-96d2-c194179f9a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6acabcd-e17f-448f-bb1a-c6d90beced1a",
        "cursor": {
          "ref": "09a6567f-2e81-4ac2-84aa-a6dc13f5d6b3",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4d1abd6a-f9eb-4e6e-9fee-657b0e9f1965"
        },
        "item": {
          "id": "b6acabcd-e17f-448f-bb1a-c6d90beced1a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2691eb50-56df-43a9-88f7-f920e8d777fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed7ff5d-4578-4306-8c50-d6140d81fec8",
        "cursor": {
          "ref": "3d67fda7-48ee-45ef-9ac2-720ecf20bc90",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8311eb61-5c07-4d95-9517-a76416f70109"
        },
        "item": {
          "id": "aed7ff5d-4578-4306-8c50-d6140d81fec8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "61e14182-500d-474c-b6dd-6cc48c8bc5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f93c0e-896b-4d77-b10b-f9b74695373f",
        "cursor": {
          "ref": "36608c89-0240-4218-8877-ed93cfb82bfa",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "38140c93-515a-4b47-9fae-4f7ee2add02e"
        },
        "item": {
          "id": "d9f93c0e-896b-4d77-b10b-f9b74695373f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a3d7076b-85b4-4b21-879b-f0bbc9cc8c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a24dc4-f3a1-488d-93d4-0f4bdad78610",
        "cursor": {
          "ref": "6044b05d-0df0-434e-8814-befabfbfef8b",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "99a5366d-d743-4a83-a797-4f6a38756137"
        },
        "item": {
          "id": "a2a24dc4-f3a1-488d-93d4-0f4bdad78610",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c5469e09-4f89-45ed-a49a-5c78db4a32bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721fae55-5381-4a2e-862a-6bf168d4f388",
        "cursor": {
          "ref": "48b0da1d-8447-4baf-959c-440ef10d3fa1",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1f4c1cba-792b-402d-8fba-1463d4157d8a"
        },
        "item": {
          "id": "721fae55-5381-4a2e-862a-6bf168d4f388",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "670d1898-4bbd-4fa0-8983-5a83f99b9c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf70f6c-df50-4828-a6b1-684807bb3e8c",
        "cursor": {
          "ref": "9866791a-9f49-43e3-ac80-fcaa13aa0927",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "91a61851-90ca-4eab-aa5e-6702a2e07975"
        },
        "item": {
          "id": "fbf70f6c-df50-4828-a6b1-684807bb3e8c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7671bb0b-9cf9-410e-91d6-331443064955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1329,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab1c043-2468-41f8-9347-6dee2469a5e5",
        "cursor": {
          "ref": "defe3148-05b3-4872-891c-571bd8b98dc1",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5ad9edae-f062-46a7-a8f3-fbf8ac7e4334"
        },
        "item": {
          "id": "dab1c043-2468-41f8-9347-6dee2469a5e5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "59611057-9b46-4fee-b4bb-6a550daaec9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2157,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4e178a-92b9-4e72-bc54-2d5c44b09de0",
        "cursor": {
          "ref": "01975f90-192f-4255-a13d-fa9312d992c5",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7a28a660-77bf-4a28-97c1-8eacf85222f1"
        },
        "item": {
          "id": "4e4e178a-92b9-4e72-bc54-2d5c44b09de0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3b43fbca-1014-4292-8320-8c48fe136cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1927,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147ad23a-e8e3-4a83-9705-e55be4370cd6",
        "cursor": {
          "ref": "467e931e-a4da-4b01-9745-a887c1d87a58",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4a10cd77-6be3-457d-aa0d-dbf354950ddb"
        },
        "item": {
          "id": "147ad23a-e8e3-4a83-9705-e55be4370cd6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c770e13e-89aa-4bff-88fd-35d4eba25aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2102,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b8f7b3-7963-4f3f-ab3e-7e065cdf906b",
        "cursor": {
          "ref": "402aa8a3-fdeb-46b6-86b9-8f0649274091",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f4922b2e-3832-4deb-902b-aa8ee2a56b9d"
        },
        "item": {
          "id": "58b8f7b3-7963-4f3f-ab3e-7e065cdf906b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4f2c78ed-a158-42a2-b0a6-635650d096c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2490,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ed8937-1e49-4a75-927e-cb2cc467399e",
        "cursor": {
          "ref": "9931434e-b568-46aa-99fd-1d120f136b13",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7778e47b-d125-4213-996c-751475fc3260"
        },
        "item": {
          "id": "b0ed8937-1e49-4a75-927e-cb2cc467399e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2c6b4098-b337-4fa1-9e1b-d1c376b9f568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2066,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b9bbc2-0d67-4a06-a972-c82632874fcc",
        "cursor": {
          "ref": "b5ef3d8f-6b66-4e4c-9456-c266269c3d1f",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2063c3ae-b678-42e8-b761-366f7137be6b"
        },
        "item": {
          "id": "92b9bbc2-0d67-4a06-a972-c82632874fcc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "80035a58-c517-4c2f-a316-c15944238b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1451,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0839686-4317-457d-bf11-4e661793ddd5",
        "cursor": {
          "ref": "4aeb5de6-0e5a-4f16-a578-68954cce0074",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fab18256-0793-4d3e-9f94-72c7664c3a95"
        },
        "item": {
          "id": "c0839686-4317-457d-bf11-4e661793ddd5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "84ea806a-1e6b-4c12-b281-9248d214387d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1124,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e105d7-b416-436f-bbe7-20a339341c03",
        "cursor": {
          "ref": "58cf215e-d390-4320-a8e0-48920a3c7af2",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3ae4c25c-ec34-476e-85ab-e5136dcd1476"
        },
        "item": {
          "id": "d4e105d7-b416-436f-bbe7-20a339341c03",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "440554e5-e571-498a-ad98-ee1c34d842bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc0b23b-3d8d-47eb-a133-805c6518cd87",
        "cursor": {
          "ref": "eb998098-acfb-491d-a18b-a49c95259f65",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8c469bdc-009a-4c95-88f3-6b79058eb258"
        },
        "item": {
          "id": "6bc0b23b-3d8d-47eb-a133-805c6518cd87",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "527f353c-d326-444f-b29c-85d69e4cb945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375b7ada-a02c-4c92-85f4-44560f77b0e7",
        "cursor": {
          "ref": "5dcbc863-d3eb-4a65-9d21-2aad77c3a9d3",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8f5bafa4-8541-43c9-92bc-d82e7495ead3"
        },
        "item": {
          "id": "375b7ada-a02c-4c92-85f4-44560f77b0e7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "64366370-c696-442d-89f4-0e17eec6b5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829a8312-7d1f-43b6-a374-3ddea97f0272",
        "cursor": {
          "ref": "3b16c05d-ec82-4519-ae60-8d914bc4f389",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "afb62ab3-56f8-4fff-94e8-77ae80803235"
        },
        "item": {
          "id": "829a8312-7d1f-43b6-a374-3ddea97f0272",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "901bb87a-e7d3-49af-a7ea-18bac049c99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05184be-66bf-4df4-92c1-3b46c9152054",
        "cursor": {
          "ref": "f6492d7a-d2bf-4f78-b3e8-794379d1e551",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "72a9b320-023e-40a7-a7c1-78fd397433cd"
        },
        "item": {
          "id": "e05184be-66bf-4df4-92c1-3b46c9152054",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5851a166-0301-44af-9c9b-37f91dd61b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c41e011-45f0-4bf3-9d54-dcb2d86a2d2e",
        "cursor": {
          "ref": "55eb0ea8-71b6-4292-ab25-648e3c919835",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ad590029-1aa4-4c24-bf9e-42ed795a25ef"
        },
        "item": {
          "id": "0c41e011-45f0-4bf3-9d54-dcb2d86a2d2e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "af60b87f-96cd-4bb3-af6d-330503949687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89f3432-db0c-4013-bfc5-2cb84a73f4ff",
        "cursor": {
          "ref": "bd55ceb9-6dd9-4b05-88fd-d2f30430d39a",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a4d5d3b5-5aa3-4492-998d-bb1e57bf61c0"
        },
        "item": {
          "id": "b89f3432-db0c-4013-bfc5-2cb84a73f4ff",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b101571b-66dc-4f09-a066-1e1c2d0dd88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f38d80c-7b09-421c-a71d-ed968a01f1a6",
        "cursor": {
          "ref": "49941916-d1fd-478b-98ba-41cfb134a08e",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1af0138f-4b49-4f3a-8c82-32f3c90fd33a"
        },
        "item": {
          "id": "7f38d80c-7b09-421c-a71d-ed968a01f1a6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3117ba1f-b565-49cd-a716-4d206ec88f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac03ed0-de49-48a2-bda1-cfe5449ae626",
        "cursor": {
          "ref": "268666fa-523a-4a3e-995f-8e4d35f3d72e",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "afe1fa00-bd51-48c1-af40-f8efec3b339e"
        },
        "item": {
          "id": "2ac03ed0-de49-48a2-bda1-cfe5449ae626",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1cfecca2-891a-41e7-8b29-e17b925ffd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9ea0c5-c796-4356-ad8f-a002077b12a7",
        "cursor": {
          "ref": "2b27fb45-f5e3-4aa9-b830-ff19734221fb",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "407e5d79-bf7a-4cd5-8828-043bbb5bd91b"
        },
        "item": {
          "id": "cf9ea0c5-c796-4356-ad8f-a002077b12a7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "412b5abb-348e-4d59-b1f7-ec0920aff7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0dd764-6407-4d87-beb3-087cd4232161",
        "cursor": {
          "ref": "d37ae8f6-b1ee-4731-8373-43a74183b4ad",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1a4de218-eb7f-4389-a733-10ebeb95eabe"
        },
        "item": {
          "id": "7e0dd764-6407-4d87-beb3-087cd4232161",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "73ea072e-d3ed-46ef-83b1-6fca996b11e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000189aa-e1fe-405b-bac7-756035aa3e57",
        "cursor": {
          "ref": "c2d0140d-0665-42d1-93c8-f375be7cf683",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c34cde88-8483-4bf8-8de5-1d98d1509935"
        },
        "item": {
          "id": "000189aa-e1fe-405b-bac7-756035aa3e57",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "71f8130a-8856-4c5a-996a-449b2f67c5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ea9da2-ffd9-479e-a5b6-8cc3ab891e1e",
        "cursor": {
          "ref": "8f6cc373-8857-4e47-8c3e-49842ed14644",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "317c07f7-1bef-498b-8f51-45e0128d441f"
        },
        "item": {
          "id": "d4ea9da2-ffd9-479e-a5b6-8cc3ab891e1e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d8b0c8d2-b1da-446d-ac99-6183bc663b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d7ec00-641d-480f-8078-c9a7dbdd5816",
        "cursor": {
          "ref": "5e20c536-58f7-49af-88b0-7d54b2db4ba6",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "81a63c47-4174-4e7a-84ff-3d70663e2b8c"
        },
        "item": {
          "id": "f9d7ec00-641d-480f-8078-c9a7dbdd5816",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c336f46c-7450-4082-8474-27bde63b502b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09714a3-fb15-4ebf-9c2a-3f3be2ae68f1",
        "cursor": {
          "ref": "e09a1e45-7bbe-4b7a-ad10-ac477731e539",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4bb60f5b-57cb-4ffc-8e43-6e201e3cb18d"
        },
        "item": {
          "id": "b09714a3-fb15-4ebf-9c2a-3f3be2ae68f1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4faba98d-cc89-4b9e-b4ae-3f77690013d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b26960e-f8da-4188-8f38-507680ab3149",
        "cursor": {
          "ref": "c33cafea-d1c7-47c2-8081-229972e5f69c",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "57805cdb-075f-49eb-bcdb-af89839c693e"
        },
        "item": {
          "id": "5b26960e-f8da-4188-8f38-507680ab3149",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "51c43487-cba2-4c4b-b332-b069aacfd509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451885cb-1ba7-435a-8224-fbeb5fbbba7c",
        "cursor": {
          "ref": "f1236ece-c36d-42a4-ab3c-32c2697d7be6",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "990f094c-776c-43a8-8fa5-fa6e0c117120"
        },
        "item": {
          "id": "451885cb-1ba7-435a-8224-fbeb5fbbba7c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5e6cea92-6551-4643-944f-8f50bfdeb92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fff9f9b-7379-4e3a-9de5-822c6b879e5c",
        "cursor": {
          "ref": "c1cb2c74-2961-4a14-bb08-cdcefc706dab",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2d8519f7-543f-4430-8e55-a916f6391735"
        },
        "item": {
          "id": "0fff9f9b-7379-4e3a-9de5-822c6b879e5c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a72958d3-0182-42c3-8d70-78fac74ec5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de3e2d8-3187-4ec2-a121-7282074dd448",
        "cursor": {
          "ref": "28e36f19-e958-4903-9686-8639dc407177",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3481a590-60cd-4ce5-9fb5-d169e1742f46"
        },
        "item": {
          "id": "7de3e2d8-3187-4ec2-a121-7282074dd448",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5b2483cb-873e-4843-9285-65af6421b3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3af9e2-5ca2-4425-a428-8a658c6d0dbb",
        "cursor": {
          "ref": "4617f34b-2b59-4ea0-b18b-c6e2619d687d",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8fef8521-0487-4def-b1b6-ecb914443135"
        },
        "item": {
          "id": "7d3af9e2-5ca2-4425-a428-8a658c6d0dbb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "decedf88-2b34-4e9f-b5d6-7863b233c8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c54d11b-b7b3-4e67-8828-bca9c683bde2",
        "cursor": {
          "ref": "1eb5b3ef-7cf1-486e-83cb-97fefc5616ee",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7f6ac15e-76ba-48c5-b50a-4009badc6322"
        },
        "item": {
          "id": "1c54d11b-b7b3-4e67-8828-bca9c683bde2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "443a781b-11f4-4ded-8942-8d450ab07654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9ffb88-9bc7-4a69-a0c1-3f6ee4a53b60",
        "cursor": {
          "ref": "c4ec41f1-7e50-4a41-b654-2f32d638a989",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "906f355b-b34c-45cb-8bd1-b0905a867922"
        },
        "item": {
          "id": "af9ffb88-9bc7-4a69-a0c1-3f6ee4a53b60",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3392d9a8-ae9a-466c-b03c-40318007c638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f97516-46d2-4b97-9f22-5cc79b49aa01",
        "cursor": {
          "ref": "fc306c44-d956-4b89-8b6a-0f54ef4e43c3",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6b295b5c-472e-4e2d-b7b1-7d3f24beb5e8"
        },
        "item": {
          "id": "08f97516-46d2-4b97-9f22-5cc79b49aa01",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f655b86c-93e3-4cda-a120-ce3bf693dfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790e1cc0-f371-424a-9184-26447aff4f08",
        "cursor": {
          "ref": "819c2154-c6e6-4d6d-b8de-513f010917f0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "09acec3b-2dc1-450b-ac6e-045ac850b4bc"
        },
        "item": {
          "id": "790e1cc0-f371-424a-9184-26447aff4f08",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c3c1d5c4-6969-4f20-9e28-370a8be707c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b214da5c-5b63-4704-91d3-68e795811990",
        "cursor": {
          "ref": "970b49a7-e8c1-4ac0-81d0-a5e24dae54cb",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1fc0ce8c-1aa5-4704-9c97-0bc1a0a7d71f"
        },
        "item": {
          "id": "b214da5c-5b63-4704-91d3-68e795811990",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bb03a20f-d5b0-43cc-80b7-dc45ae16c7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0a5556-9b35-4da3-b274-4ef52783b395",
        "cursor": {
          "ref": "d18ff276-f2e4-4671-ad8a-663bc9b754fe",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e5b1308e-44c5-43c6-be53-7cfffa8a8093"
        },
        "item": {
          "id": "8a0a5556-9b35-4da3-b274-4ef52783b395",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6b10f619-9242-4c9c-aa03-9c86a5b49045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfd1418-d8be-456f-ab36-f26673a91f7a",
        "cursor": {
          "ref": "35d846e4-2ef4-478b-9acc-54b33e6393cb",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "977be392-c6c8-4c8f-ab3c-ad4a27c42b88"
        },
        "item": {
          "id": "9cfd1418-d8be-456f-ab36-f26673a91f7a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "34909617-76c0-4e0d-a669-560c5b8da769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1787fdbf-fef1-464c-b45b-6e4b2e0eeb57",
        "cursor": {
          "ref": "4dcf1653-100e-4e44-8536-574aab56335f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9d904771-1e36-4bf1-bc0e-536e6922e4f9"
        },
        "item": {
          "id": "1787fdbf-fef1-464c-b45b-6e4b2e0eeb57",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "99dc8b44-c2a4-4967-a07b-0a3554036fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de694af-02a6-4a42-b99a-892bcc26d375",
        "cursor": {
          "ref": "e1708813-031c-4051-98a0-fea0cf69637f",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bf3a95e9-486c-4d01-9dba-4b0fc6fc0a31"
        },
        "item": {
          "id": "4de694af-02a6-4a42-b99a-892bcc26d375",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "46e81936-7696-414c-abaf-29e7136081e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6461a6-98d2-4a43-82a9-89b4a53fdcf3",
        "cursor": {
          "ref": "7a304c4b-3e3b-4085-ae45-faabc3d238bf",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "82190270-04ca-4b72-954a-1996451e3661"
        },
        "item": {
          "id": "1f6461a6-98d2-4a43-82a9-89b4a53fdcf3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "15d2792d-8891-4011-a3af-541a5aae190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5ea076-4786-4e7f-83ea-41cc8066c835",
        "cursor": {
          "ref": "ae27c21b-27af-4921-9985-5c79bd3c950f",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "50ab81db-6d23-4d6a-8619-0779b0597e30"
        },
        "item": {
          "id": "3b5ea076-4786-4e7f-83ea-41cc8066c835",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7326c9a3-b2d1-475f-a472-0ac9699929db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aeb87f7-c991-487d-9f72-1eac0cef0705",
        "cursor": {
          "ref": "79d2abd9-ab9e-43fb-8a83-02aa1c3d06c6",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b5daab49-4525-4889-a7c7-11738738d1a2"
        },
        "item": {
          "id": "5aeb87f7-c991-487d-9f72-1eac0cef0705",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1878901a-b4cf-4ded-bb77-5fb084dfb841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad93b78a-4efb-49c4-a808-231fe660633b",
        "cursor": {
          "ref": "cd3fc63d-8f8e-48b1-b730-8e15c16c3d83",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "306bc67e-cb84-4420-89d5-e3ba04726566"
        },
        "item": {
          "id": "ad93b78a-4efb-49c4-a808-231fe660633b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "15ac02f4-85e9-4157-ab45-742612df16c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a83ffd6-30f3-4698-8b00-e6f82b060fbb",
        "cursor": {
          "ref": "4ad5e733-6374-40de-9065-692a3293e521",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "19810acc-4993-4558-b9e1-3af7f9711115"
        },
        "item": {
          "id": "6a83ffd6-30f3-4698-8b00-e6f82b060fbb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b4539825-5bdd-4d82-b77d-c4fb5ed345da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fa1068-4b24-4c35-9caa-179513dd96b8",
        "cursor": {
          "ref": "dfa15eb7-496e-482c-a95c-ed7fc85c17d3",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c0532d67-af6e-461b-9716-75dbfa57faab"
        },
        "item": {
          "id": "d0fa1068-4b24-4c35-9caa-179513dd96b8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9a9c3d0f-7b1c-40be-80bb-ba046dcedab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f209b6-ee0a-43a6-8ed5-be7bbf78d749",
        "cursor": {
          "ref": "7ddc081c-8fb3-461f-8baa-94ee9fb0f1cb",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "08bbdf8a-1629-470c-9eb7-30402b054ac2"
        },
        "item": {
          "id": "46f209b6-ee0a-43a6-8ed5-be7bbf78d749",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d8239f7a-4d52-4e7d-928d-dbd6a3a11f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5626f9f1-2f57-49f3-a9e2-54a8a05d6d74",
        "cursor": {
          "ref": "ddb0adb3-1b65-4abc-91eb-aa85dc90e027",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e8b5cd70-b93f-4d39-ae18-df5ae5af1c74"
        },
        "item": {
          "id": "5626f9f1-2f57-49f3-a9e2-54a8a05d6d74",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ee343d87-f63b-403c-930a-9cb053e6843c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e68343-2d26-4264-bda3-dfbe3c05aadc",
        "cursor": {
          "ref": "afefbc63-44cb-4d7c-995a-8e7c47cd046c",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f15074cf-7a3b-4b0b-bfd3-266102560fba"
        },
        "item": {
          "id": "34e68343-2d26-4264-bda3-dfbe3c05aadc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8563b076-791f-49b0-9b56-c302082e7e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f5fbf1-2077-4c93-91a9-6890c80e1abc",
        "cursor": {
          "ref": "604ce423-8431-4d9b-babc-18f395c5d7fc",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "648cc6eb-0137-440f-8273-469b8b178d27"
        },
        "item": {
          "id": "f8f5fbf1-2077-4c93-91a9-6890c80e1abc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "982afc67-75f7-40bd-ab3f-d0d7d5a14124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c508daa-bc1b-46aa-92f6-aa34215d5c5e",
        "cursor": {
          "ref": "7d4f8bec-4ef9-4c96-96c6-7a5b0173ac72",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e6e541fb-043d-43fc-8c02-77a256b67c80"
        },
        "item": {
          "id": "0c508daa-bc1b-46aa-92f6-aa34215d5c5e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0c0e0fee-0493-4f48-81b5-d12d76704f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236864ea-baf3-4aba-b8f7-cc2f4114a18f",
        "cursor": {
          "ref": "36607704-47c5-481e-a33d-29c1f49eedb5",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6488ab81-465f-4216-bd63-1c52162636e1"
        },
        "item": {
          "id": "236864ea-baf3-4aba-b8f7-cc2f4114a18f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4b0f02a7-bf22-44b0-af08-1033c09911ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfda1ed-0273-4e28-aa9c-84b0243ab94f",
        "cursor": {
          "ref": "4c8dcd07-b17f-4212-9e08-8b3869f5ecda",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "97ff2cd6-9c59-474a-befc-70b6b5445d5e"
        },
        "item": {
          "id": "4cfda1ed-0273-4e28-aa9c-84b0243ab94f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fbd685bb-1849-426a-9c15-316f42df60a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc7b6e0-53b5-42c2-95eb-80439c3589e7",
        "cursor": {
          "ref": "4e6fe3d7-fa74-4d86-aae8-a5a1f16683e8",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "42b9b2df-2308-4775-b150-ed3f53ff88cb"
        },
        "item": {
          "id": "cbc7b6e0-53b5-42c2-95eb-80439c3589e7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "804cc42a-0639-4a08-b048-7f68b462a75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cacded-bb3a-455b-a3df-f93624ad7610",
        "cursor": {
          "ref": "3e1df9f0-cd19-4d35-a247-d258fb9fe7fa",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "091eb29f-1238-43c8-ae92-f41eda32e4df"
        },
        "item": {
          "id": "33cacded-bb3a-455b-a3df-f93624ad7610",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1d92e08a-05ee-4a30-96db-945b36172e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ea3aba-b265-4301-b2da-437fcf01f638",
        "cursor": {
          "ref": "857058e1-6e1b-4f3c-90e9-a9afcd227770",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7e4b91a5-43fc-4ff6-9dfb-143de2a7b91f"
        },
        "item": {
          "id": "b0ea3aba-b265-4301-b2da-437fcf01f638",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2d6d674c-14bb-41bd-bd7c-aac7a17b3d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0937ba25-d933-469f-8cbc-738d84d60f68",
        "cursor": {
          "ref": "5be4f06d-8e2e-461f-8259-e2b9c2111f67",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a350c128-aab5-4b1e-a412-9781122d15d3"
        },
        "item": {
          "id": "0937ba25-d933-469f-8cbc-738d84d60f68",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "18243e1c-5654-4ece-b9d2-8e137e5b9b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c79a7a6-6c5b-4383-bd15-9469483311c9",
        "cursor": {
          "ref": "8239b08c-b446-414f-bc79-83bafa6bb271",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1c371fb9-4aaa-4ac8-b6f2-b04a89e7f28e"
        },
        "item": {
          "id": "3c79a7a6-6c5b-4383-bd15-9469483311c9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fc3d428e-55cb-4f35-9dbb-378e14fdb901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf9b2ed-1762-4cbe-8052-ca1ba6955cfd",
        "cursor": {
          "ref": "215bc1d7-64a1-4490-89fa-5be1181866b1",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bde02ce1-1f45-48f5-8b78-a3c1d61ad821"
        },
        "item": {
          "id": "2cf9b2ed-1762-4cbe-8052-ca1ba6955cfd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a495acd4-5d66-4ce5-a87f-e20007d811c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aae2105-a73c-48e9-8dd8-8a8c5364ec46",
        "cursor": {
          "ref": "d436c193-586e-450f-ac19-763b6319db62",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c0e0801b-7f08-4053-a051-ec35d8bab11c"
        },
        "item": {
          "id": "9aae2105-a73c-48e9-8dd8-8a8c5364ec46",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d252b741-b03b-41fb-81bb-2124b3a7fd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf8847e-515f-471f-bf5b-f2c81227521d",
        "cursor": {
          "ref": "bdb8d7b8-cdd0-482b-a951-620ab026176c",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "511412f2-bfca-4fe9-89eb-80a2b0453bc2"
        },
        "item": {
          "id": "5cf8847e-515f-471f-bf5b-f2c81227521d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8b5c164d-32c6-453a-bd37-4b59a81b2a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06014634-d57e-4ddb-be02-3c1623827199",
        "cursor": {
          "ref": "5a8d4efc-ff45-4c48-9aa5-767951b0fd21",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ecb5f5e1-b0b3-480c-81e5-e33457621722"
        },
        "item": {
          "id": "06014634-d57e-4ddb-be02-3c1623827199",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "36ab0ba6-96fa-4845-9ea5-9774bd824a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77cb42e-2504-4f57-afd0-d43657d64b2f",
        "cursor": {
          "ref": "c0a68f5d-faf1-4eaa-9a20-b168df670bb6",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7d400409-8dc9-4968-a49b-7f44f810c2c7"
        },
        "item": {
          "id": "c77cb42e-2504-4f57-afd0-d43657d64b2f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "71f28fbc-8aa1-4fe9-b166-f3fff6956045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80198fb-fe76-4350-91e8-da4b114f22a5",
        "cursor": {
          "ref": "36c25fda-208d-43da-92c8-151ba86d6fce",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9ceb8c66-d776-48af-9a7e-e9a9ca970302"
        },
        "item": {
          "id": "c80198fb-fe76-4350-91e8-da4b114f22a5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "71600e33-f927-4d36-9607-e18631e4d775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80938741-bf9b-4a07-ae0e-bd090369fb8f",
        "cursor": {
          "ref": "c3ae31f2-1691-497a-b38d-6ec06e031d3c",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9d57018e-bfdc-40ee-9f83-cea96855cb6b"
        },
        "item": {
          "id": "80938741-bf9b-4a07-ae0e-bd090369fb8f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b0806fe5-2163-4f7a-b5e3-646f052725a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fbfc41-a213-408f-a38e-371ac6657f47",
        "cursor": {
          "ref": "83da84ce-36e2-4a45-b431-5d411b6a18d3",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0b14eaea-0a8b-4df8-b2f3-1e3ccf7ce94b"
        },
        "item": {
          "id": "42fbfc41-a213-408f-a38e-371ac6657f47",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c327c8c0-44d8-4159-872b-8031a627fb8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b28d1e-9210-4ace-9fd7-7ea11d883773",
        "cursor": {
          "ref": "97fb60bc-ce49-4bd9-832d-943e66c8a530",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2fa2c788-6873-437d-b08c-e2113cb48647"
        },
        "item": {
          "id": "f5b28d1e-9210-4ace-9fd7-7ea11d883773",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "67fa568a-f4f9-4be5-a4e4-e5146b21198a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 375,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23847ab3-adeb-49a2-9b2e-7dd76451b182",
        "cursor": {
          "ref": "dd0bcd69-ed72-4219-8221-b32b5d5ee8c2",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "60ffeccf-1dcd-4bfc-8797-234cee174fad"
        },
        "item": {
          "id": "23847ab3-adeb-49a2-9b2e-7dd76451b182",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cb794098-d363-4617-9298-66d0ff50775a",
          "status": "OK",
          "code": 200,
          "responseTime": 475,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "528020ca-4af3-47db-9611-e6672a3adb67",
        "cursor": {
          "ref": "bd3fef08-daf7-4bca-92ac-c313b9acbc7c",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e17d1106-7041-4084-bae4-95cc34e44593"
        },
        "item": {
          "id": "528020ca-4af3-47db-9611-e6672a3adb67",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0e960029-955f-4ded-9858-80f2dbafbc9c",
          "status": "OK",
          "code": 200,
          "responseTime": 1658,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c8406c-8f79-4a1c-8921-50b28cfbde7a",
        "cursor": {
          "ref": "1d14a1cf-b916-4ff3-888b-3962719cded0",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e002021d-f779-470b-be29-e4c7fd4abd8c"
        },
        "item": {
          "id": "b9c8406c-8f79-4a1c-8921-50b28cfbde7a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "72802f36-9b5c-4188-817d-9dfbec7db1dd",
          "status": "OK",
          "code": 200,
          "responseTime": 1637,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc2f342-457a-48a6-abcd-74a1286da7c6",
        "cursor": {
          "ref": "f7078152-28fe-4337-867f-267e063444c3",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "502de400-febf-4637-a8d7-201954ca750b"
        },
        "item": {
          "id": "ecc2f342-457a-48a6-abcd-74a1286da7c6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cde54fd0-f2aa-4ec3-ba9b-b705ad9ba3ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc2f342-457a-48a6-abcd-74a1286da7c6",
        "cursor": {
          "ref": "f7078152-28fe-4337-867f-267e063444c3",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "502de400-febf-4637-a8d7-201954ca750b"
        },
        "item": {
          "id": "ecc2f342-457a-48a6-abcd-74a1286da7c6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cde54fd0-f2aa-4ec3-ba9b-b705ad9ba3ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc2f342-457a-48a6-abcd-74a1286da7c6",
        "cursor": {
          "ref": "f7078152-28fe-4337-867f-267e063444c3",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "502de400-febf-4637-a8d7-201954ca750b"
        },
        "item": {
          "id": "ecc2f342-457a-48a6-abcd-74a1286da7c6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cde54fd0-f2aa-4ec3-ba9b-b705ad9ba3ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f28f84-4724-41c7-8618-26dda6de03a5",
        "cursor": {
          "ref": "90ca0ecd-22a8-49f6-9abf-861b73917a97",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "23dc7e11-8a5d-47ca-ae07-c5e2a6ad9635"
        },
        "item": {
          "id": "55f28f84-4724-41c7-8618-26dda6de03a5",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "dc1837d3-4b22-4108-bc18-e569655b1447",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 412,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfce353-cb4e-4bb6-b0cd-c295249959be",
        "cursor": {
          "ref": "012ebfe8-1ef9-46b4-844a-71d878a2c5a3",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8595b40f-6d8d-44e0-b4da-e827db7afda4"
        },
        "item": {
          "id": "1bfce353-cb4e-4bb6-b0cd-c295249959be",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b56a8a1c-4c99-4287-8452-382ccf59bf03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfce353-cb4e-4bb6-b0cd-c295249959be",
        "cursor": {
          "ref": "012ebfe8-1ef9-46b4-844a-71d878a2c5a3",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8595b40f-6d8d-44e0-b4da-e827db7afda4"
        },
        "item": {
          "id": "1bfce353-cb4e-4bb6-b0cd-c295249959be",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b56a8a1c-4c99-4287-8452-382ccf59bf03",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef297cc-3785-429e-ae2c-3900ed201e45",
        "cursor": {
          "ref": "35b5f613-5bc2-4d75-9d36-d65314ce9233",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c993bbcc-cd1f-468b-8c48-3504e4a191f9"
        },
        "item": {
          "id": "0ef297cc-3785-429e-ae2c-3900ed201e45",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e5e9f23a-10e4-4fd0-9934-d6dea2dc4701",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 595,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acd8a95-95e0-4bde-942e-948d84bbf4f8",
        "cursor": {
          "ref": "cde1289d-3fbc-40c5-bb2c-368c9a435e06",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "59a772c9-79fa-45c4-abd2-86ab3eabb5eb"
        },
        "item": {
          "id": "4acd8a95-95e0-4bde-942e-948d84bbf4f8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "62e9ffd3-4364-44cb-ab44-bf6a4de20a6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acd8a95-95e0-4bde-942e-948d84bbf4f8",
        "cursor": {
          "ref": "cde1289d-3fbc-40c5-bb2c-368c9a435e06",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "59a772c9-79fa-45c4-abd2-86ab3eabb5eb"
        },
        "item": {
          "id": "4acd8a95-95e0-4bde-942e-948d84bbf4f8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "62e9ffd3-4364-44cb-ab44-bf6a4de20a6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeb3a64-1762-4381-be80-5f66693ac2db",
        "cursor": {
          "ref": "181f3400-0318-4bca-bd47-2ae143d44b7a",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "14f2232f-26ae-4a3e-8552-bf4616c87f54"
        },
        "item": {
          "id": "dfeb3a64-1762-4381-be80-5f66693ac2db",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "2d8c41e6-d9e3-4d9b-b0b2-3218c107d470",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 579,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}