{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "921c2051-163f-4098-b5f1-b6cb19b314a1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2b4fe83e-2669-477c-a126-6e24c98f2643",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38bb91a2-5faf-4544-b9a2-4e4c2a2b5f8e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c0b302c1-0ec8-436e-b8c0-c4ca570d77c7"
                }
              }
            ]
          },
          {
            "id": "0c246a9f-74b1-4d88-a098-5f122a77a7a7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "24e4e646-7e9b-47fb-b054-b491af966147",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1cf62ece-c1fd-4dc0-ae51-1d68ba08f2fb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9303a407-8591-4aa1-b7f9-bf8e1066427c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d7575d7a-53c1-4cc3-8f62-b715903da0d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d84bcf41-d3fb-4076-b52a-df72db5ccfac",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39bc4ff3-be72-46b8-821e-403eb9b798b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0efd0e0a-11d6-429a-948b-dbeb206a6209"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11d8b59f-fe9f-4775-a290-b9ff412da91b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d424ffef-c3b2-418e-8a7a-339ba8e4e5ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d66646aa-0cf9-4eda-ab43-7b48d88cf1d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a816d8e-7cfd-4ff0-bd2b-b1e4c82ecaa7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "543ab898-b7ae-4851-9e9a-50097824f9b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b44da7c9-cb1a-424e-a951-8a89d55a52db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca90ea9a-55db-43d3-8ecc-f547f30b0e3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c3e530d-23e7-4fe4-be9e-c297ef457417"
            }
          }
        ]
      },
      {
        "id": "c5aaa011-a271-4581-9b24-891de6d4d931",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8acb8b37-b39b-46d9-b044-b068ab175dc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b514f924-8f85-4050-b829-64f04bd42a1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a765d2db-de12-46ed-9cca-312f40186901",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0ee5c5-9887-4947-a33c-4c5dfd85f734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2604796-488b-4abe-928b-17ff3e1dc997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48fc137-1941-491c-8264-7d21ae057c51",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46a9fae-fd63-4189-8d17-8c9843d469b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db844d3e-11e1-4d6c-bb61-b30b41e4248d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec60b398-774b-41ea-9eaf-17032331ca0e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9838b6e1-c217-4ded-9344-e11144a0e346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad30712b-a735-4063-9ff3-7e7c52f8f3da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a9c2b1a0-9b97-4182-b079-eedd916eb37f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d62cd15-e149-41fe-a1b2-c35ba830834b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27d1f66-9f53-464b-ba15-2acebaf0ec4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dea9f081-9c41-4382-9067-e153cfc4a374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296cdfe7-65ab-4077-9db5-3fbfb3970450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26e2787-87ec-4dc8-8c9e-64eb78d121a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3368cb9b-89b5-4c4f-b301-abe0740000f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae0dc682-9209-4f46-b359-4233206ff969",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3d59e67-26aa-4eff-9982-ed1c339b9c12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "46b7176f-521a-4f6a-9838-f209457a2600"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ff4a36e-f053-4e51-ab94-d2095fcb13c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "eb700cb3-5dd4-4e24-bb91-912314f82b1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "889ec407-5c5c-49b7-8980-15f409bff7db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bc3a0b8-fb93-4dc3-9bf2-6a99d195236e"
            }
          }
        ]
      },
      {
        "id": "35120d91-6921-45b8-b301-cb5456673193",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3d1de166-7b07-450a-8ca3-ddf0de8a965b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "357ab2aa-91c8-4405-a99e-60df6fb5af51",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a4b8e81e-3647-4a59-8e68-a36a1e1b6c4d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c820836d-2118-4bef-9d56-d38b449edf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582aaa1a-b6ca-40f2-948b-6ad1e14ecf6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f624523-4850-432b-951d-175f986dc2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8769db1-50c8-4301-a80f-badd4ff5f7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2874282c-af59-4064-99aa-23152daa323e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498312c8-5e4a-4439-baf0-21aa7b1cbc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ac9851-6663-4652-a074-b1d5915d5eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92593754-911c-43f4-92e7-aab2a41f501c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cff21bc-5e27-484d-845b-d52d1a247a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347e2a38-84d5-4678-9d73-17251371aa4a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b966fd-f02b-4aa8-abc6-7c4ce9159065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385d82dc-ddf8-4875-97f8-a85377a9c949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5800f7-3af0-412b-8bbf-b0defe2d5d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0bac5b4-bda6-4962-98d0-006481413f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c883f1dd-9c99-496a-88b6-b244f51d87d4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8e9ae2-d884-4c56-b58f-b0de5a654ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb229ae1-89cf-4317-a143-c9e321b234c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff86e3a-35bf-4235-89a7-494c4664b1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b306196-780b-4441-a9d6-feefe70d1e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c67935-96f5-4787-9ad7-ba1d71388121",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d32e452-7890-43b1-9e85-2fe08fe11e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a62f4a-fb44-45d4-95d0-0074b7a29647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aac9dea-3c3b-4df9-b6f7-8d6032d70e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "964438fd-a94e-43eb-a4cf-ce2a02f1f0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a06b80a-cb09-4253-adb8-28b4cb4fb9dc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fd5afa-b8dc-4709-8330-ac04688612fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6828e7-9656-445f-b9f2-27b88f85bd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f2e80b-4e32-49d4-8c43-40eedfdc875b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8106d6f3-3e1d-4d27-a0c9-9af034090937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e8e536-4d94-46ff-b6cb-7c28c7fd519a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b786b7ad-a48c-42d9-a707-a44e82a77788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13892a9c-4693-4985-8368-c355ef1fa472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbb3307-6b30-4de3-84ec-c5add8d99e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c040b885-6843-4f68-997a-d1f17b5ffce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caedd8dd-33da-4958-84e0-34799e3d844f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9dd2cd-a30e-48ba-9517-a4c3bb23b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa070ba-fe3c-4b7d-bbdc-eafe0cbb8dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307ffd83-7d0a-4579-bd46-76fdd08144f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f4c7bcf-96fd-4f07-aa9d-dc17abf655b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fbee6a-056a-4db9-8bd8-cf1254575afc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d4c4f0-cda2-461a-aac3-06d451f84afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686f11d8-9b2d-42cc-9de1-410382354bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c4c2ef-06ae-4fff-b317-e14c0ca50c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2b923d6-0fa9-4a26-b54d-396c9ba15f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbee473-2f5e-401e-aaa9-87640bd4fbeb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946e8cb2-206d-48d2-b9ab-d6c22840dbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03620ad-0996-4782-8de9-20500dd09717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec73d1a9-5358-4e48-ac50-17f97065e51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95e7491e-fad0-47b8-ade2-af2b784d88b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e73887f-fdc3-4f08-a5c9-f88754572d25",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f316dec7-b9f9-4c97-8c76-bae66acf7801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031fa013-a942-43f0-9d25-86a2f729d95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d994b7d3-a923-4210-906a-7bd1a0826ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dd65dc4-7cc0-4b49-9b23-26532492a27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42a1669-6727-4f32-aa16-63c09f49f45d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3754c83c-764b-4336-a7dd-03ab530d9de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c98a5f-eaf2-4713-ac50-144672629658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01762e1-b846-4438-9f7f-8ca9500c92e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3675c767-b4e4-488b-8957-e2c227ea63fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a10a56-e94d-45a0-90ef-e7df78010fef",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e131841-f1f0-43d7-9884-9f462e6993e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b4cd05-fac2-4ff3-a07e-afde090af17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf735fc-4173-4e29-b321-0b91eb72567d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02fda054-6e60-4a0b-bf91-7af7898778d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87635d63-e076-4ddd-a20f-9516608e6067",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9dde4c-b088-42b2-9b66-2f89ee162504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a00c7d3-fd2e-4e80-aa4e-43119a986d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106fdf59-879b-4523-80b0-dbb58ae20da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f5f71cf-152d-48a8-bda3-425a8473b353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9039fbab-c1aa-47e9-88da-0641fa0c047d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe277c22-2a9a-41cd-bc41-708d09df37e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f1b231-7c02-4b3e-8069-1937be32216a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df04b96a-b86c-472a-ab1f-b3c1bb51c009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "add06441-81d2-463d-91ef-c5d7716399ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936745c3-6432-4486-b7d2-a1b8aa5b1704",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bcafec-5237-440a-b5c6-1b1d9cfc8ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8125b075-f6f2-4713-bf9e-a361b4c984c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458d1722-90a4-42ca-885d-dd56ea7d624e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21363982-abe6-4feb-a263-6c10598826f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013d68c9-72b3-40b4-97f4-82bb6ea820ab",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86aad04-c52a-4f4d-a95b-96f357d5728f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f3cb14-ce93-4182-b9cf-691519a3ffe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea77fec-e6d1-48e3-8ce3-65d193a0620e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2158f12f-3b89-4d76-a92e-6e60bcaf3e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3198c95-d29f-4bcb-9e04-03efeb228efd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eda455-e9a4-4c36-8dc4-557f6e23f1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e569013-dc20-4278-9219-69a7ea4e12a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536e14c2-1bb9-45a5-a08a-aad6e01f84c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "22425e37-bf20-4de2-8dfe-e87655b7151a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c843bba4-3051-4881-b06f-031e720f1958",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e85013a-045d-4472-bf3a-702d9499f942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ce3f20-55a6-4887-bc68-2f7baf2c9460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9132addf-6283-418e-80f0-f153ef785ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9845f0bd-d1f5-4bdc-8836-23a1010aa1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82bbe73-f676-4f37-97af-3a440411c468",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860498e6-9978-4246-a8be-328bbd41a94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a04351-466c-4e3a-92fd-3cb1bc4f904b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db365f3e-47cb-4a69-82b5-292371602a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "880f758b-4571-4c48-ac85-a552aee1d55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c638502e-9795-42e7-96c2-f057953b5e9e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf44368f-77dd-4732-b23d-6030dc3311d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d9e9c2-e42e-492b-b439-12fc4b0c564e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869f20e9-de71-4f13-a68a-056723e88f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "507370b8-5cdf-4319-b8d1-a5377ac469db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b9503e-bcef-4ef5-8136-307fadc041ee",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3963de2d-e6af-49d1-9d4a-67af5bf3ee60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2b647f-b6e9-4e3d-a78c-405d2fb5f14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220dcd8b-2c3c-4cc4-acde-b3787f6b0df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1652935-7b17-4bf2-90f6-40d924d4608a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb130a3-ab24-4914-83f1-9399f9ec9e1f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a06cac-116b-4bf6-886b-c0cd2e6e4979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bf5e49-2dea-4057-ad0b-2e43a90fc8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbb5699-07f4-4023-9a8e-5f0420873bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81f3fb1d-1ef2-42b4-93b8-b19ca3a28d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d27c072-86c4-48a3-9d14-bcc6bf0d2915",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1cb449-9fa6-4a37-8bb5-ad5a7dded324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e06e77c-8cca-4041-a4c5-0743d2fe781a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a705b04-38ff-4e2d-b8f9-f134b578617d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "218beac0-7419-4553-9256-be64a8b0934c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ff5d68-fa45-4b71-a6ff-43ef60b79551",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef24e6d6-33bf-4d58-9785-f625981c0456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881dba8b-6972-418d-a0d7-90896ea7d9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726aabbc-166d-4e51-8ccc-c597861184f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0e11dc-e0ce-4a49-b02c-3f20133547ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d07284f-1cac-401d-8fc4-66abdc9ec74e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ea8806-defc-44c9-b15d-fb45b1d5df96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a003d2-21c0-4bb8-9917-33e171645862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edec4bc-c7f5-447d-a419-d0fd18ed13e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac57d287-9002-46c1-9d10-eedabfcdf767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c150a5f-860a-4897-bf96-70dc7a4b2678",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bac4553-2b9e-4e24-854b-a31071c76007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf3eb8d-e56d-49ed-8cdc-4bee8eeb6725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa45843-8764-4a1e-9c18-c42877e12054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "735cf205-1a8a-4b1a-b710-c444a5efd3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea0c6bb-f656-4924-85c9-dc5ff2870064",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7465853-87ee-459c-84c2-3d079de75881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c82a8d2-1044-4465-b03c-830771c2d575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b852a2-02cc-44de-aeba-eec10c091810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c59e5db-a53c-4a78-a46b-d2d04d1a8225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e82e54-b210-4a15-8bb2-4266e845452a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b036e91-dc8e-4200-b8db-448ab3d9961f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c4bfc3-9332-4f2c-8da5-7663efd3c79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d968cb-530e-49c0-8929-b6e1f7f5a35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67133544-d07b-444a-8d6b-9eb052b82be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d810b825-a0ad-4b82-8e06-2b618e15c1ce",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb55496-5e5c-4e8a-8ca3-7ffa72eaf35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db90b20c-dd15-4002-9f8c-9e165f04dd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362ecbef-0866-48aa-b9cf-61174e90b4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0856fe6c-00df-4f16-bd0d-393372cba9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d50f22d-434c-4caf-9ae1-def6e8a78ead",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1d29ed-612d-4293-8a8a-a6640cee2d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c54aec-c01e-4f64-9caf-37bf57736020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba955e51-25da-4dfa-839b-3c175db653a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32aa421a-1f42-4d44-86bb-407fe9be1f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba15d55-055c-40f2-b4c2-0f892b2d4500",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6080fdd2-d6a5-492b-bc66-61eebae3b287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124c2301-0731-4de2-99e8-e93b0c96a1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4468642-7236-4684-83a2-5f47cadd8ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddbfc02-1e33-4d10-9352-a8b384f2f1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e98479b-a1c9-4002-828e-556618679fc4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568ff384-e040-43b0-bd0b-01fa35583d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee9ac71-8be7-40e1-a170-1841b954e13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5e4b76-fa51-49fd-aa90-b512171dbc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7872eb84-0655-4bfa-8945-62a248791d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f108c1-c567-4718-a030-3c8d5e509ef9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f7be57-ad40-480c-8e74-f95152996777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79465fbf-4356-4f7f-bbad-d50f84ca8214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccaef4d-91d8-4e43-a78c-e96d6ce6101f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e573698d-ff1b-4c71-8586-12bc83d5a187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062d7def-ddd6-47c5-8fcd-812c1689df7c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7587b4-df1e-47df-81f3-fe58735fede1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd88c0f2-0629-4c18-83f5-cb36acec36f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5103d65-255e-4798-84b5-ea52174e074e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "05f9f4dd-23f9-47d0-9f45-b4eaf78eb956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2cc888-b728-44ed-a506-8b88aaf24de7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5e1b52-5005-4456-8dba-7dc5007545d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d73bb8e7-d5e0-4f07-9636-f2a39408987a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbd8033-dedf-4794-8e1c-22bd6c476226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5aacab0-2be8-4d59-aa06-2d9efc1f0c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479e1e14-5d27-4bcc-8a5b-7d348613250d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fe539b-4737-47da-88b8-4ad01ad8388e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f626133-8b12-4406-a5ec-f704a041e535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2032864-361c-4309-aa84-46b644b5f119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40985104-6af3-41e8-88ea-788af4576179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f182e0c-127f-4be9-81f8-7eb6e3d731ae",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0961b158-195d-4c37-8cda-dcd8d8e91798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e08feec-c1f8-4707-a309-a25d8285589a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8041c0-6119-4dbe-80c2-f9a6248aa04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8480d65a-72cb-4f69-a833-146730433931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0b298c-7a2e-4dd8-9d4b-aa84a70eb908",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af08ab88-0874-45ee-8a01-10a7cdb57000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b565a2-81f1-47c4-a696-047f2f0da81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d52b4a-bf22-4a84-8818-46d717e7cd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e19f9ec6-4c3c-4821-ae0b-ac41860d8eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f21cd6-8ab4-4900-b2ee-6e9efc14fbbe",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e35c32f-6001-463c-8645-1d4c7d342933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9764d3-ff34-4ed4-b2c5-b56e5fabcaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fb6643-4a7d-42a1-94fb-b08bb54b9905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccf0281-0c1e-46a1-81c6-13ce3f061963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46ab3a4-50ed-477d-b155-4dc1c3034f08",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efcfaa0-b7ea-4811-bef1-30192fd131de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f26d0bd-472d-4923-ad53-5aa9284a54f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f7f835-8e53-4418-8d2c-be7f884e6f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "19abc89b-9b32-43e8-bbe5-452d5a8302e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451b0af1-7787-4575-8c86-6cebe6acb4de",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e05148-ce76-4240-9fb6-bfa55238fece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee85f9a6-16a4-46e7-8339-98d6bc81a865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265e764f-2b1a-45bf-a70f-a1ca3c827973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d462b371-a661-45a0-b55b-ca477d67e38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b86d8fc-868d-4ded-b26b-c4df11f85819",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8644a33-8caf-4f83-bf2b-148dfd3b3b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b0359a-4289-4b7b-84fd-85ef44e2e8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8906af3-16cf-4f8b-b390-d0d6de28143f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eabe48aa-651d-4ce9-999e-0fa059b51e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af732150-273a-4bf1-95cc-bc6ba178f9d9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59266f0f-3c18-41a9-ad58-14d80e8aeea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cad8e1-8a81-467c-b35a-d3b8b4f7d230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca502ab-520f-4ae0-b2c8-35d0519e30c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e53de3eb-fb00-4462-a75c-2b83ad4e707b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa71507-afc2-4915-bbb7-f3bdd93f4058",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a564e0e4-65d0-4e53-8410-2e89516f5923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4dbf39a-6817-4451-94df-a35fd96558c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a895831-7f44-4d6c-999c-c1bd114c6cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a91109dd-37f3-4aec-9952-b6d0d52f175f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9833f7-872f-48a1-b149-9b3893a7ad23",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b76324-4814-4641-afc8-fee50b640e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3ee6f4-dbdd-43e6-b69d-10b668f14ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed33804-8282-414b-b57e-fbff66223cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3926de-40ed-4262-8af2-78f134746c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0a6c93-a652-4626-8733-278c71aba8e3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5134aeeb-bf00-4b62-b50f-d93e44cabb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8515010f-5dde-43e2-9108-e3a2a34120f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee1ad9b-f760-4bcb-86a3-64577982d1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7913e032-e63d-4e4a-8054-0d32a38cf51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b2789e-4f07-4852-ad54-8aceb77b9837",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88d12e4-0a11-43cd-bdd4-e5f57cd5c554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fdc821-afea-4e0a-8ba2-6ba6ad202607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46616210-2df1-4e7e-89b1-72fe76fd76ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "757a771b-a69e-4ff6-a3d7-e9dc33e3b70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be972433-43d0-4dbf-b502-4c4a24a908c9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dc50fa-8d53-4dd0-a6bd-8ab3da95a2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb38445-b620-42c7-b1a0-0f9e0729d5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5757034a-3b34-4919-b682-43b2baf91e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aac62fe5-51c5-40d8-948b-1e553a146265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f420d81-d940-4909-81bc-a99fa4fa1c75",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f047e3f-9321-4ea7-8283-1939c1a81c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f833ca-8977-440a-8ff9-9cb2efc099cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4036a857-ccfe-4d0c-8fbb-b2a454904b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d37d449f-5ce3-46b8-b563-c6fb05f08ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed33656f-d690-4719-8592-a61db99d122a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b99d985-1fdd-4f98-b84f-736609f22461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9abf5b-104e-440b-9183-a6679c52cabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e3b17c-fcd9-40d8-8a56-bf8e4ad3ea8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f604338-43af-4b9c-9fca-461ae986d3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee77f061-7c15-4e5a-92b3-4a47775cbc63",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a378f725-fe81-4254-a99f-a40ff85a1543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc250fce-d2aa-4d50-8d99-3fbee2491a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d824ad-3b51-4023-b2ec-bdbe703825ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e402a251-8a48-4655-9000-689ec6bd3e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d33e5db-167b-482e-853f-15380a301547",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d32829-1f6e-4737-adf0-981b62f92c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d7391d-d434-49ad-80b0-e3f8ed46a794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1682086f-8c63-4bad-ae0a-731eb930b50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbe138f-2b60-4ba2-99b4-d29064dfdc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f1a726-eb24-4819-b8fd-002130e977f7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a99b5e-6ac8-4fe0-be15-a70acb134603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe9fb10-8add-42de-add5-e7d3745898a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7488b54-e6a1-472e-932b-f064a01316ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc161ada-b44e-4ee3-b096-f4efa6ec37b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb2dec1-c7f6-4c60-9db7-75d4919087ff",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7b11af-2a20-4392-9efa-0f4b021f9dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa96d3ca-462a-4a2e-8415-1ab74121e158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180188b3-1e19-4971-b0ed-0f3b9fd766a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2016f2dc-88cf-456a-8f6c-eddf2cff054b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d4bb8c-42cf-4370-9ec8-f2a3e9cea7bb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c9a0a4-afc5-4e31-8f48-a7696f0a946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6e1665-3924-48ed-a240-e6cc7900e7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bf17dd-dedd-4640-9900-8541e69db5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5be5b9-f096-4b3b-8a79-60d979338c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9c44d3-433b-412b-a46a-396708a55ae9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b72b0d-a223-49e1-b14a-982eac07d33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bb7cb1-1fe6-4041-9f91-082e31ee4f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acad024-a435-48d3-b9e2-c511277da1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e84e0c14-1451-4973-9999-93051976fb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b08cf36-2cf3-44d3-8b33-f2ca526043a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9468d4-c5ce-4cad-a116-e14063daec3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd19c48-7de1-4f1a-9482-e71016a3e6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b2aeaa-0b81-4c8d-8b82-67fbf019e9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0031607f-943e-461e-98d5-8a9fcdc1d997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fed14a-585d-45e1-8b8f-698324e91cee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a049573-c03c-4acd-9342-3fd384ae989b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9caa0f2-3556-4f1b-a837-48a423994793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0320a3b7-4461-4d16-80e7-ce5fc2a6212b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "557841ed-7703-4caf-aa5e-951a0fda4fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef7577b-e1af-4c73-ae66-a9ef65219cc2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681cb9f6-1f3b-4cb1-bce9-cf62ed38145d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45f7584-53f9-4a70-9d53-1a4975b1caaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfd0bd7-49af-467f-97ea-d0f3c5302c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0efd65f6-689c-48b1-a0d4-96f50a4a55cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8310b8ce-e7d7-4417-8b19-d20509c249f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4141c416-46f4-41c7-aa3d-4c1bfb67a574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e88098-4bf7-4642-a801-01a1496b5ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d9a061-b973-4632-a8fd-aa4b0594edd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "94a06918-8839-4fb0-88a2-bb8484858740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d1fe0d-9519-4a98-a139-f37678b0f6a8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81794d2b-b7b4-46d7-9e8a-1976099de2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d90602-34bb-4b4e-9a3e-7aa028319ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20447c65-6099-43b2-aeba-5b5f9e0f5ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb2e32b-5917-4eea-8d65-40654f6acefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cb88f5-8a09-499b-b6e6-46d89338328b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1b6cd5-d08a-4b8e-a846-67a82900b611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038af171-1c76-4195-9a4c-8be569f6594c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1aafc6b-5de4-409f-a259-09936277af28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b72543f-3afe-49c8-ad51-e25a0fdbdba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a59a60f-2982-443b-96c7-372c52c6cf50",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7393d46b-4936-4105-b7eb-c9f0dd6cced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a3e48b-9858-4ec7-a246-07869596a4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af02d31-f3cb-4995-ba6c-e4ddb1b7f68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2f672b-7ce1-43ff-9242-32d2270296f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1aafa3-aa92-488d-83e9-4dc43db26a4b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313194fd-f1a6-4931-8d54-ea2b48109295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d77b03e-8395-4a31-b1dc-33dda6e85b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2069875-419f-4c94-93b4-f2499a1ef65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f80f0c-3fa0-4a32-bc87-6706163a5176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d3b947-3a97-4a47-9f01-4b1c7fd8553b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de10371-5e78-49be-a7a4-491080da05d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213b2bc2-f52b-4f41-82ff-2910c56e408a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ede84a-36ff-4a00-9e1a-af9c38feede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7115df-fab8-476d-a866-b506f0697ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942e2b28-dee1-4a7f-85b3-40dd6fb383e1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed2be33-75e7-4d70-add6-460854578461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c39140-e61d-4abe-b964-11f9fc3fdb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4660754-d7ec-4007-98c5-70ac11f68665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a5bcf8-868a-4c7b-9936-13d3c778433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43cb395-e4d9-4216-a112-adb63fcaf99e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cc175c-4ca3-4df1-82d6-16b47b74b57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165b1876-adb3-47a6-9ec7-5bce9813da88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd46d9a-0581-4455-a9ff-e1a1f5f9830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9da7ce78-22a9-4d06-a2c2-c71cc48d1495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e082005-dc76-4c3b-ad25-a44500c7c05b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a485cd-1de8-406c-a7e6-45cea3ba796f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794963bd-5dd6-49aa-b5c6-4e0cc75ba53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914e0f55-8c3c-4a3b-b5ad-0fd2eaa150a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99c1925f-e8db-4068-b521-212784efeade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6b35c8-afd4-4874-83a5-7391080bc0cd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59921c2-8028-4710-9f37-6708bf739a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5650cb-9322-4f9a-8d80-39060ef8ed02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da50908e-1fc2-4056-9835-27fe0442aa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d002971d-952a-49ad-96a3-39a2a29a1209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5576584-f5bb-4bda-aad6-a5df205cade0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00297258-79a5-49e8-9bd0-7f62d51d932c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d128ac4-2a5c-4e61-9b89-af32010d62f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af57993-61ba-4087-a584-b597bc79db18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfd32f5-e936-440a-b88d-4fb1fda6ad9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7325e3c-209b-41d7-a867-6b27aa8920d9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa3c26d-9eec-4217-8716-80913040b169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed193a7-3941-4445-a0ed-9f26de69b735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e4369c-9789-4eed-9ef7-7238f5c93a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a125d6-03b5-46da-8438-01cb8c8ffe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d615ae4-c5ab-4dab-b4ea-25b9415efd1f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0348a5bd-68b4-4083-b690-45a56963aaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0f2324-274d-43e1-919b-4f5068396131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973f6711-42e9-46dc-8703-d2f7b9c99e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f173b0-7586-401b-a64d-4bd19c32cc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4646f8-d84c-4550-a6e7-2c7cdcbc3770",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33476dc5-b17d-4cff-b17e-0ae7a18e67f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f918ac-43fb-4657-9e8b-ef5b2410d71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd77e02-08f1-4ae0-a3e2-9ee4536cbb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76a2a5d3-8d4a-420a-8bb4-ce80df37682a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05754d52-dc1d-45ad-9e37-e172a0e471f0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b25f91d-a40b-4387-89c8-da4aa0d39af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59976c75-5b74-4b1a-8797-b144332bc4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add1c85a-036a-459e-9f71-7690ae110f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18579515-69cc-412b-acf6-9983ad7f558b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39d8d68-a19b-4505-9f36-29d486470cba",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12634fa-9f2d-457b-8518-a2283d676f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9317c938-baf7-4fd4-a83b-23ec326d0041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037f561b-91ee-46ed-a8c2-cb1d009009d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89c7537d-1853-4a65-bfda-6f241c055f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f80519-aa02-4f1e-b4ae-7548ad66b62c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67130f42-10f7-4c73-9228-4282ba34fc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1800f859-6fa2-4487-8daf-781e3164ac8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0109f270-c5fb-4a98-9b1c-05e035e1fbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb136a0-7749-48cc-998e-ad12dcb7af7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f027bed6-0ae9-433c-94db-8dee31fc4cfd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09df820-fa2f-4b42-81e0-96fa46b177ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f0fe3a-2fc1-4c39-800a-25b6c912e606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e4389b-3a01-4b4f-ac1d-43593258cdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "314c0dec-ca00-4fde-9dab-2fec6ce9ee72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51f27b1-a884-44d8-9fe7-fc8c43095830",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23866042-24a5-427a-91eb-61b9f92f6d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9557ec83-7d3e-4bed-93f1-17b0cec612e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950208ca-6352-4030-b8c7-e00725ee6b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93efa039-b0f0-4a93-a66f-08adb63685a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a3056e-574a-4f1b-83f1-e361312cb3dd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8eeb02a-fe51-4d49-bfff-8b3be85f1f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c745f206-92ec-46c9-a79c-34fa6bb1e506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff0cda1-7b64-44e8-ae91-fb4f25bc3b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55e16ff5-e9ee-4b1f-96ba-5a0af3ebec29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43b080b-2eb1-4962-801f-fac02ecbadff",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4860713b-f74e-4ba6-a4a0-5e48be5c3e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9be81e4-bea7-49f7-8a13-c34325c0d885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16e904e-4334-484d-a574-4ae2f3454b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b42d9c2-88ce-44b1-a13c-74144e2a54ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbc4643-1f40-4836-a73e-e17fd4ea4364",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84973754-b7ca-4e71-adea-9ff6bae42f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2795b13-7d4f-4ac6-bf8f-d40cc3acd872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0163e134-6348-4864-a978-3bf5824ccf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4633db64-7faa-49bf-a41c-87b24713f0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8cb9ce-bb05-475f-9027-75537db1a23d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39228f07-6608-4903-b556-b23d7ae4bcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f2938c-a122-4516-a27a-90668fa5e3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92ca5e2-b348-49d7-a48c-d712b1130867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c85ce89-29f8-4677-aeb4-958760f2c969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3064ce9c-3a3f-4105-b5cf-79b727681766",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6179ad5e-0fe3-4d9f-9ec6-8e3ded832e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb58079e-dbc3-49dd-8ce8-748b6ffc7285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c66079-a9cf-40e6-8c9b-fc2b07ee2899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d04213-4935-412f-8a8a-4eb63fb9ac0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0f92f1-1b32-4fae-aa9b-bbf7fb3e003b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6715836a-bf50-4c79-8c68-7393bc8f8cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c31e12-f929-4e0d-b764-74deedcc343e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f8a263-e2d1-4a14-bce7-9a52e4570f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb87c80-25f1-441f-8996-a4209f65394b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecc171b-49d3-49c3-affa-1a47c10f09b3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd85770-e8e5-4136-87fe-a714913e88f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d033c0-5445-449b-8cd5-6e2d710bee62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6240604-3f09-4212-9c79-140e069b53a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acba8b90-42db-4051-9cf8-c1e7f8c28c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4ca2b5-2081-4e9f-929c-764aed306c2b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4935c5a7-2233-47f8-9e57-4744f47c0f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4865dc13-1cc8-4a1f-81a9-18ae7b8e95ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851cb830-38b4-4d20-b254-6c0a13a1f270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "322a19f8-1d84-4005-ad73-f5399003b416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686f10a3-e1ff-49fe-8a89-5b71d82aec9d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df648398-d322-4dc0-b905-2790a47afff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f9c418-c7d4-4b76-b5cf-2eec41f0cfc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304065a9-5003-401d-bd9d-a42dfb087189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f1d4be-cf07-4840-9e70-5fd16eeb7be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a305765b-f1c9-4453-8f7a-5e5d933e5faa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d820656-410f-432a-8e2d-a7be4478d50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e774cdf4-077b-4eac-88b9-81fc60daf172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf49b15-2aa2-41c8-ba79-35c7184d7d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9445331a-6f9f-48bb-9d68-c8bc74e3dee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6307277b-c00e-4ff8-a66b-73f42fb1ade4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4346f39c-7183-42ba-aaf3-7e903df9e7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5974407c-27c1-4c32-896a-f2d0d2ef8f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb86b757-135f-4eb9-b9a1-38a69475e8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3281ee59-089d-4054-9a3e-bb8ce5e1e055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfdce77-87e8-4b18-a92a-e3050a9ebc04",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a423b7-7842-47b9-a0a7-34b655108d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a8d2a4-3b3e-46b5-828a-3ed5e8a8d079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4571e814-2da9-4848-a816-0b7bfedaf63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8763bf61-2424-4b30-9af3-cf9c881a7e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92023283-d6fb-4b48-b7cf-559a2a87f7fe",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bba036d-fb85-4810-828a-b681c96a4fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "11d1ec71-7061-425c-a9d8-4fbc40227a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975291e6-7613-411a-bac8-c2c976af7a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "51047824-167f-4cb1-9546-c6022fd98a9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b768ea0-cf5d-4b70-bf20-8363d7a6a32f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a5df74a-3586-4f09-8fc2-c2aedce8fb21",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc34604-a27e-4f42-a9fd-534e4ac021cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7578e99-74e1-4e83-a9fb-8419b9bdcea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af92f0e8-8609-42db-ae95-166dbe3e44ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b74d69e-835f-4a42-9de2-1bfc1cd0ee4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b8b0e2b-1b70-401c-a313-9dcebdb2f79d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cede84a6-dae4-48b9-87ed-ced18bc171aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "baaa8023-9d1d-4d1c-bffd-4744ddba6705",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49c5eab3-5c7b-40fa-bd01-48c877d726ab"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4cf780f-f4e4-40ba-a803-2b0daf4a1425",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ca74ac5-6c61-44e4-97b1-4402eef90dcd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "507a322c-1a8f-46ce-ae04-eca67173dcf1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b3d72f3-c1fc-475c-8ed5-c4de07676f04"
                }
              }
            ]
          },
          {
            "id": "2c49599a-db0e-4266-b1fa-58806cba98ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e8e600b-5289-4cf8-8fd0-ebed78d91ba3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ea10828f-a899-4b20-91aa-6636424fede3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa373ee5-b101-48f5-962c-a6d4021ac295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ce460d30-c5c9-4120-a79d-24015f72f8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbe40b9-bb57-4d84-804f-57f30dd1de93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3098605b-f377-4f49-956a-1ab3453ce0c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "529ff8e3-4f71-4412-8743-51060404535c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c2b482b-316c-40c6-9a64-6f2984483c1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5f95ae0-a92f-4701-8e76-6063725ffeb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "846c758a-7bbb-4e95-8ecd-3da9c8b59cc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4eb2b123-22b9-4f07-b1ad-657153f2de5c"
                    }
                  }
                ]
              },
              {
                "id": "a9786f6a-2fd6-437e-b98e-94148e3d1d4f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56acc764-6ca8-48af-ab3d-6855dd09ee69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65d8bce2-6c92-4ea0-849d-4a480068d496"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afb16a18-977e-48d5-b1d3-8234b746692a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8f41a99-443f-4f7b-9beb-8980ec1d5409"
                    }
                  }
                ]
              },
              {
                "id": "5c2a3d8d-9490-42fb-9a95-fa92fddc48d9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3af8a3e-e545-4509-8ae9-4afc32d114f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7dfd24f4-0654-4e78-8dee-d06096d53f5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "877b735a-4a21-4a2e-a0f1-fab8dca1f2c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c56dd474-84e4-40a9-94e7-383289f9b25c"
                    }
                  }
                ]
              },
              {
                "id": "1a086989-c43d-4908-9b55-b6c18681c0c5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd4c7293-b59a-4637-9ffa-0c3a8317aa9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae15f3a0-7a19-4673-a8b4-7360cc6d14a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5113252-8a27-4b5f-a330-b04087a0fcdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d635e34e-1155-4465-bb79-20e03855f401"
                    }
                  }
                ]
              },
              {
                "id": "4cb43e83-54fd-46bd-9c8e-4b7b846d9ff9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe69cb0d-64b4-472f-b15a-9c0c86c762c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c94065cf-d0d4-411e-bac3-99624f41feb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de9f567c-aec2-42fd-a58e-4a1fd5cd9a7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "88ec9674-7360-4e7b-9a9a-5f035c4fa814"
                    }
                  }
                ]
              },
              {
                "id": "2459cddd-af1a-4c30-9bf3-b0db546a2418",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ec831f6-8b84-4e3c-aa86-142dc218f992",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7be7e215-5c75-40d6-b0cf-88fe624067dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "255e11d1-b362-4cf0-ba1e-e851f2ee62db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "763f6349-eff9-4905-bb0a-c21e8ada9d65"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b5cb4c4-c3eb-4a36-b919-bffb6c1707fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0507efd9-f116-4f46-a930-20dff8436257"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "588ea809-f120-4bfc-bdb6-51b9475ba7d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f4245df-3ca9-4fb8-8773-787504debad1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd5269b2-a324-444f-9c6d-c334ab6e4a78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6155579a-0362-4bf3-9449-ea714b5ae847"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91194918-3a9f-4f50-8b1e-fe432294c986",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9efa52ea-5f57-4fbc-b74f-974d2032c4b5"
            }
          }
        ]
      },
      {
        "id": "a058177d-6f5e-468d-aba9-24bdcab687e9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d8b055bb-c189-425a-b7f1-1becf28454b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7c7c7cb-5c45-4ee6-b535-8db09f0a4bfb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eae9c669-bb4f-4676-b2c4-a849ce56799a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ca19d6-6d54-40e3-b37d-c4b8f15a803e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5a6e6f-e3a8-4f39-b629-bdc6c4977e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9f3a1d-0c50-4f24-9d7f-43b1f34e4fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1150b39b-7b07-4650-9506-cc67bebdfd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1a39f6-c3b5-410a-9ff1-bb301bad77a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdabac36-3075-41f9-a30d-44069b45ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a400da-2258-43e6-8cb2-7881388e1f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33800e7c-1c6d-45c2-91e5-0d04fe2a7423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b97443a1-caf6-4af7-9be4-4ca0bd6920ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033b4294-dba0-403b-9abb-ccc88510e301",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d194566a-9323-4952-9829-5c0c21238a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c11a068-080e-4474-a1ab-14e1c398762f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10063a6-ff17-454e-992a-d7025b6296b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a2854d-5731-4289-93eb-8153c6425ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eb7046-1bcd-4b47-b39e-81a803ffe4f5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7747c401-b911-4a56-b018-c974973be7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf5193b-a289-4bbf-9688-7dd159b61191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdefcfd2-5e0b-4989-8de6-00f0e0fbf721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b35abf-4df4-4e93-b2de-6669ba1f3e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d84b184-d18f-4275-b673-e01042c833ae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e6bd33-4f18-439b-ab52-02bf3ad73dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0ca1f9-bcc4-4190-9a00-aebfdf092af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6765104b-226d-4142-83a0-455c531a901c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89b6f1e1-2fe7-4f82-9d41-fe079a792829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904c9ccd-46ba-4c40-9020-66300f178992",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a297e87f-c390-425c-8c8a-a97a27499e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94cb8c0-4858-40df-b6ad-72ba6b7b91a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69f5361-2f00-4e93-b51f-680e0f6b93a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf85acc-1b89-4bcc-9114-51a7088233c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee467288-78c5-4bf2-ab4b-be6c66c4507e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942088f0-e6a6-4e82-8da1-06de205d5739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c45e27a-df6d-4f1d-8556-e1229a064683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f56f92-7793-42e7-9e66-7a7cdf268d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "79a92981-0638-468e-b692-eab48aeb658e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615b3b77-bf93-4e4a-bd2e-8da2cf9c065f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4703c9a1-2e90-46e7-abb8-4ecfb9571f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0580af6-5547-44e0-9dc1-e5041ddebbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfae9dc-f7fc-4413-9d40-9592387ce64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b96a05b-95d3-43fb-81f1-78d04985b3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4328358-137e-4c39-95d6-ea0ba2b88df0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c32af5-cd6a-4704-88b0-9d2641aa1e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d281a4e-fcbc-4744-81ed-4c933a6e7c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ca9402-5c91-4aa2-829a-10cb369ef7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3c9430-4d21-4e0c-a62f-da55217cd634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a5ee3f-4a21-4059-a529-df3b29c8444f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c985c28-0634-4443-b46c-5717f6aa691d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53c9a11-7083-47f8-a7b7-b4b1e4e33518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db7b322-3de2-4f65-a505-6345dd636f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62a0340a-d375-413e-88e4-6bf47cf0aad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1776dc-1db7-4747-b243-dc68297f4e85",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817cf7f7-1d47-4049-a6ae-e779f25b69a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72240140-43cc-4be6-917d-84ae9ef7afd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201e2b92-a150-473e-9428-f0d5489f8482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "83f1304e-3bd0-410b-a8d9-c0aa72b5ea20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5756be-9216-44c4-ba61-ffbe591d64b3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fc49f9-5062-4d9f-afaf-f9ddcd12ce7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4009f849-93be-42a1-bbdb-d37f8aef5bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73935d39-e4a6-4493-a6c3-6852c7b9ce00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9739693e-5fce-4e38-a7cf-4b02c497e812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906959de-d610-46f6-960c-f92d4eca025a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ceaaebb-5259-4430-a3cc-141bd99c787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91442d03-d8e8-49b8-86a8-079cfdd0b96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8925b58-f21d-4467-af8c-5de40f4c79f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe97c8a-565c-475d-a092-7aedc50c95be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d46b2a-558c-43a0-954a-fb0bbbe40687",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f271e2b1-e71f-404d-88ca-3a78558c3521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f083cb22-75a5-4694-a6e7-aed695806df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf6eda6-fb59-46da-9dfd-921dd55eb745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "441d7b6d-b6f6-447c-b0be-3de7eface2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bbbcfe-404a-465f-983e-017259747d2f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae89fee-2bf5-4a75-afd5-e60bcd034cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b72cd01-08d2-4178-b4ce-8ca55e1ec6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82abe0da-036d-4a41-80ce-3d6776c36855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae421c3f-8bda-49cc-9d44-ae4cc7b54dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22275056-5f19-4bbf-abb4-fc8b877dbc29",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e676e869-e7e7-4c60-8a8c-1651fe68ef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57d51c8-e674-4cc7-822b-cc4a7085fcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b15644-78cd-4295-95ab-87a01aa7c298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d22866c-360d-4355-a611-e5dd2e329e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20aac88b-44c6-450d-b073-97c5f4b5f763",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b142351b-ee67-4e53-a81d-1437525df07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0b1122-017c-43eb-bb8b-23dcc88bc5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632d9943-29cc-4357-a358-ead4b2fe7b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "182f74c0-4587-4fb1-b551-d2ceaf91b790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c999b6a-6f73-42aa-8d85-2a0d2a686cf4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea49075-9c3d-4575-a2b0-715785ac4e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd1f5af-50f5-4576-b2d4-28ff17f31539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0dea34-5136-4a4b-8557-7ef07f46b602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "055a9e4d-4312-4dec-aaa9-7758fa80842b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91e8cae-bd93-4b39-ab05-9341acf7b8f7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d921d703-5347-4fd4-b6cd-14689bd8a98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83002486-7558-4b68-9849-a93cdb393934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a309e6da-3288-4d27-b765-b6d7ad0bcf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b0bca1-5dda-41d7-987f-45d514a3d29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493c4779-c0ea-4753-b35c-8afe1d097c2d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb2b99e-dffd-413c-8a21-bdc2cbcc1e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61af1518-4f59-43d3-a13f-2a1ebcdad6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acf5375-5193-4ef9-94f6-5e2e8423db5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3339a8c4-f702-496e-967f-6ce50d277b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64122811-5f4a-41a0-afd4-12a1bd7dce53",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d23fef0-00ca-419a-9bf1-55c291fd224d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41302dc-510e-441e-b462-f839955d2a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69d4e44-0cff-4276-a330-8e15a05dcb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1733598-6a52-4965-a17c-8c40e7d24e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec74a15-86ed-4bf1-b918-25a8e11a1941",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716c617d-64dc-4155-b93a-485dc2c51d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0148e9-566e-47ac-9ae8-f06304a7a04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0374aa6d-0658-4b35-9ab8-55df1a58e279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c4a397-ce03-45bd-90ba-cffe24d639e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c745aae2-06bf-4631-8bcf-a6da893a20a0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb154bbe-de3c-47f7-898c-a9b309257ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff35586-5a92-4e06-bd32-67082c0e9543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0314fae-7368-4214-854e-466b9a9c6cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e30fed-8036-4719-a3f0-6279c682e5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a515f1b7-9e50-4b00-84cb-699bcad15203",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b17902-7340-45a5-b5b6-11c9066f22df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62c8fd2-6392-40b1-a927-a6b5c27d334e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e1b77f-940c-439e-b787-a84205f97f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7151fe23-8f97-4040-bdae-360547e8f782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4127ec15-0cb4-4056-9a23-1e66810554a0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323edc1f-2fff-4315-9eef-c1bcb2dab94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5121d817-b1d9-4ecf-8947-f8017854f437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cbd7c1-1909-4f3e-b695-f1bfeefcd90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "856bf106-1454-46ba-8676-a902a16135be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d46e37-ba09-42ac-bb76-f071fd2a3749",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34571df6-b6cf-4e18-8b36-f086a697c535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb06b33-d310-4844-abaa-1d24057dc2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf377ba-0723-40e7-909f-0ca8c05e43c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb7dc41-fefb-47e5-a426-267194dea253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bed1797-3d00-4375-9e19-4befab839ad2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fd83cc-85a9-4933-9b64-dcab6cdbc6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83ab2b5-c336-4892-aadd-a920f0c8db8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a96e26a-a8ad-474b-9756-b072d777a8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16b37842-d3b6-4dc1-8418-64e82a548c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5b1a0a-e2e9-4c4b-810b-10fe847aa851",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1516799c-d81a-46c9-aec3-1a8d22f81e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33870300-5ce4-46fd-9e8f-08f81412e9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffbf84e-53a8-4a03-a605-dd4ba5b1d72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad186eab-1cb2-4424-9c3d-d48d1d09aaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba3b0bb-2e1e-4a1a-9839-395203de2ad8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bb6276-2cb8-47af-883a-3e30e996e188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394693fe-31c0-41a3-8879-4518c33869ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1066b62d-5370-4791-a6b9-9eee435adbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "004fd9b4-ee98-454f-98f8-6fb2fec6ea4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071d0d62-0f3b-4657-91f9-7060e85f8735",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41c577a-c712-4de0-844f-edc033e2f630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c9a74b-4cde-4df6-afa9-a0950d6b1df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb92ab1-ca19-4048-9889-86f34435fa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "464cefa4-d81f-443f-9758-ba972af82f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda03b66-d929-49b0-871d-a6fd04e791e1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d77cac-c2dd-4f9c-9eab-a0a1405e66a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e14eb13-636a-4467-a831-d726aacbddab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31b1a3e-fcee-40d2-a1f4-8849c509d3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a14d302-0c06-425e-9b95-f61bb5937fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d89fa1-8093-486d-a6c8-1fef048e9815",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec2b4d5-145b-4c2e-902f-98eaa710aa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cfdb8e-1e0c-43ec-817e-e389aa0a603f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bd6d74-dbed-4e7e-b941-d7702440f7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b550b267-c20e-483e-87f5-7eeffd8bf1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255e9d36-ff5c-4c59-be81-7c72a0f5cc4e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568ef83a-feab-4599-a5ff-31bada09ccde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a0a3ec-8c22-4534-9025-bba6bfba13a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10db6468-f2e9-4058-bbfa-bc07e5e545b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01226bac-ddfe-4667-868e-fcc030583569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccfc360-b2b9-495a-b993-924b8502094a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31d26e5-96cd-4504-912d-c4e0dd4a6762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffad373d-04f3-4b9e-bb99-cd257358e886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdf468a-ef03-4175-bdbf-6aab4413a1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e90ce49-eff4-41dc-9248-f75a19e6ece9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a9ec89-ffc1-4650-b954-c2587637bf9a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1035934d-c9b7-44be-a561-edd24abe4460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ad67ae-3a59-4b2f-bddc-9a51e3b8e5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75f901f-705d-44fc-8fd8-7c4948059969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4eba0d-6c74-40e9-a14a-10f8089e9357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592a921e-3c95-44d4-8863-fb25c8b46bf9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b342b33-7a26-4198-b28e-96353d8c2a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ad2a0b-1165-42b1-b847-3eb3c9797ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093a83fb-afcb-4949-baea-f198eeda49da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea9baff-f75b-4756-b9a6-3fc9acd1b543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369ec023-a803-488f-a1ec-b6dc07e64424",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28653a1-e12b-497b-a0e2-a6f84830c2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b41b567-db21-4424-ade2-6609c6f7a389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf05b10-cc19-412e-8365-c4ce2d15ed0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f19469d-42f2-47ce-be47-01b571e3a78c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ed08906-316c-4d84-937d-fd8fd22d5da4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c7cd9e9-5ca8-4725-94e8-fcd8d1be1c3c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1983f801-cf94-42f1-a4c4-5d06b963af41",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9990b2e2-1401-4010-80e6-81ee27840522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c38399-ea00-4623-80a9-7d22280cb9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b89f59e-f8a5-4fab-9ef7-1a46614b5163"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f01a9a4-7a18-4d44-83dd-5ab37bbe3875",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dcb3c2c-3ecb-4c61-9eea-ae6f574da5a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea60ae06-c2ea-4207-9ebd-dd7b364ba3ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07dcf094-7335-4987-ae0d-456a9aee10e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d628f52-bb14-42ab-b114-55225658025b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d7676fc6-65c9-426b-93a6-8edec6a356c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ee667cd-be0e-4ddf-b6e0-9b40e8ba3188",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0813d246-51cd-498b-928d-f3d10cd5dbb9"
            }
          }
        ]
      },
      {
        "id": "058987d8-48f8-41d4-8126-811ba4539553",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5480859f-28f3-4ef4-a0ae-fd280c3794f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0145a45-4b48-4096-a590-8bb936c2f554",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "879f2d1a-762e-46e0-9cf8-838ad8be1619",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c11a21-b828-4aea-961a-1bcf37ba419e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dccbfe9-0280-42e8-8be1-60fc72622b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6f33e9-8ed7-4a3f-ad28-a0f5438be544",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1158fe45-705f-4d96-a753-9d945e574552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c996d8ae-41f1-436c-90ea-6d84bead5d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecaa032-083d-482c-94c7-a1b5da99bf17",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c8d37f-5a15-4eb2-b26c-9c3183eec632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd37a1c-884b-455f-80b8-951b78f1e252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8cf829-840c-4058-9a9b-1ae654eb1006",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a54018e-1c79-4b8a-8a29-d6e87886f5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47384ca3-a887-4d10-8410-0f5a5995a78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fb5d50-c262-4c30-b47a-201df08cda0b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973817cf-018f-4131-84ac-c9c911b49ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e85495-4ea5-431b-a291-f00c99fa0aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d813e07f-4e20-41ce-a995-d5404f87a2e5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a6e0cc-d135-4ce6-afba-7639025f1f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c590c31e-ac2d-4aad-b2e5-7a035f516b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d523b69b-cee9-43c2-bffa-74bee1511081",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fda7f82-0c52-4c31-845b-df454d567685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f81aa0a-701d-4e3a-9aa7-ddf5048c566f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87962ba8-7a8b-4e68-a6f5-acede3a31a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5913a76e-150d-4b03-a5d5-0aa7ba152a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b47a34d-fcf5-45eb-983b-643b80feefce",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a69a749-d3bb-46e6-981b-a4db0c86f94f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "054ab12c-ba4c-4cbe-b55b-e5a667ec75ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8e63e3-53b5-448d-89e8-b69cfae6f76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aaef333-1b0d-46f4-aaa7-2d82ee380dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe745b3-6f8d-4995-90eb-1ab2a0ab0e71",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d83d64-1c4d-424d-9696-15e9fee25198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a03cc79d-9ec3-49a2-901c-ec351d1892bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b454ac-83ec-44d7-8ee4-51937a48ff61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2e1977-6e7d-41db-baaf-8303bf07814e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db9193f-0962-4052-87a7-501c13d2bec7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8415b9e3-f003-4775-908c-f64f49864c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b3aeb6-3f67-4f3f-ad53-fb6001507a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68260ead-6db7-4d83-928b-49b5ef55e7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77232a1-353f-44d3-a46f-2909a65e9afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02643767-7cf8-4759-9098-209efd9a9ece",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53258478-7417-42cd-bd0d-a3f8319a0fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ace79f-392d-437a-b2ec-8ab85b13e499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c9aecf-fec6-4b21-a641-82370ac6c0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa68899-99ed-4660-abf8-a76282df72ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cb1a6d-bb7f-4341-8442-60c7d8b74a14",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e3227c-3519-46e1-8cbd-c0c8d8a5f437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2729b1ba-d0a7-47aa-b73d-acfbb99b50e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51b7491-3291-4078-b8a6-54ad210a9ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87876cb-4da7-4a69-b669-ad17d7ba26f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3e8f2f-c78f-4d19-bdf4-a039cc17eded",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9799fd95-1a25-407d-beba-ddc7cf73cd55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e36c806-bb5d-42be-af33-1a69babc7c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b593304-9030-429a-8555-7bf46a094cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a5f57d-1541-456f-9556-95c41983310d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac05dea-022c-43ba-b2f8-e64840447024",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786be886-b768-4fcd-b1ce-a45d571be9a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23dd79a-682c-4754-82fc-dfa00bc1e753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ebf588-d625-4e62-b629-aa9353b4f9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7787978-6534-4834-adcf-f7a4d6d55977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb9319c-3187-42b9-92d7-a9a06c4d63fd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85117442-332f-45f4-b3b8-02254376dda0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5447b7e9-b2bf-44af-81e9-88c58b9650a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e55c10-3190-4a9d-a75b-e6c759a11ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e37e74-57fd-4103-a7c6-c0789fa22575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71290c8a-3bac-40c8-92f6-f52c66337b60",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e6d312-3f75-4da3-bd0e-d9a0ae19a7bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e17173c-dacf-46ff-b643-308d331e97fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df0868a-55f5-4df0-b694-48cae021718b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442b2ae8-e867-495d-a53b-8f442e52302e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb868b-33f6-424e-b96c-7d14f83b9ff8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbd6613-64a0-4a87-a364-a801e6e8454c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c515e210-80bb-47d4-be09-dae05f9adaf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f26dc05-c3ae-4162-bbfb-3c01256cb494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e3e99d-e927-4046-a2ce-630a87627b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7b06f7-bfd0-49a9-ba6b-19c9c75732fd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba32319-88e8-492d-bee9-a73655d5784e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0e8420-9c41-486c-ae5c-450a613341c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b005e9b-b9fa-4ee4-b590-6a016b4032bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd391bb9-e01f-45fe-8d27-21a10f8889c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf99636-bd1d-40d8-958c-d93e245338f4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835668c2-610a-492d-bad3-f2a4b4fe35fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2b28b1-97fc-47aa-b644-bfef9d02babf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899876e7-3632-4f9e-8d60-43d9046a8e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb38cda-68a3-4cec-a5f9-9c8d723eb322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ed3fc0-fc80-448b-b621-911e0f1b7bbe",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f957e02-587e-42ea-9cbf-ba47c7eb95a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8eeaea1-bd58-4b79-bef0-4fa0a6eef636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7888e47-456f-4795-8dd3-8fff17201101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9515613-d8cb-4d20-b81c-9a259f1f0846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c473c8-9b6d-472d-8c67-878587979798",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed289313-1f2f-44b6-9afe-cf0c3d24fcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de0ff11-a5af-4473-a4eb-ca34b054359a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26043558-e6c0-4fb2-ade3-4aced59a3db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bd7e8e-768c-41c3-9e14-5331e0b02647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576ecda4-e6d6-4050-8e8f-a696e8e850e5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a178991-195d-4cd9-a045-3b65a56ec5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37064edd-a368-46ab-8f21-67b1575e956e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dc89bf-0aef-400e-9c38-51e821883a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abac42fb-0df2-4179-8803-f207bfe9cd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0bed10-e281-4225-b07b-e19508111649",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1625804b-15cd-4c02-b9dc-4cc22ab8b11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b02b9a-9a52-4b56-8b6e-03dc9998e6a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7bd862-4418-4f75-9b42-994d8a836fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7959148c-d24c-4bcc-bbf5-804fada0ed37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c563b19f-2eae-467c-9468-6b19bf3c0a36",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca6350f-2491-45f7-a3ea-91ee27429c62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e97f910-9df4-4bea-85fc-d8004e8e2a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e26f6b-4e6d-43bc-a12d-5a4b30a721c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb59aba-9b18-4af6-9759-7d1bd7300d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9df80ef-bf00-4b65-9bdc-c946e6d38bff",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a77ad6e-60dd-4aa5-b05c-9f9083efcf3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9e0e8f-71ba-4748-b8ad-07235edba78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14e7731-a5a9-481a-a9eb-a5948fb22730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b665ca2b-4b16-42d7-a237-5eecb97c5a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60516370-ac00-431a-a022-68eb63ed30de",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4922b73-76a8-4823-bb32-4bbcf2c58966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e73bbe6-dd5b-4bfd-b43d-e65485da9c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150ffbb6-4d20-445d-a39a-392b6e5a2fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac6c837-0e03-4187-be41-67f4437ae895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c73260-5c96-48c7-b205-426a52dd7cbe",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2c592c-9f52-470e-8750-1f719230f01b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b04dd3-b001-4412-a776-cd1a83ac8571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c707d7-54eb-4372-add3-1c00fc5df446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe2b906-c97e-43b3-ba38-c856770dd702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2767e91c-54b0-4868-aec6-38332e3ca22d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb0681d-d7e7-4833-84ce-a8bb50b4477a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef750087-fdba-4218-83a3-7386986bd1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0946d3-be07-469a-8926-66038e849770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1667904a-b615-476e-a2dd-016e289c326c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8baba7a-a49a-40c3-b9bc-ff07784a5f7a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b756230-db0c-4a96-8374-6e931c99ba15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64effb46-d733-4b1e-9d9a-13633f0f9383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "241d00fa-8bf4-42db-925f-8a4b207df342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5ca246-b152-48ba-8639-bdd28525ec59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd1ef03-fd35-4471-8dae-6b067f81287a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9614535b-950d-4eac-b229-29bd553232bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1806683b-275f-4c07-b7b6-1f109a643410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae10858-9344-4c43-b96b-c1905db7d3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf1c3b9-bd41-48f9-a084-818f6b9367f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8d681f-972a-4479-8ea0-1980730482a3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06544716-20f3-46d5-ba9f-c595abe57549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de641eb8-6219-4468-9681-16f10526db8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93810cfc-8738-4791-8df7-570c025404b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb503d1c-f204-409b-8b29-f2450a9d807b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5442e8c0-bf95-49cc-a121-56b833d85340",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3041e2-e9b5-48ea-ac28-dee664db043a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f1c0b3-b70c-4b19-b534-f4a656fd9431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ea2112-5dbe-4752-b363-43ef74f452f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb9009c-77b7-47e4-84e4-45e5e58f4f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9279298e-7c6b-4cd8-bba3-6361d057fd49",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432bd420-fc0e-4265-9e6c-0ae3b181d504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec5063e-4fff-46e6-892c-0e970f043334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb13743-429f-415c-a863-4fc5e5a88eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6885c1-5390-4596-827f-ec6f8e85d18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c806af-5b20-48eb-bf70-3ce52def5624",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59893979-72c5-47d5-9b8d-5e2043c8e2cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70cf3d47-1371-42a4-8b82-99f3376ebd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248c06a7-6f78-4601-9678-3788eb451feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523d30ee-a6c2-4931-b643-8b5664d800a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d4ccd4-abcb-4c10-b77b-7ba347a974f3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790825bc-2969-4500-8fba-7170a1abab3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba467354-3c93-490e-b04e-63e20594ccca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f6b23f-dff2-4a3c-be36-a1a52fd0d00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c9d8bc-e4e6-4bf1-9511-194d88068e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f185a3-fc8e-4a1e-9bc1-a9c44eccd656",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e526d5-c364-4fb6-90ca-325d52fb2e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290e4b81-1582-4294-b0cc-95508c82eb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1738dd7c-e4e6-486e-a72b-09dcf27eb42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105fa805-c78c-49af-b1f3-c816e5991264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fe0d61-69e6-4122-b0ba-121198181bd2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fba4f6-2260-4276-82ee-17a50dfd740d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c2d76b-1d0d-4cd7-a874-a28a5ff8802e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11db1f4-6a78-4206-a220-280c76aded9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2f2024-7f5b-40d6-a7fe-2524e765f948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b05167c-c2e5-408c-b3e3-96297dee32a1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b465e870-69b8-46b6-9dc6-84127146008c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864e4406-296e-4af4-a8b9-80d4d9a0acd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202b29f7-521a-4964-88a2-2cb0901cc815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1780b9-b7a2-46f8-8825-fb16821267ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e0046e-5c1a-4502-97cd-944f40a2f311",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac6c013-70f8-4c97-8d21-2f910044d015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e1f5e3-5256-44e4-a1f5-418d973ab6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad5dbdb-ead6-4e49-9395-b4d5235a1758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee67647-b380-476c-ba6f-6252d068d9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7fd84e-595b-48d6-8442-703558b06b5e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b18374-913e-4e88-99de-707ab818bbb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc698533-323e-4f3b-8136-6edff0134c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de7095b-8661-442d-a140-5f121aefe683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcba46c-166b-4cfd-aa1d-a2e864e2bf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6c2486-a8d6-43a6-8bbc-4a91f34226e4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b13395e-5941-4d50-af43-52bdb8e2b128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b020b13-7117-41c5-abc4-0d44c5b719ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d135ff-0d89-48ac-8d2c-7641e9796ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e212f7f0-7e5d-4c83-9e7c-c9d43590c0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ab0d44-ee08-4819-8891-5ae2eb9003c4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882ce98d-cd65-4ff2-a241-734b7dcb132f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66d49d7-9d2f-446e-8be3-7fe0014bb514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0c0943-786a-48ce-8e00-f5c30d18719a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea1fc1e-1833-44a3-b5fc-cc189f1ca9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8114b586-d55a-4170-88eb-55ee0e6e2129",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30db6d43-0801-4606-ad7a-55bcd49cee66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2935a970-1c1b-4e8c-85e9-b94a2724d6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91946718-b48f-4819-881c-275ed552df0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a445360-e436-47bd-988c-4d8468953736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2b4c0a-78d3-4576-8772-4b058de62af3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649c2659-7c08-4215-a113-f028430793c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d515795a-0f93-43ef-9b71-41087f380622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e05fbb7-f51a-4ed4-9a47-adaefdf2d399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e08000-1c19-4d13-9abf-06979e7f7179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79dff19-ffcb-4990-9f77-ac6f2cc02e4d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d73b05-d2d0-4adc-a9ed-40ec01eec54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453eeebf-e785-4276-962a-42d5d8ef8501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a02bf1-59ba-499d-bf04-cd6e40189f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bee065e-8b79-4bef-a7cc-1bfabc4132f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf78d63-88e8-4a69-acaf-149c7b8037cf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd23eb17-7095-4c4d-90a2-867a128ca99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09329e81-49c7-4526-9004-f3930f217746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f3870d-7de2-4cde-9314-87a0fbfa8bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8107d3c-78bc-4cd4-8c1a-1a7612d3ffba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6046bc87-bfab-43ff-a7a7-886f6d84b398",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba16dff-bc50-45dd-acac-a217b3aae133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f695ca9-ce51-4b37-8e24-686bca69effd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e30e6d-c9d9-4ab5-8bad-f79b670d934e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40354416-58fe-4c26-8afc-af560b7ea399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15c4c57-f4f9-413e-99dc-712bf14e6cff",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d385004-bd5a-4064-a947-c768478598f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b7e520-49fe-46b8-9f58-c52cee3073e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448268e3-16d3-43c9-942d-42d9555e5602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e9ae27-df24-423d-a9c8-772ef465f47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dabd22-b090-4f83-a6bc-07dff3bbbca4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbdd3a5-6a57-40fd-a74a-05366d5a4cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c22f0ef-8a0a-4d9e-be5a-04968db72cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f958eb4d-04ad-48f8-8af5-b268d7445425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04f3375-b5c4-4331-bb38-f532fab94ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fcf41e-855d-4b64-8923-1d63c498bc43",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1849c1a-cbe8-4f20-8645-0ace6ec5f325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f334ac54-b749-49a9-9ce9-a56e9aa5e047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e381d6ac-42af-44cd-88c2-716fdb58d978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef32a98-26ed-4adc-ad04-6f54954e3fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1396897-2cd3-4f07-8a02-2df950615456",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c103cf24-d570-4e3c-a781-d2c71752e813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a83919-3493-45f3-8062-c5717462b661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9dcc6d-5843-4da5-a5f6-e5f61e4e15d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e50802-29e7-413c-9ca3-4beb642fcc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f31129e-625f-4ea9-9f02-1e2885fe67cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda6668c-f8b8-4706-b5a3-1acd44f7de16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8c31cb-40aa-4fe5-9c49-7cb71efe3969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1772e52f-6f99-4d62-8b45-4472402282cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a329afe-dc5c-41e6-9ee8-52213b87ef3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360e5d27-c55f-4573-a10e-02a9ce5bf5e6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952efaac-54fb-4cd8-9c51-0b8ec9ea959e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9ed306-8433-4cfa-952e-99cac561afd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fd1c22-e244-45ae-a22d-cc84dbc6f99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac65543-f6ae-4418-8078-5c53aba6d9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2f10e6-e973-4f87-9437-8982b95c26b1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea4c136-cb70-464a-b9f2-05c0fcb0c2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835d4e21-65ec-40c4-a4bb-40d74d696035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fccd7b9-dd97-40c6-a9ec-8b6a26b27374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f1400f-f6ac-458b-85c3-925e33eb18f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a4342f-3ab2-40ec-bc45-3be693192c62",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77afea50-5297-47ef-86a6-c72f20685adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2353dec7-9ec0-4b54-99c8-d5c0c771f53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09e874f-fc43-4105-914a-2e5c56c22c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77310780-2bbe-4877-95f0-d8d681bcbf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93227c91-66d2-4472-a1ec-a90bcc6ad1b7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d516e5-79e0-48d4-bd85-c25c37401125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdd36c1-006a-47e7-8389-7ac8cebe05c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bb2d46-e21b-44ee-b0aa-bd5655013d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9176752d-b7f9-4def-a8f2-51146a716522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27613ee-69d0-4d07-a5ce-f8a7375e7653",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b174a6-9fcc-4e44-9ce6-0c2d3524bd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe35bc4-2d6c-437f-9ad8-6d3ca7b8101b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2f346c-c160-41e6-a4ce-824b3ab220f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afed94a-dfaa-4e2d-a3d5-10f766b7b3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ae9980-5905-40a9-83f0-09d7ff024667",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099526c0-8d72-48ca-b37c-15fef4a08ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3882088f-3bc0-46d7-843c-a702076fbaa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f709bcf3-2bb6-4fe4-8e70-8dc99c60a504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c546fb-60f4-48de-999a-f7962066aafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a01b199-ce04-4b90-8743-4059dc1093e8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9656a0-cadf-4076-8935-53d5149307b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fba517-8032-4aec-912c-ac2b070f1a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7576810c-caee-4552-8b87-b996a1f0110f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebf356f-1e82-4660-8eab-16fc99a8f9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3def41e9-1b17-4181-b48a-613c5df183af",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cd9af6-500c-4168-8269-c0942a1237b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35593337-7b88-4384-ba12-ea58fff62749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c78b22-2c94-49d3-86df-98b9dd2ed9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cb8d13-817a-4aa5-9373-d2e609ea2f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42b83ca-2bce-426d-9481-455ddf215906",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4981e32a-46a0-4313-bcde-2a35fde3ab46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef4a778-fe32-4ccc-9bbb-90b5db39575b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bda3552-1053-44ca-ab97-c2906ca9a3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f09cd60-80af-40f4-9a24-3636f894346d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ed0db8-baba-46f4-8f65-c469d46de134",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc2233f-d6c7-4a5f-acce-4792cf2b55ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08747909-718e-4402-b0e2-5cb14dfeecfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bda9a8c-4697-438c-8dd2-7661ce7ee977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3253c74a-b5bd-442e-b4fd-12b3aa8bf120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4ddc55-f0fc-43e1-8179-474385b31242",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2957cf3f-0827-4a0d-8a36-9f9cafa8194a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd6037a-aada-46a3-b919-2d1df970b4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1336d7-d5c4-4354-9b2d-916a69abd417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972fc141-dde6-42dd-834c-8677f52af8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae1efbd-d087-4808-9998-f16aefa80a07",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98eebd0c-c008-4924-aa80-676c80518ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd4891e-3a4c-427e-a07c-8a632a7bd984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4270a1-8b2e-45b8-a6a7-23ddef585e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca570ba-299d-4823-8b24-9008ae6fd0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1163d30c-8977-423f-872f-7d54d89d1f49",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978ba0fb-9930-44e3-af5c-d60e046b2f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b24552-825f-4c95-9daf-d537941389a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626c1672-804e-4155-a427-fcba709a36f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e40501-b6be-48e9-ad9a-dcbdad8cf7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ba1e09-f6a9-4ea5-83c8-61f540dae224",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614ec9fe-8498-4674-ba41-f1685a89388f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51afbb49-3822-4a39-84c6-422bdd4ee786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec5107f-98e0-4c43-bb90-682fc693ce0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce95487-4993-4e21-ad3b-5fe1945ea280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7989a1-356d-48e4-8fa7-0259aec10477",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923e1981-9ab4-4322-9575-0646693cd847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d2f52c-474f-4313-a30f-276a77329726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23d1e3e-b617-4e1e-975a-5972ef49542e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645b76ed-0334-44ad-a958-ecd41d05779d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3e64f3-eafc-4533-8300-a0827773baab",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956fadcc-007c-4da3-ac08-f078112c0886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5334352-00d2-4a84-a5f8-abc89e9de9ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319d1ec0-c1e4-4234-b9ee-fde508814d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ea418b-903f-4642-9161-8a97435e0a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e9a29c-9e3f-4194-b42a-ab71291c0075",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a07b616-0308-4d74-9ab0-11f4b8e8b9b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eeff682-8714-4576-a413-2e156fca3f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8272372a-5adb-41f9-8d07-651dfd19e5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b08855d-a551-4c30-b943-7ef4081b0179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3946e738-943d-40e9-a091-d9317065a1af",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8642f4-745d-440e-919c-4ce609f710dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be21954-c912-4091-a8f0-017ac6561793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a95ef4-eb81-473d-88be-353a353cc088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a2de64-7e54-477e-92b9-e3183dd48d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15030ffc-7040-4a71-bc59-ab517ce9e41f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05f9552-04ea-4b54-bd56-fa5bc3885d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32260dd-3de9-47da-901a-9cb19c362e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268983da-738a-44e7-9281-6b02549963b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd947e34-22ad-46e1-93af-d0bd3745503f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba14aab7-8616-4f5b-8698-7de58f2f2e5c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d475a5d3-b69f-4a88-93a3-76e111c4d4b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e0a905-4d57-4105-9c72-21a9ea17880c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c303730-0bff-401a-b095-59f508f1b342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f6bc6a-7475-4bc5-97ab-475e714138be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b1ae25-6407-4c15-b890-ac9fe96f23a1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd334b2-fb64-403c-aeab-c8eb4d44b273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57121b2-0c17-4151-b1a4-dfa7aab839d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2448e67-81f2-4efa-a509-6b1079ccfc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c16f52f-1d3b-4853-a4f6-ef79204c47fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9d9b79-30e1-4419-9955-784109ffadd4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfdb67f-dc26-41b9-81d9-ba2e605239e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148155c3-823c-4f8c-a4e3-94c5c9c62340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f37d85-038c-40eb-816e-f239a4c5f19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d94a55-c0de-4021-9dda-ddb533992b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3e8bbd-ad82-4ddc-9e66-e851f8da1e8c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62646019-ed0b-4d20-8e4e-431411bbaa95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a88572ca-b8db-4f59-a559-607c462978f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06eebc2-a58b-4a00-b5ed-17b2f496fe6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7035a661-df46-4f36-bc76-8c2225d3ed5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e82c5d-21e8-49b0-87c5-0edcb959c894",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a180f786-0b3a-46b1-885a-9693bcc8c2bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c64c3ef0-d89e-4eff-a041-e2e7923f75cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6a6533-4ece-447a-af6c-c24e791ccd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bb55c3d-d015-4515-adc4-41b42616b43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2981887d-c370-40ba-82c3-cbd80c101e23",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaaf81f-0bfb-4edc-93ab-794e05f64829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17036999-aa47-4136-8d88-a0ac016f8b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91420c5b-6cbe-4cc3-ade2-ecb07757faa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9551de-834b-4bcb-a0ea-9baae99a55a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a826d8-f806-46c2-a06d-fd35b6b9536d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3210f4d1-6186-4d86-ad1e-f2ef1dd7bdd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c1125fd-d5a6-482f-aca4-39bb1ce2aa34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a9f95a-a576-4265-aa53-ce67155cb788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a16de9d-c8a9-488f-8bf4-0026d672692c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff1c18f-4033-4a33-afb1-e47d499c3372",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8220e5d-3389-4405-8cac-e151f901e1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4629fc82-813b-48a3-a662-6901f96cf083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d899b01d-2113-4b2a-8263-7e91e21d26df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed4ddf8-181d-4cb4-a2b4-957dfafc9e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee63aa3-635c-4efb-b485-da6c2f484271",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9304fb91-682b-4f96-aff5-a4c1d11c42fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "235107be-0d9c-4c40-b631-2e0923d80e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809dadb3-a9cc-4c01-a5b5-d0e910aadc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b4f6f2-da14-4410-857e-83c31f2addce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bef481-a893-404b-8d9e-c35b16c80786",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848ab7cf-ae46-449a-98bb-668632274ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "103002b9-11f0-4cb4-934d-9059fd281efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f56235d-d76b-4ea9-8859-c038c8f402b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3affe7dd-b1d8-447b-a791-0618be36bc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b06472-3db2-4f11-a19a-46b198732b7d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2145cf29-085a-4da0-9106-fae23e9434dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c116ab3b-aef5-4811-b82b-5b73bfb306c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531c99b8-7c62-46ac-9454-c84604913553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34718cf-12cf-4d6e-8740-4bfec600a8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6098c867-5acb-4a92-8b9b-ec3366d2f863",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c277b3-9ad7-460a-8939-cc571680a8be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd18d7c2-5f6c-4265-8891-23bb82be8b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b26e30-9e98-476b-bcb1-70001458caa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456e3548-d748-454f-9b2e-3d2e56f8e2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faa250a-c8ce-47bf-a917-5509af830329",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8387674a-470e-4793-9d89-2ffa502c20ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0af311-e8da-4a38-a947-d8ffcc1c7573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f52ac4-6bd7-4c92-aa39-d6cdd006bcde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364d18d4-eb8e-47a1-9dab-82e74ca95b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9b8859-396e-4f1f-9008-5d3790c02bef",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596bf289-8e72-4901-87cb-20db06a839bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ea5da0-6771-4077-8e95-6377c3b73c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93aca4be-b0c0-49bd-a509-b59454fabe7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520c44c9-26c6-4666-8092-998048a683a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9edd8df-5736-4272-9723-0956871400e7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b67574-ff4a-46f6-80f6-ac1dbb711dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb9e438c-349b-4e38-b9e9-0ff085bd8260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeff615c-ee5e-4976-84ae-27715b08d700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254d82a2-ca54-4fb7-8542-136634dcc519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d343edf9-c7c4-4a01-bd34-4dce202e77a3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0df6a08-bb68-4318-917e-5d83d61b5ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c035ff5-f8d1-4d99-8b4e-e253bd869932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427b3cbe-91aa-4c79-96f0-dc8d77b4eb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b908a7e-5813-49b7-8b16-4a6db6ae9e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75758ff0-b243-4b30-96db-704f6d412933",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf4f275-fb6a-4ece-97bb-313a9391dfea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42ae2752-2fba-4177-bd51-08300261f24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf434abc-f865-41f9-ba89-bcb7980cd5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d831d11-d28d-4ab4-89b6-16db711a9cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f161bcd-b983-45e4-bbf7-08f976b6e69a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e771ca9-e479-406e-8f60-9deb69b667c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c3a44e-f0e1-4cfe-ab1e-a2f7e64bfa6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6a3289-db7e-4989-bf2d-ff49373dd5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86df873-bc68-49a6-a8ad-beaee0efdca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1214fb3a-1059-44b7-9d06-6b7550902435",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f898e672-3fbe-4f76-9ae4-3c8c22ce7496",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673ae269-e406-4f67-942a-e5f44671c10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664aee96-4b29-4db2-9c18-73153fc666fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd5c706-c438-4b58-852b-3a2126e54659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33604259-97a9-461d-9a6b-dc4a0ff2d704",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8920c3b3-a9e7-4d36-b010-70f0e6f8b5e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b221cae-5bb4-492e-b71b-02b28396fa96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30b1956-7db7-4b72-add7-3a5844270608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8dcffdd-0d9a-4a0c-b59f-bb404ea9ae5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56e7da8-6c46-4b1a-bf59-360011312da9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337c1bfe-cd06-4f1d-bcce-eb4c8c9e89f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e61c9dd5-5359-4096-a88f-5173b9e33eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c43a60-28da-45c4-abe8-e34df6c7847e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5454be93-1026-4cec-b7cc-992baf91643c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f385e206-c07e-4f05-9d19-1209678cc4ae",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ffc7a8-86c6-4c8b-83e1-6a61e232571b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45f52334-1143-46b4-b6f9-1c94caa86c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95206804-c95a-4c96-9084-f9a600b90ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df433284-1744-47c5-87ee-ccb4991d6297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdcb6e8-b859-426d-a822-7ba9bba8af46",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86f7d00-0859-4c68-b09c-08c3987b6315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e4960b6-6b36-48a4-9c71-7b8c8f8ac1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cba83b-10cb-4223-b41f-49c33e52f1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a887788b-eb2b-4484-a17a-28d8966722aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165ffad8-5d9b-49e2-b101-a7120e9faf92",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ad4ffb-53a0-4468-9a33-03d36c678e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aed2174-6488-405d-ad52-ead999e2cb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d473539d-e8c6-49c3-8134-981356afd79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757554a1-1ad1-40ed-95c1-c990a9033c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b89acb4-7b2f-495b-b878-2c1625f7941d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee047c00-f9cb-4338-8a2b-eb3e1c67a1b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b9b7aa-d397-4f9e-95fa-b55ce8fafd73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ebc45c-6d68-4cc6-abf5-a48b2304ef3a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2d0982-39fc-42b9-ae84-6df0de6513dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f03efe9-9df3-4157-819b-c3fc50ec83e8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59db6cd0-9b5b-4132-8f51-a83825f5a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d19f7c2-c7bd-4515-af13-1a146ac96c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316af292-a9a6-4c36-8d60-f09ff7d0b227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b48843e-8817-4ae2-ae40-7d2b4a757de6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "271a8604-9cbe-4b25-9cd6-465d27ff7aa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "569b3c84-7257-4189-8ced-ed991599bfe0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f194d630-0d7f-4dbd-9aea-c305dce9fc18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10b28fc0-566f-46d1-bdb2-e8464775360b"
                    }
                  }
                ]
              },
              {
                "id": "1faf308a-4b89-4342-abe1-5e07c2164754",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19c0c370-4a6d-44d6-a74c-a4d26f6e2711",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb896559-c7ab-4163-baa7-dceb217833d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "122ea769-fb09-419b-a96a-fb2d9ac3926d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9824e9-eb64-4d69-b23c-9478146b88c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "196a024f-d2ca-45ae-8e00-3c8f4c9a2a88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c58da92c-beef-4192-82c1-c6e44633ff5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79e7c489-2e48-4af3-9936-403ddc3dc24d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08359a49-c53b-4ea8-b564-3b57d6c4218e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56f054d4-3297-4c2a-9fd7-7b27ced7f4ac"
                    }
                  }
                ]
              },
              {
                "id": "5df65768-499d-4e5d-8748-251617c6189f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4313f3e3-7ea4-48e3-a982-8592cf0a6f3e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08a4bb2-2200-4c02-bb08-c05bb5b6ac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d5a0163b-c41d-455f-9801-aa7cd4b7f623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0c0720-2297-4470-b99e-391b2d34583a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023c224e-3b8c-41a2-adb0-ed7b6970adfc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c210725d-f4ef-4f7d-8c8a-7095c409b2c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c6930e3f-a06f-4813-afb0-855a56e48484",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cf4ec63-04ac-418b-8c4c-a997bea44af3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3fe91dc6-c702-4034-9a11-b4fcb64b3854"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c76702f-48b6-48f3-9c3e-64edf3d6f1ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "272cc4c1-e56d-4764-8ec7-f1ff4d61b85a"
                    }
                  }
                ]
              },
              {
                "id": "730d309a-3c03-40af-93fd-2e202f19c656",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21ec73aa-e0d0-4789-9e95-092aace7be87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fb8b5084-1d12-4a92-b87a-d29b3535eca4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d556fe93-29e2-49c0-96b3-3638db0f4d9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5586ef8a-e7fb-42ff-979a-019950f1936a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbcc117a-ac1c-46ef-8d01-e68c4c1d2397",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "46f13ce7-28be-429a-b9fb-97174dcc0aad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76fac16c-e072-43ca-84bb-a76fd4067867",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b41701b8-8743-4d60-afe0-87db090243e5"
            }
          }
        ]
      },
      {
        "id": "f670b8fa-c883-4f1c-8223-9fde684ef606",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e7fdc98c-b774-4518-b9a4-1452b1343ef8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bec245c3-5937-4bbd-ad9f-98700041f80b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1f4a7fd-e5f0-496d-b97e-942cdffdea68",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34022188-3355-4f32-be68-900ff5c4f8d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3c00252b-1963-43ba-8c4a-177a354c348c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d45a12b-5dc9-4519-a621-3c8ebe3292a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "389a0e67-87d5-4e19-aeee-20fc6c5b4491"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d48d3b3f-32dc-4c72-9a09-e4d6b07d8215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "410c7592-0747-4cc5-8c2a-35da5dda863d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4be6598c-1eb6-4aff-b5f2-8bcfd4a7fe86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c9c45b7-264b-49fa-b24f-d00a6f174ac5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3b2779e-913f-4464-8b05-a7d4d2a35278",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9e3ca34e-7f5f-443a-94f1-0c401169b40f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "591662ef-55a9-4163-8de2-7911157e171c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e411d5f8-4404-4fa9-8644-5548f88d7681"
            }
          }
        ]
      },
      {
        "id": "f393515d-53b4-4066-9819-0882e6b2129f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bd3e2ea0-48cb-443e-96ca-5c4846340c39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bb60c1b-1fce-4ac9-b523-a3d8937f10a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f1be76f-1770-4589-b9a8-3548dd1eb731",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c81685-e596-4653-a3c5-a2bf18e2a71a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2fd29a1-0082-47ea-881d-5a4e9649ea54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12393f6d-9a06-4844-b2be-b2c7778de8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1b22ff5-46a7-48a7-ac31-a57fb2c65e2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "561a3628-2f21-48a9-9baa-16fe86abe7f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b5d6655-6983-48bd-b7dd-c8044a035495"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12a01bc1-599c-4d6b-8586-d95b0736aaf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b2dcd0e-14b7-4ace-95e6-bc6041f3374d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4c4c574-2449-4da1-96bc-1ea15705da5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57e40b2d-6922-4891-ada1-b417470d7e40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d64ce61b-ab2b-47aa-b13d-4eacfd2847b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81bc79c2-661a-4bce-b859-6e9ef4fd4eb5"
            }
          }
        ]
      },
      {
        "id": "a4acae12-53d1-45d8-9ee4-1ff794698e60",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e9f31503-c741-4ada-b580-f254fe73cc41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd9b07a9-61a9-4079-b8c3-6ddf98f6b285",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1588829d-6940-4c74-8ab9-08559b2695b7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4fdf30-5bf6-4b27-9f2b-12a9d1504c22",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2c5ed62-81fe-43bb-b987-5f32f0f817c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3697fbec-58b8-4c4f-a279-56337b6f0998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de912cd2-63b9-4c31-b92a-febb03d4f33c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75a4de34-e247-4ffc-afce-abc2587b8377",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbb984fb-d089-41c8-910f-5ca2ae70fc2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1a01a29-90ec-4f28-a90d-309d44f99aee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75f7096b-c948-42e2-9978-74b810f65b7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16f0d731-4a71-44e5-b53d-479c13b2d3cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "19693e4d-e0a4-40a3-b694-08ff33bb6ae9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ad35915-0222-47f2-a2bb-0b042ef31bfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d43141c-6552-4a96-ae20-9f784566962a"
            }
          }
        ]
      },
      {
        "id": "cc93c81e-f9cd-4cce-9ae5-7b5ca6152f07",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "710c7c3f-f808-4a03-80ad-16d8cd16c3ab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4552dcef-adfc-4981-b558-c68ddb382d38",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6e6136c7-a7c5-426b-83e8-d8b6e287570d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "012a78d9-b95c-4bed-8103-8c37c02befa9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbcdcd32-2756-46a5-a980-7a327bbe9bf4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 147.75000000000006,
      "responseMin": 5,
      "responseMax": 8850,
      "responseSd": 652.6955318839479,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712709282303,
      "completed": 1712709327681
    },
    "executions": [
      {
        "id": "2b4fe83e-2669-477c-a126-6e24c98f2643",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eaa3490a-c65d-4639-b36d-c0148eacbadf",
          "httpRequestId": "361450a7-c2bb-46d9-96b0-c83079370293"
        },
        "item": {
          "id": "2b4fe83e-2669-477c-a126-6e24c98f2643",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "807a262b-0ff0-4e83-84b0-557622936379",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "0c246a9f-74b1-4d88-a098-5f122a77a7a7",
        "cursor": {
          "ref": "3efb3206-d664-4b2a-b69e-7f9c4a74137b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8812daf1-45d4-4d0f-a7d7-6d23d8ae13b0"
        },
        "item": {
          "id": "0c246a9f-74b1-4d88-a098-5f122a77a7a7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d6c6eac0-a5cf-4e1a-929a-6365716d7ece",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "d84bcf41-d3fb-4076-b52a-df72db5ccfac",
        "cursor": {
          "ref": "7d52f165-a346-46ee-ad79-67fc8d6d18dc",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "541d36c8-8da1-4524-8449-4e93db186e6e"
        },
        "item": {
          "id": "d84bcf41-d3fb-4076-b52a-df72db5ccfac",
          "name": "did_json"
        },
        "response": {
          "id": "94eb8390-9561-49a7-89cd-e9e3313a7f28",
          "status": "OK",
          "code": 200,
          "responseTime": 356,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a765d2db-de12-46ed-9cca-312f40186901",
        "cursor": {
          "ref": "fefa131d-f621-4640-bd7b-c1d5a8ff0d11",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a0cd8656-4da2-4944-87ed-9d8d9e13e7b2"
        },
        "item": {
          "id": "a765d2db-de12-46ed-9cca-312f40186901",
          "name": "did:invalid"
        },
        "response": {
          "id": "c2e53986-bf13-48af-bb91-3bd6aa205ed7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 394,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a765d2db-de12-46ed-9cca-312f40186901",
        "cursor": {
          "ref": "fefa131d-f621-4640-bd7b-c1d5a8ff0d11",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a0cd8656-4da2-4944-87ed-9d8d9e13e7b2"
        },
        "item": {
          "id": "a765d2db-de12-46ed-9cca-312f40186901",
          "name": "did:invalid"
        },
        "response": {
          "id": "c2e53986-bf13-48af-bb91-3bd6aa205ed7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 394,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48fc137-1941-491c-8264-7d21ae057c51",
        "cursor": {
          "ref": "1a142546-c489-4068-b450-fae9aedcc0d9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5cbbcf8a-629e-48d4-ad88-c6a24def1328"
        },
        "item": {
          "id": "f48fc137-1941-491c-8264-7d21ae057c51",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b45179b5-33c6-4906-b0e7-ec6bf6c6799b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 84,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec60b398-774b-41ea-9eaf-17032331ca0e",
        "cursor": {
          "ref": "df5bfcd9-9bad-470d-a0e8-b133ce61041e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b5fe8688-d121-43cf-b9d9-b936ae61860e"
        },
        "item": {
          "id": "ec60b398-774b-41ea-9eaf-17032331ca0e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "769a88ce-db55-4b9a-a72f-d55d377d7735",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d62cd15-e149-41fe-a1b2-c35ba830834b",
        "cursor": {
          "ref": "3358fa91-cbfd-401a-ab1c-147ef67d1e42",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ef69118d-a828-4124-98cb-71eacfa5fcb9"
        },
        "item": {
          "id": "1d62cd15-e149-41fe-a1b2-c35ba830834b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "452e49ca-5cc7-4144-82d5-c5a0bdfb707f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0dc682-9209-4f46-b359-4233206ff969",
        "cursor": {
          "ref": "45dee051-a675-4c88-ace4-ec66e89a2047",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ebf01760-af68-4fd1-98f1-9d3c0375ba1e"
        },
        "item": {
          "id": "ae0dc682-9209-4f46-b359-4233206ff969",
          "name": "identifiers"
        },
        "response": {
          "id": "c98437e7-b834-4a92-972a-2f79dfbe3089",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b8e81e-3647-4a59-8e68-a36a1e1b6c4d",
        "cursor": {
          "ref": "0c7d2aa3-e1c6-4802-87d3-61d9211ff8a7",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5f1ea275-a1b2-48b4-acee-71a4f1640ea9"
        },
        "item": {
          "id": "a4b8e81e-3647-4a59-8e68-a36a1e1b6c4d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7fc2cb5e-33f3-42f1-a49d-6d1ea0f4a0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2874282c-af59-4064-99aa-23152daa323e",
        "cursor": {
          "ref": "0cb6af12-35d3-4722-890d-c2818ebfb1e5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3f688a5a-2dc8-436e-b423-8f6cadc537b9"
        },
        "item": {
          "id": "2874282c-af59-4064-99aa-23152daa323e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4569e455-18e0-4d63-b8c9-579458776794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347e2a38-84d5-4678-9d73-17251371aa4a",
        "cursor": {
          "ref": "c12655ae-0e7a-4506-9262-20a500765952",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7fa4f910-67db-4588-a747-315026e70664"
        },
        "item": {
          "id": "347e2a38-84d5-4678-9d73-17251371aa4a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8fccebaa-601d-421b-9213-dcd806068741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c883f1dd-9c99-496a-88b6-b244f51d87d4",
        "cursor": {
          "ref": "b1eefad2-f318-4689-9eed-bf2f170181f9",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d0ba9aef-5aa1-480c-9c92-c61bf697e10c"
        },
        "item": {
          "id": "c883f1dd-9c99-496a-88b6-b244f51d87d4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3a2e6ba3-4cac-47cd-80b6-84992b565482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c67935-96f5-4787-9ad7-ba1d71388121",
        "cursor": {
          "ref": "9dd60e75-3d08-4ff5-8db1-3193891fa077",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "10518654-ee98-49e3-813f-8d9a9615a99f"
        },
        "item": {
          "id": "22c67935-96f5-4787-9ad7-ba1d71388121",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1d553120-c57d-4067-9127-694c949d28ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a06b80a-cb09-4253-adb8-28b4cb4fb9dc",
        "cursor": {
          "ref": "e9d99838-5476-4857-918a-1d884ee64fa3",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7ce353b5-fcb2-45f9-8c5c-a19acf6a276e"
        },
        "item": {
          "id": "8a06b80a-cb09-4253-adb8-28b4cb4fb9dc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3c3c9d03-2389-45b7-953b-c6b4ecdefe25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e8e536-4d94-46ff-b6cb-7c28c7fd519a",
        "cursor": {
          "ref": "b392d577-bf5e-424b-b196-32830b6f0046",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7d04cfec-60c6-4a8b-83e9-58093158138d"
        },
        "item": {
          "id": "f9e8e536-4d94-46ff-b6cb-7c28c7fd519a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "82969b52-c188-41e4-866a-80855f04cd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caedd8dd-33da-4958-84e0-34799e3d844f",
        "cursor": {
          "ref": "f45dc2c6-d5e2-49cc-baf1-1313fc2e2789",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "21f853f8-a6e5-4a0d-ab95-4a4753d83ab2"
        },
        "item": {
          "id": "caedd8dd-33da-4958-84e0-34799e3d844f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fa93da2b-ee75-4afe-b663-d1d8b945f3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fbee6a-056a-4db9-8bd8-cf1254575afc",
        "cursor": {
          "ref": "13baef02-e750-4677-bdc9-18ab5701aa24",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f21ca021-8185-4644-977a-364bbb746259"
        },
        "item": {
          "id": "a1fbee6a-056a-4db9-8bd8-cf1254575afc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fedda393-181d-42fd-9ae4-1e735af6847f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbee473-2f5e-401e-aaa9-87640bd4fbeb",
        "cursor": {
          "ref": "5db2b789-420f-4158-8ea6-1fa663f44ec3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d92459b7-42b0-4218-a14b-d66d237b6086"
        },
        "item": {
          "id": "bbbee473-2f5e-401e-aaa9-87640bd4fbeb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "db9c1e8d-1453-4d22-8b81-b2644637ba4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e73887f-fdc3-4f08-a5c9-f88754572d25",
        "cursor": {
          "ref": "9ac279bf-f87e-418b-b6fa-9be23d5ba734",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f1c537dc-38b3-4c3c-881d-3cb4e6b2d7ec"
        },
        "item": {
          "id": "1e73887f-fdc3-4f08-a5c9-f88754572d25",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "42a88ff9-ff00-498d-aa0a-b2a196226c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42a1669-6727-4f32-aa16-63c09f49f45d",
        "cursor": {
          "ref": "8ed40eca-b84b-43bf-a3e1-ad5da04388e2",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e6287d04-e916-4227-8462-8b6a4261267c"
        },
        "item": {
          "id": "c42a1669-6727-4f32-aa16-63c09f49f45d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3a40807e-87a5-4657-9d7e-84c98867cbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a10a56-e94d-45a0-90ef-e7df78010fef",
        "cursor": {
          "ref": "bbf2f686-8c2e-4045-a06d-73b94cd846f9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a32ac0b7-90a3-40cb-845d-696b607273d0"
        },
        "item": {
          "id": "11a10a56-e94d-45a0-90ef-e7df78010fef",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "191bf06d-2f13-479d-bafc-56467e186601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87635d63-e076-4ddd-a20f-9516608e6067",
        "cursor": {
          "ref": "e38690c7-d67c-46b1-bdc2-9f65999e6ac4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7ced43f1-aef8-4389-a237-4d3e850c5ee3"
        },
        "item": {
          "id": "87635d63-e076-4ddd-a20f-9516608e6067",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "87a798cb-a7f7-4a39-b0a2-c37281e83e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9039fbab-c1aa-47e9-88da-0641fa0c047d",
        "cursor": {
          "ref": "1bcd5481-b475-4300-8e8e-9a323c270846",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cbb031ac-8e0c-4c40-b1ce-3e006cf64649"
        },
        "item": {
          "id": "9039fbab-c1aa-47e9-88da-0641fa0c047d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "42fce93e-f2c3-4540-88da-209abc077720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936745c3-6432-4486-b7d2-a1b8aa5b1704",
        "cursor": {
          "ref": "7165d3d4-78f7-4a68-bbb5-5ee21aff9f4e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2219b30c-a94b-4db9-84d2-1a534d2f57e1"
        },
        "item": {
          "id": "936745c3-6432-4486-b7d2-a1b8aa5b1704",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cdb6f0bf-0450-45ee-9893-0d442202632c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013d68c9-72b3-40b4-97f4-82bb6ea820ab",
        "cursor": {
          "ref": "176b11b8-183b-43e7-857b-84faae49dde8",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "85ac4b1b-ba65-4a5e-a21d-ee647ae74eef"
        },
        "item": {
          "id": "013d68c9-72b3-40b4-97f4-82bb6ea820ab",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7b3dba6f-6ec1-4da4-8e0d-3028110d7932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3198c95-d29f-4bcb-9e04-03efeb228efd",
        "cursor": {
          "ref": "f6ec1e1b-1347-47ca-9ddf-3fba8a372da1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "44768db1-9022-4df4-a22d-0224bf62a915"
        },
        "item": {
          "id": "a3198c95-d29f-4bcb-9e04-03efeb228efd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1d0932ea-fa02-47f4-aa85-2092e6e5b177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c843bba4-3051-4881-b06f-031e720f1958",
        "cursor": {
          "ref": "75a45474-396a-4209-9b58-eba1eff1a101",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9c2cbb33-75b5-4438-8e53-e533855080a8"
        },
        "item": {
          "id": "c843bba4-3051-4881-b06f-031e720f1958",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fdcd931f-f017-489c-95fe-dec3f4e36649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82bbe73-f676-4f37-97af-3a440411c468",
        "cursor": {
          "ref": "89e6e699-759b-41e8-b45c-2f4b731b5596",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6d4a72cb-6c61-4b51-8194-17d51ffd9c27"
        },
        "item": {
          "id": "b82bbe73-f676-4f37-97af-3a440411c468",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8288bc13-2088-4167-9bd6-1d7284ef1925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c638502e-9795-42e7-96c2-f057953b5e9e",
        "cursor": {
          "ref": "b85c382b-fb8a-4847-b823-742ae994e0fa",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d1219096-547d-457b-b8fb-7e411b491b80"
        },
        "item": {
          "id": "c638502e-9795-42e7-96c2-f057953b5e9e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2954c4bb-89a9-4c04-b3ff-3bf81b5b5625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b9503e-bcef-4ef5-8136-307fadc041ee",
        "cursor": {
          "ref": "8d06298a-702a-4c48-aa32-a38baf90591f",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1a425784-570f-480c-858c-7b60f129efcd"
        },
        "item": {
          "id": "42b9503e-bcef-4ef5-8136-307fadc041ee",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "60fe22d0-5a33-45aa-9302-353dd9ac358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 930,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb130a3-ab24-4914-83f1-9399f9ec9e1f",
        "cursor": {
          "ref": "1a50c479-6c54-447e-a497-1059f67a22fe",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "75346435-399f-4d04-b4f2-61211fa8a96e"
        },
        "item": {
          "id": "edb130a3-ab24-4914-83f1-9399f9ec9e1f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "24a19763-806b-4c98-a444-8433da9a92bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d27c072-86c4-48a3-9d14-bcc6bf0d2915",
        "cursor": {
          "ref": "4b62fe7b-4d53-4ad0-9d81-458430ffcc10",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8ae73a1e-2cee-43a5-890f-55cfe6f03f7a"
        },
        "item": {
          "id": "4d27c072-86c4-48a3-9d14-bcc6bf0d2915",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d3360218-1ef0-41d2-ae98-2043fad8dd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ff5d68-fa45-4b71-a6ff-43ef60b79551",
        "cursor": {
          "ref": "dc77a426-6caf-4a46-a7c5-bfd06487ce19",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e511aafc-1757-4e37-814e-a7bf8658ad79"
        },
        "item": {
          "id": "21ff5d68-fa45-4b71-a6ff-43ef60b79551",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5096248e-719e-4fe1-bb0f-b4644c509f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d07284f-1cac-401d-8fc4-66abdc9ec74e",
        "cursor": {
          "ref": "54879aba-913b-404d-9094-7e415eedf7f2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7be4614e-7650-49d2-b309-56348df4017b"
        },
        "item": {
          "id": "4d07284f-1cac-401d-8fc4-66abdc9ec74e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5c8e330b-d5e8-40fa-b304-b239812de2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c150a5f-860a-4897-bf96-70dc7a4b2678",
        "cursor": {
          "ref": "a68c828b-f251-4ff6-a26f-4436cdf4ae5a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "317e26ae-3345-455b-8c84-f257408059fe"
        },
        "item": {
          "id": "4c150a5f-860a-4897-bf96-70dc7a4b2678",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4cc3b562-5599-4a43-af4d-30a7dbb921cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea0c6bb-f656-4924-85c9-dc5ff2870064",
        "cursor": {
          "ref": "81f7a090-1ea1-40a4-9b04-e54d391a0f58",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "58cdddb8-e4db-4016-90c9-edb6f8fbec5f"
        },
        "item": {
          "id": "cea0c6bb-f656-4924-85c9-dc5ff2870064",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "beb5fc2a-943f-40f1-8a10-31d3060caea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e82e54-b210-4a15-8bb2-4266e845452a",
        "cursor": {
          "ref": "74e136fa-77c0-4a12-8ba0-480cab17ea39",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fa7851f2-e1c9-442f-9a38-bd3d67698f7d"
        },
        "item": {
          "id": "e8e82e54-b210-4a15-8bb2-4266e845452a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "588222f3-c0ce-4c4b-b7ea-7a54c27e9090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d810b825-a0ad-4b82-8e06-2b618e15c1ce",
        "cursor": {
          "ref": "1378def9-75a3-4877-99be-eaedea19f2ad",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7728607c-c5d5-4dfa-bfa1-4a5057ecb828"
        },
        "item": {
          "id": "d810b825-a0ad-4b82-8e06-2b618e15c1ce",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "17518f1e-d5ef-44aa-bd14-b11bdf38c55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d50f22d-434c-4caf-9ae1-def6e8a78ead",
        "cursor": {
          "ref": "4c31534a-e365-4496-8936-22f9893e88f9",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5db2de27-520c-41ce-ba49-dee4919969ac"
        },
        "item": {
          "id": "2d50f22d-434c-4caf-9ae1-def6e8a78ead",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ad857ff5-849d-472b-96e8-462e9bc8ea0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba15d55-055c-40f2-b4c2-0f892b2d4500",
        "cursor": {
          "ref": "a5dc5fdf-a3cd-443a-ab73-e5e186a40aa5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5c532a34-5e5b-4fe6-85ee-a64dc14e3d46"
        },
        "item": {
          "id": "bba15d55-055c-40f2-b4c2-0f892b2d4500",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "72e5b9ca-2576-4294-a197-8c24eaf46f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e98479b-a1c9-4002-828e-556618679fc4",
        "cursor": {
          "ref": "3a230216-cdfd-4c38-9669-5e7effcaa4f9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "11c5ee95-b679-4a7b-986a-3d39785b4fe3"
        },
        "item": {
          "id": "7e98479b-a1c9-4002-828e-556618679fc4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "62766346-24c5-4783-9dea-e0313d60afd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f108c1-c567-4718-a030-3c8d5e509ef9",
        "cursor": {
          "ref": "32e98f70-0cb2-4b42-826c-17c50cf5ed95",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "008d228d-dc90-4555-91eb-4e3867a38695"
        },
        "item": {
          "id": "88f108c1-c567-4718-a030-3c8d5e509ef9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8979246e-b1a0-486d-a2c1-cba42e0f7b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062d7def-ddd6-47c5-8fcd-812c1689df7c",
        "cursor": {
          "ref": "a94d12e7-9d8b-484b-b7de-1e22029966db",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d2660383-1e9b-4e04-986d-bcc473cadcee"
        },
        "item": {
          "id": "062d7def-ddd6-47c5-8fcd-812c1689df7c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bc7bdb03-bf71-456d-adff-18417ebe681c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2cc888-b728-44ed-a506-8b88aaf24de7",
        "cursor": {
          "ref": "71486bf8-95b5-45f0-8333-871cb066228e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e704e1d5-3acb-4699-a097-74c53a0ea308"
        },
        "item": {
          "id": "3a2cc888-b728-44ed-a506-8b88aaf24de7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e11fdea3-9b19-476f-9735-07687275c7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479e1e14-5d27-4bcc-8a5b-7d348613250d",
        "cursor": {
          "ref": "fe38a35d-2d12-4dc5-9a94-5d9237f2d8bf",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3a9c75f3-42ad-4161-89fe-336a2fba5bbc"
        },
        "item": {
          "id": "479e1e14-5d27-4bcc-8a5b-7d348613250d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ff7b1886-7564-4018-92e7-a8104a00480a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f182e0c-127f-4be9-81f8-7eb6e3d731ae",
        "cursor": {
          "ref": "64d50ec0-fca2-4ee2-b5d5-0e3de30a005c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e982b3bc-7f86-4750-8990-eabdbc449524"
        },
        "item": {
          "id": "3f182e0c-127f-4be9-81f8-7eb6e3d731ae",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "520a35fa-dfb0-4b57-a2ea-72e50edfcb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0b298c-7a2e-4dd8-9d4b-aa84a70eb908",
        "cursor": {
          "ref": "164dc7c0-5333-43fe-8ebd-f669adbdca16",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2345d595-f3f4-4269-8db4-4545e8e20c11"
        },
        "item": {
          "id": "8e0b298c-7a2e-4dd8-9d4b-aa84a70eb908",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "94a5b066-5f01-45fe-8f8f-2c92d8a36140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f21cd6-8ab4-4900-b2ee-6e9efc14fbbe",
        "cursor": {
          "ref": "9042c145-6384-45f0-b557-3b2e87ec67aa",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9b2a67ee-bf39-4720-bde5-1e5730f27d0a"
        },
        "item": {
          "id": "52f21cd6-8ab4-4900-b2ee-6e9efc14fbbe",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5ee1d8f0-0e4a-465e-9b1a-1dc24bb4a253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46ab3a4-50ed-477d-b155-4dc1c3034f08",
        "cursor": {
          "ref": "c4df0e7e-de72-45a6-8324-92e4a08e90d5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "043407c7-dd67-41fe-be34-db455e4e33e0"
        },
        "item": {
          "id": "b46ab3a4-50ed-477d-b155-4dc1c3034f08",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "08ee2fa3-c11b-4004-97bf-d13b36373bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451b0af1-7787-4575-8c86-6cebe6acb4de",
        "cursor": {
          "ref": "fcc8c48c-900f-40ff-a85e-08ac418f49ad",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8c5f99ca-6550-4012-9e50-a41572f2f920"
        },
        "item": {
          "id": "451b0af1-7787-4575-8c86-6cebe6acb4de",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f78143a6-a1ff-4622-a786-0b30368c41a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b86d8fc-868d-4ded-b26b-c4df11f85819",
        "cursor": {
          "ref": "9f19dfc8-2819-47d3-8e6e-81044ca65447",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56c91500-99d1-4e05-9332-f80a6dc93434"
        },
        "item": {
          "id": "4b86d8fc-868d-4ded-b26b-c4df11f85819",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f5ecb1ef-c9ad-4dfd-b1bc-2729089f0aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af732150-273a-4bf1-95cc-bc6ba178f9d9",
        "cursor": {
          "ref": "f3226b0a-a3e9-4129-8875-e20bcc21c4f2",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4860da18-b01c-460e-b894-763c217c289d"
        },
        "item": {
          "id": "af732150-273a-4bf1-95cc-bc6ba178f9d9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "659e1d18-8b61-4e22-ba74-26d11d988b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa71507-afc2-4915-bbb7-f3bdd93f4058",
        "cursor": {
          "ref": "56e613e8-2b65-414f-8cf7-7e6519da977b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6535cb0a-4bb3-4641-a63a-89e062c2701d"
        },
        "item": {
          "id": "2fa71507-afc2-4915-bbb7-f3bdd93f4058",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4fe1e3e3-9eaf-4b0a-8f77-1f260eabc8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9833f7-872f-48a1-b149-9b3893a7ad23",
        "cursor": {
          "ref": "10ae83f7-099c-46eb-8210-1fc72452165c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cbdb90e3-3f3c-48e4-bbe5-6f07a04247db"
        },
        "item": {
          "id": "8e9833f7-872f-48a1-b149-9b3893a7ad23",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f57a4331-79af-4b55-b26a-7e6c1e3e06d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0a6c93-a652-4626-8733-278c71aba8e3",
        "cursor": {
          "ref": "42815798-cd66-4186-aeba-99d3e8b59f28",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dd9da665-0f58-4c25-8427-51239a8ca202"
        },
        "item": {
          "id": "de0a6c93-a652-4626-8733-278c71aba8e3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c58dd10f-4805-4613-a891-829ee1972fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b2789e-4f07-4852-ad54-8aceb77b9837",
        "cursor": {
          "ref": "a872e0e7-3088-47c6-9005-684c9ef7f731",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2ae4f700-66a0-4f58-b08f-5a9a37d35314"
        },
        "item": {
          "id": "35b2789e-4f07-4852-ad54-8aceb77b9837",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c40321cc-961b-42a2-89ab-c1e910722b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be972433-43d0-4dbf-b502-4c4a24a908c9",
        "cursor": {
          "ref": "28f258d9-b98c-46d0-ae54-68cfc0763d83",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d2a63c9a-064e-4a1e-a0fd-b2e0234ce3d2"
        },
        "item": {
          "id": "be972433-43d0-4dbf-b502-4c4a24a908c9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cf6c5c89-038b-470d-92c9-58dbab790c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f420d81-d940-4909-81bc-a99fa4fa1c75",
        "cursor": {
          "ref": "3d959811-1c6e-4d9d-8888-212487f66ada",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a383d37d-cbee-42f5-88f9-092e10881b22"
        },
        "item": {
          "id": "0f420d81-d940-4909-81bc-a99fa4fa1c75",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a6dbc95b-45a0-4203-91a7-347f43fa3ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed33656f-d690-4719-8592-a61db99d122a",
        "cursor": {
          "ref": "3ea1bf3b-aa7d-4e6e-900d-ead5fc00c98e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6fa9a3d0-c4fb-4696-b4fc-7103dbda5a5a"
        },
        "item": {
          "id": "ed33656f-d690-4719-8592-a61db99d122a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "52501a10-b07d-4d02-bb30-b8bf686b50e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee77f061-7c15-4e5a-92b3-4a47775cbc63",
        "cursor": {
          "ref": "6a53ada0-a3c7-4110-a479-2e473c2cc38f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0f9dcd67-69ed-478e-92a1-692f24ea1542"
        },
        "item": {
          "id": "ee77f061-7c15-4e5a-92b3-4a47775cbc63",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d37fb66f-defa-4a67-9088-bcdf0a6c1d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d33e5db-167b-482e-853f-15380a301547",
        "cursor": {
          "ref": "9f879433-b0e3-4432-a6ab-da4c64e29c9b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ded9ad4f-aa65-4f8f-a789-08023634c08b"
        },
        "item": {
          "id": "8d33e5db-167b-482e-853f-15380a301547",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6db8af95-d62b-4a8d-b2f6-c44dd2a6347e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f1a726-eb24-4819-b8fd-002130e977f7",
        "cursor": {
          "ref": "4991f9ab-e2bc-49d9-8854-951a5d2a42ba",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5eeca924-b892-461d-abcc-67d310f08e2a"
        },
        "item": {
          "id": "f0f1a726-eb24-4819-b8fd-002130e977f7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e95828ce-8b03-44f5-ab70-c557ae12ce3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb2dec1-c7f6-4c60-9db7-75d4919087ff",
        "cursor": {
          "ref": "5c787c1f-519b-4317-bd1c-9b89a254d28c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a9bcd39f-6cb7-4f0c-8da9-fa5447320e5b"
        },
        "item": {
          "id": "0fb2dec1-c7f6-4c60-9db7-75d4919087ff",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7218d9d5-9cef-46f2-9c85-558b4b99aa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d4bb8c-42cf-4370-9ec8-f2a3e9cea7bb",
        "cursor": {
          "ref": "8afa9342-a58b-48d9-8748-b774a981a6de",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dfd74b63-572e-4e91-ae63-b2a7723c0a27"
        },
        "item": {
          "id": "81d4bb8c-42cf-4370-9ec8-f2a3e9cea7bb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fb69dc80-9b59-4bea-b507-3fc602969cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9c44d3-433b-412b-a46a-396708a55ae9",
        "cursor": {
          "ref": "e82fb7d1-16ad-474f-98bf-a6c63b4abcdb",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e5c63034-02b6-4b86-8154-d62ae3f008c7"
        },
        "item": {
          "id": "8d9c44d3-433b-412b-a46a-396708a55ae9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d425a7ea-46ac-46ff-9350-aef6c015cdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b08cf36-2cf3-44d3-8b33-f2ca526043a6",
        "cursor": {
          "ref": "1c8b168d-67ca-48b3-8367-424abeb2ba36",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "90f598f1-ab75-4239-8ac9-e4072fb1585c"
        },
        "item": {
          "id": "6b08cf36-2cf3-44d3-8b33-f2ca526043a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ecd98102-fccc-4d99-9985-406287ae8d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fed14a-585d-45e1-8b8f-698324e91cee",
        "cursor": {
          "ref": "d1fded61-48bd-41fa-a2ad-3ab680369724",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "33f4e0af-2b95-4877-8d0f-db74a4818d29"
        },
        "item": {
          "id": "73fed14a-585d-45e1-8b8f-698324e91cee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a5e8e493-272b-4144-b7f6-af4b89c6b650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef7577b-e1af-4c73-ae66-a9ef65219cc2",
        "cursor": {
          "ref": "bba7d2e6-35b8-462e-be10-fcc4ba73b431",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1d14e5ea-ffb3-4103-a8da-26ec941c1238"
        },
        "item": {
          "id": "9ef7577b-e1af-4c73-ae66-a9ef65219cc2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bc3c7fa9-fc19-4441-8834-29782bc69077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8310b8ce-e7d7-4417-8b19-d20509c249f5",
        "cursor": {
          "ref": "d017d011-c5f1-46c1-b18b-a059c27f0337",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8ca8ca26-b760-4820-a30a-0d982dcff258"
        },
        "item": {
          "id": "8310b8ce-e7d7-4417-8b19-d20509c249f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fdcec55e-01de-405a-8d30-ac21dd18510e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d1fe0d-9519-4a98-a139-f37678b0f6a8",
        "cursor": {
          "ref": "054d58fc-df66-40c2-8a00-782eac3ce685",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6e174dc7-59df-4a9d-93df-9f5be6f2785b"
        },
        "item": {
          "id": "05d1fe0d-9519-4a98-a139-f37678b0f6a8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8e5905f8-086f-49ba-a03b-eb7d32889ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cb88f5-8a09-499b-b6e6-46d89338328b",
        "cursor": {
          "ref": "4b735b49-8c08-404e-839f-387079a7ed52",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7edbd1f7-3d6d-438b-b321-2f0738a9c5a6"
        },
        "item": {
          "id": "60cb88f5-8a09-499b-b6e6-46d89338328b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a6174fa3-0d6f-4f08-a60d-f9ec4c6d8ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a59a60f-2982-443b-96c7-372c52c6cf50",
        "cursor": {
          "ref": "c928ea90-3421-499f-8931-f44aaa85fc56",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "69727bbd-8c40-4980-aacb-dd161ead15d5"
        },
        "item": {
          "id": "2a59a60f-2982-443b-96c7-372c52c6cf50",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bcedf067-8a20-4ec5-ad4f-0423dd30b3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1aafa3-aa92-488d-83e9-4dc43db26a4b",
        "cursor": {
          "ref": "ca74d4dc-4642-4c71-9866-bf413f142f33",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4dd43c64-6c10-419d-a711-69b36622b638"
        },
        "item": {
          "id": "0a1aafa3-aa92-488d-83e9-4dc43db26a4b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4aeb2a6f-4179-4930-94fa-6091dffd2acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d3b947-3a97-4a47-9f01-4b1c7fd8553b",
        "cursor": {
          "ref": "52dcf117-0859-4ac2-8515-92816d3fc59e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4e50545b-7366-46b5-a9a7-1302ffda5d84"
        },
        "item": {
          "id": "47d3b947-3a97-4a47-9f01-4b1c7fd8553b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "08a2ea96-8ce9-470a-b71e-6d98f7573837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942e2b28-dee1-4a7f-85b3-40dd6fb383e1",
        "cursor": {
          "ref": "fa70a80c-3641-4f41-9bf3-9a31be41ff30",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "753c6a7f-c34c-49ff-b8a5-9399995d78c2"
        },
        "item": {
          "id": "942e2b28-dee1-4a7f-85b3-40dd6fb383e1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dd190f5d-1f3a-4ed0-a539-e34c547764c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43cb395-e4d9-4216-a112-adb63fcaf99e",
        "cursor": {
          "ref": "ac6f2a0c-ed07-4def-804d-829cb83264ec",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9a61f934-4cb9-4141-a119-897831c9d54c"
        },
        "item": {
          "id": "c43cb395-e4d9-4216-a112-adb63fcaf99e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "90df52f4-3680-4f06-a5a9-50a728f4be5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e082005-dc76-4c3b-ad25-a44500c7c05b",
        "cursor": {
          "ref": "2acd61a5-67cd-404f-b1b2-0c3a92377f0a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "df1373f4-d2f2-4582-92d6-88775d5d2ca4"
        },
        "item": {
          "id": "8e082005-dc76-4c3b-ad25-a44500c7c05b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e304b40b-2091-498b-9bc2-0d82f9bc36b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6b35c8-afd4-4874-83a5-7391080bc0cd",
        "cursor": {
          "ref": "1789c13d-67ad-420a-bd0b-d1dbe67bce85",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "72338dac-7b51-455a-ac2b-7b6f67e9be4e"
        },
        "item": {
          "id": "5f6b35c8-afd4-4874-83a5-7391080bc0cd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e6236ae9-25f7-4ad8-8a2a-b05b45f9e8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5576584-f5bb-4bda-aad6-a5df205cade0",
        "cursor": {
          "ref": "63909749-262c-4985-bf90-abf77049ef88",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bfb1e888-1946-42c4-a4be-d27c936d27bd"
        },
        "item": {
          "id": "c5576584-f5bb-4bda-aad6-a5df205cade0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "69917b29-a3d5-400b-8d00-d706239df219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7325e3c-209b-41d7-a867-6b27aa8920d9",
        "cursor": {
          "ref": "0bca9bfd-6581-4ed9-8e7a-387570288b19",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8599c7e3-3bfd-49d7-81e9-92d4880a23cc"
        },
        "item": {
          "id": "c7325e3c-209b-41d7-a867-6b27aa8920d9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e821f328-ba6f-460f-a337-5fee259c3f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d615ae4-c5ab-4dab-b4ea-25b9415efd1f",
        "cursor": {
          "ref": "f2cd5eb8-ca11-438c-9710-2ff588c514fa",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "be10b6ba-3c2a-40c4-ac44-3367e585f1a8"
        },
        "item": {
          "id": "9d615ae4-c5ab-4dab-b4ea-25b9415efd1f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "830323f7-d234-4492-9ade-331649170bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4646f8-d84c-4550-a6e7-2c7cdcbc3770",
        "cursor": {
          "ref": "0419e4a7-ead6-4301-81d3-69171f3b660e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "86257304-260d-4972-8de7-34e3dca1777d"
        },
        "item": {
          "id": "7e4646f8-d84c-4550-a6e7-2c7cdcbc3770",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9fb50c8b-c1e0-49e4-8531-c18e6e95a48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05754d52-dc1d-45ad-9e37-e172a0e471f0",
        "cursor": {
          "ref": "664de9ae-76a2-4bd3-94c5-b499b9e7847c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d9095bd8-08cf-4a34-b1d4-11302419e9e3"
        },
        "item": {
          "id": "05754d52-dc1d-45ad-9e37-e172a0e471f0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c51c5b14-20fe-4aa4-a37a-f391a267ee4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39d8d68-a19b-4505-9f36-29d486470cba",
        "cursor": {
          "ref": "47589414-df25-46a1-9ed9-5eb9de8d860c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "de3bcb2f-81f4-4936-99f5-b2a6e7ad5168"
        },
        "item": {
          "id": "d39d8d68-a19b-4505-9f36-29d486470cba",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a5ca33bd-2674-40cb-848b-ec95f67ce5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f80519-aa02-4f1e-b4ae-7548ad66b62c",
        "cursor": {
          "ref": "e765cba8-b5a8-4486-8890-b757884a6529",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "692cce58-5cfb-49d8-a94e-fff59e28ec6c"
        },
        "item": {
          "id": "61f80519-aa02-4f1e-b4ae-7548ad66b62c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8e7d6940-bf1c-4be3-839c-ae0b3754010b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f027bed6-0ae9-433c-94db-8dee31fc4cfd",
        "cursor": {
          "ref": "8b105b4f-bea2-438d-8d29-aa9e23efcbee",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eec9f421-362d-4d51-9008-78f8e6ddd9c2"
        },
        "item": {
          "id": "f027bed6-0ae9-433c-94db-8dee31fc4cfd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "53b5a2b5-a592-49a8-b025-f2086f9894eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51f27b1-a884-44d8-9fe7-fc8c43095830",
        "cursor": {
          "ref": "43d8b7c5-a3f7-44f4-be8e-8c19ff77e123",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5732b5f7-881c-424b-ba84-c960c9ba8562"
        },
        "item": {
          "id": "a51f27b1-a884-44d8-9fe7-fc8c43095830",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "76ef11c1-7d45-48af-9a52-fc301e419ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a3056e-574a-4f1b-83f1-e361312cb3dd",
        "cursor": {
          "ref": "60291f8b-e9ed-4a0f-a302-2ff0e5101f02",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7b7310c1-f6a2-4e30-a182-ca5449cdf461"
        },
        "item": {
          "id": "23a3056e-574a-4f1b-83f1-e361312cb3dd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "44f4719b-f244-4ec9-8e6a-77ec3f88da89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43b080b-2eb1-4962-801f-fac02ecbadff",
        "cursor": {
          "ref": "2d6d2d19-8939-4f46-b15c-043accce76a2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c29b991b-454f-45f2-970d-b0479aff00b0"
        },
        "item": {
          "id": "d43b080b-2eb1-4962-801f-fac02ecbadff",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "239dc69a-67e7-4c05-89bd-ad9a4ce68019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbc4643-1f40-4836-a73e-e17fd4ea4364",
        "cursor": {
          "ref": "7a070adf-49bc-4805-8c0c-0d3cfa1014e7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ddb2961b-e6d3-45c5-9f78-87e9a655c0cf"
        },
        "item": {
          "id": "1cbc4643-1f40-4836-a73e-e17fd4ea4364",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4b4cf813-f376-4b1d-80f7-d19b35dc7b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8cb9ce-bb05-475f-9027-75537db1a23d",
        "cursor": {
          "ref": "0c6dfbbf-faf1-4387-9fc4-becca88b489e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "10577eea-c001-408e-a9a2-6842cf12d575"
        },
        "item": {
          "id": "ae8cb9ce-bb05-475f-9027-75537db1a23d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "26f6c047-ac68-40d7-ab31-a19b29e858bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3064ce9c-3a3f-4105-b5cf-79b727681766",
        "cursor": {
          "ref": "2668f016-baf0-4795-ae58-d90c6d0658ee",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3f0e3d31-6df9-4bda-a904-944b02e92373"
        },
        "item": {
          "id": "3064ce9c-3a3f-4105-b5cf-79b727681766",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e3af9372-8da1-403d-b858-af33a7c5dd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0f92f1-1b32-4fae-aa9b-bbf7fb3e003b",
        "cursor": {
          "ref": "f82e3e47-9388-4f3e-b294-f9b91dd7dd8b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a48df47a-b147-4cfa-b907-cf57877069fc"
        },
        "item": {
          "id": "cc0f92f1-1b32-4fae-aa9b-bbf7fb3e003b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8c294a54-6a89-4bd1-ae2b-603e7375558f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecc171b-49d3-49c3-affa-1a47c10f09b3",
        "cursor": {
          "ref": "633ee220-5a47-4fa8-a12c-e8d46a782d3e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "99753a8c-5055-48bd-88c1-175632b3f338"
        },
        "item": {
          "id": "2ecc171b-49d3-49c3-affa-1a47c10f09b3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "065a5fa2-8edd-482f-974e-fde54a8bc36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4ca2b5-2081-4e9f-929c-764aed306c2b",
        "cursor": {
          "ref": "c4ae6b1e-8f2b-45dd-bcea-fd7824e21113",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4432a459-9a1f-4e27-95ab-f7752807b6d9"
        },
        "item": {
          "id": "ac4ca2b5-2081-4e9f-929c-764aed306c2b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "eff01791-2898-4073-801f-2583c9b29e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686f10a3-e1ff-49fe-8a89-5b71d82aec9d",
        "cursor": {
          "ref": "2331737c-fe68-46ce-876a-90a0e1e0ef7c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fa6bfbd2-7956-45f8-be6e-8e08524bf70e"
        },
        "item": {
          "id": "686f10a3-e1ff-49fe-8a89-5b71d82aec9d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3f7964a7-8fb5-48ce-be45-42cae5de5d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a305765b-f1c9-4453-8f7a-5e5d933e5faa",
        "cursor": {
          "ref": "86462e5f-9338-4c77-a01c-b6a68c152515",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9228390e-2a21-4a5a-abe9-b844285f5f3f"
        },
        "item": {
          "id": "a305765b-f1c9-4453-8f7a-5e5d933e5faa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "eecf1635-917c-4c32-bddd-dbb22af7257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6307277b-c00e-4ff8-a66b-73f42fb1ade4",
        "cursor": {
          "ref": "fbedfa50-a0e6-44a3-9601-8d93b642e8cd",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8794835a-d50f-414e-ac45-c56901112b7e"
        },
        "item": {
          "id": "6307277b-c00e-4ff8-a66b-73f42fb1ade4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "399d9f6f-2101-4fed-b971-c54a76c1155d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfdce77-87e8-4b18-a92a-e3050a9ebc04",
        "cursor": {
          "ref": "c2af169a-4a54-49fd-9ffc-4a18536a41e3",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "678777aa-480c-4bd7-b3aa-641f38ccf276"
        },
        "item": {
          "id": "4bfdce77-87e8-4b18-a92a-e3050a9ebc04",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "72c13e81-8578-4a21-875b-5d4f3f149021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92023283-d6fb-4b48-b7cf-559a2a87f7fe",
        "cursor": {
          "ref": "d18ee49d-c6e1-48f4-ab60-64d16342f5a3",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f81e7c9b-5880-4f1e-838d-01e31198b710"
        },
        "item": {
          "id": "92023283-d6fb-4b48-b7cf-559a2a87f7fe",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f6a424c3-424b-4eba-94bb-139391a8609d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5df74a-3586-4f09-8fc2-c2aedce8fb21",
        "cursor": {
          "ref": "34819ed3-b421-4a46-9a6c-59396674782a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fd275b66-cb3f-434e-8928-5f9612f4af2f"
        },
        "item": {
          "id": "0a5df74a-3586-4f09-8fc2-c2aedce8fb21",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ce0cc277-e683-471c-acf8-d066b62bfe72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea10828f-a899-4b20-91aa-6636424fede3",
        "cursor": {
          "ref": "e14d0116-93d0-44a7-80e1-a6a5480c3388",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "18fb2e33-2ed3-4e16-9c56-31a85b578039"
        },
        "item": {
          "id": "ea10828f-a899-4b20-91aa-6636424fede3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "43ccad5a-0169-484c-8948-620fee98e796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "529ff8e3-4f71-4412-8743-51060404535c",
        "cursor": {
          "ref": "d8e6eefa-bcb6-4ddf-b875-2f150c54849d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4a38fc6a-edc8-42fc-9f53-3f10438faea1"
        },
        "item": {
          "id": "529ff8e3-4f71-4412-8743-51060404535c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0ffd0e9f-79ec-446f-8142-98b2b170b115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a9786f6a-2fd6-437e-b98e-94148e3d1d4f",
        "cursor": {
          "ref": "aed55429-9d39-4c6d-9c82-74e0e0fcdb05",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "220e6582-ac6b-4cc9-a93d-45a9bddb0460"
        },
        "item": {
          "id": "a9786f6a-2fd6-437e-b98e-94148e3d1d4f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4dc105e0-8f17-49c1-a507-ff71e096f501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5c2a3d8d-9490-42fb-9a95-fa92fddc48d9",
        "cursor": {
          "ref": "158a0605-112f-4936-84fb-46b18650258a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "76680d0f-fb49-4804-8d63-027a3caf4dcb"
        },
        "item": {
          "id": "5c2a3d8d-9490-42fb-9a95-fa92fddc48d9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0a16dfbc-0384-4699-a477-ccdd8672f79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1a086989-c43d-4908-9b55-b6c18681c0c5",
        "cursor": {
          "ref": "71f21bf6-ede7-4247-b5cc-62493c58c0c0",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e5d9f2d3-bfbf-4c5f-9c6e-1a936c7e36f4"
        },
        "item": {
          "id": "1a086989-c43d-4908-9b55-b6c18681c0c5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1ac9c9a7-1b8d-445c-8ef3-d443891a923e",
          "status": "Created",
          "code": 201,
          "responseTime": 8850,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb43e83-54fd-46bd-9c8e-4b7b846d9ff9",
        "cursor": {
          "ref": "d476fb90-5927-455f-b822-63943542bf2e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9156fda7-1e34-4e30-a689-649abc20a0d3"
        },
        "item": {
          "id": "4cb43e83-54fd-46bd-9c8e-4b7b846d9ff9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "03bfc2fd-45e4-4015-9d5b-09cb80ce16c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2459cddd-af1a-4c30-9bf3-b0db546a2418",
        "cursor": {
          "ref": "ea805291-de0e-4b63-abb3-5f2c66a3b69d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "19899780-e482-489f-aac8-9cd0fb9e4019"
        },
        "item": {
          "id": "2459cddd-af1a-4c30-9bf3-b0db546a2418",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2b5d0662-0281-4fc3-9a6d-73ceda67549b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "eae9c669-bb4f-4676-b2c4-a849ce56799a",
        "cursor": {
          "ref": "33bcb45d-ebde-45e8-92b5-b8f8a6635b2a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7d2132ae-77a0-462c-a53b-a1ce408e16f6"
        },
        "item": {
          "id": "eae9c669-bb4f-4676-b2c4-a849ce56799a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9752e1b2-f7bb-4452-ac14-a46d2b7ce748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1a39f6-c3b5-410a-9ff1-bb301bad77a8",
        "cursor": {
          "ref": "21809b27-22f3-4c77-b561-08e363cc2226",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "66b99eb8-6396-4e68-b985-c28addc0b0d0"
        },
        "item": {
          "id": "6d1a39f6-c3b5-410a-9ff1-bb301bad77a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a466f269-9f04-4509-a678-a7703c030e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033b4294-dba0-403b-9abb-ccc88510e301",
        "cursor": {
          "ref": "ba6c4807-fa1d-4743-b9c1-d2b841490952",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "17ae1a07-1ff3-49c9-89b1-e632cef961e8"
        },
        "item": {
          "id": "033b4294-dba0-403b-9abb-ccc88510e301",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6bbfb283-68ba-4e20-8cf5-94fe3036675a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eb7046-1bcd-4b47-b39e-81a803ffe4f5",
        "cursor": {
          "ref": "fcb201ef-1d0e-460f-a942-ce2638889617",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "730379a1-4f21-4364-a7dc-31b6420860d8"
        },
        "item": {
          "id": "d6eb7046-1bcd-4b47-b39e-81a803ffe4f5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4cfcb9b0-891c-430e-814e-b6de48cd37e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d84b184-d18f-4275-b673-e01042c833ae",
        "cursor": {
          "ref": "25236920-dad5-4999-afc6-e01bf1ee4367",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3e8ede02-b759-4bc9-918e-67fb4785ae14"
        },
        "item": {
          "id": "2d84b184-d18f-4275-b673-e01042c833ae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2cb645b4-2da8-4d43-ab8c-7e08b43669d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904c9ccd-46ba-4c40-9020-66300f178992",
        "cursor": {
          "ref": "a9df46ee-2d54-4c72-a719-7fe313140e12",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4fad9cfa-ebdb-465e-be3c-b76a54742312"
        },
        "item": {
          "id": "904c9ccd-46ba-4c40-9020-66300f178992",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "047b26ee-855a-4578-ae87-3425827e88b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee467288-78c5-4bf2-ab4b-be6c66c4507e",
        "cursor": {
          "ref": "c5450546-f724-402e-9689-8a74e5c3f0fb",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b0ab665e-40e3-4580-8192-58df90aa305d"
        },
        "item": {
          "id": "ee467288-78c5-4bf2-ab4b-be6c66c4507e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e83dd762-0635-4be3-9c39-1bdceeb824c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615b3b77-bf93-4e4a-bd2e-8da2cf9c065f",
        "cursor": {
          "ref": "982cc211-0795-4d7c-adb7-8cd3bccb8582",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b7cceeec-1daa-4f53-bc0a-2eaaf2fe514f"
        },
        "item": {
          "id": "615b3b77-bf93-4e4a-bd2e-8da2cf9c065f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "da0ef313-9c5e-434a-8e51-cdf1f5f5bc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4328358-137e-4c39-95d6-ea0ba2b88df0",
        "cursor": {
          "ref": "ac62ed8e-dab2-4fea-a582-c1a885d91d1e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "243979b1-4aae-4932-b3a8-115754bd7e9d"
        },
        "item": {
          "id": "f4328358-137e-4c39-95d6-ea0ba2b88df0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "69e21dc4-d098-45d3-bad9-229856776293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a5ee3f-4a21-4059-a529-df3b29c8444f",
        "cursor": {
          "ref": "5abf5816-122c-49f0-9259-a5bb4aa33214",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "319635fa-24e4-46b5-bee3-c0aff4dacb2a"
        },
        "item": {
          "id": "91a5ee3f-4a21-4059-a529-df3b29c8444f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "604806ec-fbac-4302-bc94-273e739642ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1776dc-1db7-4747-b243-dc68297f4e85",
        "cursor": {
          "ref": "d23508da-6ba4-4bfe-bbf4-4c1cc13b8242",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "349b2afb-9f92-4ef8-8072-a281cf8e525d"
        },
        "item": {
          "id": "9a1776dc-1db7-4747-b243-dc68297f4e85",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fdb7826a-0948-4aee-a36f-8828c31addf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5756be-9216-44c4-ba61-ffbe591d64b3",
        "cursor": {
          "ref": "62e58b9a-7a9b-42f8-a58f-f9b6bfe96498",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "19e5a553-d265-4ec6-8657-ed1299075581"
        },
        "item": {
          "id": "8a5756be-9216-44c4-ba61-ffbe591d64b3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c86126a-ea3c-497f-bde1-d55b5a89a6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906959de-d610-46f6-960c-f92d4eca025a",
        "cursor": {
          "ref": "f1982aa5-48a9-4095-8662-07ce2bf22330",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5cae95c0-d4dd-447d-a5e7-ae98a9a194e3"
        },
        "item": {
          "id": "906959de-d610-46f6-960c-f92d4eca025a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d4065b3e-eccc-438f-adb4-791f1c2ffbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d46b2a-558c-43a0-954a-fb0bbbe40687",
        "cursor": {
          "ref": "9d9efcc5-d367-4855-8b27-aea57930e9f3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "525392f3-67d8-483f-8729-5ceae16f15fa"
        },
        "item": {
          "id": "92d46b2a-558c-43a0-954a-fb0bbbe40687",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d483a493-d8d1-4df9-a60f-4696f14fefd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bbbcfe-404a-465f-983e-017259747d2f",
        "cursor": {
          "ref": "4d5f90f0-a6cc-45ad-a052-ee6ec47e4343",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "29b7328f-c05d-48a8-98a6-59f06ca000d2"
        },
        "item": {
          "id": "f1bbbcfe-404a-465f-983e-017259747d2f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c0f3e7a7-62b0-456f-994c-9dbdbbe22148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22275056-5f19-4bbf-abb4-fc8b877dbc29",
        "cursor": {
          "ref": "233be525-ac46-4d93-95d8-4d0074acb501",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fc58e06f-cce4-4787-ac92-079358c2b481"
        },
        "item": {
          "id": "22275056-5f19-4bbf-abb4-fc8b877dbc29",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "865d2ec2-46dd-4e71-ac98-072efbc15114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20aac88b-44c6-450d-b073-97c5f4b5f763",
        "cursor": {
          "ref": "fefe5d45-247f-4f74-9de5-4c7e21a82746",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3f5c9465-25ee-4e15-9eff-d8b09e3c0d75"
        },
        "item": {
          "id": "20aac88b-44c6-450d-b073-97c5f4b5f763",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bb717e56-5184-44da-a082-35bb50d6524c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8c999b6a-6f73-42aa-8d85-2a0d2a686cf4",
        "cursor": {
          "ref": "89812ff3-184e-4a45-b718-5aba284ca04a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bbc8eaa3-1da2-47d9-bac6-ae4c10e5454d"
        },
        "item": {
          "id": "8c999b6a-6f73-42aa-8d85-2a0d2a686cf4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eb7d8ff9-ff4d-4ed0-af7b-7be062f941d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91e8cae-bd93-4b39-ab05-9341acf7b8f7",
        "cursor": {
          "ref": "119511b9-11c4-4174-bdb4-49b297a5ddfa",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "89516cfc-58f4-4534-8658-1cb1c688cd26"
        },
        "item": {
          "id": "b91e8cae-bd93-4b39-ab05-9341acf7b8f7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7f32ba07-2094-45dc-a476-0fe1e4758208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493c4779-c0ea-4753-b35c-8afe1d097c2d",
        "cursor": {
          "ref": "5ade45f9-d57f-4d19-b3ce-4b0d97d3bfee",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4f4c02bf-e7d0-47c1-8420-7ec9ea85a52f"
        },
        "item": {
          "id": "493c4779-c0ea-4753-b35c-8afe1d097c2d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2e45898b-7169-4331-9af6-4d249bd7e343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64122811-5f4a-41a0-afd4-12a1bd7dce53",
        "cursor": {
          "ref": "fe768c48-2888-4bd4-9f85-489831955196",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "49fccc92-f022-495c-9887-3127e1863f4b"
        },
        "item": {
          "id": "64122811-5f4a-41a0-afd4-12a1bd7dce53",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "688761e5-e25f-430e-9f15-feccbd217141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec74a15-86ed-4bf1-b918-25a8e11a1941",
        "cursor": {
          "ref": "c9b93f82-0124-4cc9-bae1-6f817cb206b5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "95eded10-bc53-4da9-943b-b60fa10bafbe"
        },
        "item": {
          "id": "fec74a15-86ed-4bf1-b918-25a8e11a1941",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e63e4095-ae36-4d68-959b-717510075ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c745aae2-06bf-4631-8bcf-a6da893a20a0",
        "cursor": {
          "ref": "30858ca4-97f7-40b1-b090-cbf01f75d2c5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "907d9a09-0bab-4360-b376-df8b08d6556a"
        },
        "item": {
          "id": "c745aae2-06bf-4631-8bcf-a6da893a20a0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4b037358-e2fe-4bc4-a0a3-d506a4c88ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a515f1b7-9e50-4b00-84cb-699bcad15203",
        "cursor": {
          "ref": "dd21eb7c-f9f5-4b1d-8092-5a60493a9e0c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1b458268-9a21-41e2-b4d4-e0b4def5605a"
        },
        "item": {
          "id": "a515f1b7-9e50-4b00-84cb-699bcad15203",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e613ccc7-7f3b-4a5c-9ac6-f35bbcaa631c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4127ec15-0cb4-4056-9a23-1e66810554a0",
        "cursor": {
          "ref": "e16debf6-1bf6-4c24-8758-9f4103f04d14",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8da4d026-8f0d-4008-9c55-41278d218e10"
        },
        "item": {
          "id": "4127ec15-0cb4-4056-9a23-1e66810554a0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2ba043d7-4caa-437a-8b66-8c777e8ad7ed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "30d46e37-ba09-42ac-bb76-f071fd2a3749",
        "cursor": {
          "ref": "ff1964b6-f369-49d7-b42f-e215370287f3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0b0e38c6-e283-4e18-9a30-543aebf638f4"
        },
        "item": {
          "id": "30d46e37-ba09-42ac-bb76-f071fd2a3749",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d51cef4d-78b4-4a1b-a856-c5fac0940312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bed1797-3d00-4375-9e19-4befab839ad2",
        "cursor": {
          "ref": "f14d6e84-d35e-49d4-b523-3299da1525d6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cd297e1b-59c9-4877-94ce-f6894983beec"
        },
        "item": {
          "id": "8bed1797-3d00-4375-9e19-4befab839ad2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "517472bd-cf7a-472c-8162-c8bf213c9c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5b1a0a-e2e9-4c4b-810b-10fe847aa851",
        "cursor": {
          "ref": "55cedf42-d271-4fc9-bf56-aa1efb9727bd",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ac2351cf-dd5c-4756-9ed5-8db3ed5bf992"
        },
        "item": {
          "id": "2d5b1a0a-e2e9-4c4b-810b-10fe847aa851",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bf67ce61-f78f-439c-b0ac-83f2174555b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba3b0bb-2e1e-4a1a-9839-395203de2ad8",
        "cursor": {
          "ref": "d1d3321c-b1a5-4482-8921-579f0468fdfe",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f61b802c-f66a-4911-a72a-d8f901a515dd"
        },
        "item": {
          "id": "4ba3b0bb-2e1e-4a1a-9839-395203de2ad8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eaa070ed-8cb6-40ad-86e6-f25b713c6299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071d0d62-0f3b-4657-91f9-7060e85f8735",
        "cursor": {
          "ref": "322114ea-3a8d-4fe6-a226-a05235554644",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f3ebae95-c37e-4837-bdc0-c6061cc79851"
        },
        "item": {
          "id": "071d0d62-0f3b-4657-91f9-7060e85f8735",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "70b5285c-2d9e-482c-b9ed-b5e2a2bcce65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda03b66-d929-49b0-871d-a6fd04e791e1",
        "cursor": {
          "ref": "5106cc74-6dfd-422c-a0ad-2241a076ff6b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a635acc5-1e9e-463a-96bc-101ea02d7c20"
        },
        "item": {
          "id": "cda03b66-d929-49b0-871d-a6fd04e791e1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e9706498-d159-49e1-9e8d-cdc0db742b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d89fa1-8093-486d-a6c8-1fef048e9815",
        "cursor": {
          "ref": "90564ed1-afd1-4768-aaeb-acc59780b714",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "73feff35-a761-49f4-9f6d-e527e72346fa"
        },
        "item": {
          "id": "c7d89fa1-8093-486d-a6c8-1fef048e9815",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4e0ec488-b68d-41ad-8922-8ff6b02f4550",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "255e9d36-ff5c-4c59-be81-7c72a0f5cc4e",
        "cursor": {
          "ref": "ae292bfe-215d-4459-96b9-1f23719113b1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cbc822b0-b4a2-481d-bbdb-ae16a8dcea6d"
        },
        "item": {
          "id": "255e9d36-ff5c-4c59-be81-7c72a0f5cc4e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7b960d81-d501-46b9-adcf-fd831a45d1c1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "eccfc360-b2b9-495a-b993-924b8502094a",
        "cursor": {
          "ref": "07d15161-6d67-4582-9ef5-ebff84f6cec1",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cd414853-c724-4669-8dc2-c03e923932de"
        },
        "item": {
          "id": "eccfc360-b2b9-495a-b993-924b8502094a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "41a71447-b559-418d-8c6f-5ad749a8e7d8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "37a9ec89-ffc1-4650-b954-c2587637bf9a",
        "cursor": {
          "ref": "f8bbe1b5-99a7-4739-bab1-8488db3e485a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ff64cac5-333b-45d1-bdb4-4b6dabd59bf0"
        },
        "item": {
          "id": "37a9ec89-ffc1-4650-b954-c2587637bf9a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a5449faa-6133-4d98-9b26-8f2107670c99",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "592a921e-3c95-44d4-8863-fb25c8b46bf9",
        "cursor": {
          "ref": "5e695947-3c3b-4381-b3b5-67075c24d271",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "49301d46-1edc-47f4-b57d-bce8d18b745a"
        },
        "item": {
          "id": "592a921e-3c95-44d4-8863-fb25c8b46bf9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c50434b2-6092-4bda-805f-9b1db28171ef",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "369ec023-a803-488f-a1ec-b6dc07e64424",
        "cursor": {
          "ref": "827c39da-9ec6-4209-abaa-aba124e7b111",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c2022349-516f-4472-8deb-8c8eda8b488e"
        },
        "item": {
          "id": "369ec023-a803-488f-a1ec-b6dc07e64424",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8bb86362-8190-4c27-9e92-ad990ea07a4c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5c7cd9e9-5ca8-4725-94e8-fcd8d1be1c3c",
        "cursor": {
          "ref": "a09eccf0-f345-4148-9407-4f91fc6bfca2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "92ced0ef-8598-402b-9151-95f7c6b097f7"
        },
        "item": {
          "id": "5c7cd9e9-5ca8-4725-94e8-fcd8d1be1c3c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cac203bf-a890-4621-a658-e314a57b5bd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879f2d1a-762e-46e0-9cf8-838ad8be1619",
        "cursor": {
          "ref": "eca1e967-eae7-4459-baed-0acb5429b801",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ec9632cf-0215-4659-bb12-048bf7bb07d9"
        },
        "item": {
          "id": "879f2d1a-762e-46e0-9cf8-838ad8be1619",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0b0c4d1b-2bb7-4c53-82fd-79b26c9f043e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6f33e9-8ed7-4a3f-ad28-a0f5438be544",
        "cursor": {
          "ref": "761bb670-e9ae-4798-b739-1e6f8152a3a1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "03e38d57-e70e-448d-93dd-daa08698b150"
        },
        "item": {
          "id": "2f6f33e9-8ed7-4a3f-ad28-a0f5438be544",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4444ebb0-c3dd-4972-89fe-ccdc3653f9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecaa032-083d-482c-94c7-a1b5da99bf17",
        "cursor": {
          "ref": "43a7aec3-ddd1-4f39-99ee-32f7b014ba17",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4b19622a-a04a-487b-9b57-472bb1db8a19"
        },
        "item": {
          "id": "4ecaa032-083d-482c-94c7-a1b5da99bf17",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "946bd057-2456-418a-873b-23c158632de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8cf829-840c-4058-9a9b-1ae654eb1006",
        "cursor": {
          "ref": "d89a32c5-c39e-4001-8a55-44f35ea0abcd",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "32cdd29a-31a5-40fc-9f43-76a158b0f86b"
        },
        "item": {
          "id": "eb8cf829-840c-4058-9a9b-1ae654eb1006",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0ca4988e-ba2b-43ea-9809-2e2c7017215c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fb5d50-c262-4c30-b47a-201df08cda0b",
        "cursor": {
          "ref": "b8cac9e4-7ef7-426e-b799-5e258d2a9713",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d1eca5a4-1c4f-4cd0-b9cb-7814bbc14ef4"
        },
        "item": {
          "id": "97fb5d50-c262-4c30-b47a-201df08cda0b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "edd47cad-c0e3-4090-8a7b-e986ed9177f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d813e07f-4e20-41ce-a995-d5404f87a2e5",
        "cursor": {
          "ref": "c3d94203-e6ec-4c5e-812c-cdc3ac13e43a",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b9e4ea4c-d201-42a6-aaa6-ec09ea13f741"
        },
        "item": {
          "id": "d813e07f-4e20-41ce-a995-d5404f87a2e5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6a618591-6493-4559-9f77-1605d373a2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d523b69b-cee9-43c2-bffa-74bee1511081",
        "cursor": {
          "ref": "f8f0b98b-a39a-41eb-91bd-105e02947b96",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "687f23d8-3782-491e-9195-212baf5db996"
        },
        "item": {
          "id": "d523b69b-cee9-43c2-bffa-74bee1511081",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "017bfaa7-bb53-433d-b0d6-937a5e188751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b47a34d-fcf5-45eb-983b-643b80feefce",
        "cursor": {
          "ref": "ec726626-79b5-4244-b802-450f8fea1a11",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9c9603e8-a77b-4454-b35c-4b35c39ca06c"
        },
        "item": {
          "id": "8b47a34d-fcf5-45eb-983b-643b80feefce",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "25c641a8-8683-40ca-9666-8fdaf5debca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe745b3-6f8d-4995-90eb-1ab2a0ab0e71",
        "cursor": {
          "ref": "497d1fb7-3bd4-417b-bf7f-3de9062e6a54",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2c448168-34b4-49b0-95fd-57dfc11b907d"
        },
        "item": {
          "id": "bfe745b3-6f8d-4995-90eb-1ab2a0ab0e71",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b09ca738-1793-425e-8c8b-58805bc98c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db9193f-0962-4052-87a7-501c13d2bec7",
        "cursor": {
          "ref": "c06f9d22-71ea-467c-8c5e-b623ca8f4b3a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "189aa15f-cb1d-4107-8f16-469b3b0bc192"
        },
        "item": {
          "id": "5db9193f-0962-4052-87a7-501c13d2bec7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2d42371f-db4f-4d0f-97a3-81c7608c0579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02643767-7cf8-4759-9098-209efd9a9ece",
        "cursor": {
          "ref": "d7045b27-ad37-4ad3-9755-2994e044c848",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "78831484-5af2-422f-a809-1abf9226aae8"
        },
        "item": {
          "id": "02643767-7cf8-4759-9098-209efd9a9ece",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "611d2c25-b4d1-4466-90ea-ce6b1d605970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cb1a6d-bb7f-4341-8442-60c7d8b74a14",
        "cursor": {
          "ref": "a4cea1ef-28fa-4c8c-ac57-193f04ed9ede",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fe8e5733-855f-4b5e-bbb5-ab4b9b6da0ab"
        },
        "item": {
          "id": "56cb1a6d-bb7f-4341-8442-60c7d8b74a14",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c01fe535-fda2-41cd-9d8f-918a854b8296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3e8f2f-c78f-4d19-bdf4-a039cc17eded",
        "cursor": {
          "ref": "6a3f3c66-aa32-4c7b-b09c-f11d12a5a46d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "facba040-d47c-450a-8f38-e54a60e84fcb"
        },
        "item": {
          "id": "ea3e8f2f-c78f-4d19-bdf4-a039cc17eded",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2f17aed9-2998-412c-9494-f41a344a51ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac05dea-022c-43ba-b2f8-e64840447024",
        "cursor": {
          "ref": "9df26d89-49bc-4bae-bfaa-aff93ae0460e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f8b4184d-78fe-4178-8d92-879fdcf092bc"
        },
        "item": {
          "id": "6ac05dea-022c-43ba-b2f8-e64840447024",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "673e7db6-ba7c-4c42-91c1-252a9669ca99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb9319c-3187-42b9-92d7-a9a06c4d63fd",
        "cursor": {
          "ref": "4b7a7f72-d91c-48e5-a7c9-6e284e2b5d1b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bde490af-36bd-4d3c-90bf-ce62dee5c2c5"
        },
        "item": {
          "id": "4eb9319c-3187-42b9-92d7-a9a06c4d63fd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "16e2cd02-d867-4924-9de9-ef28a77e0031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71290c8a-3bac-40c8-92f6-f52c66337b60",
        "cursor": {
          "ref": "d784bb53-f324-4d88-8b73-c0268cd2a892",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c9045d47-b476-4869-8663-380e20406883"
        },
        "item": {
          "id": "71290c8a-3bac-40c8-92f6-f52c66337b60",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7901702f-9837-450d-8651-277da0cdec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb868b-33f6-424e-b96c-7d14f83b9ff8",
        "cursor": {
          "ref": "7bccfa32-199b-46d1-b3bf-3da833fbb5ee",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "10d44ea2-ffc6-4e6c-abe5-23257b43dbb9"
        },
        "item": {
          "id": "d1cb868b-33f6-424e-b96c-7d14f83b9ff8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7ddb70c8-4cb1-4266-932e-1e8996b8a447",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "4d7b06f7-bfd0-49a9-ba6b-19c9c75732fd",
        "cursor": {
          "ref": "7eb39c10-84b7-4fdd-af89-24327912a49b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "22dbbe57-14a8-4a38-903a-32e77cd62e1d"
        },
        "item": {
          "id": "4d7b06f7-bfd0-49a9-ba6b-19c9c75732fd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "df3a97a7-7b00-485e-86b7-86d493e99e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf99636-bd1d-40d8-958c-d93e245338f4",
        "cursor": {
          "ref": "a26cc866-402d-482a-b7a3-f22b930142df",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2b2f4299-e1fe-4aba-a1d7-dac779573c67"
        },
        "item": {
          "id": "3cf99636-bd1d-40d8-958c-d93e245338f4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a17333f9-23b3-411f-9d3d-c759709921a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ed3fc0-fc80-448b-b621-911e0f1b7bbe",
        "cursor": {
          "ref": "565793ee-f732-473e-8fd6-5efc0064cec1",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2033a9f8-d247-4f18-b2ea-48b3a156fe90"
        },
        "item": {
          "id": "58ed3fc0-fc80-448b-b621-911e0f1b7bbe",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "65ca25dd-51b5-4ae7-9e6e-23172cd20373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c473c8-9b6d-472d-8c67-878587979798",
        "cursor": {
          "ref": "ce0217c2-9517-4f46-b6a1-2fb4c3bc0a3c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e2e26d1b-357d-4bb3-8f05-e97cc88ce4a7"
        },
        "item": {
          "id": "b9c473c8-9b6d-472d-8c67-878587979798",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d1427a4d-455d-43db-b56f-df9325e1cbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576ecda4-e6d6-4050-8e8f-a696e8e850e5",
        "cursor": {
          "ref": "d29039bd-f4fd-4a8c-b414-7b0f19554d03",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "835d5d3d-193a-48f4-9825-804f036356f3"
        },
        "item": {
          "id": "576ecda4-e6d6-4050-8e8f-a696e8e850e5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "eb5ffff5-6f5f-48f2-955d-83f713091e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0bed10-e281-4225-b07b-e19508111649",
        "cursor": {
          "ref": "a9822919-a17c-40c8-98dd-d8ce2d68b33d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d223736d-1845-4c3a-9ede-838a9438e75e"
        },
        "item": {
          "id": "6b0bed10-e281-4225-b07b-e19508111649",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c010fbb5-f597-4e24-898b-8a84b0e824bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c563b19f-2eae-467c-9468-6b19bf3c0a36",
        "cursor": {
          "ref": "955c654e-f609-4c46-b569-458b021a5342",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "776b856d-9c8e-4cb1-8911-bc9f2085b3b4"
        },
        "item": {
          "id": "c563b19f-2eae-467c-9468-6b19bf3c0a36",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "64bdcce7-f550-4115-b848-98a262667acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9df80ef-bf00-4b65-9bdc-c946e6d38bff",
        "cursor": {
          "ref": "3a4934ed-5de4-44b7-8f1e-e47423339ad6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a11dcc1b-397a-4c97-b99f-284fa3e46b08"
        },
        "item": {
          "id": "b9df80ef-bf00-4b65-9bdc-c946e6d38bff",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7324d2c2-21a7-4730-82bb-e11cd0b1e1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60516370-ac00-431a-a022-68eb63ed30de",
        "cursor": {
          "ref": "57204074-eb9e-4361-830e-2a6f517b14f0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c85088b1-bc6e-429e-8f00-7fc5aac548a9"
        },
        "item": {
          "id": "60516370-ac00-431a-a022-68eb63ed30de",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f0a45eb4-d460-49ce-bde1-b44a3e636172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c73260-5c96-48c7-b205-426a52dd7cbe",
        "cursor": {
          "ref": "73429660-471c-42a3-93dc-08b8c44bc67c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7f2fcfc3-f187-4eb3-be78-dec83d114ab3"
        },
        "item": {
          "id": "e5c73260-5c96-48c7-b205-426a52dd7cbe",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "16ce93a9-6dc0-4360-846d-65cb630f23d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2767e91c-54b0-4868-aec6-38332e3ca22d",
        "cursor": {
          "ref": "ef588fd2-ec1e-4e41-ae8b-0f70e469498a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1d589a2f-2aab-4184-a51c-f1086de62ee2"
        },
        "item": {
          "id": "2767e91c-54b0-4868-aec6-38332e3ca22d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e3e65449-d247-4d2a-acc2-e10b278a247d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8baba7a-a49a-40c3-b9bc-ff07784a5f7a",
        "cursor": {
          "ref": "2f4cb252-92c7-4ded-9954-16a81fd71541",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "30c3f93c-ded4-48d6-bcff-ef6a339a251b"
        },
        "item": {
          "id": "f8baba7a-a49a-40c3-b9bc-ff07784a5f7a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dad1d917-dbdb-481a-85b2-660354e1aced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd1ef03-fd35-4471-8dae-6b067f81287a",
        "cursor": {
          "ref": "c869f899-2f53-4c65-9b88-f35bf33440ca",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0d9153b8-96d7-4ee6-8306-be29e0de9525"
        },
        "item": {
          "id": "edd1ef03-fd35-4471-8dae-6b067f81287a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7accf358-9c4b-4554-b75a-a7944759f97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8d681f-972a-4479-8ea0-1980730482a3",
        "cursor": {
          "ref": "972f867b-cbe3-4183-8a2b-26453d9892eb",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "05ebc5da-e74d-4638-b2c7-55cb10b001d9"
        },
        "item": {
          "id": "1d8d681f-972a-4479-8ea0-1980730482a3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "840fc71e-a1a4-4851-8c3b-4071b2710770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5442e8c0-bf95-49cc-a121-56b833d85340",
        "cursor": {
          "ref": "762d313f-9ad6-4cdc-8749-309d83624430",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f6a6ac71-1ac7-4640-8690-39aaa7338050"
        },
        "item": {
          "id": "5442e8c0-bf95-49cc-a121-56b833d85340",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "14980acc-6687-4398-b618-64dafed037ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9279298e-7c6b-4cd8-bba3-6361d057fd49",
        "cursor": {
          "ref": "451cc3c4-6ffe-4b12-8cd8-a7f04fb5be83",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "34f65442-9303-4949-b952-e3afb5756f59"
        },
        "item": {
          "id": "9279298e-7c6b-4cd8-bba3-6361d057fd49",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "51d357c1-18dd-40b1-afc1-bfd28ce163b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c806af-5b20-48eb-bf70-3ce52def5624",
        "cursor": {
          "ref": "2a3fc4e7-71d0-4f0c-8a0c-442238629fc4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "28ec376d-7a09-451d-a49e-1a391e751cce"
        },
        "item": {
          "id": "61c806af-5b20-48eb-bf70-3ce52def5624",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c072e15f-97d6-4e9c-83ff-2c753e624a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d4ccd4-abcb-4c10-b77b-7ba347a974f3",
        "cursor": {
          "ref": "97af3158-8688-4693-919e-b63f08bdfbee",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "752575e5-245d-468a-867d-5b3ba165ca41"
        },
        "item": {
          "id": "27d4ccd4-abcb-4c10-b77b-7ba347a974f3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "96f77265-38aa-48f5-9788-a0042312c8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f185a3-fc8e-4a1e-9bc1-a9c44eccd656",
        "cursor": {
          "ref": "03b281e3-c15b-48d2-b0e7-30cf58b2c095",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6ab6df28-a265-4852-b751-75a38d39848d"
        },
        "item": {
          "id": "f4f185a3-fc8e-4a1e-9bc1-a9c44eccd656",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9c6a7454-9a74-4049-bee9-1f01076a2e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fe0d61-69e6-4122-b0ba-121198181bd2",
        "cursor": {
          "ref": "491172b1-5796-4344-9b4c-b47643ee188d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "702af15c-7315-477e-b427-e48e6242996b"
        },
        "item": {
          "id": "92fe0d61-69e6-4122-b0ba-121198181bd2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "80c4eeae-e8d8-4ef9-b5ef-b2b0dd54e340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b05167c-c2e5-408c-b3e3-96297dee32a1",
        "cursor": {
          "ref": "9f5f68c4-1b8e-467d-aeb9-63d1bf1c65d7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d7663dd7-7917-4cc5-95c0-22f2ba5ebd58"
        },
        "item": {
          "id": "1b05167c-c2e5-408c-b3e3-96297dee32a1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7650cf8d-09b4-4fe5-8cfa-9db9c29ef921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e0046e-5c1a-4502-97cd-944f40a2f311",
        "cursor": {
          "ref": "7cbd694e-8256-4472-9cf3-504e7b612211",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "be7c689a-2c9e-4d6e-9d6e-79e5290e20db"
        },
        "item": {
          "id": "30e0046e-5c1a-4502-97cd-944f40a2f311",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "14c850b2-2196-4858-afa6-9277ff6359af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7fd84e-595b-48d6-8442-703558b06b5e",
        "cursor": {
          "ref": "3a5ae377-b167-4ea8-a9a7-9b252707f0e6",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a5c77c2b-f933-48a2-b514-325a39186963"
        },
        "item": {
          "id": "bf7fd84e-595b-48d6-8442-703558b06b5e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "28ca9184-c2f1-45b6-aa8c-9ca60dbfe0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6c2486-a8d6-43a6-8bbc-4a91f34226e4",
        "cursor": {
          "ref": "2a339769-ec21-4357-82ca-956d008384da",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0ea6de0a-e750-44df-b464-24988a83cfb1"
        },
        "item": {
          "id": "bc6c2486-a8d6-43a6-8bbc-4a91f34226e4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "576a1213-728b-4cfc-b9a7-2a48ca46b952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ab0d44-ee08-4819-8891-5ae2eb9003c4",
        "cursor": {
          "ref": "27637989-01b1-45ca-b1f0-158156327fc5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "90e8f338-cc69-4272-978e-a327d81d0828"
        },
        "item": {
          "id": "65ab0d44-ee08-4819-8891-5ae2eb9003c4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "478086bc-de9b-4b9f-8bfc-a876b06a3469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8114b586-d55a-4170-88eb-55ee0e6e2129",
        "cursor": {
          "ref": "dcefd797-75bb-439b-9abc-840f78210606",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bee372ce-4b50-467c-894f-1138155f9fa3"
        },
        "item": {
          "id": "8114b586-d55a-4170-88eb-55ee0e6e2129",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6b1f3e8e-b308-4f48-8c43-93e356922af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2b4c0a-78d3-4576-8772-4b058de62af3",
        "cursor": {
          "ref": "4cc4f713-ad7b-42be-a582-b03ad75b1d9e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "afec6073-f243-42f6-9b63-71f68969ddc8"
        },
        "item": {
          "id": "3d2b4c0a-78d3-4576-8772-4b058de62af3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "53ad3584-3da8-466f-a2fd-282afcad4edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79dff19-ffcb-4990-9f77-ac6f2cc02e4d",
        "cursor": {
          "ref": "d6acd5c0-dec7-4aa5-9362-249122383f79",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c511975d-c651-45ef-9188-a3b5876a25c7"
        },
        "item": {
          "id": "c79dff19-ffcb-4990-9f77-ac6f2cc02e4d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "65cf3eee-d2b2-4e5c-b547-ab569145433b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf78d63-88e8-4a69-acaf-149c7b8037cf",
        "cursor": {
          "ref": "054daf5b-3e6b-4645-b1be-12c1b299c531",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2a892607-733e-429c-bb92-174a34f2159a"
        },
        "item": {
          "id": "8bf78d63-88e8-4a69-acaf-149c7b8037cf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6557e6f9-4196-4d3e-b0ad-60e77d332059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6046bc87-bfab-43ff-a7a7-886f6d84b398",
        "cursor": {
          "ref": "7d10509a-e455-4874-9822-d971db492863",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "401a7399-2d3a-488a-a19d-732c3fa8a067"
        },
        "item": {
          "id": "6046bc87-bfab-43ff-a7a7-886f6d84b398",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0bec1868-997d-4e8b-80cd-9442e5fd6a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15c4c57-f4f9-413e-99dc-712bf14e6cff",
        "cursor": {
          "ref": "1c2d7690-c570-425f-8d11-9d6aa65bc29a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1f111889-b484-42ce-93db-2194433c8659"
        },
        "item": {
          "id": "d15c4c57-f4f9-413e-99dc-712bf14e6cff",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "07f86e74-fcad-4487-88c2-b9030be44652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dabd22-b090-4f83-a6bc-07dff3bbbca4",
        "cursor": {
          "ref": "559bf545-93be-4697-86f5-279d9082d935",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a28ab7ee-ce67-47d2-9d72-1eba90189b55"
        },
        "item": {
          "id": "28dabd22-b090-4f83-a6bc-07dff3bbbca4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "37336df5-4b7d-4e5b-a406-a24e49d876c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fcf41e-855d-4b64-8923-1d63c498bc43",
        "cursor": {
          "ref": "1f6e8951-6512-4f17-8708-8966549f2e75",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dfbccdb7-0bdd-49ef-baf5-187c23e112c7"
        },
        "item": {
          "id": "e5fcf41e-855d-4b64-8923-1d63c498bc43",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1f82114c-9296-44b6-89e1-7ab4277d68cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1396897-2cd3-4f07-8a02-2df950615456",
        "cursor": {
          "ref": "9bdff198-2b13-4fc9-a1ca-dea48dd49a72",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e7506e02-96d4-4744-87c1-3a0532cf9a5e"
        },
        "item": {
          "id": "c1396897-2cd3-4f07-8a02-2df950615456",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "53d441c6-dfda-42b9-b883-09bea7d931e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f31129e-625f-4ea9-9f02-1e2885fe67cd",
        "cursor": {
          "ref": "ed06531d-8de0-4c2a-bb28-f2f8331a9947",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0dd81327-ff44-4025-8868-3839c0f631ce"
        },
        "item": {
          "id": "7f31129e-625f-4ea9-9f02-1e2885fe67cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d1aa2c12-aa8d-49b0-9d25-6e32ad46e6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360e5d27-c55f-4573-a10e-02a9ce5bf5e6",
        "cursor": {
          "ref": "8ce004cc-5c0e-4959-9a7c-69da0215adc6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c5af8b80-955a-4ee0-821f-da9b27e25737"
        },
        "item": {
          "id": "360e5d27-c55f-4573-a10e-02a9ce5bf5e6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2ada9bfb-276a-4464-8276-eaad1d444be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2f10e6-e973-4f87-9437-8982b95c26b1",
        "cursor": {
          "ref": "ddd0a406-eb00-480e-8d7d-b26f4036f2b7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "093a47ea-0ebd-4de9-967a-b49152593de8"
        },
        "item": {
          "id": "1a2f10e6-e973-4f87-9437-8982b95c26b1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "412f265b-71c5-4a29-8b55-d64ec687ec67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a4342f-3ab2-40ec-bc45-3be693192c62",
        "cursor": {
          "ref": "a66799bd-28d8-4b33-8f6d-aa0cce7de03c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "02721aa6-c0cf-48f0-8f03-ce9e4cc8e3bb"
        },
        "item": {
          "id": "91a4342f-3ab2-40ec-bc45-3be693192c62",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f07a1686-edad-411b-b29c-771cf016e820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93227c91-66d2-4472-a1ec-a90bcc6ad1b7",
        "cursor": {
          "ref": "548b39ed-2128-4879-97ed-ad717c52f229",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8fffd688-5c8d-4e8d-a508-0cfb35a19f93"
        },
        "item": {
          "id": "93227c91-66d2-4472-a1ec-a90bcc6ad1b7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "af00284c-e73b-4f42-a264-aaef206af8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27613ee-69d0-4d07-a5ce-f8a7375e7653",
        "cursor": {
          "ref": "e34ccfb9-8993-4245-8c6f-e7b1145ba492",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b045cef7-0467-41ea-bb30-2165f3a6f209"
        },
        "item": {
          "id": "b27613ee-69d0-4d07-a5ce-f8a7375e7653",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "70619cda-9fbb-4b7c-b80a-872aff7f502d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ae9980-5905-40a9-83f0-09d7ff024667",
        "cursor": {
          "ref": "0fb09457-84e4-4f76-8cde-5a8d799f5c1b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4a6251c5-af61-43e1-8a6c-3991d19aadb4"
        },
        "item": {
          "id": "72ae9980-5905-40a9-83f0-09d7ff024667",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "de5527a6-70a8-43fb-a43a-068870a6f031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a01b199-ce04-4b90-8743-4059dc1093e8",
        "cursor": {
          "ref": "9d16f5b6-f15b-4054-9440-2f90c72b5d95",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6fe36772-cb70-41aa-82f1-984971bb2b29"
        },
        "item": {
          "id": "6a01b199-ce04-4b90-8743-4059dc1093e8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e3592233-ccd6-4716-9735-b093a9f7ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3def41e9-1b17-4181-b48a-613c5df183af",
        "cursor": {
          "ref": "111690b4-2c78-470b-a489-30cb66a67bb6",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "15205bf1-ba1d-4a17-b310-31c6a2e521f8"
        },
        "item": {
          "id": "3def41e9-1b17-4181-b48a-613c5df183af",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "be974db9-acb8-4b1e-9b5a-f5025be882f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42b83ca-2bce-426d-9481-455ddf215906",
        "cursor": {
          "ref": "403e8ee3-0050-4830-989c-1179b47b43e1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e4f5ebb9-d561-4168-9a8d-732b009d84a6"
        },
        "item": {
          "id": "f42b83ca-2bce-426d-9481-455ddf215906",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b092028d-bde0-43db-aba1-2091aba6645a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ed0db8-baba-46f4-8f65-c469d46de134",
        "cursor": {
          "ref": "dbb1f3d6-131c-48ac-880a-d8d2d2448beb",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9eeb404f-9f9d-4f80-8052-951c81a2b288"
        },
        "item": {
          "id": "92ed0db8-baba-46f4-8f65-c469d46de134",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "955fcbec-0c9c-4537-9654-45b78560553d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4ddc55-f0fc-43e1-8179-474385b31242",
        "cursor": {
          "ref": "39f263ae-7bee-47ac-a5fa-9fa0293fc9eb",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b06e9138-2f3c-437f-87d5-9fe9128cbf53"
        },
        "item": {
          "id": "ed4ddc55-f0fc-43e1-8179-474385b31242",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c03c5c0b-3ddf-48e8-8ed4-49e83b94af6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae1efbd-d087-4808-9998-f16aefa80a07",
        "cursor": {
          "ref": "99433233-1083-4efe-9be4-f92cc0611fef",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cfca9dec-cdfe-4493-836c-d94de524d9a4"
        },
        "item": {
          "id": "8ae1efbd-d087-4808-9998-f16aefa80a07",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c4084d77-1b32-4c7b-a1b2-45a46dffd698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1163d30c-8977-423f-872f-7d54d89d1f49",
        "cursor": {
          "ref": "375c594d-fbb9-470a-91b7-c3b4063a6a55",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "baa06a6b-ce35-497f-b95a-31961ac839e4"
        },
        "item": {
          "id": "1163d30c-8977-423f-872f-7d54d89d1f49",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "065cbd7a-13ac-4287-847e-9ee067de9ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ba1e09-f6a9-4ea5-83c8-61f540dae224",
        "cursor": {
          "ref": "6188a2db-35dd-4611-87e6-b33cf2e56438",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "33c8ad21-c61b-4c7a-bf85-0af5395e9648"
        },
        "item": {
          "id": "03ba1e09-f6a9-4ea5-83c8-61f540dae224",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "81771d6a-5daf-4f6c-bb74-5353a6ce4aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7989a1-356d-48e4-8fa7-0259aec10477",
        "cursor": {
          "ref": "b8ac9010-5463-4fc1-a1fc-518f59cca938",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9e9a40a7-7468-4d75-b00e-eaca50c6df14"
        },
        "item": {
          "id": "8e7989a1-356d-48e4-8fa7-0259aec10477",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1c7c8b22-1bbd-4b1e-afca-0a5f9318a268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3e64f3-eafc-4533-8300-a0827773baab",
        "cursor": {
          "ref": "db171b3e-33e9-4250-9046-c7ebc766343e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "892e42e1-0943-4903-bb51-90cf1cf73e46"
        },
        "item": {
          "id": "6b3e64f3-eafc-4533-8300-a0827773baab",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "19d55019-94e1-4cf8-8b88-62acdd6dc34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e9a29c-9e3f-4194-b42a-ab71291c0075",
        "cursor": {
          "ref": "2d94f713-bae8-4702-ab80-f98364fa2802",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "421e518f-64cb-49fb-ac09-59e236294f4b"
        },
        "item": {
          "id": "79e9a29c-9e3f-4194-b42a-ab71291c0075",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "30a521d6-ebd7-4356-8858-3bcf062d2b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3946e738-943d-40e9-a091-d9317065a1af",
        "cursor": {
          "ref": "b8993d23-e4e8-4d8a-952e-423bf603ff71",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "511a1afa-51e1-4c5b-898b-85cbe60cfbbd"
        },
        "item": {
          "id": "3946e738-943d-40e9-a091-d9317065a1af",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a8e63cd0-51ce-4828-952c-82dd6926158f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15030ffc-7040-4a71-bc59-ab517ce9e41f",
        "cursor": {
          "ref": "ff0c5729-6c20-41ff-914d-1a5e874bc748",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "28d87d2a-a334-4607-9c74-caeacee93da4"
        },
        "item": {
          "id": "15030ffc-7040-4a71-bc59-ab517ce9e41f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3b5d4e28-05e1-4414-a39d-71542d2fcb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba14aab7-8616-4f5b-8698-7de58f2f2e5c",
        "cursor": {
          "ref": "c3c76829-2a67-4a3a-8e8e-2ae05ad9bd9f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eba042b9-9634-47be-889e-822b9f9cc1b8"
        },
        "item": {
          "id": "ba14aab7-8616-4f5b-8698-7de58f2f2e5c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8681545a-efbe-44b8-945a-514f3f60494c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b1ae25-6407-4c15-b890-ac9fe96f23a1",
        "cursor": {
          "ref": "d57f1287-173f-479b-ae31-7e4180ab62ed",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "52b04466-5559-428e-9810-f77f8f6089e6"
        },
        "item": {
          "id": "f5b1ae25-6407-4c15-b890-ac9fe96f23a1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "77a54867-f46d-46dd-8761-d25d839752e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9d9b79-30e1-4419-9955-784109ffadd4",
        "cursor": {
          "ref": "5d58bfeb-c8b8-4749-a60d-01e51657215c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0309cb8b-aba8-4c07-a0b7-6cc9a6577628"
        },
        "item": {
          "id": "0d9d9b79-30e1-4419-9955-784109ffadd4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e0b4731a-2a20-4892-935c-dfedf9931f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3e8bbd-ad82-4ddc-9e66-e851f8da1e8c",
        "cursor": {
          "ref": "e09b46a8-c7c4-440d-86db-f20a5e50dcf5",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3873d930-fe80-4d47-b4a7-8c3701dea6be"
        },
        "item": {
          "id": "ba3e8bbd-ad82-4ddc-9e66-e851f8da1e8c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "753551d9-97c3-4836-962e-cafc7908eafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e82c5d-21e8-49b0-87c5-0edcb959c894",
        "cursor": {
          "ref": "71757ef4-7618-4ed5-99cd-7da893004258",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a445897f-4ac2-4671-8f98-4ba0c50a0791"
        },
        "item": {
          "id": "06e82c5d-21e8-49b0-87c5-0edcb959c894",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e41dcae9-a8cb-4714-9c7e-496a4e140ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2981887d-c370-40ba-82c3-cbd80c101e23",
        "cursor": {
          "ref": "4820fc87-3b42-4c75-8689-551fe7223b65",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a4b49c29-c50b-4de4-9c4c-26b25a0eb1e7"
        },
        "item": {
          "id": "2981887d-c370-40ba-82c3-cbd80c101e23",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "65340126-5020-4cde-9854-0938ff0975a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a826d8-f806-46c2-a06d-fd35b6b9536d",
        "cursor": {
          "ref": "9053c503-53cd-4b55-b3b1-5f66cfbf686e",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f723b75c-1011-412d-8c76-15e6eabf51b1"
        },
        "item": {
          "id": "63a826d8-f806-46c2-a06d-fd35b6b9536d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0c3b319a-7175-4b76-8854-98c02f850a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff1c18f-4033-4a33-afb1-e47d499c3372",
        "cursor": {
          "ref": "20bd6fb2-fc36-4e80-b22d-320eceb20ec8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b54cbe48-8efa-4e69-9cd3-b35c21826bea"
        },
        "item": {
          "id": "aff1c18f-4033-4a33-afb1-e47d499c3372",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8a45762b-4429-449b-84d5-a140150f0867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee63aa3-635c-4efb-b485-da6c2f484271",
        "cursor": {
          "ref": "b9e22af4-5e23-4235-a74d-3bebaedd6d3c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a7919438-deca-4be5-b27e-9ded2c6f2626"
        },
        "item": {
          "id": "eee63aa3-635c-4efb-b485-da6c2f484271",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ab13f32c-cb27-4d4b-94c0-41bb563e76a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bef481-a893-404b-8d9e-c35b16c80786",
        "cursor": {
          "ref": "13d44d00-3471-493d-8cb5-0e07fe52ef85",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5b99bf1d-d9c2-4950-9a84-5e0c789c2c7e"
        },
        "item": {
          "id": "a4bef481-a893-404b-8d9e-c35b16c80786",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "74e847a9-434f-4d1b-aaeb-b7a785fc6d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b06472-3db2-4f11-a19a-46b198732b7d",
        "cursor": {
          "ref": "ec948c66-65ad-4e0d-8bd2-5e6f3dddb5f7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a88c1810-fadc-451a-aca8-4ff51b1afd8e"
        },
        "item": {
          "id": "01b06472-3db2-4f11-a19a-46b198732b7d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d5e30c72-977c-470f-93d6-3d04ba285087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6098c867-5acb-4a92-8b9b-ec3366d2f863",
        "cursor": {
          "ref": "163d8280-c9ac-4c94-96a5-84188b702e4a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "faf24267-a33f-47c0-8f9b-2d0edf56154a"
        },
        "item": {
          "id": "6098c867-5acb-4a92-8b9b-ec3366d2f863",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c4048564-a660-4fd3-aabc-dd17cb74bc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faa250a-c8ce-47bf-a917-5509af830329",
        "cursor": {
          "ref": "e224678b-3442-47e0-8d25-2b6894ae0b02",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "42566b46-c74c-4139-83c9-5f880bebdd8a"
        },
        "item": {
          "id": "5faa250a-c8ce-47bf-a917-5509af830329",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e6114944-3362-44ed-8768-7de6752078a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9b8859-396e-4f1f-9008-5d3790c02bef",
        "cursor": {
          "ref": "d1f34b24-ec0f-471f-afa2-ae3d3d3ca7ad",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "98e4d15e-f5bc-4cea-b7ca-25603ccfb794"
        },
        "item": {
          "id": "bd9b8859-396e-4f1f-9008-5d3790c02bef",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cc08c1ac-fddb-400c-941c-a5ef7bb7c18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9edd8df-5736-4272-9723-0956871400e7",
        "cursor": {
          "ref": "25f36f45-6d14-4510-985c-986ec900cca4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fa4a55ed-33e6-42a9-9ef0-8ffefab65cf8"
        },
        "item": {
          "id": "b9edd8df-5736-4272-9723-0956871400e7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4410582e-3333-4e03-94bc-352a2b925917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d343edf9-c7c4-4a01-bd34-4dce202e77a3",
        "cursor": {
          "ref": "cac9c239-ede2-451f-b4d3-f41c688d2f11",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "aa7cda44-18ae-401d-8dee-fbc9000e28d6"
        },
        "item": {
          "id": "d343edf9-c7c4-4a01-bd34-4dce202e77a3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ae74bec9-df03-4a65-af9d-40ac9bc0c96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75758ff0-b243-4b30-96db-704f6d412933",
        "cursor": {
          "ref": "9ae3266d-7836-4dbe-991e-4c1450cf0714",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9dd74a24-d117-446a-9db6-170e29e418fc"
        },
        "item": {
          "id": "75758ff0-b243-4b30-96db-704f6d412933",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0d81e7fe-a670-47c3-a402-c4d6718233f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f161bcd-b983-45e4-bbf7-08f976b6e69a",
        "cursor": {
          "ref": "8c3ac04b-d268-46a6-ae41-9acc09e5d63d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f682c3c8-a7e7-4b25-9a90-6d597908af99"
        },
        "item": {
          "id": "8f161bcd-b983-45e4-bbf7-08f976b6e69a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8bae4732-7973-41b8-967b-824d6e636de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1214fb3a-1059-44b7-9d06-6b7550902435",
        "cursor": {
          "ref": "6c863f89-74bd-4082-8734-54ffd3d3ba6e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "61fc689f-65c2-47e6-8491-4cc482b9d3da"
        },
        "item": {
          "id": "1214fb3a-1059-44b7-9d06-6b7550902435",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2d1541df-1678-4bc6-ad0d-da79951e12ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33604259-97a9-461d-9a6b-dc4a0ff2d704",
        "cursor": {
          "ref": "ba3bae85-37c6-47d6-b9c8-429f81564073",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fd12a9a2-bd1b-44c5-af1b-3f79e963451e"
        },
        "item": {
          "id": "33604259-97a9-461d-9a6b-dc4a0ff2d704",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "229fe2cf-70a6-4bc6-a38c-014b60839b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56e7da8-6c46-4b1a-bf59-360011312da9",
        "cursor": {
          "ref": "b8123ffd-8b67-430f-b0da-30bed18c92f0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "42c22b15-ce6c-438c-8b87-f4a65eee1c49"
        },
        "item": {
          "id": "b56e7da8-6c46-4b1a-bf59-360011312da9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "defbd3f9-43f8-4b9e-bb0b-e2fbcd8ddd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f385e206-c07e-4f05-9d19-1209678cc4ae",
        "cursor": {
          "ref": "53c3b699-24e4-42a6-8b81-618152cc6b3b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "27b61c93-35f3-4d0e-b35b-ef1ee973c03e"
        },
        "item": {
          "id": "f385e206-c07e-4f05-9d19-1209678cc4ae",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6252d2de-3be7-4531-a384-d00eb51f4c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdcb6e8-b859-426d-a822-7ba9bba8af46",
        "cursor": {
          "ref": "6c282e23-f803-4581-aa01-f933432296f5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "93c3fc35-3904-4e7f-8b82-ab12067b87e8"
        },
        "item": {
          "id": "fcdcb6e8-b859-426d-a822-7ba9bba8af46",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "264feace-bcf4-42b7-b192-1bb720ecddde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165ffad8-5d9b-49e2-b101-a7120e9faf92",
        "cursor": {
          "ref": "390f3952-5227-4540-adbe-71cc55aa92a2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7aa6022d-96b3-402d-888f-a8e9019ef1dc"
        },
        "item": {
          "id": "165ffad8-5d9b-49e2-b101-a7120e9faf92",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ce22a366-c7cc-4302-b11c-af287d18fab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b89acb4-7b2f-495b-b878-2c1625f7941d",
        "cursor": {
          "ref": "b382aa91-1dd8-4e62-97c8-37dfa87df171",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eb56b0a7-1392-4652-8deb-7f9d2e988078"
        },
        "item": {
          "id": "1b89acb4-7b2f-495b-b878-2c1625f7941d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "658e5177-c740-4835-95a4-2f8a2031184c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f03efe9-9df3-4157-819b-c3fc50ec83e8",
        "cursor": {
          "ref": "f03cfef6-bf56-4006-8aad-ba0a0ae5dda0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f7372f61-29bd-4e95-a2d8-3575252dea43"
        },
        "item": {
          "id": "4f03efe9-9df3-4157-819b-c3fc50ec83e8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "652ab06f-01f5-41e5-8a52-1452850834ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c0c370-4a6d-44d6-a74c-a4d26f6e2711",
        "cursor": {
          "ref": "fba553bc-de01-4021-8c36-10d8dac27683",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "62aee410-0618-48ac-bca6-649b0b1c4faf"
        },
        "item": {
          "id": "19c0c370-4a6d-44d6-a74c-a4d26f6e2711",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2156ad51-a782-475f-bc1a-6b9025c6e140",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4313f3e3-7ea4-48e3-a982-8592cf0a6f3e",
        "cursor": {
          "ref": "36bf0e5c-64a7-47e3-b8b3-8df5db6473ac",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "600d04d0-8c80-489c-b7b2-fac4098cf571"
        },
        "item": {
          "id": "4313f3e3-7ea4-48e3-a982-8592cf0a6f3e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7c05c323-3a08-4bac-8a96-ea9c2e1815be",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6930e3f-a06f-4813-afb0-855a56e48484",
        "cursor": {
          "ref": "75d9cb9d-14a8-4f5f-9d49-38a4c45acc9e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a5b9a2fe-3f1e-415a-a3b1-916ffeed5d4f"
        },
        "item": {
          "id": "c6930e3f-a06f-4813-afb0-855a56e48484",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4ea6e3ce-bf37-4ac2-9428-49beabcce5b2",
          "status": "OK",
          "code": 200,
          "responseTime": 4528,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "730d309a-3c03-40af-93fd-2e202f19c656",
        "cursor": {
          "ref": "364803f7-93f7-4f88-9ff7-25b3ba80b58d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8940f762-a899-4e68-a1ff-b65d37156d1e"
        },
        "item": {
          "id": "730d309a-3c03-40af-93fd-2e202f19c656",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "805de5f2-6899-4211-a4cd-b41e3fccaada",
          "status": "OK",
          "code": 200,
          "responseTime": 2988,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f4a7fd-e5f0-496d-b97e-942cdffdea68",
        "cursor": {
          "ref": "d0cd7449-23f2-4e8b-aa7a-156d692d5043",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b7c23458-c8d0-419f-ba12-4282900d0833"
        },
        "item": {
          "id": "d1f4a7fd-e5f0-496d-b97e-942cdffdea68",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2c45874-2f58-4765-a7bd-4c5bc78b3e28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f4a7fd-e5f0-496d-b97e-942cdffdea68",
        "cursor": {
          "ref": "d0cd7449-23f2-4e8b-aa7a-156d692d5043",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b7c23458-c8d0-419f-ba12-4282900d0833"
        },
        "item": {
          "id": "d1f4a7fd-e5f0-496d-b97e-942cdffdea68",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2c45874-2f58-4765-a7bd-4c5bc78b3e28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1be76f-1770-4589-b9a8-3548dd1eb731",
        "cursor": {
          "ref": "73abb954-c767-41ef-b7a1-d5b8ca17649b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2e1a15db-dc66-40e5-a2dc-030f5437f07e"
        },
        "item": {
          "id": "1f1be76f-1770-4589-b9a8-3548dd1eb731",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c3970a1c-d44a-48a2-9819-3d53482e543e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1588829d-6940-4c74-8ab9-08559b2695b7",
        "cursor": {
          "ref": "9dfc454f-2e66-4737-b112-4934d57bb419",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c91050a8-e340-49cf-89fd-87bb7d589927"
        },
        "item": {
          "id": "1588829d-6940-4c74-8ab9-08559b2695b7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bec569a1-8610-4663-bf36-aebc57164211",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}