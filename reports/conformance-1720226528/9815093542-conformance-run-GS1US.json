{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bb6b74b2-1b1e-4293-b51b-0cabd0a10ed3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b8aa1edb-367e-409c-b5fd-1e0d41dce35f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88e48d6b-07e4-488f-bb5e-0c7d5f49020b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "94a6a8b1-320e-4bcc-b719-35ec9080556e"
                }
              }
            ]
          },
          {
            "id": "2f21f7fa-1f3a-4b57-83ba-44d6e2858eb5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61f609bb-6d75-4ccb-86a7-dfda6102dd07",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e9dd8e70-43e8-4925-8f3f-66a41e11cb60"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8fea010d-0b22-414c-b57d-2da1beb1be13",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a9d14089-1b88-494c-a62a-3b30dc695873",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7903012-2c12-45b6-96c0-ae3b82200877",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a3fbdf6-961f-4145-80fd-3ef5153b8159",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66e4a918-9149-426d-913d-585e359147c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8568c7be-fdda-4fda-ad73-6324a1bb2f34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ea978dc-bb5f-443c-a1d2-391faecebed8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5b78ffc7-35d8-4b63-8965-ca0235499def",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8445d33b-f91d-4581-8898-b4be30f6a389"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff91eea4-0763-4bb1-b739-6d58c8b5e957",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3b48c6a5-0cdf-495f-8cca-38ea811789c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6aca32c0-de0c-40cd-a63a-90bf1f510cfb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68838077-bd26-4699-a431-ae3920ca90cb"
            }
          }
        ]
      },
      {
        "id": "df26dbf7-0b11-4096-9f23-d9204bd286bb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fa7f4a7a-2cdc-4b13-ae25-d7eb1c33c678",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41d39aad-6338-4d44-b1fa-1c0bd1f02ef7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b4d308b-b4a4-4e21-a908-ad8f7785cae9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba13bda7-2d6a-41c4-a490-3c1a11887fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff620771-6d5d-4667-8e44-a852fd022cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a82ef62-cdad-495b-92a4-76d0fb19581b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7749ef81-3a2a-47f0-a34c-21bde253b9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c077da12-22ae-4777-9974-d95c9ac3faaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21664557-7fbb-47de-ba54-0fa7d5ace5fe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e9a70d-d419-43d4-8c37-7b6bf16fe220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d7418f9-794a-485c-86d5-ac31f3a4101d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0bcc66a4-06b4-49c5-8525-5a48733afb47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1a755ea-d825-4f87-a4a6-bd318564fd6a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ae63b4-b9c6-409a-9c11-f1dca4838e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ac8c1b8-cc70-411b-9101-aa12da384fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c27f7f4-6bf7-4af2-b5d6-3ff0ea5af89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a392a92-8283-44ac-9c9f-9dfd26e50d63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "062694a6-7d8f-403f-ad65-3c061ac61478",
            "name": "Positive Testing",
            "item": [
              {
                "id": "157e6ebe-94ee-4bee-87ff-860a16209e46",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57f5116e-d42e-477e-8aef-69d556d339f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "71932238-a5fb-40ea-ad12-9889afe19fdc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "410d19ff-dd5e-4beb-931b-ad445873f76b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5bd815a0-4929-4680-a5c2-5d4beaab3404"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed6cfd38-e22b-47be-ac0b-dc3af6d088a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c74a6484-8a19-43dc-901c-26ab9a826ab0"
            }
          }
        ]
      },
      {
        "id": "fa7f6792-ce03-424f-b7e5-b6a774f8ea75",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "93b55716-1659-4d66-adca-04ceb33479d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c449504-2782-4f71-a17e-1789a6c20eee",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6d32f419-6b55-4208-8633-de2e2e4c8481",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8035bee-c5b3-43f5-8277-2fb848e75395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20da68da-1f3d-4f4f-9607-4076e9967b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7c8e24-39fd-475e-bcfb-0ccf007d116f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f635fbb1-0347-45df-8315-26f442e6d30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccada84-07aa-48f4-aa5b-681f98951286",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97230382-e291-4c3a-acec-5e981410d27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2919ce09-5dfd-4172-986a-e158119fc918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e2b6ae-5083-466e-b184-4e3aafe33bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a45b46f-7acf-4057-bb67-eabd629850f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7549e6de-12cd-48e9-97a1-e9d34d61ce9d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab6e901-be0c-4050-a9e6-9393620008dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b526b04d-c9fa-44a4-83ad-1401ba871989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7df9d20-4e8f-40d1-988a-a872065fd5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b9752b2-8cbd-49b7-8b3a-249bff411817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752915fe-e0a8-4d0a-acd1-422ddf1ff5fb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e7f08a-1ddd-45b1-b693-79551d20406a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdc46fb-dd2d-42e8-bbb7-da85ccb0a643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390f03d5-311a-49d7-89a8-67af143cb787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c78713b-f2ca-4542-b1e1-e7a55233922d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4740cf82-2389-493e-b00a-e887b8054694",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ed3401-0401-4000-b8e8-35f7e6b0a300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bae4476-cfa9-4ac2-9790-57ffd74fed4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d545abfc-e7e9-45a3-9785-17adaf555cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c0d0ddd-d556-485c-9722-6ed9075b6586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b108dce-9d87-40f6-8d9a-4334d905979e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fc6a9d-ab93-416d-b25e-16e56805f395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece4234a-acbf-4b61-939c-6a273817efec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a2a2c5-3c18-4b34-826e-d57703466403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfabed00-8466-4b61-8b83-59ea6dffb9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a59916-b0b7-45ac-b252-3e953759feef",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879afbab-01a8-43d4-9d95-2dfbc9b984ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05876eb-575e-4f5e-8000-bc0f9656758c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5954a56d-8101-4e7f-8f73-e57e7c310141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "049236b3-327a-4b49-a512-55edf0ebca0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe7a821-57b7-4ab8-99ab-46357fd485bd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21954173-881f-4ddc-840c-7f98cd37173d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d8e203-6f46-459a-8018-042198582004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd39955-f3c0-4f0e-abf7-688960bebad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "036a476a-e0f0-4630-8e60-24d303cb00e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c8b35f-2271-46af-bc7a-d5b9556974f4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890eade9-8386-4667-b9c0-2c59828489ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4086bf8-af7c-48ae-a371-8c0cb19cb177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbc35b5-e7bb-4388-8cf3-cdeb9cdfb7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f3f3ebb-3031-43f5-83cb-8800e2c4d080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc22d59-f0a5-4a78-9d5c-81bd65cb2f0d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b84c49a-10cb-45e3-9c12-e50fed2eff54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf5b9d9-cd88-4b8e-af16-671d6e5ccfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29782e4-3dbb-4527-943a-294791a8dc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e73c57b8-6426-4ad4-b613-687bc6301faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5970358-5435-490c-bfac-dfb49da31db8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c605879-c341-4833-be35-31b6fc887d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d3278d-9d9b-4951-8abb-869e95282d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fc501e-ccd5-47a2-9079-84325c0c79ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da6fd59e-d124-4ae7-b3b6-a5f70608ea47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b4ebe7-98bd-41a8-ae3c-f7fb8394bca2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7403295a-2aee-49eb-b728-66e6d6ec525b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e09c5c-5f8d-47c4-a814-96664030fc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07db4cda-2737-4d5e-ada2-b478977343e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4530dc20-ca61-41c6-84e4-3f3dd19838e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181d117c-b5a9-421b-8188-88d726bd62e6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f9a490-e98b-4cc9-a7af-a4b4924388ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc8def0-ad3e-46a0-b5d4-8625447cf10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699eda23-3262-4dae-9f2a-8244e37a6705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b75774c-2520-4c97-93f1-787c875daa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648040e9-a6be-42d1-9d37-3de64e83cc3a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c272bf-fec2-40e3-963f-135ae2340938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f781a5-5a05-4df5-8cca-cf9388f4e24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615b541a-40ae-4870-af82-9388dcab6a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0089c404-d6c2-46d7-8c05-c6e11ed84589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7167ccd8-09d6-4b2d-b925-c634a9e8932b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4486df5-fcf3-4e19-ac6d-e4ec705e19e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91286ca7-705f-4e67-8b19-2a540b2fe57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74df55e4-c875-4350-9ab3-c767b12d907b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a297cd3c-04f8-4609-8bf9-7e23dae60373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659ee21a-6812-4bd2-9540-d69b8623e3bd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c697c5-d5de-4126-b419-a9846002543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923934b4-81cd-41c1-bab4-dfbda535b1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afffeb85-d7f7-46e0-8164-36ec315d5981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5113e20-20da-48c8-b01a-1c28e3982802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da401253-ef7b-4539-a961-691e97275bf7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0a7aed-cf45-4a60-92c0-7342162fd3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23c1712-d4ce-4cf7-8d87-6e7dff87fcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e337f3b8-4182-4f90-ab76-0d21b8b287b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1393de24-cb8e-49c5-b8a5-792e2d629dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1df7595-a667-423c-a710-decfe0f6ba1e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6ad997-35f8-4513-8732-7afee4607a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f15b87-b6c7-4b47-beaf-4609d7b545ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec3ed30-c8bd-4274-82fc-c3011077e2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f821405-1513-4db5-814f-f8385b7ab4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13eea43-a075-4432-a48d-e506b113dc5f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203eeff7-39b0-439a-8b5d-cf7253edcc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450df0cc-9e4d-4626-a016-562a9938942c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1995225f-0320-428e-9ae8-7cfc04fb4471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8efee8a9-68df-4248-af11-a6b2fce54a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b684a4fc-a23d-425e-a476-8a22533bbdcc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49328ef9-f033-4570-b3db-607d74635e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79dd361-a96b-4bc5-b19f-a5b0ddb0f5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1be61e7-895f-455e-9fd1-9c6020354e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c43af49-0c85-436b-bad8-53d07339248a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc907861-3657-4815-acf2-3f48dc976eb6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3c2039-32e4-4d92-99d7-01d3565fe812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34efa51e-ba77-4b78-b77d-6237ecd6428d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e468f547-6808-4a2f-a0b2-38d51144781f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c80262-f63d-4ecc-8067-84f5c57b75f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c684f8e-8510-4565-a67d-facade290c29",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb2c6ec-c7c6-4abf-b746-0cc85c45894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bb1517-3b2a-4ff7-87e0-60e91a01e6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1453e245-2bef-45d7-8adb-38f14edc39f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdb5018-fd4f-44a8-a83e-dd73e2d3920d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55b3660-dcf9-46d8-a826-c54506c2b06f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f8a284-44b8-4536-8df6-3f7e9dc69df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711dd6c7-08a2-46ea-a98f-899e1e14d66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e57ef7-e6ed-4955-ab6e-9d6266d1f9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46e8535d-0a73-4f74-8f39-69e42706650e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d722dd65-e765-4b48-a19c-0a7025431143",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaff793-143d-4a67-b4ee-077781cc62b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90b16fd-28f4-4c9e-8170-dd403f36039b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433381f8-7b35-4d83-b453-b3351ef01c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddecbc36-4191-422f-8ab4-df087f104c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967277f4-2e76-4ae3-99eb-18219d62437c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56b26a9-44bb-41d8-acb8-ec4cc2287fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ff21fb-c599-4181-b402-934f23773094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcb0086-55d9-4ea6-acb3-f9153f2df751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f7bb27-82ca-4831-a0b7-1b59fd192857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a03802-e240-450a-af09-10f18ecb2403",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736b5775-da75-4a2b-8a81-0e316bda9e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f439a3e-1b56-4f90-be00-d4a8e47f732c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346c412f-e080-4447-9a49-38ade70e443c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2abeda-1943-4f35-9784-9f1704bbb50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5667a6-cafe-4191-88fe-a51437d949ce",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a465e840-5298-4b00-9c1a-445d3ca38ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd8d853-94a5-42d5-9093-0db7a218bad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704645a2-e0b9-4968-9735-290a8333b320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75594cf-91ca-4590-845a-939ece64bd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd2b58a-0b01-4cbf-89e7-c5294c9bcac7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0b4a1c-0f28-43ac-8ecf-cae670a7a657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f7399b-0121-4cb2-ba13-37377e968ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2c4fa9-6490-4213-8361-6babbbcc600d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50147d52-bd7d-4670-bce4-bf6d3cabcc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c072968f-1756-4d3c-b6b8-47849415622d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a24f381-b97e-4d6f-a955-c8cf20706743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e0074d-87c9-4ab1-935a-228f4fb3d735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70feef6d-e306-483e-ba71-b9abb1be346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8aae4c-4716-44a8-aee5-eb7e2ca99bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8295c1-f4ab-45ca-ba88-478736d93435",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f12baee-e261-4044-a720-eba23d991b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28bfcca-754e-4db6-83ee-3f0900d90bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84c8eb4-b208-4c6b-b1b6-132e86d0d64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8730a81-7473-4511-a7ed-e716120dc23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee6b443-f60c-460c-ac49-aa28b6ba7337",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65143a9e-4c7d-4387-949e-d4909ff63e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533a9817-0056-4a7b-90eb-cf1755ae1348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e056d0e-2387-497b-9788-51ac5fb5dc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbb105d-d942-4451-948f-79f5f74ab461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343723bf-4bdf-4922-9660-3225edc7f44a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f07e25-c3ce-46f8-b927-596e12786346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7074ff04-dab5-4453-8526-23062a8f9ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d02219-146f-41b1-9131-4b82b9a13549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c75a14b-fe0c-4425-b05c-3b984720071f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95338e1d-4bc4-4322-af79-54d291e98c5c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc932f7f-aa6c-4134-a727-df92c484841d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e211fe6b-0b2c-4497-905e-bb39542cca88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e0da68-7a4d-432e-89b9-836b80f7c206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76487802-8fe0-462c-9903-52c8857dd9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502bbcb4-d801-4d17-9589-6de08b5f414a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f6779b-5877-4649-a84f-a4eb262d414c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0615917-1250-4376-9f98-7574f084cfe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23422018-b617-4a66-8308-c512cf6c6eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5230dbc3-b0a4-4a12-a296-b6df28e72af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ef51f0-98ee-4e9c-b09e-b519a18a457a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e59ec1-2f48-432d-81d3-4186e1ee1b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67acf449-228f-4f88-a317-293f090382d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dddb0e-df4c-4804-b343-c9d02b522932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "999a1d66-90b0-444f-87b9-81461af4de09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5325ed68-8f2a-455b-a035-95003c1e7221",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a375f740-b021-4839-9120-5efb5a963efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5998052-3b5c-43b8-9147-45f9dbc50abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2166c96-82fd-4a12-859c-88c58db45fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "198f485f-a8cd-45ac-9e67-5612d794adf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6875dd17-10d8-4b2a-98b7-1696e2a816f2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adae0f1-58c9-4288-91ef-91c0542f1ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c9b233-22ab-4efb-9ff3-6226d5e52f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103ff559-245e-4b14-8910-79708f19bae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43c1221f-c524-4054-b8ed-a4c55cd2d2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bdcc39-0e29-4300-aa7f-5f025bba6f46",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73d9347-5445-47d6-8999-e4495fed37b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17afc2ad-e0e2-48d0-b43c-239117dbc567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8265867-cf14-4f45-b0f5-41b327cca613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "64566e06-4242-43de-b6b1-f1d5077d3dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd009f2-df68-4838-ba8a-8dc8f261512a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4379a5cf-d23a-436e-845f-ce3d8c77c42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a300b7e-f060-4e28-8e30-f49dc91bd65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf591ee-b08c-4b7d-b21f-266866169554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4dc6eb-a0a5-4feb-a4ab-dea40027a383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ad500a-acce-4c02-bfe1-34f9a70f88d6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e202aa-5ed9-45d1-ba62-5713938555f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e151536-2c6c-473d-a94c-5baeab3c4c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fde6476-250a-4757-8a97-c6700cabfec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdab146-41ed-4fd1-9807-53284e0d7a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04cf999-6016-434f-be7c-611c7700681b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9825dab2-01af-4453-a850-390c8b90c2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0161d854-244b-49a7-b7a4-0bc9bee63eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2485038-8541-443e-b9b6-8ff3b2f336cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3396157d-2bdf-4c2f-be9c-630424b059b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a0d85b-678b-4292-ac8f-9dc82fd00f24",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff27340-614b-4e87-86c1-ea501da384e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1841d14-a5ea-4008-9e85-ec3e06ab4b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4177adb-a52b-413b-9bf2-b0962a05043f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3a73dc35-6060-42b9-add1-502911b3639e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802e8be4-6518-47f0-b3e7-2dc2b576fa49",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaf0fdc-1d25-46ed-bdf7-97925b4f2336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b4abc0-3782-4407-b333-3d5692b886cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bef90c3-47e0-4b1b-bb0b-aa1cbc3eb748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "80ba3f5a-bf07-4bce-aa38-08f0d69d3815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1eeccf5-0b86-435a-9606-20aafdd09bb4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c0db3d-5e72-444e-ab19-517b9a6a1569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fd182f-4d09-491d-9cc4-b2603528d84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8310524-20fd-4777-89aa-7b70ce50155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b12d66-cc30-4912-841c-f5ec2c0ddf9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67ff120-99bc-425f-9244-dad58b5442db",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1990af-3200-40b8-bbe0-8cb65eaeacf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63159dce-e8ae-462b-8a67-f7a76736b0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b4095a-4636-4a16-93eb-884a2a135c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "982c4c9f-7232-48c2-9d20-ba42b117ac59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6e9106-9b68-41b6-a63c-ec719eb8cce0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08d6a5d-89d7-4a31-b18d-1c6f30474935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f4e872-e29b-45c1-9c4a-c5a83dd89ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6244ed2e-1fab-4c5c-abd5-65c23450ed20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45eb462d-336e-4ee6-8b9b-7fb41d991d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39e55cd-2ba9-4b3a-94e8-6ae9d14809d0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a14c23a-2a04-4a27-a325-2e51bbe77964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e773d8a3-4af0-43b2-8ed8-b645b12fcc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0f9e07-a735-4722-aa70-ccb72c004f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b42f56d2-c2d0-4e6c-b953-ffdea2354825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169c908b-89fa-4742-a438-b5adf1222978",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f65d6e5-3ec3-4fa7-a5a4-68dd8a12947c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cd4382-b85b-4db5-8dc6-21436772615d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad9241e-6587-492a-991d-07dc26156b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e31e222d-fa7f-4b4e-9159-63a5486ec12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c79df4f-09de-48d0-87fd-516d0192f8cc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c6558e-de01-4805-a649-47064e38a383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd006326-69b6-47b6-ac3a-6cb2408f18d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee348ccd-1d0a-49f7-bcf9-c1f0d9e76a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1555efbd-8a40-49f9-8849-abd79ae1ad94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2128d6-32ac-40e5-9bda-0d7eae9e2dbe",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d619e2-7c7e-4a68-b289-7e431361b04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42ae5c4-d4f0-44a3-9f0d-2b561ba1f907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3daf645-4ab7-416c-b54a-cda413ab9217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af06dd96-5e04-437a-af38-1f5bad7cad11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5c7a6b-daa7-4df9-8429-5c29067dcde5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fc24b3-93b0-477a-b9cf-047003925a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c64d40-3dc7-4d53-974d-3af067021906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97703da-d67b-401a-b942-ede458845199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aafc0fc-1c0c-404d-972a-d84ed5e42e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0e5cbd-08da-41dc-a5d4-3f75a8d7b795",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c60eaeb-f8c3-4d1f-a081-0497f409e88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d4936f-c7fb-4309-b70a-b89c4af62f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aad9c24-8623-4692-8778-71b0fe24c461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1724159a-ac03-4066-82ba-248a9eff6ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96152ea2-eb3f-4a2b-a015-e8bb9667e828",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d39db4-5e54-44a0-9f23-04ec5f1d1d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5c658e-7ec3-4700-8e8a-7422fa59ed6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99ab281-137a-42af-bad0-e8284433af77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0df55a16-c0f8-428d-b0ca-5ad3761761a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c057b1-3518-4705-92cf-e5366cd31241",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81191684-0ecd-4ec1-99b4-758e8e69ea40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7f0a7a-26c6-49c1-96a5-f9f457a77e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b8f45f-91e1-4a9c-a186-c4b2ed96b24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50726068-e39c-4538-9f5c-8f9907a1da32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95fe6c5-8638-41e7-a790-9386e56e53f3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585b4381-b6c3-4fa0-b2aa-eb13997750e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcabaed-ac6e-46ae-aedb-2db77f9cb67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a829dd-9141-45d5-b4b7-789766a4bb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "806c8bdf-7870-485f-a5a2-2d03ffa5247f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92afabc1-e4b7-4313-a422-1b6d2f27aee4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bd4d4c-a0f8-4ae3-89da-ea2b328c9f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502e76c4-2118-4d5d-85bc-22c32336bed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d97d53-4c86-45f2-a2f0-4b81e161a73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ff134853-df66-4383-8a6b-1fc77f949f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c880ba-daed-4ff4-a812-4b8b3894f7b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8482a02-e3d1-4076-965e-2008660a821e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b3964e-5d67-4576-9828-a2cc2542925b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445affbc-fb89-4901-ac68-e232bc37a464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0c17ce-140c-4f74-8045-f698b073700f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c043dcdf-c8a4-4730-9b69-58b13ff7b105",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ddad27-d381-4c81-b2e9-fb308e99f214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe60eca-3692-4f64-a8ac-3c992f55fec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ad80c4-b4c9-443a-8565-877c70046732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a973dfc9-8c2e-4918-bc1e-26abcd195492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9daf35-5a92-4f8c-b08b-689d6cf8a25b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85ef654-620b-4a9f-bb4d-6698d822a618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e437c6-11e9-4351-a46d-5875750547bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e737319e-ad62-4ed7-b4bf-94f1239b6ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2da7b390-f010-4659-ae88-97c1bdeafa73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbbf8fa-27ae-4198-a461-eebb81d66d71",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938b5429-454f-4295-8d7a-919e3ff35417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7eaca9f-d465-48cd-a3e1-648577ea627b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09649e62-dcb5-4282-9b42-ca4e110c91d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "74560991-6b52-49e4-b520-fb367a7a8215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4305df-55f0-4ef9-8365-5e2efbd44c00",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9857077d-b98b-4df8-993a-b84b6a12d721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd769778-edb7-4a59-9178-ac911a819ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa009df0-aecd-4810-98fb-145d161e3053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8d36c1-0372-4409-8126-e96ac3fb02d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7789c2-8a72-4a8a-84b4-063436ab1a0f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05235df7-2907-4641-bc6c-1991b3039dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cc8855-23eb-4434-9594-b59058e399c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a32977-53cc-416e-95d2-faaa79c1b57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eccfe63-383c-4a0e-aab6-f1256cc24cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a477c3c0-6efe-4eda-9526-86462bb035dc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19d8870-1eb8-49ec-97c9-d0a8017c1364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6181fd7b-1911-41b0-b9db-5790e36806f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab28456-9f97-4728-9260-580580a2cc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "abdaf93d-dd99-4ef1-9b70-debb32b2dcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ed3289-43c5-457d-8f84-b475e49a901f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca95cd5-881d-4ff8-aaef-53af510d5fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e9e2fb-90d5-476d-9dc2-497b8932cdc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3220547-6c7e-4a76-9ab1-97420c77fcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "deef1e81-c99c-4e59-8921-6825902a7b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eecb069-c7dc-437f-82fd-a8e862d2229d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40d2550-77f2-4b42-a3b0-ba9bab274e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144c6b7c-3980-43fb-a62f-4a7839e7d021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4eaaa9-35f5-43ad-8253-d62c96b7f27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa523fdc-18a3-4086-81f5-bdb627c6535a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40456560-b572-4c90-80e7-9b94a54939d3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12db16d-bb3e-485f-92b4-2618d3108c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6685aeb4-8e13-42cd-84bc-08811a34484f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94adb437-2902-4c6b-85ee-4d88694e93a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c94b8f90-9ea9-4f76-8d30-30406680e7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56680738-d822-4777-b32f-b094de8c78f9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bff73d-ae67-466c-8300-ea1f69e37a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cf6b1c-0c13-42e8-bfc8-f9364a42c7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fe50cb-400b-4bdd-aa54-978285f646c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c851062-8445-44f7-bcd0-434005649a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eebb85f-29ca-46ac-850f-3f425e81e9f5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a4954f-f8f3-4e6e-bf34-0cd9ca75ef7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0195f544-3a29-4590-b1d0-c0424999e4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec5d053-2c81-49d5-a751-c7f8a940a112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4c5e95-bbe3-433a-8adf-f370ca85a041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d2f6ba-68ca-493c-9337-3afe5833c84e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6346a4-831a-4152-8bcb-8ec4a3891ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f7d547-19e3-4ec0-a047-5d2fd87fee6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebd66cd-fa86-46ac-9f55-37e5087bcdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c86bcfe2-4850-421b-a7ec-1a6722e6e328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af03551-43a3-4128-92bc-4815435596a4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3c5b71-cfaf-49e5-91cc-6fee315880f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb332ff0-3e88-4bf2-898e-7f47198bfc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b81d2e-3819-418c-9b25-4acd2f17f606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecc7dea-6cf1-4ed7-a7d4-49bdfdbb22a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b41238-1380-408b-9fac-e189d5d853e5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96542bfd-ab10-466e-bd62-6a12fa90bc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5ef06e-d7b3-49d8-9a40-278e9a8a3366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5674c6-c15a-4407-97b4-d8bfc3f8a897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d88eaca-5dc7-48b5-871d-71556fdcfc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3158de-cbc7-40ac-aa7a-ae6f19646627",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ca5969-f81a-4efb-afac-9aafef340cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2fc0f2-04d3-48a3-8d46-6e89a359de0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5e85ec-444f-4fe3-8681-70aaed6305f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d268d56-f269-47c0-9f3e-0a8783be7b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17beb3a4-a4b3-40e2-8179-d4f8454783cf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7091aad5-8476-43ed-8a01-42f23ee17158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f146b4-3549-4f86-99ca-ef9d62c9711d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480c454c-2195-4005-a522-4c572150941b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9418db8e-c1aa-4145-a072-69b8071a69b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee45516-6de5-4364-9bd1-2067a3739c11",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3e810d-ff43-4921-a56c-5f4138e421a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27965b01-8253-47cf-9f34-4f251504764f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f22675-8a84-41c3-ba29-d2f02c498652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "119b96c1-16f7-4d16-af19-e640e343f348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb67d03-4713-47a3-baa9-572949708738",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc0c999-4a0b-4872-94f3-b2684c0c9cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b78569-6afc-419d-ae0f-a384b702f213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22f8554-7902-496c-b533-2f09f9ca3edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1468adb3-e0e7-4f0f-a4c2-2e8a2bcacbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1341c08-f6c8-4d5e-92ee-fc36f1895dd7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0451f932-692b-4d07-8f9c-bb27d1868626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf3acd2-d87f-418b-86ae-11850feaa77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92f714b-550d-45df-92e2-dc3e43035d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1445653-d345-4627-a360-7851006394cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4529368-9791-407a-b4ab-c05fcdde7b4c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9796ad-1461-4152-9512-cb9e7b297fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5881fbcd-2b8c-40e4-9f8d-c334facf85fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb284e8-9460-4c00-a433-fd8772db1342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "045d996e-1580-4409-af5d-f621c4d50228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99219797-3014-4427-a716-6fcf9df2a54f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1031ad93-92d8-4e5c-91af-72ee9829dd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73953297-ecb5-4f8e-90bd-76b76a19b83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223ce9bb-ee0e-4bdc-93bc-1e65d5370932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e005aca-71a6-46fc-9ec6-a70a24439e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75121f0-a17e-47c0-8f8e-c5ca8848baf2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8444081-99b9-4ebf-8cea-d54aeb5a5f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d19aea-8d5e-4cfd-9e7e-424fd8c15f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e4a298-2ce7-4ebe-b818-6233966700a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87d85143-7a91-4f02-959f-eda732281882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4498e9-7dbb-4fb3-b1df-07222f5eab7d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347faa39-d7d1-4d2d-a380-87580ef0fe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25367d9e-5247-4f5e-a1ea-79efb6b09059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86300a75-758c-4187-896d-60f9ce5f7799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6efff89f-3d5e-49df-a830-3618e4a68e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d824fd8b-f5ac-4b0d-ae16-1f3b0e4d4319",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b515da-313e-4eb3-a9be-c7937df7d666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52537279-4eb9-4b09-9680-3d2633007c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e31c41a-6bac-4cb6-bc89-bf9597c5db85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a11627ce-abbc-4bf8-a237-1613b62b856e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398d60e6-23d4-4c2c-98cf-221027158f31",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cef1e7f-0f44-4605-b4c2-23218f8cd4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4049d715-0add-453e-a10a-94060707bda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f410610-3e05-4655-abf4-43e76cf06794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e115faac-b860-4c73-8ad4-8cdc50288ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518e54e6-25ae-4e9d-bf24-9105d1f7e6a4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d97654b-3d17-46a8-bb7e-d55592302836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d74954-2a39-4cd9-b86b-8d0337771e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06f1ff2-5081-438e-a9c7-d378fc843075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48afd03b-770c-4e3d-8582-5a60b8ca9e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7eb38da-486e-4d31-9d41-02218228953f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75992427-60db-40bc-97b3-4e510e506945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac37295c-d2ae-4fd6-8a4e-773c2543bb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89038bdd-d2f9-48ed-b866-4b2206cd513a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e71640a8-917d-44b7-a252-51b5ca080e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178c9b49-3881-4dca-8757-9f815069cd15",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a87e3b1-1e42-48b0-842d-c66b2c6c7587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3502410-99b1-4c74-bd68-2d49ad3653e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1fb65a-25de-41cf-99c0-76d15cfa7436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6afd370e-4023-44a3-9af2-1d9b10958e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dab593-9016-44bc-a3fb-21a1235bd7a6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750aea54-9568-4916-940d-163dd96c1811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be461be4-6003-41ac-bd1b-b53bdcf69aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a97065-03e1-49e3-9fc4-1c43858dad31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6dcf32-7e49-432f-adad-93a07c1db8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d783053-dc85-4bba-b6f1-bdb50545e6da",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf57afe4-cdb8-42d8-9e78-946f79895f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0830c386-36e2-428c-bcd2-bdc665709dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9ef4a3-209f-49a4-86b2-43403a091aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6a13bb-1005-4e11-ba7f-b23a0540c8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9a23fe-4131-487f-a256-e61a468bdcba",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c5517b-d08c-4231-921e-88ca5c0dc30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa0103d-80bc-40a1-8a64-f8647b810794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f816dd-cf2c-42e8-9187-ef4d6eeb4219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dfdd2f-c73d-484e-ae12-a7f4e10ad888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b2946a-1fa3-4ff4-ad0a-30285a9f02e5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a48810-7af8-4dc3-939c-a54b797e917f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464403de-3463-4b22-9076-c34d4920f10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e283388f-e1e9-4eb6-9eaa-d43913a7ceb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fac3e17-7871-4df3-8a07-f900cea42404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568745f5-b409-4876-9310-ac5e5e185eaf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21215ea-eec2-4b41-b0bf-58dc82e13db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301e00d3-8d0c-40f2-99cf-d9df8ab7170a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4243edb-d02b-460d-a78c-59773c89e2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc016800-24e5-4ea3-93f2-4e191eafdabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7753489e-f0df-412e-92aa-22ee9e820f88",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05db335-b490-4998-abb8-0d09d7fad27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1059a25c-2ec8-4804-afc2-a2260e3a3fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68ee025-b46c-4498-9fdc-fc86a00606bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "131be670-9bd8-4e71-b0e7-3eda31d84862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83031a42-39aa-432d-b5b0-e684bd1f455c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f439cc-c864-4b31-98de-5c310e6adc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8f3cea81-58eb-4ad5-98ad-cda8c6b4ab23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b031a4a9-7c81-4e1f-83a0-dac9727d7b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1515ec60-5b38-48ec-bec8-aa5a34a1dbea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b88d2d58-5c97-4ec1-b9c7-3e18a33de82b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8716626b-d8c5-4a6e-9886-121826127efa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ae1eb1-d357-4157-89e6-c9c076051379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9eaa9eec-45b4-45f8-af77-c31142833e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb77f8c1-d164-48bf-a733-697564e2524b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "095b0596-752f-4923-9d66-f7f6b5bd37ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b432895f-1846-4e9d-9b2f-3205326cbf19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecb58d5e-8c7b-4c74-83e1-8f77eabaf7c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2e09bc1-bd95-4f63-bcc0-764c496d0b0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6634ce9f-7d37-4e46-a97d-259d1d52b8d8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59526eef-5d39-4858-8eb5-47306fcd030d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ecaa07e-d115-40fb-8303-0a5b5132cd0c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13565fb7-61fa-4f70-8275-46d7fc1667b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1be47691-a3e5-46d3-9d90-cd01073efcef"
                }
              }
            ]
          },
          {
            "id": "102e398b-dc4e-46bc-88da-6817abbb158a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34a7e666-9e61-4fdb-9407-5ecf1bfdda21",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d270287c-194b-4f8f-82ed-d92381f5a5f6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2341027-6e8f-4297-9c3a-eda69eaed256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a01680a-5311-4b6b-ab42-8e39f9b0df05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239cf1a0-324f-4dcc-8680-c992e3b745ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8190106f-ba3b-4949-8cf9-922d10200c31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e6d40a0-5486-4b8e-a584-3e18630c8dbb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c332fa2-e3b1-4589-af16-1532a51d10bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2e10fd9-69b2-4fc3-8c39-782eb96a7c79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a375b1e3-4bed-4263-9fd8-2b9a8f3c8baa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "239620ca-466e-415b-a76d-4c6550440c44"
                    }
                  }
                ]
              },
              {
                "id": "3ffb1725-1979-4b5e-855c-3afc7de5fa98",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49a39d1e-ac13-4dcf-adc6-a56507cf5b63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "534c6670-a7e2-47f6-a6d1-315a647fae25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bab7e7bf-0be6-45ac-b698-5a26fe399dc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1df2103-85c7-4d56-bc2b-07d6f708804e"
                    }
                  }
                ]
              },
              {
                "id": "9dfccc36-fc95-4327-b15c-c52c8566b5b6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "134dc933-5e78-446f-9148-e835049bbc72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ec9e2ec-3e8a-4017-be0f-cbccd7ab1629"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e535af00-3390-47ec-8ca7-4daca5a37141",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db4d58bd-c07f-4473-9585-cb661e446e0e"
                    }
                  }
                ]
              },
              {
                "id": "bb4c669f-b04c-4d69-afff-2fc0515b3087",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eebeb11e-9e94-4c43-ad6a-f9c036426fe4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40973b44-7fe0-4df8-bad0-ac034cf0c0f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "879a69e3-8b7a-479d-9d57-f39286e2a918",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d8723606-e895-4e2b-baa3-0cdb683c5998"
                    }
                  }
                ]
              },
              {
                "id": "6399c010-19f9-423f-b48d-6f8be2540344",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2b2bc93-2184-4b10-8430-4075d6d3fa6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0b9e443-e834-4cad-a53d-2381f92228f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82aa06cb-4a13-42e2-b115-52189ebf513d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b6634e2a-ed10-4c68-b6be-26aee636cc51"
                    }
                  }
                ]
              },
              {
                "id": "f4fb23c8-002d-4d2a-bd32-48a5fc472f1c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a17fdbac-7cb1-4233-a973-779aaf5c8ec3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0716533e-96a7-48a0-9bd7-141f23338fef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcbee8d3-60c9-4629-a3fd-4295b8862b97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4cd32159-802b-4d3f-afd4-215493ab8e9a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "177cae75-f3c5-4e4a-bc71-9463bc07dc27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "994d82f2-a685-4971-906d-054ee8fcd00e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "65eb57e0-2b0b-41a0-819c-6df13c93f903",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f078ad9-4b3e-41a5-aac5-b99ea122685a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22dd9ba2-bcf3-4bf5-9b2f-4417a5b449f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7cfb5446-849e-4590-821e-4d7ce2bf8447"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d133010b-6ab6-414a-b17c-73bdc8ee5a8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c637fa45-a230-454e-a823-4128a6ceece4"
            }
          }
        ]
      },
      {
        "id": "d72e94ff-b732-44c3-8f3b-6fa6be3d1927",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f02a7633-70d3-44f1-aa6f-a13108052427",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27b78ecd-0478-482e-b2db-84c2898fbc4d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56b847bd-bb36-455e-a002-7dc9ae6b821e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839fe990-4ad6-47c9-aed3-73ae3fb75927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5af317e-93a9-495e-8616-98a688665d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dc5cbd-d13f-45cc-80b0-721aac5f6b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3004e2e6-c528-4c6b-bfd9-286619e96a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1570fe-1675-4dd2-813f-a78fbf0dbd27",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1da9aaf-ec13-40ef-b4b7-a6e84e3a4a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e335dd54-d86a-4d0d-b47d-56965320d519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f823a63-fdde-4d89-8989-2f998d6166b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "402ad86b-3838-4276-b295-94a8be390098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148e8864-26e4-425c-9830-ec78e98c219e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ccc0ca-bc5b-4215-81c0-09c329e57159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bca6a7c-9217-41ee-99b2-6acd59eb584d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444b7453-1165-4da5-98ed-48cb81050078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "209f940b-dd87-45e9-9d5d-3f2ebfbea715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b475f9ef-3822-4ea0-8d41-63b976e736e5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bac6bb4-bd5a-4bd6-8cf4-524de26e6f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe7e30f-75af-4ce7-ad0f-e8ac1df9c255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c29e016-a8b1-4402-875b-2a47aeccdf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "008d9b5d-2bb3-4c99-b578-f24cea1bd82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8269e008-fd1c-4d84-9097-b57b3a3de2cd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914a7dae-1d7a-49fa-b569-569bdd7ceff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c410f321-9bad-40fb-a24f-0cd27608de7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a360a757-c0af-4bf3-a67e-4b2a973b5136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26daf3fa-eefc-4f7d-b359-18c90d7cbe8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a265f4-d77c-4fa5-b322-4591431493c4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b514cd5-489e-438d-9c0a-2a73cb105aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96af7724-238b-4b4c-a516-561d558b4fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e1341d-f2da-4fab-ab5d-1cd0cc3536d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d93bc592-d2c0-4247-aed4-1fbf9fe932e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b2227a-8f88-4447-9f32-3f4cd0ae4813",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc510992-295c-48ef-bf52-b2d8d6528973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0901f720-6d51-40bb-97dc-756dc6e86910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec1f539-c06a-4e41-a7b8-d8fed44ed581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ee4f04-ec51-4a82-a8ae-33f20d9c621c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf1447c-24b3-4df7-8a81-cb0d6686ee9d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c0130a-93f8-49a5-938d-88051cecadcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2259c10f-3811-4c7d-94f5-083b8178bb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722d6880-0804-4428-a970-3e2779c98660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbaaf9e-a58e-4dbf-943f-b3de7d01286b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3353d56f-b07a-4500-9eff-c0c66501b4aa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae45c28c-fb53-4a2d-bc8f-c6ca9c7622eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae84e93-5e38-4496-9541-b1fc2afcc69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42ac72e-7580-4150-b3b4-22564d5a6b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f877aa-067d-4eaf-9c00-e919086c5ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969fb219-c337-4d21-aa1e-21947715b9e8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b601b6c-4c55-4835-9e1d-f33e6223d1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452c6dee-f2d8-48cd-a9ad-cb70510c3306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfa3b43-c782-4e0b-87db-5e54b87568cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dafb507-131e-404e-aa87-5442a8aac25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4133682d-f461-4875-8aa2-4ead9480168f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51621d12-c8c6-4c43-857c-47278a067544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccec345-143b-46bb-8c8d-9c4715ba6b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fcf036-8dbd-4ee2-a0e0-9675481c9560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "00de2ced-95da-4a24-8bcb-b090923a8cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fec985d-6471-4a65-84cc-c001a2b52880",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ebec2f-c319-4534-8372-c304992b32c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3023bc0b-3068-4a94-8060-70c0841d2b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea925045-d5cd-470a-bd1c-14e98f10d820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7efd91d-411f-46fb-812b-8c2e6ee02069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd71ce8-8fe3-4782-9724-bbfa3ed7b1a3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed45397-9fca-4b41-9ecd-1baae59fcb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c0d5ef-8a65-4ab9-bc05-d1fd548e28a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52878189-d53b-413b-8938-013d07c59129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "828bb793-ace2-4a8f-b9d9-d92eedd461c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70b592a-4684-4b15-8cbf-f9e78a402102",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb917ffb-cac4-486b-abf9-fb50f1f34a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fed33b-1f8f-460a-8e5c-2a4285064148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71ac5cb-ca4c-4160-9084-e6f1041c9c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d52f55-66d4-4a16-afba-8f513c700216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da81fef7-70f7-4dfa-b1f8-3c514a4d89fc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebd657d-6747-4bfd-abe1-5a001977ea10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c92d3f2-f767-4b50-8518-8e639869168f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f90013-5e3f-429c-9fab-f047b67b2e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb89f24-1f6f-402b-904e-67865c085212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dac2acf-b6e0-45e3-b578-0e1c5c4717a7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7410ea1b-03e9-4e59-8e56-17691568a126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ec6353-7aea-4d9a-ad4c-86f42c75e07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d1a9b6-840d-4d1e-9daa-d8410f2544ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f831ff-bd69-41e2-b79b-785340732d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5f9692-0a35-4e39-8167-566be6f1ac2e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391aaf2f-a928-4edd-86e2-582bec45781b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed02168-5783-4cb3-9beb-6c3e2869e7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d84901-e3e6-4d1f-a292-8ca793aec722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29342f1-d05f-4348-af9e-3f0c320350e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e3f4f6-e978-47d0-ac95-64562dee3600",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf149ba-054e-46cb-976a-5a8d1d17b1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea34320d-8928-4aeb-a969-c06906ab4b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced6d2cd-a6cd-45a8-9fe3-a1fcea622677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "90025c0e-eb52-4b09-b31a-89b1982be82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b48e98-22d9-4e51-8528-c6b55f6702e0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62e2bda-0e90-4055-b826-0510f4f18249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bd265a-7963-41a7-81cf-3630c1a82f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de93c49-658e-453c-bb85-415ef39be384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7688fc-8e0f-4cbc-aacb-467c8cc4c976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379c6dc8-b056-4803-bc0d-1f3bb4a3f04c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992a3e32-6b63-4801-ac9a-9dadb4891ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013058b9-3d84-4250-9418-bc5539662227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221e6498-bebc-46ed-b93f-7a7c4d1ff5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7161213c-67db-4f63-abe9-3e923a196a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a35ab10-6144-46d4-9895-23a7593c4bbf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ecdab6-4b94-43b0-b4de-a7e6ab6cd9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7930a22-309f-4bec-83b7-4b8249a36d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24252cb7-8c15-43d2-9d96-e8aceecf2f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1801f0a-141d-4ab2-be99-00b06bc8113a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f46399c-fb81-4ce0-88b0-41f8f609ef82",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab58eee0-4249-406f-b82e-d7abb2350a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332bd497-2003-4eee-8cba-9fd2305bba15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64831c46-9c07-40c4-9a6f-d6d4cdacf1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6802d6fb-4467-4b6b-a4cd-0b1bb8bff352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b57d27e-982a-47d7-8b3c-cb096ee32f36",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1959707e-81a4-404e-907a-a0bf55dd3930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb15d85f-1304-4169-9dbd-580c11f7a4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bf26e6-fefb-452c-a24f-f65e8f8f72d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9413cb-f952-4110-aaec-211b6b9c0bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2a0346-1945-4f66-8143-6e05daff5f39",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5659820e-a87b-41b2-90c6-0ab97c7974d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4c3052-bcc3-4ed8-9679-e64da012c99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baaeedd4-a6cc-4633-92aa-e888fd5fe52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d28b436-0359-4358-a6e1-8193185738ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d031b7-5c45-409d-9dc9-a29de67782f7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a1aa3b-d301-4054-8997-c0b4c0b92481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ea351b-a9c4-4d66-9f84-d75f7788873f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e2d9f1-07e9-4b52-a4c5-9b6fefd542f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc90b4ce-1743-4465-b048-acd15762b5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422f2278-3d37-48ae-bc2e-9a6082d07b43",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a36adb-d248-4877-b565-2879b11c6a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d42d2b4-5fca-4bfb-9fa7-0bc98c1c558c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1234868-c9fe-46a2-854e-f277f60c9cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7c6d6e-919e-4618-97fd-18b8e5d113e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fcb5ac-dc49-487b-a810-c307badb8f55",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7ee559-0c61-4d84-b940-d88e35f79f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd75dcd-8b7a-4a45-9633-4c38bdc25d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b36cb2-8f35-44fe-bbb2-7bc467e86c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70f65c47-1666-4b54-a356-138d9e757e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8789326-3cb4-4652-8224-15154b63a532",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c086f2-74f5-4732-a211-80eef0d6ca23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db5a4e3-0e8a-430c-ac81-d6ebddfa4f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5f7be8-59c0-4593-88d5-80b650423bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84a956b3-04ba-4049-b604-6c0da00ed8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4be3860-869a-423b-b087-a1dd12836952",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d37113c-3e38-4c32-9a5a-1532e3fe74d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1b5efa-b518-4d80-ab9e-b7414c8c454c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d6eaab-a6c5-4c95-b710-60a5fb713ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3625994e-48d8-465a-80e7-8c1cf1a83a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc8ce05-3082-432e-958a-0213699b3c78",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c67871a-4ff8-4387-be1b-f851ec1ffec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3676e5-62d0-4d23-ad53-2c7aa03a8b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ac76fa-2bac-4ba0-bed0-7efdb2fe199f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1f585e-7b5a-41c6-904b-4e232bdfeb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf414339-da35-4d56-b7af-0121b79a7e71",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2492e1d-5fd0-4512-9f2f-ebea425aa259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a94df8-b9a3-422e-8606-d3928d4a45bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00503499-1aaa-4f8e-bfb6-e1c42b39bc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0188e25-0136-4397-b99a-f9a4e35c3967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ca9481-e177-4211-86ae-5101405e2b31",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34400eb-043b-461d-99ca-7c7d99b0643e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f71e71c-0704-4791-88d9-5f97815715b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27574ce-c97c-456f-8466-dc826dc0bc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af631e3-913e-4ac7-b075-75bb3a72a755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e31516-89ea-4ef5-bdda-dc8128062d3e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb9115f-e74b-4217-b9f4-143667e3a539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cc5271-1478-4fcd-a984-de9dcce18765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbeeccc-f5a4-4d42-939b-74396faa8324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "974626a6-9348-4688-96c9-1f3cc5f297ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c850a0ca-9ab6-43c1-a12a-4eb8b3a6fa33",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dbc15c-5c6a-4552-9b37-49b5286d85af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3fcad6-cf84-4471-b35d-7c8fd3e70071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94269ff-dea9-47d7-925c-04dbebd04455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf4329e-6797-4e5b-a425-4a2b8c113299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645a5f82-1fea-45d2-bc4b-9b1e13c47887",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c2e306-177a-4ae9-a445-5ae30cb79d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4fa85e-96d3-40d8-be76-29964e060bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1d5e38-46f5-4943-8ac4-f7941a156994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8646d36-0019-49ae-a607-899abe09701f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecafca3d-42c6-4d18-93e8-0d18861f227b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb266ba-49ac-4c01-9257-3d3b04915e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad45e1c-6c3c-4782-a595-057d1224e1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec74360e-4062-4f54-8e15-4e144db4169c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b28b7126-61a4-40c3-8208-c37e88661634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea007069-864a-4eaf-a50e-2be8a2806554",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ed7f70-6de9-4652-b3d9-a613bba868f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0b1221-32b2-493a-b8c3-f1c1ac2fa63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098c60f6-0af8-4e03-8bab-a7e3162f06fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef8b240-0e03-4171-9808-e5d7e05eb491"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed21bb00-3df7-44ce-9b6a-044a51a5ce42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28ebc106-d7a6-4275-96df-325c4632e7d6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf9b88a-403e-44f3-aeab-c371f6bc6178",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2834cd6e-eb63-4e85-803a-0a17a7a8d63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699f868b-831b-40d3-a377-bf0d0026c6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1806de86-c20e-4d42-a0fe-f1e3e1f8e2e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c42dbf49-0962-4e31-9197-64313b104771",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03878e1a-9518-449e-913f-9da3cb6fd287"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b7e49d8-cd66-467d-a4ba-83673b9b3cac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b623c92-854a-4b7d-a78c-55b2a0a22c7e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d672850-6c8c-4950-8958-045b89c6c5b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7fec1bac-af2a-46d0-9852-df313f4b6302"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0639cc70-2c36-4f2b-9d26-b23b04ae662f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ba3f5d6-acf0-48ac-ad29-69abb850a21e"
            }
          }
        ]
      },
      {
        "id": "a195649d-0f07-4c62-ac01-d1d03bad0a88",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5b74046b-d653-4d61-a6d8-ba663bc4eebc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "742f9861-fdc2-44fe-92f2-ff2419a8d061",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6cb2bb9-9af0-437d-9b97-a462c3783f01",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fc53cf-fb37-44ee-9a19-d28793cbb1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3150ab04-e176-4f51-84b9-9af7bc1341bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880e3eb5-8258-4605-b98f-62dbc806c18f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00ad20a-5f0d-42d6-bff4-82d4c4047a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfb996a-f8ec-4077-8da8-7e39567dfefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a139f9d2-25e8-4ab9-ac07-0cc17fe394a5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f04b98-d287-4098-a79d-53d8be3e1090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23092cf8-4ff3-47ff-8216-ba9b73fa060b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629dd487-e8f5-4be8-ae56-a79868bd6724",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3704c92b-0c8b-49f1-9b89-7a297a94f4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5454c351-4640-467f-bd4e-d3cdf2629f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337e054c-4c68-47e4-ade8-82331c618fff",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7e9cd5-1fe2-4943-93e8-2c38870b7b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573536b1-1e1f-4306-8189-d1a770e8e295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbf2c9d-d36b-4415-9a8a-0dde77eea7e8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5411cc6e-b195-4fe3-b027-418a4e534c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519620ee-2c8e-4f8b-a94d-1899b9421083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948b0e1b-56c6-4a0c-8ca1-c2882e1ebcf4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32911fda-5fe9-47e2-a0d2-839746a7fbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd16d2d-0edb-4429-ba71-011e906a29eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a0d6e8-8b71-4c1e-a1d1-16f011d503d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b320a962-8da1-4bc2-b001-2aa8de6c4654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6518582c-c825-4276-8e9f-c43acfaff9e8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c33c8a-4207-4522-8ff3-b91cfea84be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b95bd04d-db25-4752-a956-84b0299e9700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e62c12d-4b68-442f-bab2-30ab29d789b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd47c51-bb37-43e6-9545-8de656770ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0b9d2b-0683-488c-91cb-0fc41cb2f5c7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111d37e8-341d-4f16-8de7-b558a3862ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59fc7cf7-72a9-41c7-81fa-b434e72be0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58559a49-d250-443e-9be2-09d62feabb23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed46c859-ef4c-4263-8cb5-3144232d0118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b0cc4d-7a4a-498b-b2cd-eaf3eb2dd391",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0813c0f7-9239-44b8-a2ca-ac91681c1b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9bab8c0-e301-4097-ad74-4954952ca7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bc09ab-13a3-4de3-9ff5-853ac66b2e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3584d510-ca21-4832-99e4-7e8fbb951bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25328456-cdc9-456d-9568-e2357070a390",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b4f483-8e40-412f-97c1-852cfb09f371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1171b8-2883-4acb-978e-ff73b806e814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634f747b-2e9d-4565-ae1a-9e41bc129868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e3305c-1ef9-4c39-8ae2-3c07b6417a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c35ff3-b8bb-4678-9673-24d4fb09cda3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd14316-e48c-4c86-a0cb-dc4711ece8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87514971-2abd-4d12-824c-8dab1081904a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af152e50-0c99-4e6d-8829-6d5f224213ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583a43e1-f7dc-4908-8eca-fcb37c4e22ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2439cd-b17f-4711-a610-8c34872466b2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bf1be0-3688-472d-bf86-ac980e0e3ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e74268-0e7e-4256-93e1-8e915e4ff102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54410bad-c301-4a06-b89e-d8c65266c2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753c8a37-88af-4808-8d4d-ec93bf71ec03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c936bdc-909e-45b3-b910-277e0f4f4035",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a172da2-0570-4880-bffd-eb6a2d35dc63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efcf73a1-8d32-4d56-9a51-29ba8a9fa5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1e4265-36fd-4047-9f0d-9cf5e3a465d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f1dea9-921a-4236-a923-b1da4d813630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c77878-0dc2-47bd-9b4a-090918659b44",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f849299-a538-4336-ac01-e172a9ab7af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b07459-a1da-41b0-8de1-99daceec75b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fe2fb4-ee22-49aa-ba94-a749e2564854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9b4c22-5e9c-4754-ba1a-e09a0600408b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c8fbf6-c614-44ea-bbc2-af7d5d48af86",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c68969-ea36-4189-9373-cea1d1f72652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ed030b-08c0-4301-83ae-53831fc46f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d992bb-aa42-45a8-996a-ad732b360ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715840e7-c61c-44a7-b14b-56b4bf579d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3c1896-e68e-4be7-a9db-fe0f3f4302f5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4019b3a-9060-49b9-aae5-e1b179913f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0077c8-edb9-4aba-95aa-2d3c4ac5e1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d4a3b3-0d7a-439f-b12d-d0da3367ba8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05ab5f2-026b-44af-b8d0-2384d47a578f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e2dff0-37f3-4736-8d16-de91b3d3ff3e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e578858d-454f-47b6-a8c3-a58ecd93dcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b16ed9c-4bfe-4256-88d1-7bed22fa4e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a70228-c449-4e85-b416-f891ea90be9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89f9672-c094-47b3-8c0a-59050eff2620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d114754-91c3-436b-8b36-635b067db3fb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc9f918-bedf-44d2-a398-c9bf6cea8269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb4e337-4fff-4ae7-8d1e-f1a575c885b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58356b21-decf-4d7e-b062-8e25e00a2d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebf720a-5f53-4b8a-beae-4371d2742cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fef9906-5b68-4e97-9a7c-1a15b953cc98",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edde2ded-67d9-4d79-880c-a48a7eac51bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71da9894-dcd1-46d4-b96c-9608020ecbb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6e7c13-daa1-487f-8a95-fa74f158380f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca94530-3cbe-4240-9ca0-f12a283bfda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f00613-e983-466e-af07-95671c72dac8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7be32e4-e690-48b8-bce6-d99945563556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e90d692-a07d-488e-b4ce-6d57d57915f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4207de38-9c1a-4d93-bc3f-c9ffd29b9f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57e5bc2-ad6f-4874-985f-7e0a617545b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce930be-c148-4e99-9655-b6921b37b620",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bbc0ed-e997-4ff4-a4bc-3375a17267d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731a5876-54b4-45bf-bcfb-de061eb8e569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc352dd1-7901-4dc1-95db-5880d1b086e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c8f68f-43b4-444b-b760-58b61357bf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f0f687-2101-4883-873c-b083ffb89f01",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac985284-e60f-4a86-9748-88ccbed8755d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a7c60e-c065-4c42-82ca-370fb8756bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a29ee4-7be6-4874-9466-a866475be096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45de93e-43d5-4aed-ae9c-62211a14ad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b799e15-b31d-4496-b2f0-da98bf444a72",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9003c0d-dcff-435e-bb7a-b2d82f19dacc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd01285a-4c75-4503-9a98-5b3490c179db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c282f12-d408-4a07-92d0-162dc31ea148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5870fa-1847-45d4-b4b2-b0507e64c0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43981ad8-829f-4b2e-9c8a-65df1339bf9c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8dc53d-840d-4186-9bb5-dc718ef6d614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd7c414-94b6-4506-90b3-1ab9106bc32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9a3a4f-212d-4e02-8165-b2248efcda73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e64218-4b6d-4977-aacf-ca1f0ea59be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bfc1ee-3450-4ddb-8471-b21ebaa44915",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b052c2-663e-4a4f-b692-cd08f860a3f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca375cc-dfec-4b20-841e-c63e652a9a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51c0cc4-db60-4560-ba79-9def5b5e9320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59507f65-1770-4087-82cb-47011a2d9723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d355f207-5c55-488c-af81-b70c0793b58f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814866d1-7039-4ea5-a09c-d35561bde0ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9e1114c-45d2-4b89-b2ff-b7ffccedfd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff800a9b-5731-42eb-9e9a-926d5053a9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b05bb5-8c96-4784-81d7-3f754f156c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5afa5b4-a6d5-4552-9454-830f53260a56",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d0824c-c872-422c-bc20-437eedc32110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee65ddfd-e37d-4062-81b0-c72ba12da05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7ce456-ec1f-49d5-b357-e17d113260ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99181cf6-e79c-4005-82a0-b4de821fb45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec87fa01-7b4c-42e6-b45b-ce3ea87a7a74",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5952d4df-d5ed-4bd8-9eb6-681db38adbce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13a9532-2798-4296-853b-f79c1347309e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb0a3e0-fef7-43e2-a843-477e355911ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f143e58-67dc-44e9-a4a1-c265df8c446a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e58db70-ca37-4b01-aaac-c5a2db3f7016",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a3cf45-7551-4ecf-9349-9e5f27cf3264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f123dd5-8dce-4d61-a7f8-356faec43f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebeda364-f686-471a-8da4-ed23f09be50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c09fa22-b4d1-4771-855e-0443c54d7d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f55f4d-78a3-4295-8ee0-d597998e174b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f696c4-af56-4bef-ad22-29fd808aaa5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28841272-0aa0-4995-8d1c-6b79b7672755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46824364-c95d-46ba-95c4-19e23a77cbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b5aceb-8fc1-4504-a614-dd40d512ba8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3070d923-a6c2-42c0-8fc7-3dfd170f7781",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718f7e78-4102-410c-9cf6-03f81c391fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "972da39c-cad5-40c4-be33-dd0ca8518996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95793ca9-69ff-436b-8f18-8076fd903eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71e96d9-4902-434f-98da-599bc382847f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dc4a3b-15f1-4747-b0a9-0326c4300339",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b1dc91-0ae7-455d-b411-cfccc4caddbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80f404de-96d7-4531-8a12-f23ec82edb3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044f0c28-5e42-4d9d-b536-c226c4ca7532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828498dc-52eb-4772-b05a-8fb5fdd80873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0278e7f3-6901-46a6-bafb-8dbf4cc27916",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1076c79e-3795-4637-911b-a9c462528713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4bd76f0-3a62-4ab9-a4da-659ab159bb49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e99733-bcd9-485a-8ffe-906e04cde164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc01b00-22aa-49f8-8999-a364bafe49d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c814be09-b92c-4209-b386-a0a44cb6cd8d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dfafcd-52b2-4873-b7f1-add3060f21b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c766db62-da55-4bc5-a995-74b121bad511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7453324-ce7e-477c-b617-97a6cd3d4eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d3a7d6-2943-449f-9dd2-797d725096cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87113a1c-8d43-47ae-8bd4-ffa686560813",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48297e54-9aed-47ea-b7c8-01af3e8fcd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013af835-940e-47a0-8550-1520b84b373c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6579311d-dfae-4843-bd3a-01dbdcac58d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e205ec90-3212-4b95-acd2-b270a1eab32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b70fa1-6c83-4315-ade6-c109b026787a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68869324-94ba-4c52-8444-a336aea84a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dc2e58-8d7a-44fb-88e9-a40a04599b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87edc7b-8921-4609-8869-5f058f9d7a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbd1112-ceaf-41e3-a0f7-3c47bd4b3a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4c099e-f94f-4139-8b7b-cea7bc07a055",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf01caf3-9ea4-4b34-ac78-9e4669aab09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451faa8c-6a39-44dc-814a-96f778ec1b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57395eba-202c-41c3-9053-44d9323a26b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afabc325-ea04-4c14-8e49-7126e8836a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6a3375-291b-43b2-95d6-8252f48fca2b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae01190-cf66-4824-921f-1a704e099211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afe7eeb-40e3-4801-ac30-02a2c91cfa57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e53609-a6c0-4733-9dc9-53f8cfe80bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662bc7a4-f00d-4623-887e-f6e9fa33b37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8c6a39-8245-4eda-abee-bada01fa703c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940e1445-fe1d-4245-91fb-fee70d17fdab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a8da9a-c6d3-4aa5-8195-8376259f83d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e24dbd-1408-42d1-a48d-0795a0f95008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6995905-0531-4239-8dec-25e0ca647b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c620f561-b584-4da1-879f-cfc38f307058",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70138796-1bdb-4d77-a0f5-5be467470f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6bfbc7-7b4d-4cc8-b0f6-e84994cc2de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e703d7be-9161-412b-8c8c-bf5f2295db11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a000a7f-0de1-4b8a-b4fb-b174f392682b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab05ab5d-fc0c-4f72-a443-2ce8e4f9f835",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe05135-d0cc-490d-9464-3954824e8f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf352ddf-14b3-4ded-a2b4-ddf3d39c9c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d7dc61-ea56-4fef-9a9a-3f5504c3978c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24b2fde-6454-4719-96d5-7fa1be258eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b7ab53-1aa9-4589-b82b-34cdb18a0588",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19fea05-6045-44b3-9c7b-276f8fa460ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa501d68-7d66-4ed2-bc7a-863bdf93ffb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac016c7-671e-4add-96f6-39afe845ac89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e8c059-d31b-41f3-93f4-1491ddf3b3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a703c5-e182-4617-9cfc-1cf1cfb30d1f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fabe6b2-3ace-464a-a649-f9c36ee27c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea4ae74-1c21-4e9a-a891-79cd611f5113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f929a6c7-74ef-4521-9d39-f7559d2e86fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59da4bfb-1ddd-4469-ad08-25f976ec6789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a82bc5-7adb-4317-85fe-9c4dc25d3e97",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b844fbb-eaa6-4e25-9c2a-656748d219b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467f11f3-e012-45db-bf45-b98ab0b7be22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44af695-a331-4c19-8678-ec8804254e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6377be-8e20-4f5e-b64d-9724eed3615f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d707594e-b3c8-4f30-b8f0-2d7f7c78038a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b0ed36-cb9f-4858-9f18-36918e786eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0e5790-eb8a-4d60-9fe4-77f08ef35162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b03818-97da-434f-a203-61aa93727a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4c41de-b8ad-48d6-8243-b344723c4762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2fefe5-aa9b-44be-b474-fc910b76392c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf8a09a-763d-43af-86e9-4a3e9ffbb7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92771e5-a7b4-40ae-a0e8-2145d3f4097b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19ce56f-2cb4-4013-baf9-653689c267aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab7861e-0ec8-4853-b390-7f031204362a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7c365a-4910-448d-8b40-087584042a5d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bf79c3-8ab9-4b2e-8200-79645411e0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e20b739-255e-4008-ba89-1c8d43faae88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50387ef3-a6e9-4012-ba44-bce9f43ac3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709e6284-cd22-4d79-aafe-1ad008fa6d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe80dae6-5fbb-4690-b069-a0349c6a7beb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0357f4b0-31e5-41af-9a58-01af78d19fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da01bed8-2000-4e35-b73e-f1512c93c6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4f4f0b-0b3f-4b94-b2f7-67148d6ee7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150a2bb1-9adf-41f0-9a48-471a11bc9c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e51d7da-a49d-496b-ae6e-545a4195f552",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671fb42c-0fdd-4b7f-81dd-f3096d816df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be12277e-e63c-4016-ac7b-273db6c1928a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af253177-530b-45c0-aaf7-28982eb7f8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da4ab40-abcc-4620-9657-06a2d765a582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b0edaf-ed75-4f35-9055-8fdfda4ae781",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bb105e-31b6-4bc6-b8f3-9cd8d27ee78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c27bcb-276d-4618-863a-1de0d5a44853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38f3805-463e-41d9-b156-0933bef20c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebd12ac-87dc-4e04-a24d-2b071b54424d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e1d54d-6053-438f-8c73-dd39e1c1abdc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9eade2-7af0-4bab-b364-301a75a97176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35dd2558-63a8-4f25-812c-15bea96bc33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b169589a-7b09-4919-8e45-eed34b94f497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4f0661-55a7-4d55-9843-8bc03e5d3ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434c178d-ef0a-44e5-9f5d-3791c4586157",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b039f51-57ca-4081-bb16-4bd807e6998b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc91ed5-0b76-4802-a299-b0e22bc3b188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3bae5e-e8b5-42d2-8378-8e7e006255a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1111ea1-8d84-4a7b-9db9-1741d1da670e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a651f2d-31e3-419e-b4db-af66d507e01e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1830560-78ae-4261-bb9f-8eb3460ff6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf293aa-2bfa-468e-826e-6635c104da62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ef5243-37ff-442a-84b0-480494ee9acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748aa29b-f547-4e07-9bd0-d4568b5ee7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ad4985-ae89-43e0-94ec-11a0329aad42",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f11cb1e-cae8-43ba-92d6-9b388225b857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a51ae9-1e8a-4400-b749-4827804f941b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4dc785-2c45-4dbd-93af-4afb1470a14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4678d40c-73b4-408a-aa7a-cc7dbc78d5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d679929-d3dc-440e-b5ad-a7b5cbe9b146",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8e615e-a8ff-4e99-88ae-cebe0c4cb3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ce9afb-a44c-488f-9d7f-9e6594ac6329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7234d847-23b2-4638-b73b-33a14a28eb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b665897-072f-4e07-ba2c-e761d735154a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1daa47-3ec6-47de-b4ad-ef133e346f28",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0435cb8-74f6-413e-85b5-f5f64f36a7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30c4005-b616-48b9-af87-17b4e297197c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c253da6-56c1-4895-8b37-abae1f3406ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8879084-a3c5-467a-b0af-8ba57f6815c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50201061-dd79-4448-bb1f-3655f8b8eb41",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2c58bc-60b1-4460-bc62-00da31c154cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a77118-2c06-474c-a394-64ab1354f120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d4c27c-597a-4f8e-bb68-19da16fbf8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497f4d90-bb4f-471a-8d71-fe76159794b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde3a5cf-e60f-4a3a-9384-ef19af4fdea3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd82955a-23b8-4c9b-ae0c-6c79a64547a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc0ccaa-6d68-4e64-ba80-a80b6c4f38b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e789b3-54cb-483d-bf7b-88b77bc4484e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8141a45c-7b34-473a-b374-30e47de86722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224e8e12-8144-4614-9651-9c5b16eec5e0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237a7f12-a7f9-405c-ab97-2083853cad24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa276c3-59af-4e6f-b5bb-826970625d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798a704e-44b8-409f-bdd8-868d8e8b1084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0536d8f7-20c8-4b00-a940-5d198ae9bae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87b6230-2307-493b-9f24-b1875e121837",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9afdf3-60f7-4271-9968-9a97cadc820d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4baa28-14ac-48a5-80b9-53955d93bd32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37789c8-da2a-4e5a-9f50-643a85359be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c055ef16-a708-46ea-b7cd-6bae3b56233e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572f645f-bb13-4462-a10c-bedea55bc5f2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b1f6a6-2d7e-4dff-b8c6-dea8ea99e49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b303ab35-04e1-42b6-ae80-e9e0c5db3b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e36048-1631-4734-81e7-43147c75202d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0457010c-0f12-4282-b9f8-5e5ee6a7eeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d02152-6092-4b3a-a02b-5e74a83d8a60",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63d9256-c467-47a1-a9f9-ba493c26c069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40472095-5d09-4886-bb13-0ee5b223456a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad014a9-e98e-4dcb-9439-301b41155361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb041081-20a3-42e9-bb5d-4c73fc8d137d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99580a5-15f5-48cd-8995-999757383154",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e0d74b-407e-4ebc-8eda-31a765dc5940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5829357-4870-4d84-979b-fe2445a46631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6352700-518c-4a46-a7b9-45564ab26336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7d3273-a361-405d-a7bd-f74691595cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c34931-a805-4bc3-ac3f-f1befe497c72",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000cd8d8-434b-4ff6-a871-f647aa9e663d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9edcd9d9-3160-40c6-9818-6c508f2a9261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc85b3d1-de20-43b9-9dd1-f3c1eed8df17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c41b7d6-17ec-432d-a70f-ebcee1f1db6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c637d9-9efb-48c6-97c9-661be1fb2ea6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677d37af-fa38-4a79-9669-6bc23c3f60d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a2651c6-cd45-4d02-af9b-e025e07532be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e25612f-9fb2-42e1-ab25-cedcd6c78cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b97573-a243-4865-ade8-9ce03e2be667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036a2433-4018-4f44-88b5-3fd989f2187c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6087387-ab88-45d4-86fc-eebaaa2072d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5ca8100-03ba-4392-9b7a-a8edd27666d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dfd1a3-9cdd-4433-9b39-2251220e65d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6563ff1f-5871-4281-aaef-c073814dc4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bb3c99-139c-4c2f-801b-1259fb37197a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f644f3b-36d3-43bb-86bc-af41e015e933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2d83b16-2e4b-4a7a-96db-665c5807022e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "accf5cf0-dd2d-4e1b-9e36-9ed873f072b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a06094-1221-46d0-b624-43e0aaf0e9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2a31c0-4e6f-4c4d-b88e-dad5a42cfa39",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ab76a8-cc4c-44c9-9684-34f5bb23402e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ac2bcb9-20f5-4843-8840-728f494e5c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f89dec-fe70-47b3-81fa-2e5726de44ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f34d36-9a6f-40ab-b411-277d5ec7c9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1093f8a4-febd-442b-b6eb-1a25db7fead0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949cc203-0e1c-4869-bb1e-1022d4379d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e9bb754-c5f5-48f7-801b-a14adb666929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c59151-1db1-4f6e-b78e-3cde07415932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc13908-acc0-4291-a03b-54a748aef76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c57b0a-b346-4ace-888a-9a4e2b186f91",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e850d9a-cee6-463a-85f5-36c68e27d204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad61d52-bde3-4628-b8fd-ba2328bbfc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d54e20-1303-40f6-812b-e0cf5e644201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3f00ca-586c-44b9-b94a-b2cfe652e7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dda44e-6581-456f-8099-6adc068b6a41",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fef042-cebb-476b-a4ea-cf4cdea1b460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f1e2573-102d-4945-afc7-c1738c1f90c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173d66a1-3672-47ea-a6d2-fa50e05979ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d47171-0b75-4230-bc1d-c6c6142913c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeca2d4-abe3-4240-af0d-975cbdb95d47",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aedeff9-ca47-4ab9-a28a-8f1c88c82141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3023b752-4230-4873-826a-78e573d11781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef210733-a387-4d35-8c67-84ba418d745e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45ca627-1fec-40e5-b552-987c7d1986ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85234d45-f2cc-40cd-9a30-a49226912399",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f3086c-9a9d-4d1b-9265-a551f9e78684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce01691-cc38-450e-9eb1-53ed5fd1e4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b9f6de-977c-439f-831f-977217b9aac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d158a6f1-b9c5-492f-b1f1-54a25954c977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e9240d-ce10-4338-93b5-8ed5125f7d88",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23dbd7a-8e11-4997-93bf-02ec80b9aa57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e83aac-235e-4a02-a0ac-2899275cd9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34338ac-5c5e-4b7b-ba2f-8e9a8c698438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33715ac2-2a7b-45ed-bab6-b7e27fa94d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e7005d-c0d4-4e35-90a5-e15da60b2225",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950f2253-d426-4bab-b689-14ffafbcd102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5288d3d0-d2aa-466a-b8d7-51ae35c98c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a82bad-c2cd-453e-a237-d5961c977f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc23c850-3419-4344-841c-f835d001a2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e8ef79-dcec-4fc6-b431-fa87201bb39b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ca4a1c-9425-4997-8dc1-052ba1512ef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade85cd4-a3ef-4e3f-81a5-1025b82fef2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e07491-3e0a-4041-a4e6-80e8956e492e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad7885d-dd58-4ddb-aff9-b4d44bde1a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae94300f-83e1-489c-a980-b4c9f8c94038",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2ed468-cc39-4602-97f7-4fb3222b6d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1035740a-a16b-4702-acc5-08c1d4ace023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50281ccd-6cc0-4b08-9abf-e0b7b7791b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a818bea7-5919-4897-be7c-81d04a3ee0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934c554f-134a-4e1c-970e-805c29073db7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53809983-29ac-4ee0-a54c-eb1e64ca8d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b643c1de-478e-4d8f-82c8-56795f25581d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5b2026-747b-4dc7-bbee-76e6e19b8f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8dda2e-0723-4e2c-b03c-b1f2b5634fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5c7e9c-1d7c-4857-ae1c-d88646ce7c29",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed75408-ffc7-4ccf-ad37-41f6d21938e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a02f1c-a3ea-437a-adee-b16ecace53bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22bfc92-5ccf-45e3-9b4a-ce8bd0365cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6ec41a-b334-4924-8672-64ba0888ae2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66440818-6e35-4203-b385-6e9682664313",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ca6257-fbf5-42e9-8519-ec4bfa782e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6546930c-36b2-4252-9180-eb51d578245e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3d5d8d-de78-4796-b8db-458064562342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c007ae-905a-45d9-b6bc-39149d25c0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cd7428-df2f-4c38-bc63-e238931362f5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03bd353-617b-48a5-8764-3d213f90f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05af9bbd-06c8-4cdd-af8c-a6412ebfda4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6325ed3-3e78-48be-a9ed-a888449bd63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a875f2-e9ce-47d4-a55d-923c05cc1343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa07155-185f-4fec-8ae3-91eac5249009",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a8a0c0-0b5e-4085-8b5b-ef3c42ff78f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d3e3c80-c1e9-4d92-9aeb-9388945bc85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa62cb93-f288-4a72-9d76-e6ae4bd92270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363221a9-8fc0-4d69-ace1-e4336eb9529a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30a650d-ccf3-4401-b0b4-d64434b1fe9e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e49d76-41cb-4e7f-8e6d-d27d512631cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7867a1bc-064d-436f-ae6e-b3a939db3e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba57a644-fab2-4faf-b171-e25c6c723ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0ff3bc-cb1b-4335-90fd-2035a2ed58fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2285f11d-86df-4a40-9b50-95adad4258a7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2669c2-4aa4-4157-a8e4-a9d0090207c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18713b14-6fd9-48df-b99a-8c524ca36ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c19c6d-801b-4d85-8bb0-1f4f71f2b323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b64807-1333-4f4a-9def-37a043234774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3748087-ea7a-4c43-82e0-ceea5595ff64",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385a922c-fdb4-4033-aac9-d2cd8863694a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581f1a93-ad4d-4f3c-b6b1-88f631baa227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43250f65-0ac5-4d91-9dfe-044266c9ecf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368443d0-6b0d-4cd3-8e57-a51e4a2c19b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d0f21b-121b-4908-8c07-8e60a4d91120",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed470c3-8e47-46d7-b38e-738601f7843d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8827274-caae-46a9-be13-e1fc541f2104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2545e955-db83-451e-aae3-00e29dbdc676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3514b5-f1a9-4fab-a899-307d68deb35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4033e06d-08f1-44aa-a4c8-3fdbdfcdb1dc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197b846a-6542-4717-b15a-4cb58dbc0e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beca1e64-de46-455e-892a-adc7fea0eb00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8fb6d3-8841-43a6-ab5f-0ffa95ce1dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0003ba0-c4b9-48bb-9588-ece1a11be54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f261dc26-3c1a-4355-aa08-b4996cf3e4e3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64ca4d4-58c2-4ffe-9dd9-0f83ab5649df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59520c04-2523-4bb7-9a14-7160099a98fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b4568b-52cf-4eba-82d1-d1eab9e62e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3fef06-148b-4591-b56d-e2a2af4fa4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360f1b42-4059-44e8-b15d-8279af72ed03",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d45bbe8-c209-4da7-b4a3-0dd17378318a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74649cfc-b32a-4c3e-b389-eec8611cb6b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad72882-62ba-41bb-b5a3-c438c0b0b088",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846d9c4e-97a3-4526-a1a3-77ac9e845e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6b469a-9add-4429-8a9a-d0680e3d0d88",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccec603-a433-4565-ad50-533d296ee912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57433395-755d-45d6-864f-23166b93b4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94ecc3e-4025-4ca1-8c8a-393188caa902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b614c63-3208-40a4-b9a8-f9b1530f8167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a9bb7f-047f-4f74-8494-ffd384700951",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6af3c9-c661-4af1-964d-4b47cf44a357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2391f1f-1e3c-49df-bb4e-6cfba0138142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0786c8af-5e5c-4bee-a2e8-9473226f4c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00aa0e5-4d77-427a-a488-8befc095e955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775fe749-88c4-4ffa-8ba1-8d7edadb9f06",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ddba82-9d32-4d67-bbf2-9dffd9e182c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbcdc680-c052-4fcd-9dde-987f3b453a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab82987-737c-42ca-ba61-248de7ef7026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affd9da5-ebe7-44ee-89c0-e78b61bae70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d19906-bee5-4084-b125-eddd7b3e6f44",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0e7a85-4aab-4b53-be94-1249fa8cd8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e46decf-ba81-4414-b1d0-22f59a7dcceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2455ca-7dce-4cec-9a7c-eb64d6a503f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd2e435-51c5-4e28-818e-3fa9556fc8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718e1806-6b5c-4aca-8a24-3ae53ff6840b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75814457-a8db-4976-a688-a94ad975636d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48febc21-a8ae-446c-bdc2-0cc1f503e9a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6086a6c6-11af-4f09-9844-fd83aa2fee6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82ce361-1455-40b4-a01a-3017b1fca732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af197511-bb3b-4e7e-a09f-59a7c7eb3ffa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29809e0d-6cc0-4169-9b37-95addfc4011a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c2010e9-92f0-4094-9c16-0a015d066c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c95ef99-0674-4567-adb6-4bef45c737b2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcc56a2-2ac2-4c1f-b4bc-344560dd28a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ad11a5-acd6-4cd1-8663-4301b01d555e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77360ab-9a2e-4c1b-b0c0-84d36156ce12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cabff2f-b800-4580-a6ce-66b4390cfbe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b5e3f3-f238-4f8c-9e0c-dca2b57bbacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de568cdb-8622-4bb3-b0d7-b0a4a1ca22d2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f0a5e65-5645-4471-ad14-ab84ac78a5ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a18cf34b-9d16-4a01-b3fb-9de0b0f2f35c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a79b7107-4862-48f4-98c5-dd0a48507c0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38dd3681-9bd5-4341-a785-8f087d92551b"
                    }
                  }
                ]
              },
              {
                "id": "79fee660-0822-4eb5-8700-c42877713ec5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15b640d6-9603-43a7-a8d6-5ef45741f699",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e499e03-9a6d-4c3a-a1bd-db2ada49aa6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d1f9046d-6a08-4d26-9e24-17d4e32636d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00c734b-325f-4561-8a92-88d656e2b125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c0fb1ba-64f3-43d0-ae01-13674db52b98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99563407-a71c-48d5-bae8-8cb8b8880d41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "824cf0b3-02c8-4392-b383-af31c2f73a1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d236f040-6706-463a-bc22-ee071bbeff43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30b557d5-7648-47e1-870e-4da77b0882da"
                    }
                  }
                ]
              },
              {
                "id": "7bf901ba-0ec7-4d48-b98a-a598b34852bd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6cf0887a-e0c8-4b5d-9680-274165467d04",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fd327c-adfd-42b4-8496-c64cc19f65b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "202d3824-66cb-493f-bfb1-3117fa0b97b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcd03c5-d7e7-452f-8904-2aef774e152e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8bf4c5-4f34-4280-94fb-0a69fe6f935d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d6b968b0-b336-4884-9929-b58653acdfd6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6617bbcd-998f-4e1d-9c5f-7d336a90c912",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1737d39b-9ca5-4080-8b1f-1950b605f7b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "24431adb-ae66-4616-8886-c33fee0d5407"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62755a9c-8f95-406e-b349-8f165157ce63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ee5682d-bcf2-4513-8f68-d246cc56c396"
                    }
                  }
                ]
              },
              {
                "id": "013d753b-81a7-4e61-bb47-9d0a2b050a5b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6102783a-49c6-4d06-9d97-faa3907a4eac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8285e4c0-b20d-4714-aeed-123f3a0bcb83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bdb30a5-789c-45eb-ab02-f9eb78152713",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63edaea7-b463-44ce-8b42-aeb96523d3c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6927df5-5f1e-48c6-8a70-64d193c7e052",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "03a07825-1999-4668-b87c-26633794ceec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbe8ddce-c371-4e44-b9ee-59457c077040",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "831d67da-7701-4cdf-bd91-733d1a85d717"
            }
          }
        ]
      },
      {
        "id": "d09900ad-5b2f-463a-bdba-173cb08a73f8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f1c71e18-6dbe-4742-a396-62c25744a7ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c72ed4db-4c96-4c64-88e3-636e48c12764",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee7f7766-4ee4-418c-8146-03e67ce32cd7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d25355a-d9ac-4f23-b17c-c759d5e014e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "962aa80e-0014-41a8-8a28-8705a4109f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a3ad90-fab3-48eb-a5bf-4f999497757e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32362c0d-a4cb-4924-87a4-1e2d2ecc5837"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42765d9c-8b5a-4b12-8dee-665360e49501",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b32025ee-6670-44b1-90b8-5c66678f761c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dacbfc79-d4f8-4c46-be47-e855854906ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99a211d5-7e82-4ea9-a65c-6538dcd11e4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0eb177e4-9474-42b4-a703-584afa281656",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5cd3112d-3696-41d1-b5e7-4b1203b4b1c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "109828ce-59e3-451d-a6ff-6138f44a750b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab219d0d-b1f1-40d7-91cd-09c591293f83"
            }
          }
        ]
      },
      {
        "id": "bcf225f1-fef6-4772-a03c-7a8e29e470cb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "963347c8-78a0-41ba-97a2-d3b8330501a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b4bb9e7-600e-4d53-af5c-8ffcc781926a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6edd3050-c2a3-469f-9007-b63327d53cfb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566a55fc-05cb-42b8-86b7-2d3c0cbbeeec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "433ed1b4-b114-4deb-9353-05e508ca2e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859ff8e2-2a9a-4fc2-a2db-c69c5628fc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d30b9f5e-c899-4c34-820b-d98c7c81118b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ba01fc1-a6a9-44d0-9094-8610009cced5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f7b7049-7159-4dba-905e-d4340bb9edc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "873c03e5-90d9-40ad-a26e-220e60b37b69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c207aa40-d1cd-4acd-bf60-f49938df3cad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adb9b8db-65fb-4b12-bfb1-d698d4847e67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0233aab4-d8f4-4c7c-ad57-8c2f7f4c4224"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd488805-abf6-4764-88ad-b1c6c82c26bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c32d3bf-3f7a-47ef-a825-67d006ca4fe8"
            }
          }
        ]
      },
      {
        "id": "9c3ec300-d794-422e-8bc4-3c8bbd99e93a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3e886cb8-8aa9-46d6-9baf-d65b79f7957f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "106de982-0ab9-4121-bf15-c56c8a99cef2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f43f9d0f-421e-4175-8aa1-50b156ad3054",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cf5b50-46cb-4b77-aef9-6a275a5eb95c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52f3c098-b67a-49f6-bae3-e161064c6b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0257e7c-da2f-4261-b5be-18f83d6aefa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4543ba7-9881-46b1-a03d-fc5cfe51398b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fc15ea9-4fc2-4fe1-87d4-d98b974695d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "684d4485-7b01-4b90-8085-af045d37e6df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3209ea28-72c4-43da-81ca-049551aebc55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58e05114-0bdf-4488-9338-9648d91b2dd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "007eb064-e209-440f-aaf8-ca08926f6e6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b668d3ec-6a8e-4e19-82de-671fdd897282"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d940db77-5083-4d27-ad31-dd3492f19822",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9b93883-3104-44dd-bace-051f6e939557"
            }
          }
        ]
      },
      {
        "id": "f47acd69-06fc-4397-86f1-58c5c12ba922",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce2001ec-5737-4ac8-a975-6d0f5b364b73",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9082a0f1-d97c-4c70-ae94-f7b78d05acd3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cd4ebff3-e87f-4bde-9793-50ca8521ac3d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eac7d760-aa2f-4e37-b347-6adf5abc1ae1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a7cbbf2-53af-48e2-86fd-84ff90c61242",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 95.5912698412698,
      "responseMin": 3,
      "responseMax": 11213,
      "responseSd": 742.4388513669132,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720226247790,
      "completed": 1720226280099
    },
    "executions": [
      {
        "id": "b8aa1edb-367e-409c-b5fd-1e0d41dce35f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "43ca554e-2688-43f3-a781-dd2acffd15dc",
          "httpRequestId": "e9c86b04-116d-490d-b4a4-333f9fcac194"
        },
        "item": {
          "id": "b8aa1edb-367e-409c-b5fd-1e0d41dce35f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ed5b4459-f2fe-4c4f-9136-b58a15037f09",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "2f21f7fa-1f3a-4b57-83ba-44d6e2858eb5",
        "cursor": {
          "ref": "0beb99a8-c1a8-4510-bd35-411af53d8af6",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9567b359-ff23-42e5-bba6-a02b1ad88de5"
        },
        "item": {
          "id": "2f21f7fa-1f3a-4b57-83ba-44d6e2858eb5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0901598d-282b-4477-abe5-61d33264c0c5",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "c7903012-2c12-45b6-96c0-ae3b82200877",
        "cursor": {
          "ref": "21041c3d-314f-4852-a39c-70350338f125",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "917e0254-5b15-48a7-be48-eb3fa0c9f3cf"
        },
        "item": {
          "id": "c7903012-2c12-45b6-96c0-ae3b82200877",
          "name": "did_json"
        },
        "response": {
          "id": "896981a4-1a37-44ad-8a56-7bdbb2f8ed02",
          "status": "OK",
          "code": 200,
          "responseTime": 236,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4d308b-b4a4-4e21-a908-ad8f7785cae9",
        "cursor": {
          "ref": "e467711d-48e6-4c81-93e8-feb7cb2ffc41",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b8519e17-8aad-4683-ae0e-99639d2f4c4e"
        },
        "item": {
          "id": "5b4d308b-b4a4-4e21-a908-ad8f7785cae9",
          "name": "did:invalid"
        },
        "response": {
          "id": "33dc2454-f765-4149-8287-4fdb3e6f227e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 361,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4d308b-b4a4-4e21-a908-ad8f7785cae9",
        "cursor": {
          "ref": "e467711d-48e6-4c81-93e8-feb7cb2ffc41",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b8519e17-8aad-4683-ae0e-99639d2f4c4e"
        },
        "item": {
          "id": "5b4d308b-b4a4-4e21-a908-ad8f7785cae9",
          "name": "did:invalid"
        },
        "response": {
          "id": "33dc2454-f765-4149-8287-4fdb3e6f227e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 361,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a82ef62-cdad-495b-92a4-76d0fb19581b",
        "cursor": {
          "ref": "39e527c1-836a-47c3-b4fc-a9caeb525628",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8b562ebf-e861-4059-9940-d89bcb025264"
        },
        "item": {
          "id": "8a82ef62-cdad-495b-92a4-76d0fb19581b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "204d3a85-0f9d-445b-8cd5-cc6d4c683b48",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21664557-7fbb-47de-ba54-0fa7d5ace5fe",
        "cursor": {
          "ref": "1e7da3d2-58ef-4496-9ba5-277eaf641962",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a5cbc4c7-21e5-437a-8118-294ff1081e3e"
        },
        "item": {
          "id": "21664557-7fbb-47de-ba54-0fa7d5ace5fe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5a6a8f86-c4b0-4c65-bfc7-889e8a424b65",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a755ea-d825-4f87-a4a6-bd318564fd6a",
        "cursor": {
          "ref": "4fc00e7b-d0e7-4ef7-8315-976f215029fd",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a60004cd-a302-4800-86ef-89a3bc8c82da"
        },
        "item": {
          "id": "f1a755ea-d825-4f87-a4a6-bd318564fd6a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3d26adbf-72e4-499b-adc5-e28b224d284f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157e6ebe-94ee-4bee-87ff-860a16209e46",
        "cursor": {
          "ref": "eefbfceb-c320-4d9a-8c56-757475d0af88",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8dd4639f-ee1c-4073-bb97-b30436284da1"
        },
        "item": {
          "id": "157e6ebe-94ee-4bee-87ff-860a16209e46",
          "name": "identifiers"
        },
        "response": {
          "id": "6fe968a8-3810-48dc-b523-59c1e0fa5b7d",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d32f419-6b55-4208-8633-de2e2e4c8481",
        "cursor": {
          "ref": "2374facc-8400-454c-9f79-33186a1e4470",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "448c5328-847f-443b-93c9-1e5f495d19d6"
        },
        "item": {
          "id": "6d32f419-6b55-4208-8633-de2e2e4c8481",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "730763e8-7d3c-4d4d-9ea4-3123d303a1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccada84-07aa-48f4-aa5b-681f98951286",
        "cursor": {
          "ref": "bfb483de-af95-49b5-acb5-8fbb389fc76c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "538f4021-47c6-445a-9a75-23530b3f1451"
        },
        "item": {
          "id": "2ccada84-07aa-48f4-aa5b-681f98951286",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "390339fd-1860-439e-b0d4-fa3038970a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7549e6de-12cd-48e9-97a1-e9d34d61ce9d",
        "cursor": {
          "ref": "9b2aaecc-3c64-4163-a7d1-986a58ddeb6b",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b6d2bf47-6bcc-4e68-aa47-4d227c790bcc"
        },
        "item": {
          "id": "7549e6de-12cd-48e9-97a1-e9d34d61ce9d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b9b81da3-6ef8-4eda-846f-ad47f839fa6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752915fe-e0a8-4d0a-acd1-422ddf1ff5fb",
        "cursor": {
          "ref": "65d6553d-3b82-4b56-818b-36f3473b4a8e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c68ce101-4578-4562-8ac2-b78992555eb7"
        },
        "item": {
          "id": "752915fe-e0a8-4d0a-acd1-422ddf1ff5fb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "46ec5930-5e34-442c-ac63-4c6930661801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4740cf82-2389-493e-b00a-e887b8054694",
        "cursor": {
          "ref": "357b9ac4-57d1-43f1-bafb-599d4ef8c0cb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "67c9104e-46b9-4f13-b7a8-365244bd8371"
        },
        "item": {
          "id": "4740cf82-2389-493e-b00a-e887b8054694",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c9338e14-956c-460c-b214-95ed21c15a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b108dce-9d87-40f6-8d9a-4334d905979e",
        "cursor": {
          "ref": "fa043027-b9e8-46e4-b922-c9484692c8c7",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6489fae3-6d55-4710-ac3e-46ba3b89f2f6"
        },
        "item": {
          "id": "1b108dce-9d87-40f6-8d9a-4334d905979e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cbe9ab93-a06a-46b4-a58e-5dbf79ca489f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a59916-b0b7-45ac-b252-3e953759feef",
        "cursor": {
          "ref": "1fa86d1b-a6e5-4974-92b8-2efec477123b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6f1f9eab-92ad-4b9f-ba64-34215db9c63a"
        },
        "item": {
          "id": "39a59916-b0b7-45ac-b252-3e953759feef",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6208b8a6-688a-4a7e-b684-c5d886f4a650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe7a821-57b7-4ab8-99ab-46357fd485bd",
        "cursor": {
          "ref": "0a4b5920-dc7c-4e75-9683-2f42e36eef12",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "52db5376-82ac-492c-910a-919c60aebe70"
        },
        "item": {
          "id": "9fe7a821-57b7-4ab8-99ab-46357fd485bd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ae78719a-a260-4be8-8023-b42e25c554f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c8b35f-2271-46af-bc7a-d5b9556974f4",
        "cursor": {
          "ref": "b9ad6788-aafc-4f8a-b746-2de33f70f2d6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ea5e02c9-5ea8-418f-acc6-34ef80973d19"
        },
        "item": {
          "id": "99c8b35f-2271-46af-bc7a-d5b9556974f4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "46fc038d-4e33-4e4d-bc0f-4dd14e5752df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc22d59-f0a5-4a78-9d5c-81bd65cb2f0d",
        "cursor": {
          "ref": "8d74e029-a85d-4469-b6fd-b71223f8f2ac",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2cf4aee5-e567-4ca1-953a-ecb33be2aac3"
        },
        "item": {
          "id": "dbc22d59-f0a5-4a78-9d5c-81bd65cb2f0d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c83ad8bc-2b48-456b-8641-09216cf97f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5970358-5435-490c-bfac-dfb49da31db8",
        "cursor": {
          "ref": "eea30916-75d5-4f8f-b876-86fd83ffd98d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "58fa16d9-8b89-48c3-bd2c-a24df1ad9efd"
        },
        "item": {
          "id": "e5970358-5435-490c-bfac-dfb49da31db8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "96ff1816-80a2-4f9d-a6b9-f2855dbe213c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b4ebe7-98bd-41a8-ae3c-f7fb8394bca2",
        "cursor": {
          "ref": "1a13dd40-703f-4fbd-9f5d-69f1a8bcbf74",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1ca0e91c-9752-42ad-9996-e9fad2bfac67"
        },
        "item": {
          "id": "d4b4ebe7-98bd-41a8-ae3c-f7fb8394bca2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2897436e-2493-419c-9159-3c9ee051666b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181d117c-b5a9-421b-8188-88d726bd62e6",
        "cursor": {
          "ref": "b0d2deab-864e-42a5-b253-eb54cabb4a96",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2c298f11-bab7-4128-b337-4c45eb430163"
        },
        "item": {
          "id": "181d117c-b5a9-421b-8188-88d726bd62e6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f630bbef-9724-44dd-8ad1-d36ae766a84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648040e9-a6be-42d1-9d37-3de64e83cc3a",
        "cursor": {
          "ref": "7dfb9a6c-a12b-41b3-ab3a-639561c241d1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "397a03fb-6396-4e68-beac-d61223d05a78"
        },
        "item": {
          "id": "648040e9-a6be-42d1-9d37-3de64e83cc3a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "de533bdd-20f7-4b0c-a544-7dd721222f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7167ccd8-09d6-4b2d-b925-c634a9e8932b",
        "cursor": {
          "ref": "161b1390-670e-4a5a-9a6a-c2bbfed7b88f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4871b4ea-06ed-4c5a-a12c-a4e9354f591c"
        },
        "item": {
          "id": "7167ccd8-09d6-4b2d-b925-c634a9e8932b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "803ba283-c6be-4ca9-9f31-7160952ac389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659ee21a-6812-4bd2-9540-d69b8623e3bd",
        "cursor": {
          "ref": "22672c61-b772-4f03-a28a-1ea4dc27cb4c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5f4122b9-3feb-445b-b0f8-5563f9a0a3ff"
        },
        "item": {
          "id": "659ee21a-6812-4bd2-9540-d69b8623e3bd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7c1ada91-21fc-476f-9dbf-ab595f266660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da401253-ef7b-4539-a961-691e97275bf7",
        "cursor": {
          "ref": "73c95e2d-407b-4451-a9da-7a12a7080376",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d913bc21-1657-47e0-8b77-7fef3ab2ed63"
        },
        "item": {
          "id": "da401253-ef7b-4539-a961-691e97275bf7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6e75ba57-bfb4-4945-a432-ed8b8fdf7bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1df7595-a667-423c-a710-decfe0f6ba1e",
        "cursor": {
          "ref": "c33a5af0-340f-4d91-ad30-181c1b21e767",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "84909fbb-efe3-4579-afae-ec54d7ada927"
        },
        "item": {
          "id": "e1df7595-a667-423c-a710-decfe0f6ba1e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6979d5de-f7e0-4951-8a1d-64dfceb8e361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13eea43-a075-4432-a48d-e506b113dc5f",
        "cursor": {
          "ref": "73efa9e4-b08f-4016-a938-cb797f0153a5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c7129110-e414-4d53-9bd1-d0a01103a215"
        },
        "item": {
          "id": "f13eea43-a075-4432-a48d-e506b113dc5f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "03881ed6-8086-4bf4-8e62-30509c1ccfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b684a4fc-a23d-425e-a476-8a22533bbdcc",
        "cursor": {
          "ref": "f37deeed-234e-4684-8301-22e3658e16f0",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cb004205-d859-4407-9e32-ff0e1a5452f6"
        },
        "item": {
          "id": "b684a4fc-a23d-425e-a476-8a22533bbdcc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "22fbacbe-1070-4b7e-be4a-7c8ec3e03d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc907861-3657-4815-acf2-3f48dc976eb6",
        "cursor": {
          "ref": "8cae7f04-3973-4171-887e-6b783d065fa4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cf49b717-8510-4d1e-b977-911a00a9c3bf"
        },
        "item": {
          "id": "cc907861-3657-4815-acf2-3f48dc976eb6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "be4341d7-fcbb-41c5-8fa8-15dc19e306c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c684f8e-8510-4565-a67d-facade290c29",
        "cursor": {
          "ref": "02614d2e-704e-4817-8838-68c536d6d1b7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8ef258dd-be2b-470a-a371-f115b083e144"
        },
        "item": {
          "id": "5c684f8e-8510-4565-a67d-facade290c29",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3a172c49-4f9d-446d-a69b-0342f6c900ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55b3660-dcf9-46d8-a826-c54506c2b06f",
        "cursor": {
          "ref": "73bde381-b49a-48a8-a2b4-ca2e7ea1df71",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "73bc04e2-03c3-4af5-b344-729216e14c90"
        },
        "item": {
          "id": "d55b3660-dcf9-46d8-a826-c54506c2b06f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "924e8c45-6a93-438a-b5db-41976d68aa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d722dd65-e765-4b48-a19c-0a7025431143",
        "cursor": {
          "ref": "854917b2-0bf6-42fe-a862-89b27bf8a58f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b90c2d18-df94-4c65-a10d-913c111f2dbd"
        },
        "item": {
          "id": "d722dd65-e765-4b48-a19c-0a7025431143",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1498d91f-4147-43f2-ad46-a2d9db9de1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967277f4-2e76-4ae3-99eb-18219d62437c",
        "cursor": {
          "ref": "597c6958-cb90-4354-950f-1a7ea92dc003",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8b6ea07d-6b7f-4f71-b8e8-e735acc876ef"
        },
        "item": {
          "id": "967277f4-2e76-4ae3-99eb-18219d62437c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a3a16d70-3379-42c0-bd98-d49085ac684d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a03802-e240-450a-af09-10f18ecb2403",
        "cursor": {
          "ref": "ad205f75-d50c-44ad-bf1b-9b68a78d3c76",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "27206664-2c5a-43f6-9300-10b805febf32"
        },
        "item": {
          "id": "40a03802-e240-450a-af09-10f18ecb2403",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cdefc7a8-e0b4-42d3-b5fd-39801c3eef3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5667a6-cafe-4191-88fe-a51437d949ce",
        "cursor": {
          "ref": "d42f27f7-54be-4309-8f3b-484cb8e92848",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bf3c2757-70e3-4a5f-8082-9d76813f209f"
        },
        "item": {
          "id": "dd5667a6-cafe-4191-88fe-a51437d949ce",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2506503b-0257-46f9-ae69-f0f03a04afb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd2b58a-0b01-4cbf-89e7-c5294c9bcac7",
        "cursor": {
          "ref": "47e38d0a-5438-4298-8cd9-c9a5bef98788",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c5c7f02d-e794-4c72-b4bf-616818d9f91f"
        },
        "item": {
          "id": "5bd2b58a-0b01-4cbf-89e7-c5294c9bcac7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ab8e02d8-0633-4339-b0a8-9ef3e78a97e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c072968f-1756-4d3c-b6b8-47849415622d",
        "cursor": {
          "ref": "6c2394ca-2fe5-44dd-94ff-5d033a3d4f7d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6a46ad58-0a52-4822-b1e5-5f1c43a96757"
        },
        "item": {
          "id": "c072968f-1756-4d3c-b6b8-47849415622d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ec0498f7-34dc-42e1-addc-2494f9df8242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8295c1-f4ab-45ca-ba88-478736d93435",
        "cursor": {
          "ref": "c35cbad2-c2d7-45eb-bcdd-6237f6ff2ffb",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "77d56d38-e9a4-4636-9620-6096e33b4fb9"
        },
        "item": {
          "id": "fb8295c1-f4ab-45ca-ba88-478736d93435",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "edc6928e-aef6-4ae1-b30c-3510adb47cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee6b443-f60c-460c-ac49-aa28b6ba7337",
        "cursor": {
          "ref": "bb98d9b2-133c-44b3-b03a-73b4be5b1749",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ee741c8a-913e-4d9e-a7b0-5d55e30caa1a"
        },
        "item": {
          "id": "cee6b443-f60c-460c-ac49-aa28b6ba7337",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "71325dec-b346-48a2-90ac-36017e477afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343723bf-4bdf-4922-9660-3225edc7f44a",
        "cursor": {
          "ref": "1e5abc54-8ece-4725-ad5c-90ed0ffd6d99",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "aae9e74b-f231-46a7-b54e-c24a54adac5c"
        },
        "item": {
          "id": "343723bf-4bdf-4922-9660-3225edc7f44a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e157a2b8-1479-406c-a23c-e207e2cfd164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95338e1d-4bc4-4322-af79-54d291e98c5c",
        "cursor": {
          "ref": "f63db484-78a3-400e-86f3-c1be498d479f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0350af16-a42a-43e1-8f64-188f522382c6"
        },
        "item": {
          "id": "95338e1d-4bc4-4322-af79-54d291e98c5c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d2e158e1-1d12-4d2f-9f8a-69425f2cce04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502bbcb4-d801-4d17-9589-6de08b5f414a",
        "cursor": {
          "ref": "efd42452-b8b4-4010-bf39-db277696ec06",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c431f185-c603-4cc2-aff2-42c09d406172"
        },
        "item": {
          "id": "502bbcb4-d801-4d17-9589-6de08b5f414a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "20053936-8a39-41c6-a0bb-70c476d50de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ef51f0-98ee-4e9c-b09e-b519a18a457a",
        "cursor": {
          "ref": "4b7729e5-f68c-4699-b68a-2520bb8b1603",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2290687d-efa0-4174-9482-3187f17c57f9"
        },
        "item": {
          "id": "39ef51f0-98ee-4e9c-b09e-b519a18a457a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "57649a06-78ae-4b24-aa92-8d5bfedd72ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5325ed68-8f2a-455b-a035-95003c1e7221",
        "cursor": {
          "ref": "bd9c7335-c8ef-47e0-9656-61f0cbc63b80",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "dc70d3bf-3f05-4fc1-b29d-946cf84b1b07"
        },
        "item": {
          "id": "5325ed68-8f2a-455b-a035-95003c1e7221",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "28ef197b-71b0-4b7f-a4a2-ec764435edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6875dd17-10d8-4b2a-98b7-1696e2a816f2",
        "cursor": {
          "ref": "acdde393-3c17-48a4-9390-99e56629872d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b4d7ec13-eec8-4d3d-ab10-ea05002777e4"
        },
        "item": {
          "id": "6875dd17-10d8-4b2a-98b7-1696e2a816f2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c1bf47af-9a91-4e2f-bfdb-94ded37a1e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bdcc39-0e29-4300-aa7f-5f025bba6f46",
        "cursor": {
          "ref": "d80e7bee-bb82-43be-8875-a9587e039fb5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2b7c275f-8d59-4268-83fa-7e1759f2707a"
        },
        "item": {
          "id": "21bdcc39-0e29-4300-aa7f-5f025bba6f46",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dfeee292-984f-4761-b1a8-e6a014d7f249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd009f2-df68-4838-ba8a-8dc8f261512a",
        "cursor": {
          "ref": "d63ecab1-e940-45e6-847f-55cdf389b677",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "28234d1f-435c-4a54-9992-e4a693099a07"
        },
        "item": {
          "id": "1cd009f2-df68-4838-ba8a-8dc8f261512a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "766a38bc-9ccc-4177-8cad-576378c62033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ad500a-acce-4c02-bfe1-34f9a70f88d6",
        "cursor": {
          "ref": "5d0512ec-4a83-418e-a524-968a9bcae459",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0483994b-5038-40e1-900f-ce47f8378544"
        },
        "item": {
          "id": "16ad500a-acce-4c02-bfe1-34f9a70f88d6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b4bf28fc-3d7a-4acc-a668-b0ad1d398e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04cf999-6016-434f-be7c-611c7700681b",
        "cursor": {
          "ref": "3920f3ce-b1b2-4b70-81e0-c7fce98168fa",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1b37d0f3-3c97-429e-9ea4-74cbda408d70"
        },
        "item": {
          "id": "b04cf999-6016-434f-be7c-611c7700681b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a6611e17-88ac-4718-8a1b-1de1dc0decb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a0d85b-678b-4292-ac8f-9dc82fd00f24",
        "cursor": {
          "ref": "2fa03bb5-6b4c-429c-99ff-e1a9a64423cf",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4e4b503b-e8ac-441d-b304-4a2358ba99ab"
        },
        "item": {
          "id": "a8a0d85b-678b-4292-ac8f-9dc82fd00f24",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5bfb4e29-81f5-4e12-99d9-f6aa4a10ac0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802e8be4-6518-47f0-b3e7-2dc2b576fa49",
        "cursor": {
          "ref": "23e931d2-0c3e-4afb-b326-f743370d50a4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c571b5c5-f3d9-43a7-a33f-64500d74212d"
        },
        "item": {
          "id": "802e8be4-6518-47f0-b3e7-2dc2b576fa49",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e26f5750-4da3-4947-86c9-83b02a7b7639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eeccf5-0b86-435a-9606-20aafdd09bb4",
        "cursor": {
          "ref": "772733a6-b051-4450-b10a-32ec48e8ebdc",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "27964cdd-d480-4369-8a3d-039a6ef286aa"
        },
        "item": {
          "id": "d1eeccf5-0b86-435a-9606-20aafdd09bb4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "baede86e-48f3-43f3-83b3-8c40b81830dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67ff120-99bc-425f-9244-dad58b5442db",
        "cursor": {
          "ref": "3b6a9287-00f3-4ef5-85ce-ac86ac466151",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bc9d0dcf-e9ae-4eb1-b224-81a19d2d8dbf"
        },
        "item": {
          "id": "d67ff120-99bc-425f-9244-dad58b5442db",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "112b393b-dcad-4988-af98-cc810ac9a4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6e9106-9b68-41b6-a63c-ec719eb8cce0",
        "cursor": {
          "ref": "abbc48ea-c55e-4328-8570-dfb1ad4a10ff",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d858429a-e898-4848-8e17-2a752dd7444f"
        },
        "item": {
          "id": "0c6e9106-9b68-41b6-a63c-ec719eb8cce0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c146fb39-7f91-4950-9bc7-9678789d1965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39e55cd-2ba9-4b3a-94e8-6ae9d14809d0",
        "cursor": {
          "ref": "5b83de48-90c3-4bf2-a046-b97498c167d5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2b2a79b3-3748-430f-800a-88811b11c3c9"
        },
        "item": {
          "id": "e39e55cd-2ba9-4b3a-94e8-6ae9d14809d0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ee3a24d1-67e2-4a49-b5fb-b9595ad022c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169c908b-89fa-4742-a438-b5adf1222978",
        "cursor": {
          "ref": "ed8dbf57-6646-4e7e-835e-7d1404e916b5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1ca1bfbd-1a5b-4543-9862-7b92c007f298"
        },
        "item": {
          "id": "169c908b-89fa-4742-a438-b5adf1222978",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6c554929-aa31-48c7-a55f-910d1f258369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c79df4f-09de-48d0-87fd-516d0192f8cc",
        "cursor": {
          "ref": "6ab1a9bf-967d-49e4-8438-8103b8ece5c5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d2f97a6c-376d-4f93-a9b9-cb9b13e4e569"
        },
        "item": {
          "id": "9c79df4f-09de-48d0-87fd-516d0192f8cc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a0c3658f-d5b2-44be-af55-20310d8a0ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2128d6-32ac-40e5-9bda-0d7eae9e2dbe",
        "cursor": {
          "ref": "0e09db3d-8f81-43d9-95c8-e288e8c5542e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cf03fa46-98fa-4988-b840-45dff9b6686f"
        },
        "item": {
          "id": "8d2128d6-32ac-40e5-9bda-0d7eae9e2dbe",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3f739052-585d-40b8-8d38-8abf5c06dca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5c7a6b-daa7-4df9-8429-5c29067dcde5",
        "cursor": {
          "ref": "138425ff-d610-4748-9d5b-cb8e418e0c99",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8484f259-ffc6-454d-9a86-9d65ac0bf669"
        },
        "item": {
          "id": "aa5c7a6b-daa7-4df9-8429-5c29067dcde5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e6fe704a-c3a3-44ad-9438-81a8019d5a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0e5cbd-08da-41dc-a5d4-3f75a8d7b795",
        "cursor": {
          "ref": "dad4bfac-f12c-46e6-b044-1b0e0c37780a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "50469cb5-3b6f-4ebd-a8d5-868908ee2233"
        },
        "item": {
          "id": "6e0e5cbd-08da-41dc-a5d4-3f75a8d7b795",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "386d8069-04d1-486f-9741-051b16733c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96152ea2-eb3f-4a2b-a015-e8bb9667e828",
        "cursor": {
          "ref": "cca16587-a3d4-4855-b645-e23e9c3c3bae",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "095b5152-9cac-4765-aa87-6e1c374382e5"
        },
        "item": {
          "id": "96152ea2-eb3f-4a2b-a015-e8bb9667e828",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "42c74e9c-6a1d-47e3-a627-2ac0e0cc5adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c057b1-3518-4705-92cf-e5366cd31241",
        "cursor": {
          "ref": "87789618-b8a8-45e5-95d6-0196042b8e42",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3794d404-dc5b-4efd-9664-2e93c9a02b52"
        },
        "item": {
          "id": "50c057b1-3518-4705-92cf-e5366cd31241",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b2ab523f-8db0-49fb-a271-dd9486c875ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95fe6c5-8638-41e7-a790-9386e56e53f3",
        "cursor": {
          "ref": "f80de744-40e1-4325-a5a1-2e9a48d1ff62",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "588b592e-63bc-4f27-a143-c04834c9b771"
        },
        "item": {
          "id": "a95fe6c5-8638-41e7-a790-9386e56e53f3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dafebc02-b5fa-49b6-924e-1480b2a4a412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92afabc1-e4b7-4313-a422-1b6d2f27aee4",
        "cursor": {
          "ref": "ad89dc17-fa2d-497d-bd7f-99056d524c81",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9e7f5b27-220e-4512-801c-4890d8a6d7a4"
        },
        "item": {
          "id": "92afabc1-e4b7-4313-a422-1b6d2f27aee4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "26b90a33-7c87-4a1a-92d7-8cb9f8752ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c880ba-daed-4ff4-a812-4b8b3894f7b2",
        "cursor": {
          "ref": "c28c42c8-4e18-4f8b-99ee-436ade7c3a51",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a7a94b41-a39a-4c9a-b378-42fceb643ebf"
        },
        "item": {
          "id": "10c880ba-daed-4ff4-a812-4b8b3894f7b2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0ddc35ac-d398-4563-ac01-58c0fb312845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c043dcdf-c8a4-4730-9b69-58b13ff7b105",
        "cursor": {
          "ref": "2f4914d4-2cfe-4029-ad42-3d2299356ddf",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5cae5b71-2440-43a2-94c3-42046ba26627"
        },
        "item": {
          "id": "c043dcdf-c8a4-4730-9b69-58b13ff7b105",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b88cd4c1-e0f8-41a5-b894-0b94e4aae71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9daf35-5a92-4f8c-b08b-689d6cf8a25b",
        "cursor": {
          "ref": "8eb4e234-68a2-409d-98e7-d247996cbeff",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e0d8cb36-cef1-4ff3-8a6e-5b1f59dc06f7"
        },
        "item": {
          "id": "bf9daf35-5a92-4f8c-b08b-689d6cf8a25b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aa0b6986-a0dd-4412-8bd0-8d99466d19b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbbf8fa-27ae-4198-a461-eebb81d66d71",
        "cursor": {
          "ref": "a03e686f-15de-42e0-a43e-89b16b7e8331",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "42156fdf-378d-440f-81d4-1ba5cc861851"
        },
        "item": {
          "id": "9dbbf8fa-27ae-4198-a461-eebb81d66d71",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b8dd8a93-55e4-4ac2-aa07-512f764abd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4305df-55f0-4ef9-8365-5e2efbd44c00",
        "cursor": {
          "ref": "8461440a-37db-4643-8c6b-4ef0e9d20bec",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c72b29e0-8dcd-4265-a979-03a1fbd04f31"
        },
        "item": {
          "id": "2d4305df-55f0-4ef9-8365-5e2efbd44c00",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0b5af007-4d77-406a-ad7b-6b4e59e8bea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7789c2-8a72-4a8a-84b4-063436ab1a0f",
        "cursor": {
          "ref": "cabf9033-f391-4533-b575-1b1dc4a79dbb",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c6f4cb24-1302-4280-bec9-f37ccb6cfc99"
        },
        "item": {
          "id": "9f7789c2-8a72-4a8a-84b4-063436ab1a0f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "605c6ef9-8a59-4a7b-b7c5-1d9ae1960729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a477c3c0-6efe-4eda-9526-86462bb035dc",
        "cursor": {
          "ref": "0ea2b18c-4b59-49a1-aab6-3be3a20b273f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5bcbbbec-632f-4ae0-83f6-3f2b8054d874"
        },
        "item": {
          "id": "a477c3c0-6efe-4eda-9526-86462bb035dc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "312bb752-e819-4261-aa14-37d80cf6be87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ed3289-43c5-457d-8f84-b475e49a901f",
        "cursor": {
          "ref": "268bcd5e-e37b-4b55-947c-cada0ba569f4",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c62e5a57-2e10-4882-b7fa-98331d4080d9"
        },
        "item": {
          "id": "43ed3289-43c5-457d-8f84-b475e49a901f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5ef4c7d4-9d3a-4049-920e-7f746dfc0d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eecb069-c7dc-437f-82fd-a8e862d2229d",
        "cursor": {
          "ref": "18c7b2a4-765f-44cc-8259-0ea25a2d737f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e5ff287b-e1f8-42f5-8986-ed8791ee5b07"
        },
        "item": {
          "id": "0eecb069-c7dc-437f-82fd-a8e862d2229d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3edf002c-86aa-4e97-91cf-d6c1650a5789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40456560-b572-4c90-80e7-9b94a54939d3",
        "cursor": {
          "ref": "89759c53-4257-40d7-8c3d-0616292ab894",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "13df7076-5644-4850-aa86-f6b2307ca1b7"
        },
        "item": {
          "id": "40456560-b572-4c90-80e7-9b94a54939d3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6c1f3c04-e4bd-40b3-b6bf-666730e98b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56680738-d822-4777-b32f-b094de8c78f9",
        "cursor": {
          "ref": "7e5ffcde-7de0-4852-852b-559cd7e4f11e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3f19fabf-d860-4ea8-8370-04edba1a4576"
        },
        "item": {
          "id": "56680738-d822-4777-b32f-b094de8c78f9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f993fcdf-4875-4b65-89c0-7749fb9afec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eebb85f-29ca-46ac-850f-3f425e81e9f5",
        "cursor": {
          "ref": "67cf64a1-4c68-47e0-93eb-186eaf86189d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d9014c58-7611-4375-a742-57cc4076bf0e"
        },
        "item": {
          "id": "0eebb85f-29ca-46ac-850f-3f425e81e9f5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8295508d-3c59-4568-9fbf-f7ecb0a493e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d2f6ba-68ca-493c-9337-3afe5833c84e",
        "cursor": {
          "ref": "b26fdee6-101b-46e4-bd89-7abc1b495807",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b44a57b6-3c12-463e-8650-e5bb49be17e2"
        },
        "item": {
          "id": "62d2f6ba-68ca-493c-9337-3afe5833c84e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "345abc6e-69c0-44e1-ad24-071270914d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af03551-43a3-4128-92bc-4815435596a4",
        "cursor": {
          "ref": "2d854442-b2dc-44c8-adce-4bab6e3e65fc",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5fbd1a4e-8706-4b38-ae13-8e5a89d30cfe"
        },
        "item": {
          "id": "2af03551-43a3-4128-92bc-4815435596a4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fcf0e158-9c78-44ec-86dd-7f2e8c4d8ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b41238-1380-408b-9fac-e189d5d853e5",
        "cursor": {
          "ref": "dd6d1097-d728-4fd3-bff2-0b99ea69c3b1",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2a34aa09-8cef-4c0d-9eec-2e470a220609"
        },
        "item": {
          "id": "83b41238-1380-408b-9fac-e189d5d853e5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "af2ce0b4-2a8e-490f-8813-d5ce4343d467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3158de-cbc7-40ac-aa7a-ae6f19646627",
        "cursor": {
          "ref": "8211883e-65b3-497b-82f6-9828980a52cb",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "08eea19f-beb9-454d-a141-36a8d4152ec7"
        },
        "item": {
          "id": "bc3158de-cbc7-40ac-aa7a-ae6f19646627",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b11a2635-a61f-4a23-9df3-dea78e148af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17beb3a4-a4b3-40e2-8179-d4f8454783cf",
        "cursor": {
          "ref": "2eb20d90-6a41-476e-9910-a173b10ca70f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d9ecedd9-9cb3-4036-a378-2fbdf2a0ecd4"
        },
        "item": {
          "id": "17beb3a4-a4b3-40e2-8179-d4f8454783cf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bf813f8c-5989-4909-a1fc-1e60083abf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee45516-6de5-4364-9bd1-2067a3739c11",
        "cursor": {
          "ref": "5aa1e94c-b1d7-4de8-8e34-ecc738f85e0e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b7338a7a-d372-455c-a61c-11d42799237d"
        },
        "item": {
          "id": "6ee45516-6de5-4364-9bd1-2067a3739c11",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2fc8b998-db12-476e-9686-2c9029495148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb67d03-4713-47a3-baa9-572949708738",
        "cursor": {
          "ref": "311309ab-ef79-4e4c-a33d-519aa3c85932",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ca3bc554-54bc-40b9-a90e-ea5301535b79"
        },
        "item": {
          "id": "edb67d03-4713-47a3-baa9-572949708738",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0ad9364e-9409-4e06-93b5-8bdac3eb4c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1341c08-f6c8-4d5e-92ee-fc36f1895dd7",
        "cursor": {
          "ref": "660594e2-e7f5-4398-9a10-9adb1811ba32",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "28778c63-815c-449c-9d20-1484011592e6"
        },
        "item": {
          "id": "d1341c08-f6c8-4d5e-92ee-fc36f1895dd7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "30220136-564e-4f07-b9da-2e7233a609d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4529368-9791-407a-b4ab-c05fcdde7b4c",
        "cursor": {
          "ref": "f0782264-18fb-4de3-b9b2-14e35b19722a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "86113c03-24f8-4252-b666-f6d11ccf582f"
        },
        "item": {
          "id": "a4529368-9791-407a-b4ab-c05fcdde7b4c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f1ea1958-d8ac-4db7-9df4-e5b8480755de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99219797-3014-4427-a716-6fcf9df2a54f",
        "cursor": {
          "ref": "3c8c5745-75e8-48e3-a40e-b102a3446cfb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7bad8b17-ea23-4e8d-a311-d6c324d3de96"
        },
        "item": {
          "id": "99219797-3014-4427-a716-6fcf9df2a54f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3fdbef9e-c35a-4d53-837b-147cb0c58381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75121f0-a17e-47c0-8f8e-c5ca8848baf2",
        "cursor": {
          "ref": "79a9eece-123a-4efd-ac61-c1bb0d29e58e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "83d61046-7825-49b3-8896-eced17a6235e"
        },
        "item": {
          "id": "d75121f0-a17e-47c0-8f8e-c5ca8848baf2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8930e2ba-4067-450a-ac30-bf82138d7304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4498e9-7dbb-4fb3-b1df-07222f5eab7d",
        "cursor": {
          "ref": "9686eb10-cdaa-48f6-aa6b-0f4722afe899",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bfc73e9b-f064-4b21-8b57-e41240a153ee"
        },
        "item": {
          "id": "fc4498e9-7dbb-4fb3-b1df-07222f5eab7d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2d4363db-4619-429f-aad5-c47aa7e3efd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d824fd8b-f5ac-4b0d-ae16-1f3b0e4d4319",
        "cursor": {
          "ref": "6ad6b538-5ce0-489b-9237-824ad5afbbba",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d224c2ef-c551-4336-93d5-7216cc1e0df2"
        },
        "item": {
          "id": "d824fd8b-f5ac-4b0d-ae16-1f3b0e4d4319",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9bd8f67b-e62a-49f0-966a-c97d1da6ba03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398d60e6-23d4-4c2c-98cf-221027158f31",
        "cursor": {
          "ref": "861432a5-4c07-4acd-93ee-ec879447f126",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0a8dfa25-f24c-4e06-ba36-d79fe8c2f8cf"
        },
        "item": {
          "id": "398d60e6-23d4-4c2c-98cf-221027158f31",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b62299ac-1ea0-4a03-88cf-c77f14e32cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518e54e6-25ae-4e9d-bf24-9105d1f7e6a4",
        "cursor": {
          "ref": "5d2fc94c-ff7c-4753-a394-8b0b3b252e23",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a4f35b79-0f01-47df-84b3-8090d4074e9f"
        },
        "item": {
          "id": "518e54e6-25ae-4e9d-bf24-9105d1f7e6a4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "36da5fb4-f4cd-4202-9754-ca67ed5070a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7eb38da-486e-4d31-9d41-02218228953f",
        "cursor": {
          "ref": "212874af-7e5c-44b2-8578-78f5cc4611a0",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8017f114-69f5-486a-8190-e204b0a7b01b"
        },
        "item": {
          "id": "c7eb38da-486e-4d31-9d41-02218228953f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "42bd25ef-cdcf-4015-818c-3c4b2cae1720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178c9b49-3881-4dca-8757-9f815069cd15",
        "cursor": {
          "ref": "2e6abd4e-5956-4222-8817-535c47538898",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "095abe57-6f90-4cef-be40-4ac140aee4f9"
        },
        "item": {
          "id": "178c9b49-3881-4dca-8757-9f815069cd15",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c192f874-a182-485c-bfe1-1679d243519d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dab593-9016-44bc-a3fb-21a1235bd7a6",
        "cursor": {
          "ref": "ecd07c6c-7222-4b79-89aa-0aa1beec5bce",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cd67de6a-762e-4bb0-bf09-a37edc7d5277"
        },
        "item": {
          "id": "d2dab593-9016-44bc-a3fb-21a1235bd7a6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "04e20975-83eb-4bbd-863b-8cbf07562789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d783053-dc85-4bba-b6f1-bdb50545e6da",
        "cursor": {
          "ref": "e620ff04-f7ea-460f-936d-056a492b296e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "be1bbd22-a7b7-4450-aaca-acb8175a702a"
        },
        "item": {
          "id": "4d783053-dc85-4bba-b6f1-bdb50545e6da",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fb61c9d4-cb85-4456-865f-e566e1659fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9a23fe-4131-487f-a256-e61a468bdcba",
        "cursor": {
          "ref": "cab86ffd-221e-4db9-b502-82b4081e0b9e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cd441f1f-c2dd-4aec-87f5-52b37be916ea"
        },
        "item": {
          "id": "5b9a23fe-4131-487f-a256-e61a468bdcba",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "61e63950-65a5-4424-b1bb-d31e8ff007f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b2946a-1fa3-4ff4-ad0a-30285a9f02e5",
        "cursor": {
          "ref": "d47b0861-96b0-45d2-b546-6297492a2b18",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "455a3713-f78c-4959-8c48-6908f8d295bd"
        },
        "item": {
          "id": "e9b2946a-1fa3-4ff4-ad0a-30285a9f02e5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "42169683-6d35-4c00-a980-93ef2cfb94cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568745f5-b409-4876-9310-ac5e5e185eaf",
        "cursor": {
          "ref": "a34a43c1-eb2c-429c-b5c4-272490569f07",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5aaa1f33-0724-4533-956d-906397c01185"
        },
        "item": {
          "id": "568745f5-b409-4876-9310-ac5e5e185eaf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d4e87fe7-abc7-45c8-b300-b57b5b01e90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7753489e-f0df-412e-92aa-22ee9e820f88",
        "cursor": {
          "ref": "a7d837e4-60e7-4337-baa1-7dcb02c42d3e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fcf51cd2-c216-4d12-b648-982b8c068825"
        },
        "item": {
          "id": "7753489e-f0df-412e-92aa-22ee9e820f88",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "43414124-43b8-4bab-984e-c8f06724a9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83031a42-39aa-432d-b5b0-e684bd1f455c",
        "cursor": {
          "ref": "5e2f4372-9eb8-468f-830e-f68cf571c037",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "19381e26-1035-4ad4-ab66-b4d396c4acea"
        },
        "item": {
          "id": "83031a42-39aa-432d-b5b0-e684bd1f455c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1e722687-ef7a-42ce-b7c6-2aefc120d113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8716626b-d8c5-4a6e-9886-121826127efa",
        "cursor": {
          "ref": "7b526076-8dab-4947-9fa1-a805dcbc5414",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ba83b5b1-aa0a-4563-b83a-335140373867"
        },
        "item": {
          "id": "8716626b-d8c5-4a6e-9886-121826127efa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3c69b15f-c1e0-41ba-b6d2-1d2094fce29a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d270287c-194b-4f8f-82ed-d92381f5a5f6",
        "cursor": {
          "ref": "6a63035a-dc8c-4c94-81a2-44a4e010a455",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "74d5ab90-c745-4f3d-8630-c87dc2142a64"
        },
        "item": {
          "id": "d270287c-194b-4f8f-82ed-d92381f5a5f6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3536d746-2e46-44e3-b702-7ad154b2969b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5e6d40a0-5486-4b8e-a584-3e18630c8dbb",
        "cursor": {
          "ref": "93b9106b-2592-44bb-92fa-13cc3ad71dd7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1ef0006f-7735-4ced-98db-99510aa192b2"
        },
        "item": {
          "id": "5e6d40a0-5486-4b8e-a584-3e18630c8dbb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9325ceef-8322-4f73-93be-2576a27d3b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3ffb1725-1979-4b5e-855c-3afc7de5fa98",
        "cursor": {
          "ref": "e5a98f3b-a5bb-4382-bb27-8a94c79c84ab",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "393db003-e9f0-409b-bcd9-bd6973879930"
        },
        "item": {
          "id": "3ffb1725-1979-4b5e-855c-3afc7de5fa98",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2548bc56-ba84-4647-9393-8826995c5a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9dfccc36-fc95-4327-b15c-c52c8566b5b6",
        "cursor": {
          "ref": "ba5ad25e-b6ab-4186-b9ad-a010f5baef58",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d624eb95-a477-4dda-b5d4-6398ee58e5c9"
        },
        "item": {
          "id": "9dfccc36-fc95-4327-b15c-c52c8566b5b6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "358f8d91-b036-4f1b-8f56-76fe04177258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "bb4c669f-b04c-4d69-afff-2fc0515b3087",
        "cursor": {
          "ref": "900317f7-3d5b-48cd-9913-6aa7aab76df9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "06f6d474-0d5b-474a-872d-39f2e8cbd13a"
        },
        "item": {
          "id": "bb4c669f-b04c-4d69-afff-2fc0515b3087",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "870583f1-3797-441f-b47c-7108115b97ca",
          "status": "Created",
          "code": 201,
          "responseTime": 11213,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6399c010-19f9-423f-b48d-6f8be2540344",
        "cursor": {
          "ref": "99979d63-55f8-46ef-b0ed-4b58f0d343ae",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b3092749-6a3e-4b18-a3f0-59bab69505ab"
        },
        "item": {
          "id": "6399c010-19f9-423f-b48d-6f8be2540344",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9849054f-4640-4a49-afe0-41722f80712c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f4fb23c8-002d-4d2a-bd32-48a5fc472f1c",
        "cursor": {
          "ref": "4f774736-6bd7-4bc3-b2a3-0ecfa1660912",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f56c87fc-52eb-42ae-8099-b28ad3855efa"
        },
        "item": {
          "id": "f4fb23c8-002d-4d2a-bd32-48a5fc472f1c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9e9f058e-dbe6-46ef-9570-e0c9176f5e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "56b847bd-bb36-455e-a002-7dc9ae6b821e",
        "cursor": {
          "ref": "5f9548f6-c54b-42b3-9be2-aa21c0822fb2",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cbbd3a6c-30ba-45b7-a7e1-296302f41dcc"
        },
        "item": {
          "id": "56b847bd-bb36-455e-a002-7dc9ae6b821e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "49c24653-d5c7-425a-b710-76944c8d8b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1570fe-1675-4dd2-813f-a78fbf0dbd27",
        "cursor": {
          "ref": "1b06f8fc-2118-4c25-a034-1eb0e8e76b50",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b58b85f4-df32-4520-913a-8b933e2f9ce1"
        },
        "item": {
          "id": "1d1570fe-1675-4dd2-813f-a78fbf0dbd27",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "06920d9e-a78e-416e-a47c-e85e38163a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148e8864-26e4-425c-9830-ec78e98c219e",
        "cursor": {
          "ref": "becf69ed-b77d-41ab-8b37-a1582153d8c4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8b2afc86-e54a-4645-a161-612562440d97"
        },
        "item": {
          "id": "148e8864-26e4-425c-9830-ec78e98c219e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "393fd3be-9468-4f45-88be-96ad731c30bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b475f9ef-3822-4ea0-8d41-63b976e736e5",
        "cursor": {
          "ref": "2c2db5c0-02aa-4e01-8861-de553a34b5de",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dcc0c8dd-62e0-4bc0-a612-297c00ffaebe"
        },
        "item": {
          "id": "b475f9ef-3822-4ea0-8d41-63b976e736e5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d1ef4303-a6fc-45e8-8db8-56b8cf02a831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8269e008-fd1c-4d84-9097-b57b3a3de2cd",
        "cursor": {
          "ref": "2d746856-83fa-4434-b39e-9865a0c2d06e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f00be1b9-9ae5-4e49-a092-b857eb0e8245"
        },
        "item": {
          "id": "8269e008-fd1c-4d84-9097-b57b3a3de2cd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7648338e-284c-45ad-9d67-4a0c9fb6e214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a265f4-d77c-4fa5-b322-4591431493c4",
        "cursor": {
          "ref": "f812524d-9947-4aa2-8117-7ff9b63b7f21",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "979098f5-d2a0-4d1b-803e-d5bea65b87c7"
        },
        "item": {
          "id": "d5a265f4-d77c-4fa5-b322-4591431493c4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b8810583-5f86-4a4d-9241-0fe9be05bc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b2227a-8f88-4447-9f32-3f4cd0ae4813",
        "cursor": {
          "ref": "3c9512f5-2b97-4469-a0bc-4619b286c999",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9df0b93d-2f99-456d-a6d4-feb3f2bdeb4f"
        },
        "item": {
          "id": "85b2227a-8f88-4447-9f32-3f4cd0ae4813",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "20ab70aa-f811-4138-a4ba-b83913c67d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf1447c-24b3-4df7-8a81-cb0d6686ee9d",
        "cursor": {
          "ref": "7830d50d-f739-456b-9704-d931094f6fa9",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d93a687b-54d1-437d-8055-02448b9e8e14"
        },
        "item": {
          "id": "ccf1447c-24b3-4df7-8a81-cb0d6686ee9d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b6e5693d-64ec-47f5-ac27-0cfb615cc481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3353d56f-b07a-4500-9eff-c0c66501b4aa",
        "cursor": {
          "ref": "d5d38c0d-3cc0-48e3-8864-2d4714d1c955",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0a9542d6-15c9-47b9-a775-190092c0fe47"
        },
        "item": {
          "id": "3353d56f-b07a-4500-9eff-c0c66501b4aa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "70c9568e-18e0-4a4f-a7ed-eae12c52bf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969fb219-c337-4d21-aa1e-21947715b9e8",
        "cursor": {
          "ref": "2d5da66b-ac31-4a4b-99c1-a0c57cf81043",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1015ad8e-3f3e-43fe-a39b-364266530293"
        },
        "item": {
          "id": "969fb219-c337-4d21-aa1e-21947715b9e8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fcdefad8-1a87-4afa-98f4-ee9485b3380b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4133682d-f461-4875-8aa2-4ead9480168f",
        "cursor": {
          "ref": "24ddd5ef-ec4c-4b87-b3dd-2c68af1521ed",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ddb4e3c3-b1e9-44cc-9d88-4c1684be8de2"
        },
        "item": {
          "id": "4133682d-f461-4875-8aa2-4ead9480168f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "93054b8a-9dee-4d50-a31c-2f13d4281d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fec985d-6471-4a65-84cc-c001a2b52880",
        "cursor": {
          "ref": "b9bfa161-4203-4765-8f43-99ceed0e0b76",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ca288571-dee7-448b-91c2-8bcd357d2ecf"
        },
        "item": {
          "id": "7fec985d-6471-4a65-84cc-c001a2b52880",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7b17405c-b820-4093-95d5-5aea976aabce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd71ce8-8fe3-4782-9724-bbfa3ed7b1a3",
        "cursor": {
          "ref": "0d0c8e72-7c20-4472-a58d-6d1ba6e9f15a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b58d745b-16ff-4965-ae24-1b2a2d5845dd"
        },
        "item": {
          "id": "8dd71ce8-8fe3-4782-9724-bbfa3ed7b1a3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "36b2ae25-3a37-48fa-90d6-a7e921fd988c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70b592a-4684-4b15-8cbf-f9e78a402102",
        "cursor": {
          "ref": "6b1a5675-e0a0-4d51-bc35-019e6c37a808",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3dc986b1-d0cd-48a0-88c2-93a98a7c4bd5"
        },
        "item": {
          "id": "b70b592a-4684-4b15-8cbf-f9e78a402102",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "02fbe7af-8ec8-457c-b144-7e3ec5311922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da81fef7-70f7-4dfa-b1f8-3c514a4d89fc",
        "cursor": {
          "ref": "c08b1ec5-78f6-4a22-bc79-60fb46b3f033",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d0c9c0e8-361d-4b83-b1a1-9553d47e5e3c"
        },
        "item": {
          "id": "da81fef7-70f7-4dfa-b1f8-3c514a4d89fc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bf7ce229-ef68-47fc-9a21-8b774086f954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dac2acf-b6e0-45e3-b578-0e1c5c4717a7",
        "cursor": {
          "ref": "88e3480a-84bf-446f-a343-f289dc729433",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2a0728b3-9e2f-43c5-9599-93f5bf21c72e"
        },
        "item": {
          "id": "5dac2acf-b6e0-45e3-b578-0e1c5c4717a7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5a0f757d-f1c7-469b-812c-956529f4f000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5f9692-0a35-4e39-8167-566be6f1ac2e",
        "cursor": {
          "ref": "8f0c3adb-2528-4bf7-bf3f-8c59e5077531",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4a2c66e2-b81c-4acf-b4c6-5f454fa39407"
        },
        "item": {
          "id": "6f5f9692-0a35-4e39-8167-566be6f1ac2e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5e1d8d35-1abb-46b7-bd44-9798a5dbd682",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "e9e3f4f6-e978-47d0-ac95-64562dee3600",
        "cursor": {
          "ref": "87b89aac-c09a-44fc-ae46-dd638caa6ede",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f3fae518-c41d-453d-931e-cc425a9fea6b"
        },
        "item": {
          "id": "e9e3f4f6-e978-47d0-ac95-64562dee3600",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "171b6c1f-9de9-44ff-8d2a-5bd8332fbda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b48e98-22d9-4e51-8528-c6b55f6702e0",
        "cursor": {
          "ref": "72534add-de16-4dda-9c4b-2053f845acfc",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b3d354ef-67f7-4fad-94b2-c2a270b4b44d"
        },
        "item": {
          "id": "27b48e98-22d9-4e51-8528-c6b55f6702e0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "609e3371-127b-40db-b172-fa42d5d5ce44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379c6dc8-b056-4803-bc0d-1f3bb4a3f04c",
        "cursor": {
          "ref": "012543fd-527e-4279-959c-85b36faba47d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "13849b04-a86f-4ffa-ae4e-a9cf782b1665"
        },
        "item": {
          "id": "379c6dc8-b056-4803-bc0d-1f3bb4a3f04c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e60fe155-3a4a-4650-9ea6-7d4f3d962d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a35ab10-6144-46d4-9895-23a7593c4bbf",
        "cursor": {
          "ref": "b6695afa-2752-46b0-9597-9c1b702ed27e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1872e302-44e0-46f2-a4f2-ed66f15bde12"
        },
        "item": {
          "id": "7a35ab10-6144-46d4-9895-23a7593c4bbf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d7d48ea1-ccd7-461c-88a4-365503d03cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f46399c-fb81-4ce0-88b0-41f8f609ef82",
        "cursor": {
          "ref": "4fea33bb-d158-4572-993e-93bc35c851b9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a9a2a6e8-1d94-43d0-aa50-ff37c9cfd833"
        },
        "item": {
          "id": "5f46399c-fb81-4ce0-88b0-41f8f609ef82",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2c4f90ba-8d48-4131-98b8-8a66b97ce761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b57d27e-982a-47d7-8b3c-cb096ee32f36",
        "cursor": {
          "ref": "3a51c82a-a6eb-4456-8654-3730fc8bd318",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "818633c1-6d81-4842-b6bc-352235f3d2b8"
        },
        "item": {
          "id": "1b57d27e-982a-47d7-8b3c-cb096ee32f36",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b3d3eaba-390e-4754-988a-1d7ec3bcbed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2a0346-1945-4f66-8143-6e05daff5f39",
        "cursor": {
          "ref": "85b0af77-6772-4f8c-b209-13f590d2e99d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "77817ff9-c645-42be-bbf7-5380d77170d0"
        },
        "item": {
          "id": "bc2a0346-1945-4f66-8143-6e05daff5f39",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "75ece529-143b-41e2-837e-a6962e446f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d031b7-5c45-409d-9dc9-a29de67782f7",
        "cursor": {
          "ref": "bf1ca241-c364-440e-948f-af70ce7eb42e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b0096322-dd3c-411d-acd5-88caadf9d82e"
        },
        "item": {
          "id": "39d031b7-5c45-409d-9dc9-a29de67782f7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c081fe63-2844-4364-99c0-d27c2330b27f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 83,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "422f2278-3d37-48ae-bc2e-9a6082d07b43",
        "cursor": {
          "ref": "eb08b0d0-0447-4251-891b-98c689c157ca",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b0951547-d893-40fe-bc3d-b4afef027a5b"
        },
        "item": {
          "id": "422f2278-3d37-48ae-bc2e-9a6082d07b43",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1b78f150-2bc6-4744-a3ce-153dac31ea6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fcb5ac-dc49-487b-a810-c307badb8f55",
        "cursor": {
          "ref": "e5554770-c326-4bfc-8477-c05f63d51a7c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2364c3ee-3b73-4ff5-b59f-93fb4ef6c602"
        },
        "item": {
          "id": "63fcb5ac-dc49-487b-a810-c307badb8f55",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5efb725f-441b-4e21-8fdb-bf7620b00626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8789326-3cb4-4652-8224-15154b63a532",
        "cursor": {
          "ref": "dff901ba-487a-4f53-a7fa-2fdc0fc9e89d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e2170fcc-64a2-44a9-9f00-8d8e6310be37"
        },
        "item": {
          "id": "d8789326-3cb4-4652-8224-15154b63a532",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f7459f3c-e5cf-4554-aca2-9d074e9bd9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4be3860-869a-423b-b087-a1dd12836952",
        "cursor": {
          "ref": "f0567394-452f-4691-a4ef-d2409bb892dc",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0dee8b73-c2ce-4cd1-aa9d-74618ee393fc"
        },
        "item": {
          "id": "c4be3860-869a-423b-b087-a1dd12836952",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "77066a26-81a5-4a32-a0e0-68e22980089d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc8ce05-3082-432e-958a-0213699b3c78",
        "cursor": {
          "ref": "acd09d47-e5e6-4560-b6c7-ab56e70df8bf",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "61e5e642-d758-428c-8a39-ae3670fb5347"
        },
        "item": {
          "id": "0dc8ce05-3082-432e-958a-0213699b3c78",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "87d6f54a-5de7-4f4d-a799-6e297fdaf8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf414339-da35-4d56-b7af-0121b79a7e71",
        "cursor": {
          "ref": "d009d0e4-2763-4fb7-9ff0-ffb60b8c90c9",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a973979a-34e9-4183-b2bc-b6299c35ebd4"
        },
        "item": {
          "id": "bf414339-da35-4d56-b7af-0121b79a7e71",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1449efd3-f27d-4a4f-b3eb-34054d9b41ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ca9481-e177-4211-86ae-5101405e2b31",
        "cursor": {
          "ref": "037ba6f3-f658-448f-84cc-d67739c3b631",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bf2b02dd-8f9a-43ad-9941-a52270975757"
        },
        "item": {
          "id": "a0ca9481-e177-4211-86ae-5101405e2b31",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b35aa3ca-956b-460e-b6e7-dc1c74512c2e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 91,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "87e31516-89ea-4ef5-bdda-dc8128062d3e",
        "cursor": {
          "ref": "7427721d-1bd7-4ba6-b71e-fa4e72916672",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0d9fe152-3ccb-48da-9688-be5ef4a75d6c"
        },
        "item": {
          "id": "87e31516-89ea-4ef5-bdda-dc8128062d3e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "16f708f7-ad09-4bc6-9e93-03ba18c6ddb1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "c850a0ca-9ab6-43c1-a12a-4eb8b3a6fa33",
        "cursor": {
          "ref": "f5cbfd8a-6e0d-4da9-be92-3951081bb6cf",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "66236b74-0e1c-4360-9dc4-407af8798221"
        },
        "item": {
          "id": "c850a0ca-9ab6-43c1-a12a-4eb8b3a6fa33",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7b6687de-f799-4d33-8be1-f3b6201f8f7f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 25,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "645a5f82-1fea-45d2-bc4b-9b1e13c47887",
        "cursor": {
          "ref": "fff21931-88cf-42c4-b458-125a94960250",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c5ac0042-fda8-4f2c-bdbc-a034fceed64a"
        },
        "item": {
          "id": "645a5f82-1fea-45d2-bc4b-9b1e13c47887",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4606bd1d-2010-455c-ac5b-288236a04260",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "ecafca3d-42c6-4d18-93e8-0d18861f227b",
        "cursor": {
          "ref": "39d64b52-afc1-42d6-a5eb-4d6aad7cfa09",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f745c2c0-8626-4a14-a1c1-476f16a1cfbf"
        },
        "item": {
          "id": "ecafca3d-42c6-4d18-93e8-0d18861f227b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "858773eb-1cd7-45e4-a732-9e358ef0d388",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ea007069-864a-4eaf-a50e-2be8a2806554",
        "cursor": {
          "ref": "f6d7646b-4c9c-4e1e-a415-9913336d1591",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7c3283b9-0928-44ab-85c9-1c41767d56d1"
        },
        "item": {
          "id": "ea007069-864a-4eaf-a50e-2be8a2806554",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b091a353-c18a-4282-91de-488f4928eb13",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 25,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "28ebc106-d7a6-4275-96df-325c4632e7d6",
        "cursor": {
          "ref": "b1844199-7b17-46a6-8e4b-8a405d40448d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "85bf5863-163e-4df7-98aa-345c77511f4a"
        },
        "item": {
          "id": "28ebc106-d7a6-4275-96df-325c4632e7d6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f1406e04-4944-48c8-8a21-0c62e82c30e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cb2bb9-9af0-437d-9b97-a462c3783f01",
        "cursor": {
          "ref": "14f4bd49-696a-4ea3-8666-27768be51689",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e15de9f0-5d95-453a-8f86-4d5a3ba41ae2"
        },
        "item": {
          "id": "d6cb2bb9-9af0-437d-9b97-a462c3783f01",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d5cbcd7d-8650-4d0f-9601-790724bdb5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880e3eb5-8258-4605-b98f-62dbc806c18f",
        "cursor": {
          "ref": "1472bfd5-f9dc-481a-b344-c9f9b20d4692",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d1499623-7c1c-475f-84cd-698a6b18133f"
        },
        "item": {
          "id": "880e3eb5-8258-4605-b98f-62dbc806c18f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2414fe8e-a6a0-44f9-9478-1198c0679155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a139f9d2-25e8-4ab9-ac07-0cc17fe394a5",
        "cursor": {
          "ref": "cf79d3ee-274e-4c5e-ae65-47df412cf0a8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "64478d4f-02ce-48a1-9594-a7a9eeac411c"
        },
        "item": {
          "id": "a139f9d2-25e8-4ab9-ac07-0cc17fe394a5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d0b0ce1e-e142-4ca7-8e0b-129671227749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629dd487-e8f5-4be8-ae56-a79868bd6724",
        "cursor": {
          "ref": "fe1610e4-ab37-4697-bc86-835869e45816",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ce7f2161-cb52-45ee-b00d-23a00a1f8e4f"
        },
        "item": {
          "id": "629dd487-e8f5-4be8-ae56-a79868bd6724",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0bcfa9be-4ae4-4629-9788-5b2f4079419f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337e054c-4c68-47e4-ade8-82331c618fff",
        "cursor": {
          "ref": "e6af0a34-3057-4957-ab46-030f1ebc67a9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "63ecd34d-925d-4695-9a70-fe9b4bd23358"
        },
        "item": {
          "id": "337e054c-4c68-47e4-ade8-82331c618fff",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d6beb6cd-309a-4203-96db-f6e3d10394ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbf2c9d-d36b-4415-9a8a-0dde77eea7e8",
        "cursor": {
          "ref": "cdc8c85c-29ef-46d0-bc50-fd75d9e4a0d7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3885640e-597f-4d27-ba33-aaf7c2f65eb7"
        },
        "item": {
          "id": "cbbf2c9d-d36b-4415-9a8a-0dde77eea7e8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3ddf9841-8721-4a45-bcf1-62020ba5ca28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948b0e1b-56c6-4a0c-8ca1-c2882e1ebcf4",
        "cursor": {
          "ref": "0f3cd720-d931-4ec2-834e-59dd80704552",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9ab78f2e-046e-4d03-ace4-01775e478799"
        },
        "item": {
          "id": "948b0e1b-56c6-4a0c-8ca1-c2882e1ebcf4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8c121b71-442d-4f36-80c2-23e3a0f32560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6518582c-c825-4276-8e9f-c43acfaff9e8",
        "cursor": {
          "ref": "e4f1c78a-9e8e-4b9a-a348-c9c3d92cea2c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8e6c127c-e583-4bb3-b3b2-1b9928cc340c"
        },
        "item": {
          "id": "6518582c-c825-4276-8e9f-c43acfaff9e8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "adb6ae1a-f190-43e8-8c73-f06634817fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0b9d2b-0683-488c-91cb-0fc41cb2f5c7",
        "cursor": {
          "ref": "e8dce242-8cc8-42c8-b2d9-092e7eda610d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b9c9ec2a-d628-4709-bb91-8fb717a57e51"
        },
        "item": {
          "id": "8f0b9d2b-0683-488c-91cb-0fc41cb2f5c7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b2e0b7de-6cbd-41df-a6f3-eb785d1de8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b0cc4d-7a4a-498b-b2cd-eaf3eb2dd391",
        "cursor": {
          "ref": "de065930-0f4d-46be-b4f1-97dd5a4d35f6",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ba98d245-5856-4eea-9d98-fee64de42778"
        },
        "item": {
          "id": "77b0cc4d-7a4a-498b-b2cd-eaf3eb2dd391",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "71eaa7bd-bfda-4407-868c-9a3a28bc0506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25328456-cdc9-456d-9568-e2357070a390",
        "cursor": {
          "ref": "626d6689-bdff-4dc8-90d0-c70b592912f6",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4d069ffc-e195-4525-842c-2ba8bddc229c"
        },
        "item": {
          "id": "25328456-cdc9-456d-9568-e2357070a390",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "044907f4-2c42-4785-a49f-7b6b4bc5c175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c35ff3-b8bb-4678-9673-24d4fb09cda3",
        "cursor": {
          "ref": "b5688034-db2b-4d66-982f-f9b829e996c9",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4a5d7eaf-7b2d-4951-b334-cd360943d0f2"
        },
        "item": {
          "id": "a2c35ff3-b8bb-4678-9673-24d4fb09cda3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "15059fed-ef1a-4722-8191-8aff80b11829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2439cd-b17f-4711-a610-8c34872466b2",
        "cursor": {
          "ref": "a7f0ea46-fb29-4beb-8d38-3375a208030e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3f789164-a081-4ae0-a445-e142357db942"
        },
        "item": {
          "id": "9e2439cd-b17f-4711-a610-8c34872466b2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b0c57b4b-ba53-4b16-8290-f0e95b4bebef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c936bdc-909e-45b3-b910-277e0f4f4035",
        "cursor": {
          "ref": "2f01dade-277f-400f-b967-dbfbb64e5605",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d7fde96c-4a60-42d4-9f6c-61f5244aa851"
        },
        "item": {
          "id": "0c936bdc-909e-45b3-b910-277e0f4f4035",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2a6511c2-2cf3-41eb-a183-077e2d0161ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c77878-0dc2-47bd-9b4a-090918659b44",
        "cursor": {
          "ref": "395f50b7-18f4-4591-b85a-fd756fe7618e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1e607f87-6e9d-49b9-bebc-a01a6349ff18"
        },
        "item": {
          "id": "51c77878-0dc2-47bd-9b4a-090918659b44",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "02abba53-32fb-43cb-80ba-985ffbeeb845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c8fbf6-c614-44ea-bbc2-af7d5d48af86",
        "cursor": {
          "ref": "166ff9a0-83d5-4617-ac54-d0081ddeca33",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ef948829-7324-49d6-8960-822e6148361f"
        },
        "item": {
          "id": "55c8fbf6-c614-44ea-bbc2-af7d5d48af86",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "751e0c0f-da0e-44ae-a9e0-3341322f6e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3c1896-e68e-4be7-a9db-fe0f3f4302f5",
        "cursor": {
          "ref": "97d0ecf5-9b0a-4933-98a9-e08491f0bce0",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "04b7cd18-f444-4af1-8e43-a72a3104e91e"
        },
        "item": {
          "id": "ca3c1896-e68e-4be7-a9db-fe0f3f4302f5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "780acec4-67a9-4756-894f-ac140d2f8fbb",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "79e2dff0-37f3-4736-8d16-de91b3d3ff3e",
        "cursor": {
          "ref": "2d0ba219-307b-4acd-aebd-2c9a8e83121f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c8dc0d69-292e-4bc5-b17b-1e54647598cd"
        },
        "item": {
          "id": "79e2dff0-37f3-4736-8d16-de91b3d3ff3e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "184cdc0e-d097-443b-b302-1ee09d07b106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d114754-91c3-436b-8b36-635b067db3fb",
        "cursor": {
          "ref": "2be1ecd1-6b89-438c-a83f-effa7a469262",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "be2f8948-9cb1-47ae-b85f-8aed97e8e609"
        },
        "item": {
          "id": "5d114754-91c3-436b-8b36-635b067db3fb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "04ddd688-d4ea-4c83-9048-ec17ceac571b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fef9906-5b68-4e97-9a7c-1a15b953cc98",
        "cursor": {
          "ref": "3b0cc098-bf4e-42b2-9c60-49d75df16c9d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "eaedec7c-a889-41a6-a5ed-c19958efbef7"
        },
        "item": {
          "id": "8fef9906-5b68-4e97-9a7c-1a15b953cc98",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "29fcadc4-1870-465a-b641-a83d77869444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f00613-e983-466e-af07-95671c72dac8",
        "cursor": {
          "ref": "a95095cb-9835-4d26-8fc5-af27c7bb8ada",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "11829da5-7519-4e37-9557-65ed4642848a"
        },
        "item": {
          "id": "08f00613-e983-466e-af07-95671c72dac8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "45f65b88-eea9-43e8-adb5-689bdfc15978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce930be-c148-4e99-9655-b6921b37b620",
        "cursor": {
          "ref": "21120bb8-d44e-4912-b15d-8dd85cdb6274",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3610cff5-f956-4a36-b1aa-3da31020caf7"
        },
        "item": {
          "id": "4ce930be-c148-4e99-9655-b6921b37b620",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a26c5547-2978-4022-8dc0-4f25948d8ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f0f687-2101-4883-873c-b083ffb89f01",
        "cursor": {
          "ref": "c655e830-8c41-40db-95c6-7318125d9474",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0ad17350-ac0d-4f74-90a5-55c2b04fd42b"
        },
        "item": {
          "id": "67f0f687-2101-4883-873c-b083ffb89f01",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "91726c65-a0e5-4213-b6e9-5a2c4fbd6c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b799e15-b31d-4496-b2f0-da98bf444a72",
        "cursor": {
          "ref": "35ab2a58-1178-4392-9e3c-eea5ef8d2b8e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "60b80849-c661-41bc-904a-08ad27ccf78d"
        },
        "item": {
          "id": "2b799e15-b31d-4496-b2f0-da98bf444a72",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "786cf512-30f4-4697-ba9b-4f2c40e0e3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43981ad8-829f-4b2e-9c8a-65df1339bf9c",
        "cursor": {
          "ref": "614043ec-a80f-4b0c-b59b-b2d4688eac5e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c316713d-6198-40a2-bb6e-344df3fc5269"
        },
        "item": {
          "id": "43981ad8-829f-4b2e-9c8a-65df1339bf9c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5219adda-d051-4d7e-9d7a-4df1adfa72c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bfc1ee-3450-4ddb-8471-b21ebaa44915",
        "cursor": {
          "ref": "76709357-761b-4467-886c-3245254a1881",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "277ac868-a0d9-42db-9271-dbe9b235f35b"
        },
        "item": {
          "id": "d2bfc1ee-3450-4ddb-8471-b21ebaa44915",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cbc56fc9-a1fb-4169-9907-67a39c246c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d355f207-5c55-488c-af81-b70c0793b58f",
        "cursor": {
          "ref": "f102d947-5802-4cc5-bd94-5df3806491e1",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "494f1a3b-17bb-4f69-b6f6-a1084441e6be"
        },
        "item": {
          "id": "d355f207-5c55-488c-af81-b70c0793b58f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b7f172ca-ddbb-4000-8025-40aeb552bd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5afa5b4-a6d5-4552-9454-830f53260a56",
        "cursor": {
          "ref": "1b0d43cf-9fdf-4dc4-aaeb-2448a6b08f85",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8b08768d-a016-4355-822a-d0d60bbb5c74"
        },
        "item": {
          "id": "b5afa5b4-a6d5-4552-9454-830f53260a56",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b853a97e-8eb9-44ec-ae20-5871808fd09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec87fa01-7b4c-42e6-b45b-ce3ea87a7a74",
        "cursor": {
          "ref": "5ec004dd-cdd1-4472-a4fb-beca012e301c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8dcf4da9-cb59-4865-81a9-722ecaf30b15"
        },
        "item": {
          "id": "ec87fa01-7b4c-42e6-b45b-ce3ea87a7a74",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "58cc9bbe-5aed-4948-aad8-85ff799b5c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e58db70-ca37-4b01-aaac-c5a2db3f7016",
        "cursor": {
          "ref": "ee7e4d86-e263-46d9-8603-e6e7e29174a2",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "58af7350-03d0-466a-b7fd-e9aea86221e3"
        },
        "item": {
          "id": "2e58db70-ca37-4b01-aaac-c5a2db3f7016",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "727f1da4-ea33-4ac6-bebf-866e6f19b70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f55f4d-78a3-4295-8ee0-d597998e174b",
        "cursor": {
          "ref": "ae6b2b13-3489-4bab-a9ad-bd3ff6fbd5d8",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7d5b54fd-2468-49fb-b648-a4c850b4a2d1"
        },
        "item": {
          "id": "90f55f4d-78a3-4295-8ee0-d597998e174b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "966960a7-97f2-4407-8fd9-8c93ac53633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3070d923-a6c2-42c0-8fc7-3dfd170f7781",
        "cursor": {
          "ref": "fa2fb920-5102-423b-b577-5ac82026aef6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bf7cbdcd-2d78-4673-9388-f55fecb67f8d"
        },
        "item": {
          "id": "3070d923-a6c2-42c0-8fc7-3dfd170f7781",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "096c6509-bf05-4831-9ba9-7d21267b08a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dc4a3b-15f1-4747-b0a9-0326c4300339",
        "cursor": {
          "ref": "39bd08f7-9d67-47a6-8168-2afde059fd89",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1b20f24a-47e5-4e9d-a6dc-9dc718de5804"
        },
        "item": {
          "id": "92dc4a3b-15f1-4747-b0a9-0326c4300339",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6f6b72e6-0e41-4f1e-be84-c7c7ad7dc44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0278e7f3-6901-46a6-bafb-8dbf4cc27916",
        "cursor": {
          "ref": "4b3c2b3e-5abc-4274-970d-d9b099dac269",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "314229ef-6403-4a16-97aa-56181d6f5c8b"
        },
        "item": {
          "id": "0278e7f3-6901-46a6-bafb-8dbf4cc27916",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "99f6d69c-c2c2-4027-a359-170525e9df22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c814be09-b92c-4209-b386-a0a44cb6cd8d",
        "cursor": {
          "ref": "5137d99a-449b-4b2c-a896-4758fa47f1f5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4a28d03f-3e81-4c2e-8d29-27726aea7feb"
        },
        "item": {
          "id": "c814be09-b92c-4209-b386-a0a44cb6cd8d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a41487c7-0c2f-4c7f-a892-897be05d2f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87113a1c-8d43-47ae-8bd4-ffa686560813",
        "cursor": {
          "ref": "d894f887-c1b9-46bd-9be9-546fde50aead",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7e35d1c1-769d-428c-b814-74b922c1043d"
        },
        "item": {
          "id": "87113a1c-8d43-47ae-8bd4-ffa686560813",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1437b5fe-152d-4537-a51a-3e947f15252b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b70fa1-6c83-4315-ade6-c109b026787a",
        "cursor": {
          "ref": "ec208657-ad39-4a77-9c0c-bb81b68faf99",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "71a14fe8-b93c-4cb4-b5ea-d84123d82e81"
        },
        "item": {
          "id": "b3b70fa1-6c83-4315-ade6-c109b026787a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "814b1ef9-9a45-40cd-ac52-7679332d7675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4c099e-f94f-4139-8b7b-cea7bc07a055",
        "cursor": {
          "ref": "0e9767a7-a2f4-48d5-96d4-9301f55bc521",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "07b8543a-53dd-4fc7-9786-6e132cee0c0c"
        },
        "item": {
          "id": "ad4c099e-f94f-4139-8b7b-cea7bc07a055",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "47780b36-2bb5-404b-822e-5c6e1b5fe246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6a3375-291b-43b2-95d6-8252f48fca2b",
        "cursor": {
          "ref": "b6208f81-76d8-40bd-9509-42157159c073",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bcff7ee7-a2eb-4f36-9fa4-d3c5265d39bf"
        },
        "item": {
          "id": "3b6a3375-291b-43b2-95d6-8252f48fca2b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "965307af-1644-4de6-b229-711831d429db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8c6a39-8245-4eda-abee-bada01fa703c",
        "cursor": {
          "ref": "f620a901-0895-4a61-b806-afae8fd8bcca",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ebf19644-c13b-4854-9b2f-106c691c2b5b"
        },
        "item": {
          "id": "5b8c6a39-8245-4eda-abee-bada01fa703c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bcf04dc6-9243-45e9-b8ae-1196fc9661ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c620f561-b584-4da1-879f-cfc38f307058",
        "cursor": {
          "ref": "c51afac1-c71b-4c1c-88a2-6f6ecc14e851",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1650e24e-bfb0-4c3c-a675-f83603b4f21e"
        },
        "item": {
          "id": "c620f561-b584-4da1-879f-cfc38f307058",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d7db88db-091c-4a41-9831-233d59bd4c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab05ab5d-fc0c-4f72-a443-2ce8e4f9f835",
        "cursor": {
          "ref": "f5dfd46c-719e-4910-9bea-d933c42267bd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "df1e6125-3a2e-4c16-95bc-e7e8ad39fc7b"
        },
        "item": {
          "id": "ab05ab5d-fc0c-4f72-a443-2ce8e4f9f835",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3afb9664-ae24-4de5-822b-acadf037febe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b7ab53-1aa9-4589-b82b-34cdb18a0588",
        "cursor": {
          "ref": "ceca5e63-201f-4d6e-baa4-7ee708f066d4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "36bf2338-82ca-4d2f-8e21-b45494c43d0a"
        },
        "item": {
          "id": "a5b7ab53-1aa9-4589-b82b-34cdb18a0588",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "118b2f16-2331-4c32-8302-7daf02ed8b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a703c5-e182-4617-9cfc-1cf1cfb30d1f",
        "cursor": {
          "ref": "e11d67f3-6841-47d0-bc23-6527248835a5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e7ddd96c-5942-483e-8a95-ef2874c19b39"
        },
        "item": {
          "id": "18a703c5-e182-4617-9cfc-1cf1cfb30d1f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ede11ec0-e8fd-4240-ae8a-2a21792cdeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a82bc5-7adb-4317-85fe-9c4dc25d3e97",
        "cursor": {
          "ref": "9a57bb29-4d98-4464-86ad-e4a637e50e7f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "36c43a51-430e-4cd2-af97-f2549907c0a1"
        },
        "item": {
          "id": "f1a82bc5-7adb-4317-85fe-9c4dc25d3e97",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e17c8a4b-73ee-467b-a4e7-c95f6fec88bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d707594e-b3c8-4f30-b8f0-2d7f7c78038a",
        "cursor": {
          "ref": "97c0cb30-e129-4b2b-bde1-93eda2a5a1b8",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2ccc6cd4-0538-4675-8a9e-8ab06af2ff98"
        },
        "item": {
          "id": "d707594e-b3c8-4f30-b8f0-2d7f7c78038a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "84b2dbce-1329-48d2-ac85-9e2899c75db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2fefe5-aa9b-44be-b474-fc910b76392c",
        "cursor": {
          "ref": "4de978e7-1bf8-4aaf-aeea-00ecd9a2fe77",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ae8d5f76-b319-42ce-b936-584327f90fe1"
        },
        "item": {
          "id": "5f2fefe5-aa9b-44be-b474-fc910b76392c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "60aec35a-4ce8-4636-872d-5065e2cc6855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7c365a-4910-448d-8b40-087584042a5d",
        "cursor": {
          "ref": "c1a8c462-638c-48d2-b33a-ffc42b36a6f3",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ca981acd-2c7d-4acd-8677-b23756acaf17"
        },
        "item": {
          "id": "1f7c365a-4910-448d-8b40-087584042a5d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c63c29db-2008-4f50-9c88-5bb7aa7346fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe80dae6-5fbb-4690-b069-a0349c6a7beb",
        "cursor": {
          "ref": "0ad7094c-dbcd-4dd4-9ecd-94ebe9cc9336",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "28ed7480-6039-4960-9983-5169e30085a7"
        },
        "item": {
          "id": "fe80dae6-5fbb-4690-b069-a0349c6a7beb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4699fc85-1a28-4d5e-a16a-ab397f28775c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e51d7da-a49d-496b-ae6e-545a4195f552",
        "cursor": {
          "ref": "ae6704bb-c05d-4d4f-b9b5-4172477f8940",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6e7fe0de-0710-4d6f-b992-203eb548a467"
        },
        "item": {
          "id": "1e51d7da-a49d-496b-ae6e-545a4195f552",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0053d1e1-20fa-4d7d-a513-688fb55ad59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b0edaf-ed75-4f35-9055-8fdfda4ae781",
        "cursor": {
          "ref": "7d4de029-73c1-402b-b990-6d213be1f4d4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1cce49d3-9514-4109-ae69-d67d11dac9a3"
        },
        "item": {
          "id": "67b0edaf-ed75-4f35-9055-8fdfda4ae781",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "73bef33f-b2a5-4df7-999f-990296da81a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e1d54d-6053-438f-8c73-dd39e1c1abdc",
        "cursor": {
          "ref": "62529adb-a66d-4a88-aa3c-3ad926cdb6b2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0af0f70b-f490-4332-908c-fca67644e6ba"
        },
        "item": {
          "id": "c4e1d54d-6053-438f-8c73-dd39e1c1abdc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1824ce26-45d0-49b1-9be6-18ab1b33cec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434c178d-ef0a-44e5-9f5d-3791c4586157",
        "cursor": {
          "ref": "e76242ed-c4d6-42bb-b246-7cf5f6b371c2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7f5815d4-4e71-42bd-afab-1de9e0e9db17"
        },
        "item": {
          "id": "434c178d-ef0a-44e5-9f5d-3791c4586157",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1a26ddc5-92e9-4f1b-9b69-6f80382ba84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a651f2d-31e3-419e-b4db-af66d507e01e",
        "cursor": {
          "ref": "e701ac81-7e30-4baf-ac14-c24fe991c76c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b8526502-a0ec-400b-accf-3487bea30c1f"
        },
        "item": {
          "id": "6a651f2d-31e3-419e-b4db-af66d507e01e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "df54e587-3618-4c7d-aae1-661704c76438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ad4985-ae89-43e0-94ec-11a0329aad42",
        "cursor": {
          "ref": "18296e9c-13e1-4a0e-bf54-0c05a79b3ade",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "df7cac27-02f9-41be-b58a-f2975c25a9ea"
        },
        "item": {
          "id": "45ad4985-ae89-43e0-94ec-11a0329aad42",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d00c83be-50cf-407f-811f-82c251d4ac75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d679929-d3dc-440e-b5ad-a7b5cbe9b146",
        "cursor": {
          "ref": "cc9bdc3f-41c3-4198-9012-fda43088c941",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fb9fa5e6-0d44-46e4-a7e2-9f07e7a8335b"
        },
        "item": {
          "id": "6d679929-d3dc-440e-b5ad-a7b5cbe9b146",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cb6125b8-ac14-4c57-ad9d-a560b51c7eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1daa47-3ec6-47de-b4ad-ef133e346f28",
        "cursor": {
          "ref": "60d1250a-550c-4374-b914-bd72ba780bfa",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ca190cb7-81c1-480b-96ae-de0ce618afe5"
        },
        "item": {
          "id": "0c1daa47-3ec6-47de-b4ad-ef133e346f28",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4f59a4dc-d988-4725-b7a8-93435f8af7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50201061-dd79-4448-bb1f-3655f8b8eb41",
        "cursor": {
          "ref": "c434649c-9db0-4ed5-a2fe-25b6b46de8e1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d5147b66-674d-42d4-afc2-89ee31495685"
        },
        "item": {
          "id": "50201061-dd79-4448-bb1f-3655f8b8eb41",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9f16ddb9-2344-4137-8793-9b6c971d9c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde3a5cf-e60f-4a3a-9384-ef19af4fdea3",
        "cursor": {
          "ref": "1c71198d-589d-42ee-9397-9f1cac9fdfbe",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "deb6dee7-e894-44ae-9e4d-236c4f0d624f"
        },
        "item": {
          "id": "bde3a5cf-e60f-4a3a-9384-ef19af4fdea3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5fd8a670-d3ae-4386-984a-db1c1b195668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224e8e12-8144-4614-9651-9c5b16eec5e0",
        "cursor": {
          "ref": "b5a17664-89d2-4e83-8c57-03bdbb003d25",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "00183cf2-ea05-4632-8cab-992f39a5786f"
        },
        "item": {
          "id": "224e8e12-8144-4614-9651-9c5b16eec5e0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7b494971-19d9-4de3-9351-4b6b6241a9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87b6230-2307-493b-9f24-b1875e121837",
        "cursor": {
          "ref": "f24c540f-d343-48df-bc07-9e3873124525",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c3421aea-1144-4764-831f-6d4fe856dea6"
        },
        "item": {
          "id": "e87b6230-2307-493b-9f24-b1875e121837",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2e350d6d-a67c-46b5-a812-8a52579580ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572f645f-bb13-4462-a10c-bedea55bc5f2",
        "cursor": {
          "ref": "19946e73-1f3e-4c57-88b4-198d37b06655",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d14a3d44-bcd4-4a9f-a4c2-14f08872a4f5"
        },
        "item": {
          "id": "572f645f-bb13-4462-a10c-bedea55bc5f2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cc8ae487-ae00-46b4-bae0-36ba27d61d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d02152-6092-4b3a-a02b-5e74a83d8a60",
        "cursor": {
          "ref": "60e11ea4-9b57-42c5-a244-71175b4703b9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d45fcac5-bd61-4285-ac4b-c885296c53da"
        },
        "item": {
          "id": "03d02152-6092-4b3a-a02b-5e74a83d8a60",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2fc19d77-a32a-47de-8a0f-4bb002efc2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99580a5-15f5-48cd-8995-999757383154",
        "cursor": {
          "ref": "b419f59a-1955-4849-bc55-412f06ab873f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6e2a284f-9aa9-4c69-b40f-12feb6106336"
        },
        "item": {
          "id": "d99580a5-15f5-48cd-8995-999757383154",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8efa67cf-79fd-474e-bb11-26b1e8424bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c34931-a805-4bc3-ac3f-f1befe497c72",
        "cursor": {
          "ref": "4bce689f-1b36-4930-978f-a7407fcf1188",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cdc5d4bb-523e-4766-9853-a4ce89895866"
        },
        "item": {
          "id": "92c34931-a805-4bc3-ac3f-f1befe497c72",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6435e810-8b5d-4e2f-a6b5-fb3e951f0f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c637d9-9efb-48c6-97c9-661be1fb2ea6",
        "cursor": {
          "ref": "ba85deea-e67c-43df-8d6d-8469f1ffb67b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2cac1cb3-98f6-4cd6-92de-5861d7532494"
        },
        "item": {
          "id": "03c637d9-9efb-48c6-97c9-661be1fb2ea6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7bf3f458-d94d-4f26-bf46-51f413f58ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036a2433-4018-4f44-88b5-3fd989f2187c",
        "cursor": {
          "ref": "d6d59b10-0650-44f3-bb00-6921bdf73f20",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2ac2bccf-91e9-4f53-a8d1-c6ddd4d7a18c"
        },
        "item": {
          "id": "036a2433-4018-4f44-88b5-3fd989f2187c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0882e680-ebd5-4397-80fa-72c460c6be44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bb3c99-139c-4c2f-801b-1259fb37197a",
        "cursor": {
          "ref": "9c8f401c-061a-4cd0-abb1-774a438e6225",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bee573da-7ed1-4fcd-9ffd-f8b019863586"
        },
        "item": {
          "id": "07bb3c99-139c-4c2f-801b-1259fb37197a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b4e415fb-783b-43f8-b595-e0daf64fa742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2a31c0-4e6f-4c4d-b88e-dad5a42cfa39",
        "cursor": {
          "ref": "84c5d526-a15b-4fcc-8cc2-9edcf730204e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "864e6dc9-e186-4f4c-8d25-115284ac06c7"
        },
        "item": {
          "id": "5a2a31c0-4e6f-4c4d-b88e-dad5a42cfa39",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "efcf3d37-3359-49d6-b701-8fa6f4250259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1093f8a4-febd-442b-b6eb-1a25db7fead0",
        "cursor": {
          "ref": "fde74304-6de7-4f4f-bf27-80c0febbce50",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1363185e-f21f-4a9e-85a1-aa3de255faeb"
        },
        "item": {
          "id": "1093f8a4-febd-442b-b6eb-1a25db7fead0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5bfcfd26-6e9e-49a6-9706-b0ea5dc43466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c57b0a-b346-4ace-888a-9a4e2b186f91",
        "cursor": {
          "ref": "f36a5a2c-c013-468d-8ab6-20d4258c42e9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3f030067-0fb0-4014-b012-b8ff1a0eab3b"
        },
        "item": {
          "id": "e3c57b0a-b346-4ace-888a-9a4e2b186f91",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "699b7deb-d171-4cbf-af2a-9375bfa600f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dda44e-6581-456f-8099-6adc068b6a41",
        "cursor": {
          "ref": "37fe4962-4172-4168-bf5d-cf4d7d277229",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a3127146-60d1-494e-a70b-67f72066ee97"
        },
        "item": {
          "id": "89dda44e-6581-456f-8099-6adc068b6a41",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6f2fd69f-4b74-45dd-ab66-97f5bdacf2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeca2d4-abe3-4240-af0d-975cbdb95d47",
        "cursor": {
          "ref": "a24871ff-75e8-4cc0-928e-f32d41cd5806",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f5a198f6-04c1-460f-86c2-47c8717415f6"
        },
        "item": {
          "id": "caeca2d4-abe3-4240-af0d-975cbdb95d47",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cbe4bc55-fe2f-4d9a-ace0-bd96c6639f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85234d45-f2cc-40cd-9a30-a49226912399",
        "cursor": {
          "ref": "50f6bbc5-523b-4c47-bfb7-900ff5714bb0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8c3f9299-85ad-4675-b2a7-177ad0db46d7"
        },
        "item": {
          "id": "85234d45-f2cc-40cd-9a30-a49226912399",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e4dfd701-b90b-4eb2-8f1d-fb3b611bf107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e9240d-ce10-4338-93b5-8ed5125f7d88",
        "cursor": {
          "ref": "e6fdc3aa-f9ce-4d45-83f9-fa1c7b136713",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3759a470-21c5-4806-a68c-78d983429ae6"
        },
        "item": {
          "id": "48e9240d-ce10-4338-93b5-8ed5125f7d88",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5263458a-b4bc-45ae-912d-b18ff9672ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e7005d-c0d4-4e35-90a5-e15da60b2225",
        "cursor": {
          "ref": "43719b05-6cce-462e-aed8-e4221d6724af",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2909c296-9aa4-43d5-b989-7b73c4e2f040"
        },
        "item": {
          "id": "39e7005d-c0d4-4e35-90a5-e15da60b2225",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e7c8916a-c463-480a-874f-ec7e054e408b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e8ef79-dcec-4fc6-b431-fa87201bb39b",
        "cursor": {
          "ref": "b070f22e-5069-4fa6-848e-57f06ff4a9e7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9532e3fa-2a5b-4b2c-92bc-6aa346dbf19a"
        },
        "item": {
          "id": "90e8ef79-dcec-4fc6-b431-fa87201bb39b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f26c7fe6-7286-4c47-ac8b-30ab6a66a25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae94300f-83e1-489c-a980-b4c9f8c94038",
        "cursor": {
          "ref": "68acc48e-1b0d-4520-8cc5-1a3d209f84a4",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6389a4a4-e48e-4ca3-9449-d7b27cfd745a"
        },
        "item": {
          "id": "ae94300f-83e1-489c-a980-b4c9f8c94038",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "248bde40-7411-4bae-8af3-087820bf6b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934c554f-134a-4e1c-970e-805c29073db7",
        "cursor": {
          "ref": "0146de95-f968-4871-8766-f40a355e685e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8b7ad1af-9641-4bea-841c-0063dcc59d5a"
        },
        "item": {
          "id": "934c554f-134a-4e1c-970e-805c29073db7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "33743d7b-08a9-45a0-93d8-8d9f63ab135b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5c7e9c-1d7c-4857-ae1c-d88646ce7c29",
        "cursor": {
          "ref": "54034436-89fe-4f76-9c42-8311ea2a5548",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ac1864a9-1a2d-47e3-b821-54f8235b7227"
        },
        "item": {
          "id": "ec5c7e9c-1d7c-4857-ae1c-d88646ce7c29",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "49de2fe1-f3a8-4b18-aa45-4f3ab4d81861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66440818-6e35-4203-b385-6e9682664313",
        "cursor": {
          "ref": "7aa7ce4d-832c-40a3-ac34-4a805038495f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f527834e-ab7d-4003-9025-cbccab0fad9a"
        },
        "item": {
          "id": "66440818-6e35-4203-b385-6e9682664313",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b7cfad46-bc8a-4cd4-bd8e-a984a3fe9b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cd7428-df2f-4c38-bc63-e238931362f5",
        "cursor": {
          "ref": "40f61f1c-0c07-461f-a4cf-0d46bf5f632d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6d80c6e3-d417-46fc-943f-839d0c9dc90e"
        },
        "item": {
          "id": "a3cd7428-df2f-4c38-bc63-e238931362f5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6548863e-498e-4595-87c1-a1e81e6856b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa07155-185f-4fec-8ae3-91eac5249009",
        "cursor": {
          "ref": "8421069e-d1d4-4b4c-b752-28de8f7e129d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f126124a-001e-43fa-a7da-358ec0a45644"
        },
        "item": {
          "id": "5fa07155-185f-4fec-8ae3-91eac5249009",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ce480ab5-85f7-4d90-bdf1-5411a42b497f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30a650d-ccf3-4401-b0b4-d64434b1fe9e",
        "cursor": {
          "ref": "e00bc2d4-dc4e-4c51-beec-e9122ab54c98",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7e709699-68bd-4752-9397-cc719514331f"
        },
        "item": {
          "id": "d30a650d-ccf3-4401-b0b4-d64434b1fe9e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "89a6916f-d5de-4a34-81bc-5944d8408171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2285f11d-86df-4a40-9b50-95adad4258a7",
        "cursor": {
          "ref": "765b973c-c0c6-44ac-9bb3-0145c12ea17d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bb46b04b-091a-4221-b77f-5c9c1efef1c2"
        },
        "item": {
          "id": "2285f11d-86df-4a40-9b50-95adad4258a7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bd6f2271-d028-4bfe-8735-54cb0d071fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3748087-ea7a-4c43-82e0-ceea5595ff64",
        "cursor": {
          "ref": "02d5a9b1-54bd-4792-9098-502ad018dece",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "636054d4-c8d2-4b5e-9caf-9bca77ebcf39"
        },
        "item": {
          "id": "a3748087-ea7a-4c43-82e0-ceea5595ff64",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "12461a4a-0e0d-4610-b034-98029b473bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d0f21b-121b-4908-8c07-8e60a4d91120",
        "cursor": {
          "ref": "5dd03860-078a-40b8-aa8e-28e9382f131c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6b2a3505-5b96-4a19-bcb8-845dac7b77f1"
        },
        "item": {
          "id": "82d0f21b-121b-4908-8c07-8e60a4d91120",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "36672727-36bb-482f-80c8-ed8e2b6efd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4033e06d-08f1-44aa-a4c8-3fdbdfcdb1dc",
        "cursor": {
          "ref": "24248f23-49b1-42a8-95cd-150319af5cd2",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "66f97c42-4722-411f-951e-b59d60ecfffb"
        },
        "item": {
          "id": "4033e06d-08f1-44aa-a4c8-3fdbdfcdb1dc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f3e4e05f-e889-496c-bc40-56d4d63f0ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f261dc26-3c1a-4355-aa08-b4996cf3e4e3",
        "cursor": {
          "ref": "bc9987af-f576-4bc7-afcd-e39b3dcfc9e4",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0ec4e7a0-72ae-4987-8f48-b7991642db3e"
        },
        "item": {
          "id": "f261dc26-3c1a-4355-aa08-b4996cf3e4e3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "50352c0a-aa36-47d9-b38e-cd7825085e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360f1b42-4059-44e8-b15d-8279af72ed03",
        "cursor": {
          "ref": "636c8113-de7f-4c87-bd4c-0d35889c69e0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2d476c6f-c7c3-4c91-8135-ea52d6da720a"
        },
        "item": {
          "id": "360f1b42-4059-44e8-b15d-8279af72ed03",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f39b1358-3a1b-473d-94fd-aeb743453fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6b469a-9add-4429-8a9a-d0680e3d0d88",
        "cursor": {
          "ref": "dea11efe-b69f-47ff-a8c5-2ab859c7f412",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "78336253-b96f-48e1-8907-0c7118b5091c"
        },
        "item": {
          "id": "9b6b469a-9add-4429-8a9a-d0680e3d0d88",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bfffa883-9703-471d-a19d-87cef5ee04cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a9bb7f-047f-4f74-8494-ffd384700951",
        "cursor": {
          "ref": "434c0187-aa3e-4854-a6ca-9f6dfb573ce9",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b6a8438a-ccae-431a-93ae-0fbd1c129a23"
        },
        "item": {
          "id": "c1a9bb7f-047f-4f74-8494-ffd384700951",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "eecc7637-f3d7-4fb3-93b3-1e49a106a497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775fe749-88c4-4ffa-8ba1-8d7edadb9f06",
        "cursor": {
          "ref": "c4ccc0bf-dac7-437e-9e85-d7c155143dde",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a72c37d9-c8a1-417f-b054-c0515cf28ba4"
        },
        "item": {
          "id": "775fe749-88c4-4ffa-8ba1-8d7edadb9f06",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2f02f4f8-76f1-48e6-b023-dba1b70f221f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d19906-bee5-4084-b125-eddd7b3e6f44",
        "cursor": {
          "ref": "1996de7a-25c3-44c7-9d39-81e56e1a8c89",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d86038e4-987f-4524-861d-4cdfe191426a"
        },
        "item": {
          "id": "f6d19906-bee5-4084-b125-eddd7b3e6f44",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eb57656d-e298-4ece-bb1f-6725faa7d053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718e1806-6b5c-4aca-8a24-3ae53ff6840b",
        "cursor": {
          "ref": "d04ab55d-9e64-485a-9410-b074a0849035",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6d3e8a25-1efe-4778-b09f-1b15bf575e26"
        },
        "item": {
          "id": "718e1806-6b5c-4aca-8a24-3ae53ff6840b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "09299830-0709-46e0-b3d3-575293bcc200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af197511-bb3b-4e7e-a09f-59a7c7eb3ffa",
        "cursor": {
          "ref": "b967a1b4-806b-429a-8ab8-7105ec021ce5",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5a903679-9cc5-4546-bc1b-d03a22376cb7"
        },
        "item": {
          "id": "af197511-bb3b-4e7e-a09f-59a7c7eb3ffa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e8ccbbaf-aac5-4427-b456-76a71e91058f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ad11a5-acd6-4cd1-8663-4301b01d555e",
        "cursor": {
          "ref": "2c5e84a2-1ae7-43eb-a2c6-5d3865c2832c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3d51e7fc-1623-4f17-89d8-669f0fa33eb7"
        },
        "item": {
          "id": "51ad11a5-acd6-4cd1-8663-4301b01d555e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1832c7cf-e2a5-4b03-9be6-dc747480618c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b640d6-9603-43a7-a8d6-5ef45741f699",
        "cursor": {
          "ref": "c0fb81c9-3a17-41a0-8c58-97f26459c958",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b78d12f9-1a17-41b6-926c-1b0fc040f43c"
        },
        "item": {
          "id": "15b640d6-9603-43a7-a8d6-5ef45741f699",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "485df870-c897-4820-84ae-e1c4c3a98241",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf0887a-e0c8-4b5d-9680-274165467d04",
        "cursor": {
          "ref": "2b0163f5-6fc2-48cc-82f7-b676c1403d35",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "09e48941-63da-41c0-9bf6-109f4dc37a9c"
        },
        "item": {
          "id": "6cf0887a-e0c8-4b5d-9680-274165467d04",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "153a3e20-cb0f-4bfb-86f6-4a5b5e7557aa",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6617bbcd-998f-4e1d-9c5f-7d336a90c912",
        "cursor": {
          "ref": "79e61628-1925-49c7-b21a-b906c15e4345",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b89d1930-dee0-428c-bc3a-75802505a9ba"
        },
        "item": {
          "id": "6617bbcd-998f-4e1d-9c5f-7d336a90c912",
          "name": "credentials_verify"
        },
        "response": {
          "id": "49cc9abe-7396-4106-83f5-25c3a7480e01",
          "status": "OK",
          "code": 200,
          "responseTime": 2378,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "013d753b-81a7-4e61-bb47-9d0a2b050a5b",
        "cursor": {
          "ref": "00933db8-d8e8-4b2a-8251-3a4e34cee566",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "426a42dc-9201-430f-b92a-4a8a33057b2a"
        },
        "item": {
          "id": "013d753b-81a7-4e61-bb47-9d0a2b050a5b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1dc28c3f-4e53-40c9-b81e-3983b7f26273",
          "status": "OK",
          "code": 200,
          "responseTime": 2944,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7f7766-4ee4-418c-8146-03e67ce32cd7",
        "cursor": {
          "ref": "b12c094a-1407-4958-8dba-1fe3e9acf824",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7849c302-928d-449c-9684-3d89d0deede1"
        },
        "item": {
          "id": "ee7f7766-4ee4-418c-8146-03e67ce32cd7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "57fc34e6-5626-4dcc-b4c2-7ad2c355bf13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7f7766-4ee4-418c-8146-03e67ce32cd7",
        "cursor": {
          "ref": "b12c094a-1407-4958-8dba-1fe3e9acf824",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7849c302-928d-449c-9684-3d89d0deede1"
        },
        "item": {
          "id": "ee7f7766-4ee4-418c-8146-03e67ce32cd7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "57fc34e6-5626-4dcc-b4c2-7ad2c355bf13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edd3050-c2a3-469f-9007-b63327d53cfb",
        "cursor": {
          "ref": "a932a31a-6263-42de-a2f8-0c83f8e4e8d2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "481e7338-69f8-4c1e-9588-941d194cd8c8"
        },
        "item": {
          "id": "6edd3050-c2a3-469f-9007-b63327d53cfb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ea109a11-c500-407e-be87-053581c9f7a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43f9d0f-421e-4175-8aa1-50b156ad3054",
        "cursor": {
          "ref": "703c20e5-7463-43eb-a2fb-bf5c77fd504c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "715d3631-332b-4243-bdc0-025986770f31"
        },
        "item": {
          "id": "f43f9d0f-421e-4175-8aa1-50b156ad3054",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "383d075c-99b0-4bec-9a72-202f222a5606",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}