{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bdea1d7b-acd1-4011-941e-fb7ae3b930d9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "53ee0520-ede1-4e6b-9e6e-21d8aa798028",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3259f6db-2195-45dd-b34f-261a01336281",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cefe3a9e-e4e4-4136-a17d-48d6786974b7"
                }
              }
            ]
          },
          {
            "id": "982fbee0-0d9f-42af-af5b-b12227c13aeb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a6da5a1-2313-43d2-9cad-e274503f9687",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98b1f617-774c-4986-a2df-c78b497b04ff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d76f7dda-182d-4143-9ad6-fecedf9060b1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "20aa0fa1-269e-46ee-b690-a58f3d1804fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ac8da2fe-da74-4ef5-a944-9683b69f0262",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "526e0742-606f-426a-879d-ce60a4f3b4ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ded3641d-6601-4559-835d-a862847c8742"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62f6aab1-209e-4d60-8fd7-ff0fbc262179",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a1d581b-0899-4022-a5ee-662495b77c2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dfb04122-9e05-4905-ba6f-d75922683844",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28aaa5a7-2cfb-428b-837b-61e69cfbc126"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9984c3ca-b721-4028-bc63-61eb7372f3f8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cf99a0d1-7b7e-43de-94ac-0ee1f9a61739"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e63a39cc-5e2e-4a98-a280-af6bc0c56c64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab71dd47-9eb7-458d-b226-c75b6dc42a46"
            }
          }
        ]
      },
      {
        "id": "e8077b57-1146-4a65-9f15-08f1108caef0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a2b86b99-3bb3-4d7e-a9b2-c69b1fc879ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d855154f-acd0-4569-8f9c-184c89fa709d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9fde442-5581-4de8-9a4d-0096268c7133",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a710fe2-cd92-4251-8e70-51d3d6cd0639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bad5bc5d-1779-4140-ba66-7f946ff51b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94c5530-c903-4114-bbdf-6672928a0f0e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6d9168-2107-4787-88d4-3856ea27b373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e469ce56-495b-4461-b934-7cba7e1f7de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f10f479-1c9f-4f53-8171-7ca5471804b8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95f748d-a66e-4e70-8940-63fa5fc9863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a071a7f-9ff9-4c03-8b81-0ae044b6f227"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "915a948e-bc2f-4451-8536-27a27c8c3ebb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff4c0585-b5ce-42bf-b67c-1c9ff8ce788f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b9bd3f-13f5-4460-8a02-8be059b1f390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c44f29e-5f7a-424c-b281-31d72ce2217f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a1c9aa-8743-40de-a968-fa1118fb5f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861cae87-4e04-471b-b0ea-00382f786ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59c0ce7-d014-4a55-885d-7bf669be4a5b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275c4e7a-c7a9-4926-a8c4-96b2f1e72891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9a1e96e-a11a-449e-b59c-b5b112f3b822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d117f786-75e9-4dfb-8ff9-dcf462866002",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "19f7a98e-c120-4267-acad-e0df3c2d2474"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "71136835-7520-4a1f-a5c3-7e8edd765b85",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97f24533-5001-4ef1-bba8-bd450f9113a4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8fb4eda-3f5e-4580-b100-4dca754e3fd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7344b686-c9d9-4b62-b427-226f25b8004a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "504906cb-48f0-4a5e-83be-bbff9c659968",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "c1ba2aa3-2945-4e08-9cae-481e5cbc6142"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ba2a7cf-81a8-451d-add1-7893c14347c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cbd7927-6745-4e9c-88b6-65c49766d88e"
            }
          }
        ]
      },
      {
        "id": "b4909c82-5c87-4ab2-ad7b-3f8d1be2ad57",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "eaaaef41-7b59-4954-9c41-96100703ac13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2de496ce-30a4-4ed5-bbf2-75ca0c567f36",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d8d9c6be-5aa7-4837-833b-c438eb096c44",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0824863-f40a-488e-9d25-9b4f23e4ba2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea0c193-5fd0-40b8-9a64-8f5f9b4f1c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6123fb8-af73-4638-b625-85fdebbd3dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8e9d518-e52d-47f5-a524-63bdf77a28cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bf7cd5-b0da-4248-8efe-5b289624b828",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717be11e-b2e6-4cc1-ba3e-cfabe4736f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cbad59-78e0-4ff5-adee-fb6e3087381e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c660658d-ecb5-4a2c-8b7b-a68efdaea4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98ed54ee-8ad7-4706-9040-94f48529406c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e56f362-1f7d-44dc-b984-60255428b408",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93f44f2-76ff-4758-b856-10131ea522c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9dda45-a315-43cb-993f-a5e86eaa108d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ed7562-c733-4cfb-a984-e7638aa10590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd48c41b-5f1c-43f5-affa-62dab8cc9a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9eb580-57c9-4691-9172-53e2ab1efddf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a823b6-4b11-4e04-a817-c2f209e10cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4571b8ae-dd4c-4737-9f7a-6e53835e8814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5bf75a-0cfd-4939-9633-ded8be17c2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e36bab72-cbe1-4149-bd4c-6aae5cb17b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276031d8-c945-41d6-a800-7d35789b6ef4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ea74c8-007c-4da5-a475-9597b21b443d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4842552-fb05-411e-99bf-788531484cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bdded2-96b6-4816-8704-8ca4c9001a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "300222a9-ea70-4bcf-b542-ca988221ca5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855f2ffa-04aa-49ce-a999-bc5a0449cfb1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8703ed-2a3f-4791-90b9-da46269248f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513cbb21-4e2c-4694-a0e3-d31eeb023fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc1d241-da91-4ef5-ae2c-af43fd978fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3132d7e7-eb47-4da5-a7ea-53842a6ad14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9946d5e3-2acc-4547-aef1-6f750253193c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a798c201-2047-456e-ada3-e0ffbc53b6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e3dc60-8b20-48e5-a381-e696965e2d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40adb603-a2ab-47e6-a6a9-4a78a910e274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1870716b-5446-4bf2-8cc4-0bae9db37f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7420e0d3-c27f-4957-8f65-bc15aaf170de",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cf6115-8f74-432d-92bd-c97475d6d139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6017fbed-b0c7-4d49-80fc-a1ffd6a8a83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a6d47a-1f88-4505-9f51-be957674a0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ac0a5c9-1f89-4b43-af0b-dd1b5fcffbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f7c9a1-cf9a-4f52-8524-6f8d864ddbac",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a266ac4-88b3-478c-82d4-4930fbee51f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf29868-9168-4edb-ae35-3d0c4db460fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21325734-54df-4e66-9ff0-0b542f0a0e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "242c4357-f87d-429c-98b7-91d340ccc39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39276b54-3a98-4511-a3b0-564c2aff8844",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0cc6f7-6e0d-4532-9d6a-cf0eb777c1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb820a8d-421e-40f7-81c2-c54b03b89109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4d7c00-8974-4d2e-b5d9-68bb55af30fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87bb0a1e-d89c-4380-9658-c42ee84c1d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef12164-e1b7-48e2-a1ed-b04c34aa0433",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e544a3-5b1d-494d-b3dd-8d1d82a2627a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d923db8d-93be-4bcc-b581-56088fc6731b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db61b96d-bb16-4f7e-a47d-0d94bdb7543b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6c35e09-4bb8-4330-bd40-0f05b60fb810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f4424c-bf51-4082-b2d9-9c97a835218e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46934ea-3c47-492e-b904-2a163d246f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f306da3d-41f3-458b-a198-6bf3ac11ba00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883a7d3d-aaba-43bd-8cc7-16451fcf26f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aab29559-ae0e-4873-b637-6e1533606102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9652a2-fb13-40d0-893e-4066452649c4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edddaf26-5fe5-4aaf-94b0-8eaee9afd1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c54fc53-c17c-49f8-8ab6-19c741c2f2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364eac20-01f1-4c0b-886e-171a7688d5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f00ec45c-3fe4-484f-a1ec-260b0979eb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c93740-7e23-41bd-85fe-bffc12dcf673",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc173c4b-ecb6-40f1-adb5-b3859a350590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b7797d-121a-494e-83ee-506ebc97dd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fb5269-2962-429c-8df6-b1ecd06be00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2b8e4ff-34e1-47c0-9007-b8435cc40787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68313a10-dee3-464f-84d3-8b241f506d98",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f54716b-06e0-4a19-9838-454af6e6e244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc39243e-de05-4636-8632-c59067125127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bca8cb4-607f-468d-99f6-97ab398fc587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71422d46-1b4a-4fd7-af11-7d6efcc45928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcd3265-72f0-43e5-8675-34813bbf1644",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7bcfbf-f435-490e-b6ee-15da111c719e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5866ba72-17e0-462a-a6fb-93d6dc698517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f66977-d219-4972-a220-27793e8a0951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9abb434-da15-49a1-a49a-3ce181df356e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72e0573-1be0-4e13-a61c-082b35e7ad74",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea742f87-1af3-408c-9c3e-5dbd447a538e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9a9155-43f4-4271-b12a-08cfc048cc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4e2913-bdb3-4eda-bfdb-e8d83fa0f36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afe9e373-affd-4f3d-96e9-2439c737997e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3eed96-9735-4e43-8d9b-afe59cca96dc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad10e9d-4ab8-44d5-ae82-e9eec00b8e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623f9abc-4111-42b5-b3e3-732e6667832b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd573ce-3a70-4c3d-a8e1-c3f93584b1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a803c3-c2f7-41a8-98f5-8fcbd67decb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98049f2f-b4d7-46a5-b4cf-6622c1c8e7de",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee23ff5-7d9e-4bbb-94f1-f9de9f536900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00add81-138b-4abf-bace-5d3e080bd9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c3a75a-cf25-4c34-ae81-54275badd48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4d1e22-34ef-4619-8b59-0c1115384fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f26933a-4cb9-4d51-a897-719ff3ce5c48",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb58caa-1d14-4004-9151-6fb683b601a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53dc76fc-fbea-4360-a01d-ff83310ab8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e75a88-85be-490b-adee-168be6b9967a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd21955-ad64-4adb-8497-d9d3f9a39ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77933fa6-072c-4663-87e5-b7db8315e9e3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451bb1a1-527e-44fd-bbed-a1fb14436bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f22d56-2299-4ced-9c2a-7d9f437c767d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde865d5-75aa-47b3-bec3-565c90059b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf9771d-f6f7-4ad3-b5c9-f1336160e4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226ce184-2672-4bc8-8ce3-6b8ded6ede87",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96988590-51df-4e8d-9d83-f02a55391ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdce56b7-c091-4b6f-9d3d-d20c725fe868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f807c039-7a5e-47d4-8b54-15ac10abebaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bb6831-705c-4f0c-8243-5bcbcea2acbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4223e2ab-a685-4241-8ea9-30ddaa49ddcf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee918e0-4281-44bd-a3f8-3bac9f6e5788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bedfb50-c26e-41db-9beb-c4db545bddd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35642fb-abe5-4f21-8368-28fb0669287e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c40323e-b6ef-465e-9c95-e624665555d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8077fe69-b07b-4442-a46b-fe38e14f5aea",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97627839-e257-4732-a611-e06059d19ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6483286d-f6ca-4343-b446-6a90a3ce3444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4a9701-6ae9-4acb-84e0-d7e9865207a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e922252b-47bf-4a5e-bc5a-96dfa1a9f2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18735bfa-de75-4738-8679-8b8f6b226093",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17744470-4cd8-481a-bfd4-857fe47bbdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554d5b9e-a1eb-4670-9784-da4a2e4fc885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee7685b-c3c3-4419-89d7-0b5c549a614b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed962bf-7953-4543-b838-f269c5dc34ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3043c953-532e-4eb5-a6d8-fd3bb0d3298e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428667b2-c36f-4038-92ee-9fad4331491f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a3ab31-6334-4c6a-a5a7-37ccfd9b9adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0291c30b-c66e-4d32-8722-f4cd0dc6e83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d0a729-fd71-428c-bfd4-d804d416f6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ba344a-752e-4d03-b142-090f427e4c49",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e6ac2b-eb20-42d2-8989-de0c85907dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe8a664-f030-4ed2-83be-b3b87c7e71b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1926f474-c80f-4571-9d4b-10cea7c19a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f118a9-e81d-47d6-ba59-202e7bd20443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28600ab9-2545-4789-a49c-6cb07b4649bc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f48513-d695-47c3-9af7-335a5ead58df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8d1104-7b20-4763-b741-a49c722bb71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b930e45b-9a58-4434-83bb-411f9bfd2ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e14c151a-cb9b-4fea-bfc4-5013eeb32c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54143c8-317e-4964-b970-93467b1cfdbf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3564844f-ac6d-4d21-9bb9-660b71c70c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439f3ba5-fcc2-45bb-8dc7-ae5069d6e2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa2c8ad-c152-4deb-9153-43f5168becf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48328444-934f-4024-853d-0948977f44cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4afcab-535c-45e1-8d7e-bc60636e8f0e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407d705a-40b3-4f5d-9760-2cd9fe299a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da325aea-31c2-4bbc-a0c7-c12ce25dba1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95ebd90-374c-4835-81c2-d4b9093cdd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c9079b-5d64-4131-a45e-555a1d8a83fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ffc5ad-a88d-453a-ad2f-eda34b4860fc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6def1a-00c4-41f3-9f1b-aee50ea18873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2107c595-890e-46ab-8a37-cf4b01652871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e6a255-60e7-4789-8e88-d544a7c32ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc8b0ac-3ad2-4315-a227-0af30ccdf588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247ce509-408b-4fe9-8e1c-328c85b3085e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0ef20e-8992-4bcf-a4f8-fa7c790c0a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989d03c9-b9aa-4290-85c0-a0f03a6e04d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409ec004-b789-4dc1-a313-725acaea69a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fceb611-8cee-4e27-b740-98ec0b63a8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a0fc2e-60f8-475a-926d-122c044ff56b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1faf0b3-9ba2-400e-a40f-aa97c2279c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e824ef0-0e7f-454a-aef1-256e1e1b4a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07856ed5-5074-4f10-afae-3f0fa20274a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2636bc-017d-4bdc-a954-292448ae1a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4ce50c-49c8-49e2-8eff-6bb0c0f9f858",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6044cff4-8b48-400f-bfdf-431e3c900bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0c8e86-1816-4fb4-91ba-582be48872df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e61187-7714-426f-bd05-58fc50855f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a31951-7470-47ec-b5d9-da89f60af7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0ba748-d00e-4203-934b-5d3c1b74b064",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d140c6-27c8-4d86-b0cc-0d7a0d209131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5498080-ba50-4954-8301-8d5b0c72258a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcd6c77-b48f-41c2-a37b-33273c977168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8781ac2e-1091-4548-9e0e-74ba0f19b0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ea3bad-e06b-4d34-ac38-993c029e46ce",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5b2800-375b-4f85-8423-eb192735f293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9eb80c18-8bf5-4968-9b1b-06d361f4e648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a210d3-109e-493b-898c-a8c041c86059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b89e064c-f965-4d07-aec0-b58d984b30b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2961856-e230-4410-b760-9f0c2187fbd2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c939953f-da46-4014-a3c4-b059d5f1648c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01fa2e4-7b5f-406c-afb6-8c7e358a14a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a7b8e8-59d0-4871-844c-4569ebe62d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9974b648-9fa3-405a-ada9-5482981c80e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43060008-01c7-4be2-88e9-5d616593d4c8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f21f75-9bb1-4f2f-98b6-71fbf5fa2224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c186cd1-1080-490c-8ad0-4be37a29a3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00aac995-113e-43ee-b6f2-6f7bda9f812c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af09645a-85a8-480f-a1a2-56f74d99ba29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b66519e-f943-42b3-a748-9de88675e254",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0636193-8b80-43f4-97e5-c3c09eeaf496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843a9a14-8ce1-4f53-9dab-6a69309d81af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb179026-6916-44e8-be2e-776cd3d1aeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d56f5894-cc36-43dd-9e63-f2cc0cc67e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cf4213-02cd-4e44-b4d6-ffe25f0eea77",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec096b78-ca53-4717-a2ea-d3d48a3351c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2e44e8-10e2-40a0-96bd-ca0b114551aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b3e7b4-f93b-4440-987b-ecdaa0fb1c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c55931e-9ddc-4e2a-9510-305b0236f031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e26455-2e26-4cca-bc10-f13cc59b9c71",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd5ce46-bc1f-40db-83b8-2099d6275e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00fd7e31-c456-45f3-bacf-866194e16ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4297ecfc-69fc-478f-99dc-0f8b58913038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "53eadf7e-287e-4587-b7c7-fd2b4fbac6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bdb612-8f2f-4d5a-a872-f93dc129557f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f8c6cf-f824-4098-bf68-d8a01a53cfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c27623-fe82-487a-b731-02dea08e94dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b964de-df38-4fea-adaa-8ea537484f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "672a08d4-0ad6-4068-a559-52565e8393a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7444eb1a-a187-4c2b-b304-cb56476c8d00",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d65bc53-34ab-4c16-a535-a8395710cf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbd80e8-cb8e-49b1-8753-4859631b6720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558286a2-01a0-4cb1-805d-79698aa2b939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e648c308-699e-47de-a82f-d9589d131860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26da0abf-f65b-4ed0-b3ca-ccc9da9f3126",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb586c39-7560-47a2-a314-a50437f1434e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f396e99f-0f58-434e-8bc5-2ded8d2ec6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9eea25f-8f8b-4977-919f-ee2367ce3829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "12230e76-5bb4-41d4-8cfa-a4cc3f560a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dc5eb1-7abd-4524-b51b-d26c3ef71cc2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a670edac-8d7b-4d37-982b-11d5c6deb3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f0427a-bf4c-460c-bfad-7adb9dc3f170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d1ee47-3ee1-49e3-b398-099e5ff3bfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8b97c4-48af-4856-a138-89946ac44ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ed387e-11b2-4065-8c7d-3c9706c2c9e1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef451320-652f-4951-a126-ede33a6d2a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ba1ff4-195d-4bf5-b1e2-b66dc8afac97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103e4447-d1ac-4236-8f52-65a8c4d5671a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f64419c5-1951-4431-a7d6-13b20307261f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d2b518-9d7f-43f6-ae08-4dbbed5efac4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d87bd3-8034-41b5-b821-d0a7c9b09a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03c2514-ff2f-400d-9245-35c8799c85e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cb5e98-631d-478b-9063-05c0b1f71f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a69a40-265f-45b1-941a-32edfea16923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed1178f-84ae-41d3-ac05-e01e788eb9a7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284c99c8-b6d0-4f03-9535-cd1d928c1329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5504a93e-eea1-4e0d-8c55-2f144b243e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097f3c3b-fa35-4611-bb45-41cb25cb1fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51d53046-e48b-4e82-bb1e-71e674d9d608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7df3d35-c0a8-46aa-8124-10dc18030e9c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820b1aaa-8c69-420f-8894-204b4addc0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee40ba7-015f-4699-b956-fe03016ac1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1f00e7-0532-426c-9db4-b92e7d7591dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9447bdf6-6169-40a7-992d-8a75c06fdb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40488465-1e43-40d3-b80b-33cd3ab468bf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26706bc-fbbb-453c-803e-6b1602e289a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3924cc44-4ca8-408f-aecf-83c640868c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bcada6-c613-4c61-a091-885da3ca94d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "157f6431-a605-47f4-be0f-d3a598c57533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f19d43-41ed-4ed5-b64a-33caf9acd46a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc8d96-83b4-468e-b59c-abcd08b55b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82482e4c-46df-4784-bc76-9e0507918654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1320f45-383e-4474-b798-765e52db8214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd560bb8-a64b-41c0-9d7a-e4a90f8930ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7833bb-8091-46ed-9a1d-221962fcf60a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c501386-a40e-4147-a0a6-19c470ce9439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335a4db2-3f82-4349-b2e6-8bad5c743506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97ddc18-c9e8-4f8c-a18a-42bf3a960ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46f19cb-bfe6-41e6-a6d5-923af5593d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305dcb56-f42f-48b2-94f9-a7e95a65d958",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a66e122-7d91-4db9-a983-0bb966555971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b397e92a-402b-4692-ba06-d099f4644077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40c5bdd-9f00-4474-b8fe-b4ddf3652b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd20cf79-e5a1-4e49-b4de-5bf93e933c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bc5fe0-0f09-47be-8bac-d2344b325389",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe6f9f2-a141-41ec-b19c-08c5f34d4ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc73ed6b-3365-4e67-a0b9-cc77f3a78bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bbfd7e-1ec3-40cd-97d9-110f174b72bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7edbd14-7615-4f2d-be67-e629cda787da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840e2c97-994e-4726-8fbb-530f6f8aa8b5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acd7ce5-76a2-4731-9db3-03a52f4467a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38563e1-ab79-4451-b2b6-674da1ee0706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa73c13d-f52e-403e-aa7a-e4538c1b6c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2311860-ac8f-4e42-9ed8-168dc36a7120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124883ff-2cef-4efb-a29a-b491dd5f4918",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56a1a45-df35-4314-9bc8-4b4472884ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16143838-0fca-4db7-b294-945edca61a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdd18ff-fe81-4333-b126-9e358c096a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6d487dc5-77e8-4bc8-bafd-bfbcfb370d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b979ab85-cfdc-4d29-8063-cf2efa3be6b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcaa7b9-0c5a-49e9-b9ca-c9de2b1b3688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1390f7fd-e8de-436e-8d7a-4001ce499a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6604e6-9a09-4b9e-a7c4-927d7a0fbc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1af74ba1-2eba-4461-a2de-a935633158ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aefc4c1-3fdd-488d-b658-14f4764b9a34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2687fab8-1369-4e10-a7e3-4e31e6f0d931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34804844-5e21-43f5-9da9-21c7e68b3ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa036263-a46e-46a5-ad26-b67f6c6992f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2b2dd4-d4ff-43b8-be65-778f95e8f56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f84c93-8e29-4afc-a06f-79cfd6dee535",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597c3bb0-bcc2-490d-b7ad-853b58854ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85bb7ca-0e58-4f49-8b94-56f80d55e64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb5b75d-0e99-435c-86ad-4a77e5673349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15867199-ed87-407b-9866-750468ac5c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21345eb8-9570-4dd4-a030-9fd1421c47dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83a36e3-db04-4137-889a-580e1b1748d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5d68a1-8fc5-4a92-a611-eb940a2552a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b042dd-867e-4d6c-960b-cf9128e23a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c68b5441-02b2-455e-975c-f609f5254c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2162c8-c822-4a95-81e3-5efc6245bef7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7142c3-9808-4ce1-be76-a2c37f507459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80cede01-781e-41ea-98e3-ea0db80217cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1304e720-1536-4306-b320-a7c0f23930dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4dfdc56-6fba-40ef-b31a-c6f30c785c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37527ad-58e8-4664-8f1c-3b181a2105dc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4929d55b-b134-452a-9c38-585095bafe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548b657d-16fd-4a54-8445-f62f84cda20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d46c19-ba97-462c-b2ff-3bc20a0b10e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5575b8f5-ee38-4b62-911f-20a10433f36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b8b260-291f-440f-9ad3-c3cdba47f910",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ba1a37-72f4-43cf-86b4-f5d13d712e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0d605d-ecf0-46ee-b217-1aee5a864611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227c6530-32c9-46e9-aa09-7099a24f0431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e94d7520-dabc-4165-aa05-b3de7599d70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379d9cda-b9f3-4ac7-acc2-66c30b5b92ff",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ccd722-6630-43f7-a16e-890cf8ca73bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b38bb2-279c-4b22-afb1-94a05e7a6dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c70f41-4953-4eab-b144-cb0721b5eb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "455ec28c-3796-4f4b-8b14-c71f213d5293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2a7dbe-24a6-4ab5-af9c-a73b7fa0fe89",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8376d5af-89eb-4857-9d9f-b2672e94e515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f21b44-768d-41f0-8cc6-aa72aaca3684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15230c21-b06a-44d5-9c52-6d94f8825250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52301bb8-80e0-44a0-ae0a-773c48a1a8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901dc2c3-69c7-4f88-9e1b-817d4cb876e8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbe21a8-98c0-42b4-9de6-54a3eacf1cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2458b96f-b55b-4054-86aa-821b8c26270d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6eb894-7f70-4970-839c-f8486eda756e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "711d1a90-7f13-4094-85a6-6a24c9d4bf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e092cb71-0935-48ac-bb1d-b0ddbb2dd63b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ea303d-a2ac-4add-bc1d-f20261729f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23e8eaa-ab44-4a99-8d2e-6eb24da88306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b80bb5-599c-4b6e-8882-6f6391e31542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea1982f-536f-42c7-98b2-bb3c65d62558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b85994-89c8-4338-aa52-cd8d23dc1f75",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f54bc3-287d-4e12-ae74-f7b644c5c8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2055f4-8c89-45cb-9d01-a320087af3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c22d69-42a6-423a-85bf-d48f55e638ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a27bad-ab75-4451-8daa-b475a29ef2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee9d7a2-84c0-4b50-a1fe-0d3536455ee3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97f53fe-087e-4209-b188-fb35c5acec00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c17aa7-2a13-442e-8c6d-82b6a3814d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9a1543-e664-47d2-b0ba-0e575eca2332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25c71c3a-5177-406a-879c-a20c17aba536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987576e0-6e25-4869-9675-0bf20e34891c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d4d299-5078-4370-8c02-2ce3291571a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb1393b-4891-47b7-9d31-5c9355fa5805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3428c78-51ff-48d8-9923-ba6995cdc388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9c518b-a9f5-48d5-924c-c04f810bd081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2256de71-2fae-4bc1-bb75-4c2ef287b11f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25842e12-ae75-47fa-a8a5-196250b866a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcb749b-04d0-44da-8a12-ce66c21bf40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5903b628-d5d9-48cf-8f14-2419a412626a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac58d8f6-a416-424a-96c2-c572abab2def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113c88e3-9053-4caa-8470-371d536ac4c4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ab8aa6-81f0-405b-a9f1-7908a1e89e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19136162-edb0-4c0a-9096-e01f2dc04b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b4b03a-be75-4237-a89f-950ca1632ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7fa8bd-a230-4649-bf31-47ed6b6f51c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705a5212-de0e-43c5-b574-909a6e7af5e8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8442b9a-689a-44af-b549-ec96f1049267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1e79f0-460a-4a97-af61-2e282cd986bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49771824-995f-4b3b-a82d-44badf63d5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1893bde-22af-4413-a095-fc80a1c38613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b790e7b1-acd4-4720-a940-f3b947713090",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d2527b-b4a3-48ff-a9ce-4abfdf7e0f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b74158-6ed8-4587-a71b-a6d9ec6ff29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7599f8fe-1f72-4be6-b0e9-28af8af41b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c4fab0-6efd-44c1-9cc8-4c27644c4d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d8a2a2-1e31-4d71-851d-0df140c41da9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1093655-cf54-45f6-9030-57dff235edc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ecac26-1349-4dc0-b242-3c56f4150147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae34ed37-ce9b-45ad-8bef-9811e31e437b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ada44e7b-c6b6-4d07-a138-a644910a5e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9bcd58-6880-43e6-a7b6-7b5e455a46da",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4a3ad9-7605-46d0-a2c0-3b7e228c9b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3443e3b5-ba26-4353-9ea0-57251c5939f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9651f8b4-56b8-41a0-8e16-f2d6867bfc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1dab6da-e231-47ea-83e4-22041a992d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdd7d52-c8d7-40b9-970b-cbd2c6a5f0c7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aea8bd8-af8e-49e4-8d7c-a59a3ee96fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155182b9-9d53-4925-a414-c28c3b278877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8157f9c-3fa5-437a-ba00-bfff8ec21a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3885bce8-d6ce-4471-a53d-2073f1a31c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28047bdd-c311-4185-9e57-ac8f04c09026",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f2862f-c357-4847-9462-a51ad7d3f063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631c9d18-7cf7-4d35-8e91-ad3da742d71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39b9306-9d4f-4d25-a82e-ae096e76d4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f71628aa-0dd2-44c1-bb4a-d2e4ce0f870b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7385292-83c5-489f-949e-b063a3796e0d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73ed1d3-d476-479a-aaf6-aa2dfb757160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd681c4-b981-4120-9388-dccd710df94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb4924f-2141-4a91-b05b-67b78a29a439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47f90066-2d48-4c6b-8ee1-dd811bf609ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8bdaa5-8943-453f-bafb-f9687fefce31",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20a8a09-964f-41ee-9500-853123362a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e1f854-4fd8-44e4-a001-318045f2da66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e383da9-7f64-48e3-9463-7525bc0c5089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "152d36d7-9dfc-4eab-a28b-4bec6a184b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d219944-18a6-4be0-b92c-07d5fea8dced",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d447c9c1-d5fc-4697-916b-5aa9bc853af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ef96ab-4ed1-435e-8fcc-cb6d48fc1af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a169924-eba6-489f-96ac-6555420ffdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "54c0e251-88d7-4702-89e7-7459206cf550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b67d21-a540-4631-8070-8e50fdaa4e98",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f8e1f3-4a50-40d8-b5c0-f4705195ffb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7f31b7-483b-4bf2-977b-3313f873501b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ab3b36-f72f-401f-8574-e36b941c58aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a50be7f1-8dfc-4e89-ba45-d7c2dd36ab73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30942c4-9ce6-4ce3-b355-e3acb93925c6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaceb14-8b04-48a1-8561-3468cba3166f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8acc2e2f-b5e5-471c-9e1d-a9ff9bb1ed4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb871933-2090-48ad-83d1-293e2cde4ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0ff077-350c-4962-843c-586b49694c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e5c6fd-545e-485d-ac79-e2c122776e29",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be979c2-496b-4dc9-ab02-dae120fb57a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3c43c3-75ad-4330-ac09-4d050d376b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafacc6f-72ea-42bf-8b73-6e587b1fa114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd97d9f-2666-4bd3-b2bb-2daa1cce15d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0324470-b460-4cf3-a84b-eb861122f4f7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e8e4b9-b350-4437-b045-4dcb6c112c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfed41ad-a8dd-4e4b-abe1-29c5ef61dc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24617433-d10e-4f59-81fb-496313665f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed386ee-66b5-414f-9622-907bd434b755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099a596e-0841-4821-ac62-96f56c65f834",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616df322-c6fa-40a4-ac2f-58be9f608faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2f9cf3-f832-45ac-afdf-d4e0a2de68b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34d1d09-e2b6-4278-a156-cfc319463f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "855fcd1d-5e31-4753-b2cc-c51b3035a69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67fc13f-3966-4545-8e8c-d582a61fd1d9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1103b530-d821-47ee-b373-5603fc5ad81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6ed8e5-d2d2-4c7f-87ff-a65ec1c39ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f852f7cf-ea1a-475f-85d4-6d6ec573efe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4686df65-e876-4c57-aee7-ada9b3b3c537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1575646-69b8-4e2b-9784-1ac3248063a4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ef53ac-186a-4862-aa2d-0eed79d95f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b22974-781f-40f4-a1b3-e37da202dce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100a136d-d80a-431c-87d1-4d374f245347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "30b5d713-2207-4f10-ac25-aefd77bb980f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b460721-27af-4ff7-b2b7-87ea0f3b694f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f17344-d0ac-4545-bebb-876350ebb393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40457ad-2fcc-4aa1-abaf-1bafe8e3aaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68475557-c8e8-4e70-9fa9-5e99bc5cdcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff6be77-ee4e-4274-9e74-f07b3188250c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be522682-8810-4498-bb66-92d3c3cbe752",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06be6455-d598-4fff-bb1e-219f12743a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d284a1ff-a5cc-4352-99d0-a24327eda4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1b9f0c-89bd-4f88-b3e5-dddae2b1f22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c277857-f867-462e-abd3-af3737aaa50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd55b33-7f05-4a96-a185-e6f8979b4b54",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a95c855-0e47-4c6a-909d-c7588d1892d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18514e5a-b332-4d5a-a59c-cc8d4105aad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e85aaf-3f4d-4c17-a9c1-d2f419c7b971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "20ead3c7-0d48-4537-9b65-543bc75a81cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c4b4ae-fd74-40c6-9db3-e626f57e01bc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44787c01-df1b-4bce-8695-2dcaaf237835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7928d371-a1e3-4325-89fc-17a65f3771b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f468c867-2e65-4b15-8b1f-3295d698da2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5025d0-3937-4304-aac4-ba9ac251532d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b0644535-7835-4c8d-906a-4a3b888658d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ba4349a-58e4-4c46-8fb8-a5170753b48d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1c8280-6dd3-4c15-8a81-e340faf2a992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97ed99fe-f9bb-47b1-a148-d096fdd16d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b569b29-733c-46da-b231-57103dc77a3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f24a8319-5a4b-4de5-81e0-e19d588c83a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e10f903-6300-4dab-af6b-a7fe64cffd8c",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8d7900-2c7e-4f6c-9ac1-3e62188261e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffb4d812-ff0b-4542-b412-7df2c2d4c97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bde489f-e255-4a1b-81d7-bf003908e85e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6d09347-126d-4933-aeb8-101330f8d493"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57852e85-66b7-44e5-803d-7cbacb22d731",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66e1fb2f-5b68-4bcc-b9e1-a865432fc42e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c86aa17a-6843-429b-9c3f-f0ac339b26fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05b482b3-a89f-4128-a0f3-8155744cf40d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67d5d994-7495-47e4-a964-752c49aa9d86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ddff4a03-5f48-4deb-bd3a-7e618e9ec438"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e8df161-64de-45a2-974d-7e81cdcc80cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19f02503-f0bc-4ec4-b42b-6c89755793ef"
                }
              }
            ]
          },
          {
            "id": "a856fd11-e749-4762-bc41-fb93c5e92d38",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75af2f03-88f1-492b-b696-cd9bd7e23d0a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2a47fd0-fd51-44e6-98fe-5328b5f1fddf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8312b48e-47d8-44a3-9c05-40af0c3656b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2a5d1cf-e688-4dc8-8d29-47f98e3801ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f07e7fd-24ee-4c4b-895e-80567bdbdf52"
                    }
                  }
                ]
              },
              {
                "id": "07867b6d-4ad5-4c0a-82a1-5f3367c1898b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97039290-31e0-41a8-9453-9317b17f6aad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44d7974f-a814-42b5-a537-6d8676e1d794"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b898aa63-096d-4a6e-aaa6-d19b6e22f7b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "698024e3-df47-4bb8-a77e-4a6b979ce744"
                    }
                  }
                ]
              },
              {
                "id": "1e935a5c-ca62-43fc-bea6-df3e3141b182",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f73a5e3-8715-41d6-98c8-daf563457fc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "326929f9-5c51-47dc-932f-52ebb938ded3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf625375-9d57-4e66-bf4b-ab9ef9e9d4a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ca95219-ee88-4198-a204-c60580f05371"
                    }
                  }
                ]
              },
              {
                "id": "0998078c-62a3-4908-9f93-9c53415b8646",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01312b1e-52a5-4b3b-9176-cd856890f873",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d041789-88e4-46b9-8e56-64d40ff5db54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77603b83-9544-408a-89b3-d77289d00073",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9d8e57f9-9d4c-4ad7-8fdc-139497991073"
                    }
                  }
                ]
              },
              {
                "id": "bef2fd1a-fd37-4907-8fcd-3538dc73c854",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "563c5054-1ed1-4b92-9a46-41b0dd86d86b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba01e8e6-70fb-4b7d-b9a3-39f23bd26538"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c503778c-e3a0-4f1f-ad85-e2e476d659eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "32ff8861-2138-4bc1-b43f-71cab4d7e561"
                    }
                  }
                ]
              },
              {
                "id": "8eb9c01c-3aed-42d4-9d81-07dfa764712c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef95085a-2bf8-45b7-a698-0887bc945a86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee98e6fd-7e5d-45bc-ba13-be7d72930c6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd4c7220-3893-4405-9a4c-583dcd63ed96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "132d305f-65a5-42eb-ae44-d346ca02ab3a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "998627d5-a7fd-4e0d-bcfb-775be0fa48c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe49ac8c-a8dd-43ad-9966-30c6fdeaf4e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92420c04-20fd-4fcc-82b3-83dbe0d1f961",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a368496-d552-4ce2-af08-76f2f6162777"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5995a8c-9057-4004-a234-b92646795649",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "49cc9d2a-7de3-4144-91ed-75231bdd100d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53ba4746-d39b-42c6-b022-1ba49733eaef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdbc2ea2-32cf-4f75-9901-c4dd9b723db5"
            }
          }
        ]
      },
      {
        "id": "76c1809d-3562-4087-9e03-be4d77e2de17",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "135d49ec-9712-4ce9-8443-153c63293c17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d03d71d5-ff6e-4515-9b30-62c9d017c8d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "55a798d0-b939-4d41-8034-7c5b9735e85a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720a5cf7-234e-403d-bdf0-b9d157eed011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0985a2b-5384-4b4d-8e1b-8e98ed58f371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738f5d54-e67a-4610-a6e5-6ecdce58b3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be5f6e4-17b9-4c9f-b479-31d6257cf097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f186d5a-9d63-4175-993b-69ed2e0f6eb0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b673dbc-a0f9-43e9-8486-d761f140e1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e207d00-708e-4e5e-a78d-93a9d8a3981d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa9daa8-f7e2-42b5-b1da-ec119cbdd586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c4a742-e77b-45b6-a91f-2b67011dc7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7867f512-0a6c-4058-b402-0f5b3bd6c7e1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e66a7e2-c9c3-432a-ac7b-c5089bc1067a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87ac03a-1d6c-4786-927c-9d3c168a0187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7b8cd6-5afd-46df-9a44-cce7441e7cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de78f968-359a-4fbb-8ae8-7378c320a8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8c0d8a-9b76-447a-a65f-d5d0bd02cecf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70f790f-c6f8-4c60-9a85-d2b4713bfbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486dda2b-ee87-4df3-ae27-3fb4b95ec902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b671fecc-a62d-4501-b591-cc277452a7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f33bd60-9ec4-4efb-88e9-40d7d794b681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85720d0-04af-4ae8-81de-2d9eb23fca3e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf21d4f5-e170-41ca-a703-805bd6ec352a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ba7392-e3c2-4234-95e1-5a50a0f887f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750cc456-3e6b-4c60-851e-be03aeafd6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34574427-e335-41bc-848e-41732040d944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd115051-a89a-4d97-9710-1fd2fa49c55f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39dd527-fdca-4491-a5f7-ee42fdf3c971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2400a76e-57dc-4f4e-8ba0-f1c316e6c892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cce93e2-f2c5-426e-b18c-defcfadfed94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05da3f62-eed8-4af6-8a83-c0dfb6dea83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d598aa-03ba-401c-8b46-eb3364f32b6f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2331a8e1-0de7-4a58-ac09-a2558d338a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3310450c-421e-4531-ba19-e678fc9596be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2f2a35-87fa-46bc-b330-c522be54a676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "59b81442-af97-4903-89f3-11853c1c11e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5ab6a9-f0d4-4d0f-8ffc-df55d8e15fbe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808f85b9-7b37-4578-a5fa-e83c7b3db82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80823943-76aa-4d2e-b354-16595166b2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdc24ff-6dd5-4fad-8ea9-1a2a2ac1c852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1563c7c-9b87-40d9-b43e-ac73e0d88ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54726b6-e18d-4ba6-8dbf-46766bc71b32",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44444a28-e522-40a6-8100-bb2b6b803e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c458ffa3-a4c6-4634-8570-ed6f7c53cab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ec9566-a217-490a-8c6f-40d39852d896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cf44d8-f89d-45a8-978d-52ee18c26614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b34167-3e1d-44ca-9cdc-00af4d5d9e74",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729390c0-d7d7-4abf-b26f-66be1b95637b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabbdaa9-affe-4a60-bb47-ed25312daffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1636f720-a359-4ee3-8a2b-ce60a797fef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "513d13fc-dd81-4104-9af7-a8255ba64cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a818f0-5d0c-47e1-b43f-2d1a4332323c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c71c4a3-9e27-414d-a892-dee0e83b0253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ce3dc6-1c8c-4324-9a7c-816db25f2ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f1c9dd-cec9-42e6-a446-052722f33dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8769b5b9-3c35-4bb2-8beb-24ba6594400e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd353550-e735-4277-85b7-f2f8c1bfb640",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454eb7ff-b6de-41d2-932c-0df51a6f20b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce79f87-7e76-4687-878c-6785f88be9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3431285-d27c-48c0-afac-d4633d8285c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce205b4f-3686-41a1-909e-8c6fd1fb090d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a895b7-1b3e-40c0-bc32-6db3d5f54b4b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50cb3f0-f278-4413-adf3-4fe5128e845e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e157129c-eafe-4138-984d-b59b5d7ad0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f143059e-d4be-4568-a659-b532e37673ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5704b9-c6f0-4d4c-8d13-dcd6f75a993f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64088645-b139-49ee-8be2-6c4b546f2170",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9c026d-e890-4c65-aaee-eb9cd638b38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88553a8d-7a22-456d-b9b4-1a8b1839f79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f96111-4383-45c2-91a3-169b48d2a813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5d2524-6a81-4896-9055-6549d6ba8a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86406c70-3104-4e22-a740-1c44802c2e11",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944ade25-7352-4e15-8102-43a7cc7325f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deeec8c2-a240-49a1-b004-2ab1332c53f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ccd962-bbee-40c3-b0c2-c3cf10914a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba231a00-8cea-49bb-b5a6-fcf16f5f8b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec117c7-2893-405c-8442-491947883f6e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd0a1d8-5361-4438-b4cc-7d1642a25bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f0fb50-2113-4c06-8f28-9e102368df42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669c2b5f-2c82-4acd-b091-7913690fef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5350f40-66de-46b0-a9b8-d08cd19e332d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4008bc-92a4-4866-b3c6-8707fe0c5fee",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e29dfa7-4241-4e40-a8c4-8d9c4cd6430a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2035d3-4d15-4d12-96a8-b0b7b644cecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38ac41f-38c5-4755-b2f4-97889e61b007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6196478-c4df-4e3e-a72f-6925fae9ff1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f148b126-7c10-4bf6-802b-0d80ffdb1ba0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e694fa-504b-4d33-8f3f-1d39e7140142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb174dc-1316-426e-9a95-4fa730e42e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd23081-fb22-4de2-ad65-0bc03aa7cadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eef2f8a-b863-4a37-822b-d045f3a44e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c30fa99-c9c0-4af1-8304-9eee096c257b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccfe03f-3bdc-4ec8-a1db-0e183d04f6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c20e324-dd5f-4c1a-b09b-b9cb37b8a493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63abfb4-0803-4aa4-ab28-b4f44c7bd65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d431eaf-8db0-4daa-8f85-7759a08424fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc49073-7490-4667-93a1-9d132a6af643",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eefac33-a0a8-4b3f-8543-3c608a5afb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5683d4-e6e9-49f5-893e-9fed34606d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9a1195-b5d8-42d0-9cdd-741bad9ce5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f17fc45-a983-4c7d-a522-061d075f1af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18662adf-92a1-45f3-9d4f-02be1f99e010",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af79f0fd-a09b-4a5e-a105-3812c0ac3e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca6d271-e934-426d-9426-d10ab8755e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48867ed3-bd2d-4b29-8b06-f2daaaf39cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46bcc632-d8e1-4cd7-a204-120440394874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c00c5fb-aa72-4705-b64e-55a214ea30c3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e33bc9-6c15-4c70-9ea7-0400d56b960f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe53627-d86d-442a-bdad-c779bd86849b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f512ebe1-9c76-456e-9781-20755cc4c612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "584905b3-e2e7-4b86-829f-715a8854b04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001c1139-bd18-49c0-959e-88584fe1118b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9536c57-bb54-4545-ae6b-3a44e3e7c52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8d6d3a-72ff-4366-868d-38d29f6334ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f93b6a-561c-4c65-9402-ccee60bbb954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3665dc4a-2f39-452d-888e-95947ed69f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc156fcb-37d2-47f1-a3c0-b7eeb31c5dfd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598c5786-e85a-4606-95d6-0d2dddfeac42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d30e1f-7653-4b87-8a61-ab01bcf7d591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d950ea7b-a3e0-4ced-9432-006f47c95b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da68236a-31f3-422e-804b-38722edb3355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4d6e66-603a-431b-b34f-7a4c93e32015",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a3e84b-bcbc-4e2f-aae5-11ea151e9587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a189e8-8926-48f9-b09b-81a693f651d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686e2164-a185-4e80-9f51-8725009354df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7bfe1a-67a7-44d9-97af-1c91b7172c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d6e47d-21e6-4119-8d31-ba440878cc49",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88072e7-1756-4ae2-a8df-d135cd907f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b897a5f0-1012-43c1-ba10-97f991a049a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63f6ea5-e257-492c-86aa-88ae5d12dc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71daa77e-2c68-405a-8154-f5d95f311e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5931b707-c5b0-4ff4-9bc3-aabd2feb3f8c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b8940a-a60c-4812-8bc3-e6f4406b7de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa49c58-a7e6-43b0-91fd-02971523be27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d811fb5-14ce-454b-82ab-bed7cf64eeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5898efb7-4be9-44cd-86be-fbba7fbc796c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8555f3-45f6-406f-88ab-79a3d37a26cb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f2fdb8-4e3e-4d50-aae4-8f9690fe9b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ab2ed9-91fa-4116-964d-4cb1ac9cd6f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6600b521-7724-441d-96b7-7e82fb18f182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b338a24-90c8-4ded-9181-c2adcb7ed62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d68e8b-7064-473a-8fc8-f32757bba17d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d032945-ac4d-408f-8610-dc77fb871549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d469c183-7979-443c-b495-9b3e2582215b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747d0f3e-c977-4cf3-a7fb-254fc5e4aab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "963b435f-1c6b-486f-acf3-c6dff9ade630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf4bca5-b2c6-48af-a5f1-6d57f58ed259",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec420d2-353a-4daf-9250-8567ed3f6967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9165035-4dab-44a1-8f87-094cb4fdf982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f8b754-21c0-4e24-b545-b812e4139940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "769ede57-aaba-4d4e-bae5-18121f527f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104ea342-4528-425d-8d93-534dc9883cb3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56bb8bb-f28a-4041-8cca-fd1ff9116fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6487120d-c1d1-4b70-a87b-f722ffcfd996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e08d2e0-83e2-45b2-8e37-653bff9f8edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42537831-7dde-406b-8bc5-fc748e99a380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d0d0c0-7444-49d2-8ac0-b48e3be12b19",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd2ab85-857e-4365-9ee4-52f2fa816e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999d39f4-23ec-4f6f-bdd8-249ff8129752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db7e523-0cb7-423c-9b11-5e6d9cdbf469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2968c1a-39cd-4470-8d9f-8e3fbd79d1c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "850a2ee1-eae8-401e-8402-f6de99439483",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2fc9243-b393-4115-96da-1030fd12d010",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94c8145-3aae-4b8a-91cd-bc6dadfdd877",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba0e7d8-fdf0-4a26-86e5-1fac80554cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc0603b-e938-49be-9e8d-7b73e09035e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ac5ca1e-6312-4441-ac49-3ee0d14f7c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a660cc-4d38-446a-a493-d232549cb238",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0395ef2-b669-4e5b-94e3-5b59bfd677b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "13d03d82-cfa3-407f-9215-44985d4626bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b7ffea-3320-41f1-b87a-175b9fcb2176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8841c2cc-fd16-4a89-ae09-d1fa7b499779"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04598d4e-9698-43dd-87f9-c5e0e2bb07fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d3e11bb-136d-44d3-9916-be0994169647"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a6b5726-2f1b-4cae-84ed-ebaaa4087888",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13c62b5f-b888-4262-b83e-36c361055804"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e746fa90-144d-4f23-a800-53368aa4d49e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc1d9d1d-7ead-4fc1-9c5e-d0cd5225294d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ed7a2b4-35ca-459b-a48c-9781d025f01f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5acf3af-f057-4ccf-a225-c4341f0cbfab"
            }
          }
        ]
      },
      {
        "id": "b86a1219-0143-45e3-a987-ea85f4a1e642",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e374387a-fbfa-4b44-a5d8-95727396cd32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa912c77-26bf-4c2e-b035-f89abe0daa06",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be1f7d26-7d94-4bba-ab1f-a94b1abda5be",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b110743-076f-4326-af22-3d6cb7bab749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05d168d-0b83-4b2a-b4c3-3fc5a9a16888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6e530f-85a6-4a8e-8289-1789186be5b4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958060b0-a2d9-49fe-a6af-75468934c73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14f0e2c-5148-49b1-80bf-9929e721b9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a9a6b6-76d7-4183-8664-aa465d323ed2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfb7a58-6d60-41f9-8fce-6980518309e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c83a98-6f9f-4e1f-bd25-c36cc877d496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a721910-2323-449d-a969-77195dbb8752",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f127f35f-6e15-477a-9c4e-ab25a221cc91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac63c107-fe2b-499f-9ebd-a0cb5fde34fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd7c4bf-611b-4e56-bab7-1a75904d300a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1037967b-cb21-4551-b72c-e422f546f120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6683f3a7-dbaa-4305-b3e2-05571793ea33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f52d2b-3717-429f-bc34-7c2b1d2b5282",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e722f119-774a-4ea1-b4e0-150373c8cced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddc212f-13c6-4a87-8301-57558c71a613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a792d4-97e6-45db-9b1d-a86281f8eb2f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6d02b3-8fa4-421e-bbcf-b1d1fa50974e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76c5012-4b86-488c-80cc-82359ded5d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5a6b42-71d9-4fd6-b92b-117aa96b96b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5983ec-358a-4cfb-a86e-89ad4b745354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b68039f-3534-4749-b941-9fc5a450545d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9f8f0e-e02f-4595-9bf1-81cf27d6d788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd050da-8fe0-46a7-82f9-cc4f6c23bd5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7547fb88-5b91-4c76-97e6-06c1010e37a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa58bbf9-4602-4d97-a6db-cff744ff8988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcf2efd-5b90-4a9f-92e0-7e59fd8cddca",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889ba4af-fcec-4886-b804-f9ef959e0391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e24534dd-a1cc-446a-87c8-d85c6ec5302d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bb4b64-7127-4b01-beb7-550b97ad3c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22354a93-ec75-44fa-9e17-eb8bde22de8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109a556c-864b-49a4-8a78-e4c46c1a0f99",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef35ddbc-0e67-4324-ae00-1d5db2e02b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e52c42-ead5-445d-8c65-ffeb980f64d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47169c1-5c43-442a-aec6-1246c37a0bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e74344a-6d9e-4f95-a952-bbc43074addc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7420b041-88e9-4c6f-b1da-778d945b8eac",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af4795b-6022-453d-937b-90d5d8b0ed1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035efa48-a158-41f0-ba3c-e2e630a7511d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038f53ac-4df1-496e-a3b4-4cbfbcb32f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec29e8eb-4caa-4cd3-b732-ea23775474f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40553ad1-6bf6-450e-9e8f-866173e694b8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8aa5e30-06ef-4fce-81c1-df067fa17ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97ba807-3ea0-40cf-bef3-8c4d7126833e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d863bca2-6e00-4076-9ed9-c0c5a3b3ae26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf6da24-604c-4d99-8fac-c9eff6efcc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9631c6-c810-4c65-94d3-d5cd0a409d40",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3240b883-16c4-44f4-b9e4-b127fbb46f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29c0ce3-b461-42c5-b6b6-1e9744482b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11c52b8-8bcd-44e3-923b-d70744efed4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfc5312-5a21-4bcc-8615-37115ab5f6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a49c61-778c-44ce-bd4f-bd3ef5f88215",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e13b72-7175-4e1a-9b8f-80a6e9b53c03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b150d79-33b1-4f03-8bb8-0f918a654b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a06e085-2ba5-481b-9280-003ad3f26009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7265ccd6-8781-4fa5-8b0c-bb983ea03adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb37cfb-2763-4bf7-91a9-fb7d6fa288b8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fde6b9-24c3-40e1-8e72-82e2f337ead0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a97d1b-900b-4c86-a9fc-13c3297341d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c2e074-bb4c-4000-b7ba-a1cebbec0ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65e2034-51ee-46db-9675-b86981460918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d220049-e5c4-4eb8-b2de-69c7b0364103",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f91934f-cd3b-4273-aeb5-df0e25543213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c75b960-01f4-4084-bc69-ea52e8780bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95815f03-dcb7-4134-996c-7e564ba2fe1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9654704a-908c-47b5-b6de-7e34de693c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d990b5-24af-4768-a532-bb70d0f06dc8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2aad3d-728f-4875-9f7d-d7f65df97492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a65581-183b-46f5-a1c1-60b8ab8f5a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b82a3e-ba10-448a-ab82-a29882a62b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c561e727-20cc-409d-b80b-ad7b9f67fd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5ca18e-b419-412f-b172-59fd80c71969",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5483acd3-d567-427f-9414-028ffbc6ea96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aaef373-3b3c-4349-ad38-9b895dc00092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a36aec-07d8-439d-b067-c8ad3cb1f258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f916e4c-7423-4970-b994-8add9d23e02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a213f3-06ec-4eaa-a0cd-2d619a43cc0e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fb8f7d-c285-48d0-922d-4bdcbac2e747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843eb89c-6346-4fef-a75a-9c99928c075b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fa0946-15d5-4152-b1b8-4ed149e50923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9121fbe-e83d-4cc8-ab0d-721d7da55f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5722a74a-7afd-4e5c-af74-1e1316ccfcdf",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851c041d-101a-4744-b78d-731f00d8428a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59229ed3-421c-4cbc-a3a3-6994d5c5faf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639f1b72-27b7-4f72-b454-d7ab2f356c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf30380-bedb-43d4-90b0-1a01b0e41d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d1ecaa-4229-459a-b1eb-309899d4d6cd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9117c28c-b857-406e-baa8-d0c1e7143593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da81d960-f213-4da5-8a5d-ecf704d608d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d286ba6-2346-4564-8b5d-4ea74837a84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5363bda1-c4bb-4eef-8ea4-108724692c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c66582-81e0-4112-8153-7153625f8ea9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fb8a7a-5337-40ee-8e21-c42b6c1b9f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b2f778-1f6e-4620-af2b-a0273cfdaede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e7eb78-da17-4221-ae3b-7a64e45cb848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733f3166-d0a3-4f99-8fff-709296369ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e70201-00e1-4cc8-998c-767bfd8d503d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbee7ae-ec84-458f-8406-5090ed470317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9573fc07-cdd3-489a-9846-6a6d2065b1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e93e05-fcc8-4cd1-a60d-47ca8521f914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1911a682-1920-4cfa-b6d6-35675304f4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f942c8-a4e7-4fc1-b10a-f2f1ade6eedc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15331363-6653-452f-9b8c-670ce74672f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afddcba9-a900-4e9a-8fb3-86c3412d904b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2b7126-5173-4add-90d2-4bdfce5f9f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5490fd14-5707-4103-ba3c-8ffd15877c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c764da0-75da-4c3f-8477-875684d95e78",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01ae68a-601e-4c6c-b607-b1a3229fe660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01243fb3-ac79-4d3e-b97c-e2f1b29b9e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b30ad18-e0bc-499d-84b2-5a6e1b44d7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d407f8f-59be-4055-ba72-87c958539bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458fe998-f3d5-4eb5-8639-07229f131fb8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ec5545-221d-4048-adfe-66d8df949731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cebef55b-0314-4aca-baf9-d6a02402ff73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd7ba0a-fc9d-4cbd-ac45-aa8b1dcd1c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facd8a0a-cefc-4f24-bad2-a6645a4051e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbd70b1-1684-41a5-8979-8ccabd0706ed",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90178557-6b81-437e-9d88-996c8ff17376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b8a08d7-5800-47cc-9be4-d62689c268c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a6b55f-01e4-4536-99e0-4f04cee1f542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c83b5a-7a05-4140-8443-792a2fc81272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73da95c-d902-4581-8837-32d35948251e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509e355c-4511-4971-9798-6c43c3973d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e348ec2a-d3cf-4aec-a3ae-528984a742f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da87fb12-f96a-4988-a0b3-806d1f4c0f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c32f51-12ac-41d0-95cb-f9c40f807fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bb4997-1c00-420c-ab15-8006e48dc801",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40825ff-be03-43de-b73f-a07c93a94aad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae005704-4774-409f-b251-28478ec691f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f8e0e4-9fd0-47cb-a1c2-b5f63069a992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78069f4e-df00-4ba4-9b5d-1de2ffa53984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d74e5de-7ccf-45d0-801a-34e25cbb1331",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a977f5-a5cb-40cd-abd5-96e7f11c2381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7a52fc-e467-429a-8b94-807e4846d331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f000bf6-beeb-444e-a09b-27ca1480f09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a50d96-0361-4a58-9ca9-f428a47d2535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6a0e1d-6379-40f2-8090-f854c504d8c9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f77e87-a21f-4b69-b20d-74c34ce620b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3967fe-1944-4bff-8868-da076b978790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b4767c-2dc5-4a9c-ad06-8873f5ce627a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43706e89-c6b2-42d3-bcbe-8fb21ffbb20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fbf538-90f1-489f-a7c2-6f097fce8844",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dded021e-a989-4961-8bef-4df0b669c47a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6422a127-e66f-44e0-bf31-208ca474a725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7b6be4-a744-4c62-a6ec-766c86d043b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43209d2-2622-4ed5-95fe-5c65306a0c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105dbc39-7b79-4940-b818-807091128d53",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd667af7-5bcc-4b76-b3c6-7eb143981a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde10983-1963-47c9-a195-00cd2f6119b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d10c1cc-90aa-4782-b8ff-f6fff42a022e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26006545-57f8-4e24-b630-0dbdb06c203a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ce8aa6-515e-4a02-89ea-7364dbb800de",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2714138-8f38-4bc1-adf0-43d716698d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a495dfcf-c4f8-4b84-aec5-89cbbc3b52a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33842af4-655c-46e9-a212-625a33815b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c574688-32e7-4675-b571-e5382ac700d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa04a083-f331-47c6-9bdd-e1dd149c18fc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79a2e84-f452-4424-969e-25d2b7463455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c119531f-4c7b-4cd2-a6e5-15a3b7e79689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea52ae86-68c6-4e1c-b534-63dfe60d8f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ebec7d-57b9-425c-8906-76d12f0e441f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb36028-fc58-44e0-886e-54e372e3715f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb094e6-6cb9-4644-ad71-917f72e745b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f1b28c-de5c-440b-8f9e-ac6da85244d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93cda96-3a3d-4f31-a31b-5d135130e33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7ebb74-ae53-4e4c-96de-bed745ac9d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c162d941-c809-422d-85c5-6d938d6d0312",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861fb11b-d0ca-40cf-95f2-c2cdbe470df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cbac05-078d-439b-8bd8-421e615fea1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc9b2ef-62bc-4b39-882d-a453944d3a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfe0bce-ffaa-43a5-af72-899fbc2f6984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a39a8b-1110-4a4e-bd53-ee432e541b73",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35b9bb8-64cb-4e14-8208-a76eea2d8e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de72d5ef-ac50-44ff-be46-7cfa24ae750e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218ad283-6676-4bc2-905b-22e5f115f274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443aa901-2b45-462b-9b00-6e0aab1537fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f4c292-99d3-44fb-9ecc-9be93080cd28",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20cfed4-7354-49be-84d4-013596ba9518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc83c16d-70af-42d8-9406-dec5c44bf101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc571704-ec7b-4ab2-bffa-18820477f5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f378d69e-a65b-478f-bd18-412ab006b7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38e71e9-ff01-476e-8e39-f50feda88683",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4a2b79-801d-41e1-b5f5-93fb4e33a90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce86d1b-db6f-43d2-a8a2-d9c0d6da6e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27934c0-6daf-447e-9a4c-a1a0800fa401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa333480-c6e6-4abc-bc84-9d84df9faae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8846d425-386d-4b71-a956-02a67ecfc3a0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56f1ea0-b65c-41db-85e4-f10e56884326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd9c760-3a4f-4ee3-862b-0adeedb34430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fcd8be-032c-44e8-a67f-e6f5262e50a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd19e17-d455-4397-9245-8de24cc8ec20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c35b434-f627-43ae-9c93-52bd90b561a1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44dcf03-18bb-4c6b-a146-fda768e29c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1737aa75-b899-4d50-866a-8ae22443bd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c476426e-b719-4939-b260-7ff31561d693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e58def-4835-4d42-987e-0b97739ae7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d60e2a-19ea-41c2-97db-93a0d5774094",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8960ca46-dafb-4955-ae9d-28b77b1538e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db03550c-ef1a-4a7e-9a48-4faea1421333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca42084c-0726-4bb7-a896-2f454049127f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd47cab9-1749-43a1-9d78-353003a85442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef11cbc-7461-43c7-b4c9-4f5cfc26b7ca",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03b0867-6ee7-430a-8424-a3ced9f78d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e614a6-8a7d-4eda-a49a-84b21a4474ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c12fe6-0d25-4399-a3bf-7f389497548d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6545ce09-f865-45aa-8732-fcdd0a5965b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a9a361-02b8-4b87-b5ac-3f5323587651",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd88751-9917-4915-b50d-9d7e72a69166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc6ece3-05b7-4da1-90de-d8f140e1532e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97469b39-db28-4960-a507-e0e2df44a686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7047f25-99ab-447f-81a2-b8d8099d3aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0b2398-fc96-42b6-92a3-987cefcb1a64",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadf7c29-1ae2-489e-a8b1-b898af93a724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd97cc3-eb49-4f04-901a-9d29dfca4524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6872aabc-1d98-438e-917a-3fcb0baec342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9540287b-75c8-462f-878b-2d184fa71722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0ed4e0-80b3-40e4-abb4-1dac18cb5310",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b502de5-88e9-4339-9277-6bf82b8f2529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d80c37-9835-47c3-83f7-9762d7394c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1597e259-7aa0-4fb0-b608-049281515afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b0f43f-fea1-42f0-b18f-2e4d06de368c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cbfb7a-7f39-4c60-88b8-b58e02517eb8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4c2bac-de1e-4600-8182-3e42ccc90d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de734c7e-c5b7-4595-a7db-ed12406b6545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ac0382-4594-4c24-a77e-d0d37b672b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769efb5a-541a-4f50-81c4-2177c8639e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6452f8-f16a-4140-81bb-84635c7a079b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b892ca89-ab0e-48ca-bb41-08e1490dfc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7cab70-07d7-427a-aaed-4828022c7dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db4fec3-f916-4762-a18c-8213afc34b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c285b772-23bf-446c-a942-c4d8cfe62167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c4aa15-92be-4e9e-94b3-cf732152ba52",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5486797a-1b25-4faa-b1fd-1bba21042aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63b335a-be5a-4ff7-a4ab-871667eff7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783b51c9-410c-45b6-a526-b061f0b158a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53885ecd-569c-4276-ba50-0bfc222b32be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988ae5dc-6aa7-4859-9f78-136c93b2739f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48631a44-d23b-4114-bc65-a836218e1b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48cf3d86-27b2-4b7b-a74b-532558e70258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55b2a06-316d-4bbe-9a30-400a5dcdd1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da10425-a12b-48ac-993d-9e7110774ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7449f3-dd08-49d2-9c5d-3d4da8826715",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da75768-ef8b-4dd4-b72e-c177b3d706b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918ebb9e-2beb-4c4d-8917-4a3bebc0977a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6bdd8f-252c-4ffb-9c33-8104683047e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03b1529-22ac-443d-924d-281816eb79e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40a1dbd-a2c5-4d7d-ac24-a117aba65a47",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcd9c42-7a2e-4467-89de-ea73646133b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bd202a-18be-4d00-bcf7-4afd5b6401f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10343a9f-c273-418d-951d-689987a3f7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57123d8b-2610-4bbc-beb0-e1a842a4e9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c622d1d-a325-4509-891f-97d2971d860b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2848ace9-ada6-4b20-9f7e-2cef6c9b68dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae62cd27-1f44-4d24-86bb-908b4743f2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae77cc57-af47-46e9-988c-7c62ab6b24f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576a2add-e5d3-43ee-bd99-2fab0a70f8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6581b80-89c7-4fcb-90f3-f855d3510e03",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d036da01-4b41-419c-b825-8c4b26b06faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a972ef-a328-487f-a4bb-a4f10609661e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7baecee-723e-489a-bf07-bb0bea32233d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ed3245-9e7a-419e-af00-c48fcf82c283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf250b2-e8cb-4c75-a191-77bb052fc806",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797fba75-c0a6-48eb-aa09-7a0214345fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc04002-ffba-4bf3-85a7-2935a8824e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338da3cc-abda-466c-bd8c-66e7521ef61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229aeaf1-dffc-4f83-a70c-3e8156c7c94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a86139-e790-49ce-a983-066b2ff6fa1e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ceffdc4-99fb-43db-a71a-5c4a504158bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed979eb-dce7-4557-87d2-44f18a5377cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5044ecc4-5d79-4175-83af-3c130b021064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c581a89-3816-492f-b8ed-985115107a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbcef3d-31c5-4a6a-80a1-f7a54df56c04",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7738bcb9-80e3-4677-b294-a6c3fb297e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9c0ee8-fed4-490e-a524-c03b27cda44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13099f65-0080-4b6f-a047-1193eabe222b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32eb26c8-9403-4552-9a44-753fa6282983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03917aae-5529-4a16-970d-537b48dd4be7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf48eba-c0fc-4811-955f-d3db50c50936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a2c3c2-b22b-4727-bf43-b8fd2f0e1011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7495c8-b4ad-4c3f-b6c8-5fdbcae0e65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3d4d0b-84db-4d35-a6a9-f63d77503657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0891dc92-8fba-47ee-bbea-dbc54f4b64e6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5a696f-ce98-47a2-b6f2-2f67cd0929be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8513927-a006-49a7-8a48-9cddd7f61abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c8b29b-2039-42a5-8678-903bc1933646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce99919-dab7-4e99-ae5a-465efb4363f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cee6255-0a9b-42cb-8435-83b8e140c18a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f08969-db09-4446-b1b8-0c5816b5cfd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7417f49c-0fe5-4c98-b1ce-feb0f41fe687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fc3245-b25f-484d-a59d-8632f40cc10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe819389-4c7c-4da4-a302-a436d762365b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d051abc-c81c-4e3d-8488-106a702daf61",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b11cf6-33af-49fc-863d-c373bdefad37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c634ce-83d4-4a16-a5a9-29fceda8d65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22407460-2583-4bae-b711-699f148d7abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65945bf0-a775-4403-bf12-983a27da406f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb297ade-7124-4b50-a585-2cca985d74ab",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6653d9f-0174-4d0d-b4e4-4ea9d159fc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9ce944-e723-41d2-9d84-947220bf930c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2461fbf3-afaa-4083-b623-c552d70f70f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684c24ce-4e8c-4880-9d5e-82aa7ed85a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71ff9ae-9a81-4c85-b9b0-5de0b4ba6072",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5eb913-8235-4ac9-ae69-25b0cdd7bac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475ea3d1-f4c9-4488-b122-299ab41c9fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ec2d96-8f67-439f-8db8-daa7a802dd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40c0226-8277-4dcd-8e82-a8a0b5d0647b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66edb3c2-2c0b-4158-bc54-cad643f7809f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971f9b1f-2541-4a7d-a1a0-9176e00bc682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e0d70f-684e-4c73-b395-a7c7a65c6555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8039e1af-95db-4a79-a6c9-f2968b6d7096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a30d34-93e0-4034-a17f-1c4de78a9c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523b531e-bb63-44fe-974a-8d0febf827e8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b88614-f29c-46bc-afe4-1fa3127afd7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910d398f-8d13-4a56-bf56-d1fa1ac1c0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fa405c-cae5-409e-972d-7fd4710246c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b91f9fc-1a6a-4db1-b713-777dee70740c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa0b7c7-87a2-45d9-b247-4fbf4c7f4f00",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96954015-17f8-4135-a06c-0deae19de804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e75d835-1cca-4cf3-a1c5-57c10d4f7dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36bdfb4-e130-4a05-990b-e2f5324765e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339eb455-958b-424a-af38-11f02b62d7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a59a165-a462-48c8-866a-726f55169d03",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ad6eb7-e937-4a57-a305-bfe8e697f501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4b5f2d-cf70-405e-820c-c1f4badbe7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4bdc03-ac42-42e9-8834-f431d46fe8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5facc98-429d-4182-8842-cdff9d246338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c2aecb-c4c9-4106-a9b1-f7ea1a12cb5e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96cb96b-9b71-4256-a5d2-4547d6805fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d96fa82-b9a6-47a1-ac5f-81eb066e2ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877dbfff-8108-4837-80e2-12e780c04498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5a6835-0aee-4e6a-a68a-8e76049eb490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8d6f2c-976a-4fb6-abc6-581ea32c6d57",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f291b5c3-a598-41d3-a231-8fbf922ba66a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "678c5440-38bf-4a00-b386-4d8f234cee90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716f6770-be9b-4da0-8b6c-f3af33b53062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20f4590-cdfb-43f5-96bc-f8a342b7118a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2eae56-e3f3-4fff-a415-22f5749e7e52",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f368f3a-6a82-43f3-b3f1-ac4aa42d806a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfbe065f-466d-4c9b-a69a-d2a89bafad78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277dd894-a381-44ba-a177-d5c7de9a3ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db5bfe2-4842-4cf4-8358-11d7a34f2535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ce2e05-cc72-417f-87ec-b43006e08271",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947bf3b5-e1f7-48a3-a3b6-d874cf32d3e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d4d8ccf-6aab-49dc-a1c4-589f62e1422f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129aec13-8c56-4dcf-9efc-32968966bbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb34ba3-a8de-42c3-bc8f-4faf0742bd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc6ccd6-82c1-4121-8de0-f1a9b0fa68ef",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f598825-b965-4c02-9853-98114af28273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59573072-a75d-4cbc-a7fa-4c42f1a5f8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586ff5b5-e504-4044-a02b-b76528df87cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bca72b8-f47c-486e-87f7-3f4fed72621f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cd1a10-4c4e-4c79-a10c-0df1d1b8ae48",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537516f4-dfb8-401d-9228-3534cfaf18c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e516f91a-7591-4058-9bcb-5dd7f391bb7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90203934-1210-4d9f-9f12-6715ef272007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b09e00-bf21-4828-83b2-ced561ef7d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174b5694-e37c-4cb3-b227-da1f2e49d910",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174e0db1-95e7-426b-ad34-d4aace87a022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f81ec365-38b1-49b7-9c0b-79937d3928a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e688af08-bb77-4d6e-a531-329ca8a67a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb63d2e-7e9c-4181-9329-a00ef2fa468c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b099eb0c-b2aa-46f9-91a9-d11ec23d3749",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbd87cf-9953-448f-825a-f3e3b04df89b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7efa8cf2-77cd-4e83-b234-5dba2a5c45c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a4d355-e871-4644-b492-ee05767f3320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ed10cb-8c45-4578-a898-bf213a8f87cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa7cbf6-6f8c-4323-9920-4d5f6f1b297d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba608d87-29a7-46f3-b02b-fe078a05de1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e191a0c-4445-4246-a1b4-97b9b63ce840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fbc51b-2e0b-42b5-b17c-d93cfc84c930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0664da8e-4e46-4769-b0d8-4fc6d1c4ac0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c0f819-77f4-4397-b5b7-3365ef847faf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28adcc2-d477-44b3-919e-6946bd2d29ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d7bab6-70dd-4006-9c61-a34a2c13051e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f48234-d822-45dc-b200-b6379d55af80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fd0bb5-c56d-4539-b2f6-378952a56466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe80b75-9146-4dec-86d4-48e3c04f2b95",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ecd0a3-ac15-411c-aa2b-8e73052d19d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "618d9db2-0b18-45e2-ac6d-4e3d46cff1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ae2f3d-e267-4a0d-b6ef-61c539523e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12b6a80-156c-4f76-a6b4-6c14395ebe53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531f460c-a316-4d03-9605-72cf57538b2d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7bbf6f-fc4f-4698-9d7f-c7f7e1764521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab690be-603b-4922-b1e6-f15a6d257283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e7acc3-0c17-436f-bd83-245482c69da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12501ee-118d-43f4-acd6-bab2cd8066ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2738bda-4b84-409e-a8c5-c6047f5719d2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d220f68-7239-4afd-951f-d9f392f50b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c10cdc-abc0-4180-8833-a92af717f32f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235e2326-5a01-4188-aa71-cd6d0b1974e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c896661a-4076-4dae-8972-36a2776a02f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f4baa0-d32b-4354-b293-35407939eed2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab2b4de-c6c7-4a10-80a1-0f79075e1c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d12e44-a168-44d9-b3dd-b7ddaec70051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def0987e-12b0-49e1-b468-55a6cf6ec657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded67699-1a19-4310-9a1a-203c78effc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e8a5db-c4a0-4731-92a2-f30fbbf369dc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8715964a-74f7-48a8-9818-20bab437e456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b1c51c-5820-4eca-9dac-946c560bde0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9031a0f1-1820-45c9-86dd-7de803f572a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc53c96-7ac8-4a86-b4a1-fc55fe0feddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf0434f-e9e5-48e3-853f-4703d3c095c2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d36789-1780-4e06-a2a5-7b9f173c058d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ec160b-d4f9-4fe9-981f-2dbd1fcb3bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555f1418-020e-4ca7-a8d0-0791409ff6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22b7db0-7624-4bc8-9d3a-4dbd88be31f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2400a1-4cc4-4d62-9c1d-2ee6dd42b04a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5647cf-577f-4395-9320-90e6eff2f3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d7dd93-fef0-4018-bfbc-810cb51b62d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b066cd66-8351-47b2-85f1-58e305855e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854a8c90-961c-4d06-afdc-175dea20c386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420adea7-14f8-4168-b586-1626f4219279",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ab418c-1f3a-4ab9-b17f-0f692a26138e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798fb8ab-ae5d-4a18-a9a3-e0d3772aef69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ba97a0-9d2d-4665-b722-d0e6fa59c900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73941f1d-69c6-41dc-bc34-88e1819041a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae4de3a-6364-4a93-b8b9-30a11275cfa7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bf0a0e-50b3-46b2-b58c-96066bd59560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0ba968-d7ba-4ec9-ada2-99eb73a28574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb910f7-5e55-4c2e-bfd6-0c8354a1498e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d93735b-4628-4c06-a0e8-3c28c845410f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cba9975-39df-43a7-aae0-e7c4d3b96c6d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeca97df-c864-4636-83ba-daf8baba9267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee0cad78-60b7-484a-ab12-cd46d1c569a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c55a0c8-5144-4126-bc58-b456e402e4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f4b4f1-abf7-421d-8ff7-72e676853be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475111d7-e93a-4c12-9871-3c3a9db14566",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33254b1b-44ed-4fcd-a94a-ec609f6cc3da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234f1299-b38a-45d7-8da6-b5cf2d454b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327b70a4-c3a3-4b37-bace-a7625c0130fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba703f8-77db-41d1-934c-26e1abe2fc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3883bbb5-d0d6-4638-bd84-c9a21d10e556",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8381abb6-6faf-404f-8323-761d43eb3a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57b874dd-97bd-4738-b7fd-f45f2438ffd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06c5d16-ff57-47ff-a4fd-3d0649f8a97a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ca8d98-00e2-4903-9083-7eff37eac482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dab586-82b2-4ee6-9949-050ac2374b02",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832895d0-a6b8-4082-b747-b179a2f480c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c38fad2-580e-4caa-b09a-c89d641da8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87189d11-5e28-47a7-8028-1ccab55b867d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c77550-7c65-4b93-b265-4c019342cdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63c619a-b877-4e9c-8f0c-38a896e3977b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dd0896-b6d4-405a-b578-b92022d0cedb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9636b68c-35a5-4595-9f2e-e64b319029a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b77d52-1ce7-4f6f-b203-8abd87a2364d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c828db11-30f1-4fbc-8b59-7da522c750a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12b4620-97f7-4722-8513-e44879651757",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2f9dfc-bfe6-4b81-a2a6-f070e7dba59c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a688dfdd-3e9c-471e-8995-8a830f6c0149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67e8139-4d85-4283-853c-933d6bbf706b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3b3675-960b-4367-b9de-d69aaad193e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33316868-4490-44b8-beb0-290ab9c16d13",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fef576b-4c5f-4d8f-ada9-6ce4d3fee90b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d11265-c162-4cea-8258-59a2158cf340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c3ccc1-8078-4845-8b5e-6a516c3fc779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b05b47-a6b9-471f-83ec-d394ab4563aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8256c9c8-e535-42e9-839f-4c41b31bafa8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93842e3-b86a-409b-814d-85f01db2ad62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b089ed1-221a-41f3-9f79-966cc3eb95c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace8c2b4-cbf6-43b9-bdf3-05ba4a1556fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0032cc-741f-4e40-9a23-0f98ef1918b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e042ec-256e-47a7-94c0-c00b10cf3fc2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a199f440-5667-4b20-8568-5d8ce79d2a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db749293-35c0-4a2f-b49a-f45ef0661c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac329283-7177-450b-8721-0dd17c34bc9d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2cabff4-3dea-496e-8665-340991a4fd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a468e5-b722-403d-9103-f7d683f078f8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b46a2c-8df2-44ec-ac24-11d0cab2da88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545f5f95-7f81-410e-936b-35dbf9c9590b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1a4d03-680d-4ab0-b884-c57217b909d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45e5e04-4d9e-482b-aded-971d906f55d5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39723c66-6254-4a13-8935-9ba915652961",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed28d991-9357-4a73-86f9-322183e79970"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd9232ea-eff3-4182-9e5f-d15342a9de62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db42ca59-561e-42e1-b5b0-017be6947883"
                    }
                  }
                ]
              },
              {
                "id": "bede2426-0d2c-4775-a1c3-6bb3818db126",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e1c12ca-fb32-4e01-bd8f-57f433ffcfc9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4427ec-424a-4017-9255-0e9ad36a6ef7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c27b5e9-2ae2-46aa-bcdd-713ff46862f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafb1193-6f8a-42d0-bb8a-341636948a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12d33677-f57d-4606-af01-9855519eb835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32235124-48e4-4d0b-b091-1439244d6593",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3249fb-a178-46bc-a3d5-817bf6a2bf04",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b4dea110-95d0-4c45-867f-8eeca4ab8c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916bd21e-c59d-4d16-b76f-55d5be98037a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73b05a20-9f23-4171-8061-1b0009c4c66c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3780d21-5624-4c87-b335-f04847b58b4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d0ae1c4-8b21-411f-ad5f-27ddf30c8e1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0d70381-a088-47b8-aac8-c55e0086414d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4356227a-2895-4487-9e12-e1dfc344be86"
                    }
                  }
                ]
              },
              {
                "id": "e74c75e3-4f09-4441-a3ba-de1585c86100",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ddf17344-ad82-4b89-911c-049c0351877f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d723f269-3395-476c-a7b4-1e01972afeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b1826b91-8bdb-41a2-acdf-8ba48ea3289e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f16f48a-fa3b-477c-b52d-0399bafe623c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7bb4bf-2ef8-4658-8e45-07272276855d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b461441-2c1b-4763-99f8-42fbdf319c56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd51ad40-bb7a-4dc0-b760-b9bddd6e99b5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ae62e4d-b19c-4da8-be2a-f7289ab8199b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "923ff20d-4d09-4663-be7a-75fbafe2ed8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4f02939-4529-4d34-b1c5-5895322d47a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b27a0f37-d89e-4285-956c-57295290af94"
                    }
                  }
                ]
              },
              {
                "id": "3f6f1148-b921-477c-abe0-1fddefdc45ad",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62a76223-07fa-41aa-a045-4d9319d1fdc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c02f4e89-c0a0-4c09-b602-e27ddf95ca72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8aa2c5c9-f96f-4061-a8a7-6d51ed7f9c3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af4d9902-7b14-4c16-afe8-246e0b0beecd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36c0c8ce-b2df-4b4b-be9f-34efdfc7018d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b503fc3b-319a-402e-a559-e88453c828dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c9fbae8-155f-448b-8a02-79adb061d54e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b7198ae-4f16-4224-894a-8b68488da6fa"
            }
          }
        ]
      },
      {
        "id": "ce31fd8f-a354-4cb3-81ab-f3c31cd410d1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8882d3b7-0296-4061-ba57-35cec57394dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b6425c1-3376-4c91-9682-4ec45323f4b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "465bb05b-d4bd-4dc2-a4c4-6f3d0281e392",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8591a7e-dac2-43a9-ab0c-4b376fbabd74",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ed663f5e-f99c-4092-a932-f9e5aa41cbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d90131d-d969-4971-b384-8628f9f2e2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "141f692a-751c-42cb-b4e7-f2b0017f4d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517c6807-4aa9-4159-8100-170dd4ce3538",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d92110-4da5-4a98-bd9b-b7a7095c21f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9ca70780-486c-4b34-958e-b9cc92bc0bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15858b63-828a-421c-982c-ac6591711190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91055b26-cd95-4771-9e1e-68aee780fec3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4aad718c-56a7-4584-b9d2-9ad3f93f4dce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "477b4ad8-7d8d-45ab-9a73-7c8a55087e75"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "594c2ce1-e9e4-403d-89d3-58c199ace4ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75584164-d6ea-4780-8bd4-8f0ed157ca4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56dc2d21-5f76-4d87-b7dc-7c9ba0756ee2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2374d1c8-bc0f-4daf-988a-69c106d1f0ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aec0f66c-253d-4703-b80c-287f5db768eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b1a902c-3157-4ded-b64b-c49ec5bc248d"
            }
          }
        ]
      },
      {
        "id": "03ce517f-dee6-4aa3-bd0c-8c8333608093",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "61175e88-5bf5-4b3f-9126-a1b5bec9c475",
            "name": "Negative Testing",
            "item": [
              {
                "id": "402850c6-9c4c-4b8d-9903-d4f15a1046fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdbb4db3-fff9-45df-aea9-392d592af099",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464a9495-86f2-4779-8c88-0eb9029c254b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8301641e-2139-4559-9b5b-bb950c90e39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c0cdd2-7d5e-4615-b9c4-5232de338db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b074ecc-b320-4558-8284-a0536cebd28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e601fe7-760f-4944-a1e2-6d1e95064b51",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dabb555-3db0-459b-b1a7-b3c9c2253d82",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b4439144-985c-4398-92a5-eb6585ed1760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b846c4-265f-4ea6-be8b-58a59da0176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0a03dda-8b17-47c0-a67f-cf098b04a8f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8fa067d-2e02-44ef-b6a3-75d1cd58d6ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9594e81e-cb8c-42f9-8869-235f81f97203"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e56f9c75-ec04-4ef4-a1fd-d85f02c31237",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ba85165-1b9c-4942-b581-c9521bc58442"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a8fcee4-1d14-4f12-b782-e8a68f28e5ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e01f674a-a4dd-4af3-b689-1dca10807270"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cfcc93d-fc91-441b-aec5-7022b6c48eb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44dac6e6-e00c-4491-a792-beb92493f952"
            }
          }
        ]
      },
      {
        "id": "ed0c821c-fd99-480b-bf5f-56a9728d6ff3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "af8c0569-ddaf-4bb2-a292-4035c5cafa2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b06979d-0730-452c-a15a-220047060d8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3124b09f-88ef-4d9a-8b4e-be05208e9c95",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179e81b1-ae4b-472b-8b90-ae9dd74b22d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abd15857-cb67-4526-8498-0c2113aacd79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e81357f-5728-47ce-9373-8ba6a93dc097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "803963fe-8664-4351-8ec5-1e27a6a1918c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121ae720-8ecd-4b8f-aa85-a6d04ac95323",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf75e83-8421-415e-be56-08509ad9b646",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "67bac78c-0909-4369-bf18-976e7a1d4058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfe6de3-aeb9-42dd-aa4a-77ed40857776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f15dd4c-03f4-4296-bcad-02d2832a15df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f05b4a68-c230-4d79-96af-5196f0bb611d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70cca7ac-ac3f-4d0f-ae43-5242cbe5744a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "581f21bd-7fd2-4d8f-9358-0c197d57ebb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "083d5829-8808-43e0-b340-a83cbfafd6f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c924757b-a526-495a-a7f8-00dbff2185bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a1ee11b-4108-4184-9ff9-514284045bf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03b109c7-3db2-48cb-b871-f2a8bd0097a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f9a2820-85dc-4465-a82c-637edda0ca7c"
            }
          }
        ]
      },
      {
        "id": "f4e293de-4a2c-41fc-be0f-2877c11a4924",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a25cfe4d-5597-4a82-81d5-bc45fe4bfa0f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37e27723-8398-4ca4-a8aa-65b290747159",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "72a8537e-c816-4a90-958e-2c060009dc7c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b176c744-3a3f-4651-a512-b653a6d81724",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fedf2d4-90e5-43de-be31-1a5a06ecc717",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 57.80769230769231,
      "responseMin": 20,
      "responseMax": 302,
      "responseSd": 30.60784116576017,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678840798953,
      "completed": 1678840824252
    },
    "executions": [
      {
        "id": "53ee0520-ede1-4e6b-9e6e-21d8aa798028",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "94c4a78a-bc2a-4984-ba0a-b53ece380a90",
          "httpRequestId": "3718c8e4-635f-4b73-a543-9c6da6fae1a8"
        },
        "item": {
          "id": "53ee0520-ede1-4e6b-9e6e-21d8aa798028",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "39bd84dd-309d-471b-a467-b2414c71faf2",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 0
        }
      },
      {
        "id": "982fbee0-0d9f-42af-af5b-b12227c13aeb",
        "cursor": {
          "ref": "e3c0afd5-f4bf-44a9-821c-da0cd3672c17",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4c7aad91-669e-4535-9f99-d502882d8a45"
        },
        "item": {
          "id": "982fbee0-0d9f-42af-af5b-b12227c13aeb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "197bd9af-4c25-4ae9-b1bd-6601dad9cf0d",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "ac8da2fe-da74-4ef5-a944-9683b69f0262",
        "cursor": {
          "ref": "110655a7-0086-4ed8-a2be-212148f9eaf8",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2846191e-0e36-4c0a-9cb4-5f8f14ee5008"
        },
        "item": {
          "id": "ac8da2fe-da74-4ef5-a944-9683b69f0262",
          "name": "did_json"
        },
        "response": {
          "id": "e0028a7d-6eb6-4308-aa6f-98c4604c662f",
          "status": "OK",
          "code": 200,
          "responseTime": 197,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fde442-5581-4de8-9a4d-0096268c7133",
        "cursor": {
          "ref": "471d4b26-c192-42a6-a80e-9af2591628d5",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "25c2cffc-4e19-4e0a-b647-7cd0f125f52d"
        },
        "item": {
          "id": "e9fde442-5581-4de8-9a4d-0096268c7133",
          "name": "did:invalid"
        },
        "response": {
          "id": "0eb49809-ec51-42e4-991b-d04641ab74dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fde442-5581-4de8-9a4d-0096268c7133",
        "cursor": {
          "ref": "471d4b26-c192-42a6-a80e-9af2591628d5",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "25c2cffc-4e19-4e0a-b647-7cd0f125f52d"
        },
        "item": {
          "id": "e9fde442-5581-4de8-9a4d-0096268c7133",
          "name": "did:invalid"
        },
        "response": {
          "id": "0eb49809-ec51-42e4-991b-d04641ab74dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94c5530-c903-4114-bbdf-6672928a0f0e",
        "cursor": {
          "ref": "124d67ef-f002-48fb-b64c-95dc8833c9dc",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "482ccfc3-1f83-445d-82fa-5dee5333d48d"
        },
        "item": {
          "id": "f94c5530-c903-4114-bbdf-6672928a0f0e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a3b0fe88-3b3d-4d79-baf8-9bab04bda7a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 94,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f10f479-1c9f-4f53-8171-7ca5471804b8",
        "cursor": {
          "ref": "9aac4dc4-eac5-4bf5-97a0-3843946ccfa0",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4737a794-9258-4f6b-91bb-4e44445785ac"
        },
        "item": {
          "id": "9f10f479-1c9f-4f53-8171-7ca5471804b8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6cbb08d4-8b60-4777-9a99-c5bb54aa2fe2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4c0585-b5ce-42bf-b67c-1c9ff8ce788f",
        "cursor": {
          "ref": "0c8ce8fb-b2de-4b0d-b79c-51a0e93b1839",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "75a574f0-4ca1-420b-98aa-774efd9d2cf1"
        },
        "item": {
          "id": "ff4c0585-b5ce-42bf-b67c-1c9ff8ce788f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7946e472-e26b-45fc-b4dc-f1f97c860a8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59c0ce7-d014-4a55-885d-7bf669be4a5b",
        "cursor": {
          "ref": "72999b2f-e1e5-4be8-98ca-f02c627d9162",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a5cd5073-e1bf-4428-83fd-83db35df623e"
        },
        "item": {
          "id": "f59c0ce7-d014-4a55-885d-7bf669be4a5b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "436be4f9-0f13-4f02-ab1b-8cc28181b29e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59c0ce7-d014-4a55-885d-7bf669be4a5b",
        "cursor": {
          "ref": "72999b2f-e1e5-4be8-98ca-f02c627d9162",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a5cd5073-e1bf-4428-83fd-83db35df623e"
        },
        "item": {
          "id": "f59c0ce7-d014-4a55-885d-7bf669be4a5b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "436be4f9-0f13-4f02-ab1b-8cc28181b29e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f24533-5001-4ef1-bba8-bd450f9113a4",
        "cursor": {
          "ref": "f6fcb7d1-2961-4a53-968a-8429d2040961",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "39e74f67-4701-4503-a101-672591c42d0d"
        },
        "item": {
          "id": "97f24533-5001-4ef1-bba8-bd450f9113a4",
          "name": "identifiers"
        },
        "response": {
          "id": "5ff6b762-23a7-49ae-95be-fd3f9ebb86bf",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d9c6be-5aa7-4837-833b-c438eb096c44",
        "cursor": {
          "ref": "4c8848ac-039b-4d8f-aaea-02da4141f332",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a178bb62-2c04-4ce5-a157-2e555bf444f0"
        },
        "item": {
          "id": "d8d9c6be-5aa7-4837-833b-c438eb096c44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e745bc37-8bb2-4c30-99ad-e2d7b33a9e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d9c6be-5aa7-4837-833b-c438eb096c44",
        "cursor": {
          "ref": "4c8848ac-039b-4d8f-aaea-02da4141f332",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a178bb62-2c04-4ce5-a157-2e555bf444f0"
        },
        "item": {
          "id": "d8d9c6be-5aa7-4837-833b-c438eb096c44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e745bc37-8bb2-4c30-99ad-e2d7b33a9e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bf7cd5-b0da-4248-8efe-5b289624b828",
        "cursor": {
          "ref": "e185d951-4200-4baa-90e4-c3959e3ccffb",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "20224b45-4714-43a7-a5f0-8a2fb581079e"
        },
        "item": {
          "id": "a9bf7cd5-b0da-4248-8efe-5b289624b828",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ca033191-b565-4293-bd34-49bc4bc148f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e56f362-1f7d-44dc-b984-60255428b408",
        "cursor": {
          "ref": "2fa2a504-9874-422d-bba9-b48810aff149",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2f959374-f4de-4387-8d5b-9bcdea122f54"
        },
        "item": {
          "id": "9e56f362-1f7d-44dc-b984-60255428b408",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c6f6ba11-6f58-427a-b121-9db36a4bab54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9eb580-57c9-4691-9172-53e2ab1efddf",
        "cursor": {
          "ref": "5bbe4d14-8cb1-4529-bbf1-3763b1ed8f25",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d9b6b07b-01ef-4829-885e-8cd0e92532a4"
        },
        "item": {
          "id": "7c9eb580-57c9-4691-9172-53e2ab1efddf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4ace0af1-d2ff-4c50-a8ad-1188c321c303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276031d8-c945-41d6-a800-7d35789b6ef4",
        "cursor": {
          "ref": "6a392d8b-2835-42c8-b8fe-f6a6037b6ee0",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "94da2f2a-3db1-4022-9d7b-69b3938fb68e"
        },
        "item": {
          "id": "276031d8-c945-41d6-a800-7d35789b6ef4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c2888750-0d04-4f2b-b386-d00f5f3482b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855f2ffa-04aa-49ce-a999-bc5a0449cfb1",
        "cursor": {
          "ref": "c28949ca-a198-484c-8a5b-f7171537d6cf",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e17d57ba-a0fc-46c2-b26f-9160a59eb9a9"
        },
        "item": {
          "id": "855f2ffa-04aa-49ce-a999-bc5a0449cfb1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "178bbe1c-0e2d-42ed-a9e2-3a3fb415513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9946d5e3-2acc-4547-aef1-6f750253193c",
        "cursor": {
          "ref": "fe377fda-5078-4d80-ae8e-0f19341c38c0",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f72083eb-4a99-4a38-b233-f88bffc2ddb9"
        },
        "item": {
          "id": "9946d5e3-2acc-4547-aef1-6f750253193c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "01578da9-4667-4295-bf60-43ef9bf961c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7420e0d3-c27f-4957-8f65-bc15aaf170de",
        "cursor": {
          "ref": "a31da7a5-2fb2-40ee-bbef-a59eec37d233",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9b40b42e-b88f-40a1-9f9b-2c5a5868f46c"
        },
        "item": {
          "id": "7420e0d3-c27f-4957-8f65-bc15aaf170de",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ae8488dd-f81d-4171-b6f3-c509c7bafc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f7c9a1-cf9a-4f52-8524-6f8d864ddbac",
        "cursor": {
          "ref": "e6722e9c-9409-4c79-9521-e103d614364f",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cc71b1e2-faf0-440f-9159-67b70aa6272d"
        },
        "item": {
          "id": "d9f7c9a1-cf9a-4f52-8524-6f8d864ddbac",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3e4370a4-be29-4bbe-85c7-8d2a7a532304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39276b54-3a98-4511-a3b0-564c2aff8844",
        "cursor": {
          "ref": "22f51bda-bf51-4074-9dd0-ea05681a724e",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "830b719e-2219-47d5-a34e-229f15034cd3"
        },
        "item": {
          "id": "39276b54-3a98-4511-a3b0-564c2aff8844",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8ef7e7fd-abb5-4562-82b6-dcd3d9d90ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef12164-e1b7-48e2-a1ed-b04c34aa0433",
        "cursor": {
          "ref": "27c83386-9fb5-4068-8aa8-2722b20a8571",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3d57616a-77a9-4c35-a74f-b23eec8b5464"
        },
        "item": {
          "id": "cef12164-e1b7-48e2-a1ed-b04c34aa0433",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c9f86847-7d21-41c7-981b-9e9a3ffd3c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f4424c-bf51-4082-b2d9-9c97a835218e",
        "cursor": {
          "ref": "8d512f0f-1663-4ccf-8879-677b9bf0d9e8",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fa5b8fe4-c1d6-4ef6-8800-2a7b278e6b3d"
        },
        "item": {
          "id": "01f4424c-bf51-4082-b2d9-9c97a835218e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d2bc6e9b-3613-44c2-a2f6-132d9f436746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9652a2-fb13-40d0-893e-4066452649c4",
        "cursor": {
          "ref": "6dd6ba89-0fe7-4008-88a4-a0aacdcba6b3",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ef548d00-1074-49ab-bcd8-dfb0f18118f7"
        },
        "item": {
          "id": "1f9652a2-fb13-40d0-893e-4066452649c4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c65bf6ae-1f5f-46fd-a3c4-7ea7d72cc733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c93740-7e23-41bd-85fe-bffc12dcf673",
        "cursor": {
          "ref": "14b04c7d-6edf-40ee-929e-ebe02173967d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6d93defa-25e4-4375-868a-d7e02c1e0d05"
        },
        "item": {
          "id": "a8c93740-7e23-41bd-85fe-bffc12dcf673",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "57dd99f1-1e83-45fe-a8dc-a253b81ae7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68313a10-dee3-464f-84d3-8b241f506d98",
        "cursor": {
          "ref": "3fee9f18-c206-401a-91a0-b52edcd2cfc9",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4271d7f6-2f4e-4f67-a124-4bce38fd8de4"
        },
        "item": {
          "id": "68313a10-dee3-464f-84d3-8b241f506d98",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "373ddb77-0592-4882-ae15-28bf51f6108f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcd3265-72f0-43e5-8675-34813bbf1644",
        "cursor": {
          "ref": "d5f52033-45ae-4490-81fe-02bedd41b94f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "deab8fc4-1246-404f-b26d-4a86224e1cec"
        },
        "item": {
          "id": "2fcd3265-72f0-43e5-8675-34813bbf1644",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6421245e-d363-4330-866a-5489ba54bfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72e0573-1be0-4e13-a61c-082b35e7ad74",
        "cursor": {
          "ref": "f54deb0b-d39c-4669-bbef-ed1789408467",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d25a9357-dfb0-4ae7-83a5-eb63fab44540"
        },
        "item": {
          "id": "a72e0573-1be0-4e13-a61c-082b35e7ad74",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2b416822-b904-4791-a543-8a653bf1b59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3eed96-9735-4e43-8d9b-afe59cca96dc",
        "cursor": {
          "ref": "14c73981-9ba3-456a-98a9-5fab90fc0db6",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "48ea0ac1-2da4-417f-81cc-3de46a477f02"
        },
        "item": {
          "id": "0f3eed96-9735-4e43-8d9b-afe59cca96dc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "02fe5cfe-5424-4bd7-b188-250463a13b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98049f2f-b4d7-46a5-b4cf-6622c1c8e7de",
        "cursor": {
          "ref": "bf22dd8e-127a-479f-8c84-33ef3ac08ac7",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "18e39e83-8e25-4c36-b20b-a4bb1835fdb4"
        },
        "item": {
          "id": "98049f2f-b4d7-46a5-b4cf-6622c1c8e7de",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "56c9a12a-5cc8-4f7a-ac54-878d5f307244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f26933a-4cb9-4d51-a897-719ff3ce5c48",
        "cursor": {
          "ref": "74008e3b-1b5c-47c9-b9c6-138f2c7fab91",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f8ace5f0-7fc4-49b1-9734-245e269338d5"
        },
        "item": {
          "id": "2f26933a-4cb9-4d51-a897-719ff3ce5c48",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "33cce74d-5930-439f-805b-a2e1af2336a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77933fa6-072c-4663-87e5-b7db8315e9e3",
        "cursor": {
          "ref": "1e47d704-8d44-48a5-8df4-d1dd83edf3ef",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8e145180-b158-4f9c-a019-4450c3df8a28"
        },
        "item": {
          "id": "77933fa6-072c-4663-87e5-b7db8315e9e3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e47f247f-8780-4fee-a964-9e07806d125e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226ce184-2672-4bc8-8ce3-6b8ded6ede87",
        "cursor": {
          "ref": "a2f5083e-5205-4b8f-ac7e-64b46cf77f01",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8a3903b3-ddf0-4b41-85f2-346444b19942"
        },
        "item": {
          "id": "226ce184-2672-4bc8-8ce3-6b8ded6ede87",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4f54897b-9bba-45ba-bff7-cd1f491a72a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4223e2ab-a685-4241-8ea9-30ddaa49ddcf",
        "cursor": {
          "ref": "4d532da7-45da-4e46-8bfa-a745851be50e",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7c3da95b-6e55-42da-8234-6ac47bf17e76"
        },
        "item": {
          "id": "4223e2ab-a685-4241-8ea9-30ddaa49ddcf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1a9c90a3-603f-49bc-8aec-7d26cae3c9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8077fe69-b07b-4442-a46b-fe38e14f5aea",
        "cursor": {
          "ref": "d32c9588-5191-41f8-9f13-97af13de47de",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cd9546e2-f993-4497-8017-c9fc766c8c7f"
        },
        "item": {
          "id": "8077fe69-b07b-4442-a46b-fe38e14f5aea",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c56baa4a-dd35-4b67-b882-78319e8b440d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18735bfa-de75-4738-8679-8b8f6b226093",
        "cursor": {
          "ref": "8540d9ee-e164-4c51-a5b3-c795f674a74e",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "06ff41f6-99d3-4b4a-8ffa-56904213e5f4"
        },
        "item": {
          "id": "18735bfa-de75-4738-8679-8b8f6b226093",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e3cf8b5d-3462-413b-aeb0-b52176e49828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3043c953-532e-4eb5-a6d8-fd3bb0d3298e",
        "cursor": {
          "ref": "27cec3fe-2028-4e4f-a975-c2d9f9c378f4",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "33d9cc4d-7449-40d2-ac59-355cd982a596"
        },
        "item": {
          "id": "3043c953-532e-4eb5-a6d8-fd3bb0d3298e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2b3f8900-04fc-45f8-aa3b-9e7bb61c84a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ba344a-752e-4d03-b142-090f427e4c49",
        "cursor": {
          "ref": "ac685797-072e-49d5-b8ca-51550c7014f2",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "325c20a5-bfef-411a-aea7-e60fb49872b8"
        },
        "item": {
          "id": "09ba344a-752e-4d03-b142-090f427e4c49",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a86ea313-214d-4a98-becc-448de50e9868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28600ab9-2545-4789-a49c-6cb07b4649bc",
        "cursor": {
          "ref": "180b5239-25b8-426b-8617-581b000d3c04",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3862c5d2-9c2d-49c2-8352-538b1b69ff61"
        },
        "item": {
          "id": "28600ab9-2545-4789-a49c-6cb07b4649bc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "83ce524b-2e74-4c8f-901b-bab0e0f1f5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54143c8-317e-4964-b970-93467b1cfdbf",
        "cursor": {
          "ref": "96dff8d9-74d8-4ec7-b479-be986f5e50ea",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b9d73e03-d029-4974-993d-6bdca3f23a0c"
        },
        "item": {
          "id": "d54143c8-317e-4964-b970-93467b1cfdbf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8cb5e601-5c46-44c6-9dfa-e30e39d5c588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4afcab-535c-45e1-8d7e-bc60636e8f0e",
        "cursor": {
          "ref": "9831f479-b08f-4ebf-b329-2a30ab1fb6b6",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5c2a4115-534f-4077-9c9a-fcbb292fdf2f"
        },
        "item": {
          "id": "6f4afcab-535c-45e1-8d7e-bc60636e8f0e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f3fd1176-4a2d-4084-ae07-7bed2abae716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ffc5ad-a88d-453a-ad2f-eda34b4860fc",
        "cursor": {
          "ref": "a86e4eeb-9a02-4d3d-b63e-24b965aca2de",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4185181b-3014-46f9-81ff-24771119efee"
        },
        "item": {
          "id": "a8ffc5ad-a88d-453a-ad2f-eda34b4860fc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "22709e85-a938-4095-a680-c032b03b02ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247ce509-408b-4fe9-8e1c-328c85b3085e",
        "cursor": {
          "ref": "e5fc361b-88f3-430f-ba3f-3d031b2510f5",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f2bf3956-c179-4e8a-bdc4-e4789d647438"
        },
        "item": {
          "id": "247ce509-408b-4fe9-8e1c-328c85b3085e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7b54e493-7770-4f9a-ba05-2da70b9b9905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a0fc2e-60f8-475a-926d-122c044ff56b",
        "cursor": {
          "ref": "7597c059-da3e-41f9-8395-a061457b31ae",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a7e59471-ae2c-4a4d-96f7-9934298303a2"
        },
        "item": {
          "id": "c5a0fc2e-60f8-475a-926d-122c044ff56b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a999a22d-4c15-4fd1-9169-2cd2adb43c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4ce50c-49c8-49e2-8eff-6bb0c0f9f858",
        "cursor": {
          "ref": "63848227-03e3-47cc-80d9-0e88479d9804",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a076eff7-a256-41f0-863b-2bc9455caade"
        },
        "item": {
          "id": "1c4ce50c-49c8-49e2-8eff-6bb0c0f9f858",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4a879430-4507-4e08-8d3d-2004e8630f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0ba748-d00e-4203-934b-5d3c1b74b064",
        "cursor": {
          "ref": "2718f896-3764-456f-b754-0ccc76f72a12",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "83a21205-50e4-486f-97d7-cb0b0094e41c"
        },
        "item": {
          "id": "1b0ba748-d00e-4203-934b-5d3c1b74b064",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f3d8928a-ff13-4980-b442-810185f40cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ea3bad-e06b-4d34-ac38-993c029e46ce",
        "cursor": {
          "ref": "487af8ad-910d-45e0-8603-7af029d69f02",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8db2a25e-5b64-4659-856b-8cc521937330"
        },
        "item": {
          "id": "73ea3bad-e06b-4d34-ac38-993c029e46ce",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "220a8662-820e-4a07-b216-edcca3cf4ed7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2961856-e230-4410-b760-9f0c2187fbd2",
        "cursor": {
          "ref": "fbb2812e-7357-47ec-b8ce-8e3796812ecf",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f16bedbf-b6e6-41c8-9b34-81009880493c"
        },
        "item": {
          "id": "d2961856-e230-4410-b760-9f0c2187fbd2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5436f4a2-6120-4e6b-8044-1ed4683e682a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43060008-01c7-4be2-88e9-5d616593d4c8",
        "cursor": {
          "ref": "8f9aa17c-a265-4e39-8f76-e92ca18ab5ca",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b3441394-198f-4421-b21a-e7c97f3835eb"
        },
        "item": {
          "id": "43060008-01c7-4be2-88e9-5d616593d4c8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "48c55618-d700-417f-a5ad-b3b541182313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b66519e-f943-42b3-a748-9de88675e254",
        "cursor": {
          "ref": "4ed4e947-e2f8-4ce2-bd92-0616003b2092",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "abfaa4ee-34dd-42b8-80ca-4ae688383448"
        },
        "item": {
          "id": "7b66519e-f943-42b3-a748-9de88675e254",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a438e1f8-03c2-4b70-8ba9-4c5c87b75a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cf4213-02cd-4e44-b4d6-ffe25f0eea77",
        "cursor": {
          "ref": "63d2a57f-cfd4-4905-971b-18ea75c76349",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aaa2e619-8ab1-470c-9d52-ae806312b660"
        },
        "item": {
          "id": "39cf4213-02cd-4e44-b4d6-ffe25f0eea77",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "64d30f61-b665-4cb0-a58b-653ba7e1794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e26455-2e26-4cca-bc10-f13cc59b9c71",
        "cursor": {
          "ref": "5c07dd5c-ec5f-4ae8-86d9-742f2e303d29",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "085dda71-1924-4fd2-a736-7d951d29d55d"
        },
        "item": {
          "id": "26e26455-2e26-4cca-bc10-f13cc59b9c71",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2a3166bc-e307-4e03-9615-13e4c2d841b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bdb612-8f2f-4d5a-a872-f93dc129557f",
        "cursor": {
          "ref": "9c16ce9a-cb68-4167-a274-0b0eef6deaa1",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cd1f65dd-356e-4c82-8fee-41dcb74bb20f"
        },
        "item": {
          "id": "d7bdb612-8f2f-4d5a-a872-f93dc129557f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "75b8f8da-7336-47ee-98c6-631af7c89af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7444eb1a-a187-4c2b-b304-cb56476c8d00",
        "cursor": {
          "ref": "570f31f3-7d4e-4b0b-ae80-6a021d74d733",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7214e3f1-b412-48ea-b102-67f81e1f33de"
        },
        "item": {
          "id": "7444eb1a-a187-4c2b-b304-cb56476c8d00",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3219c889-40d5-4b18-a962-33f83f45cf55",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 64,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26da0abf-f65b-4ed0-b3ca-ccc9da9f3126",
        "cursor": {
          "ref": "f50d3d6e-06c4-48aa-be48-1102e869b3f1",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c43ddc45-c0f7-430f-aa39-f556aa941ea7"
        },
        "item": {
          "id": "26da0abf-f65b-4ed0-b3ca-ccc9da9f3126",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4c12409b-b1f5-41a0-be2f-f3c3a8667c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dc5eb1-7abd-4524-b51b-d26c3ef71cc2",
        "cursor": {
          "ref": "daf897cb-28ad-46ad-89db-2c19efdd6ddb",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "eb0b0fd4-e5c9-4d98-a75b-c9fbf40717fe"
        },
        "item": {
          "id": "a5dc5eb1-7abd-4524-b51b-d26c3ef71cc2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5e994361-b89d-48eb-a0da-6dee80f3e0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ed387e-11b2-4065-8c7d-3c9706c2c9e1",
        "cursor": {
          "ref": "09dcdd20-cd63-4d19-94cb-169088c8fd35",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eb5b9527-3b5c-44f3-aa1f-d1aa4293f4ba"
        },
        "item": {
          "id": "b8ed387e-11b2-4065-8c7d-3c9706c2c9e1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5945e884-812c-46a1-99eb-727514dc1845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d2b518-9d7f-43f6-ae08-4dbbed5efac4",
        "cursor": {
          "ref": "0eb48834-04bb-45d5-92a7-7abcf310af61",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a386a661-200a-42b3-99f6-201fcbf1ed5f"
        },
        "item": {
          "id": "c2d2b518-9d7f-43f6-ae08-4dbbed5efac4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "05eb6bab-e53b-472d-b93b-6b96b9270a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed1178f-84ae-41d3-ac05-e01e788eb9a7",
        "cursor": {
          "ref": "03d4f9fd-a8bf-45a2-a143-95b7ea240be6",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9b9f5851-2f99-4011-b9f2-336029cc2ff2"
        },
        "item": {
          "id": "0ed1178f-84ae-41d3-ac05-e01e788eb9a7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2a5bd064-c3bd-400a-ad31-4144d724372b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7df3d35-c0a8-46aa-8124-10dc18030e9c",
        "cursor": {
          "ref": "17166784-941d-457d-b183-7dabfe57a321",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5d935530-e21c-470e-86e6-595f511c6920"
        },
        "item": {
          "id": "a7df3d35-c0a8-46aa-8124-10dc18030e9c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "854b5e7d-80af-49e2-98cc-d1c8c7ab20a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40488465-1e43-40d3-b80b-33cd3ab468bf",
        "cursor": {
          "ref": "224e9758-dfa7-433f-9b07-c69f01460409",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ecc231fe-a1e1-423d-9ec4-a49550907b7f"
        },
        "item": {
          "id": "40488465-1e43-40d3-b80b-33cd3ab468bf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9f75c381-77c4-449c-be16-e67096db0d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f19d43-41ed-4ed5-b64a-33caf9acd46a",
        "cursor": {
          "ref": "4e4e07f7-7436-4bad-89ce-34312faaf6cd",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "39676cb6-a633-4011-a18a-daaeb9d99d3b"
        },
        "item": {
          "id": "21f19d43-41ed-4ed5-b64a-33caf9acd46a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0027de9b-65c4-4952-9c91-01f2e772658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7833bb-8091-46ed-9a1d-221962fcf60a",
        "cursor": {
          "ref": "e478ab52-8f63-46ff-b0e6-fa0a9110a17f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "35c234d3-783e-4cb7-89f8-be9806cfc9f6"
        },
        "item": {
          "id": "0f7833bb-8091-46ed-9a1d-221962fcf60a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d4bed1d0-6cc1-4ca3-a6f2-d865c774b440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305dcb56-f42f-48b2-94f9-a7e95a65d958",
        "cursor": {
          "ref": "a3799350-3b14-4592-b7fa-ad1567b45d05",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "55d4a1a1-d219-4c14-8635-e017954f4a57"
        },
        "item": {
          "id": "305dcb56-f42f-48b2-94f9-a7e95a65d958",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c81060e5-fde0-44b1-a41d-22f2cc77352a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bc5fe0-0f09-47be-8bac-d2344b325389",
        "cursor": {
          "ref": "24dd8850-3040-4cbe-a714-10370f4f0c0a",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0983922d-a889-4678-92e9-7077d1825fba"
        },
        "item": {
          "id": "70bc5fe0-0f09-47be-8bac-d2344b325389",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "51fe827e-fd40-4406-b704-0436c3e97fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840e2c97-994e-4726-8fbb-530f6f8aa8b5",
        "cursor": {
          "ref": "592fb2ef-e141-47c4-993d-2cb0286a3bed",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "92b0f94a-fce1-4d8d-abbb-a05dfb433ef6"
        },
        "item": {
          "id": "840e2c97-994e-4726-8fbb-530f6f8aa8b5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f5223d07-1e5e-428a-a653-e4659108d860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124883ff-2cef-4efb-a29a-b491dd5f4918",
        "cursor": {
          "ref": "676ce244-d946-4bcd-85f7-643066d7c186",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "34d7c7bf-da0f-4fea-99c1-905f62a469cd"
        },
        "item": {
          "id": "124883ff-2cef-4efb-a29a-b491dd5f4918",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1e454efd-517d-490c-ae88-08615e1b1602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b979ab85-cfdc-4d29-8063-cf2efa3be6b4",
        "cursor": {
          "ref": "c31a8154-c44c-4f82-b02b-119fe2f193cf",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4d7b0b01-b5ee-4bec-8bee-9e5d0cb743ed"
        },
        "item": {
          "id": "b979ab85-cfdc-4d29-8063-cf2efa3be6b4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9f7b25fb-d15b-44e5-bfd1-7fe1febfe998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aefc4c1-3fdd-488d-b658-14f4764b9a34",
        "cursor": {
          "ref": "df967678-5c77-42cc-aa8a-868ca6441d19",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d94eecd0-c756-4c07-a1f9-56070bd5d110"
        },
        "item": {
          "id": "8aefc4c1-3fdd-488d-b658-14f4764b9a34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "19a5bf95-ae4e-443a-8e38-8efa1c7f2438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f84c93-8e29-4afc-a06f-79cfd6dee535",
        "cursor": {
          "ref": "9478471a-ed71-45c7-9bb1-b1e87ef33c21",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6d1aab77-60f1-45fa-883b-0c2a4e6ca485"
        },
        "item": {
          "id": "86f84c93-8e29-4afc-a06f-79cfd6dee535",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a66763a0-b3a5-45a7-a87d-807c1861b4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21345eb8-9570-4dd4-a030-9fd1421c47dc",
        "cursor": {
          "ref": "b382a9c2-e996-4d32-9cb3-1800ef5afb6f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f57f25d0-a720-4fde-b249-74677de47819"
        },
        "item": {
          "id": "21345eb8-9570-4dd4-a030-9fd1421c47dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "60f03356-de42-4ed2-b8af-fa5a0bc9126d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2162c8-c822-4a95-81e3-5efc6245bef7",
        "cursor": {
          "ref": "0a96359b-5156-4678-9483-189a5aaf7bbe",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b2df1581-cd48-4b12-9b58-721920050760"
        },
        "item": {
          "id": "1f2162c8-c822-4a95-81e3-5efc6245bef7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1ccc028c-1b21-4d23-b683-35a2abcf450f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37527ad-58e8-4664-8f1c-3b181a2105dc",
        "cursor": {
          "ref": "54c788fe-c662-4780-a8cb-21e68a79361d",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "332fb422-63ea-43fa-96d7-5668e60a3ee1"
        },
        "item": {
          "id": "f37527ad-58e8-4664-8f1c-3b181a2105dc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "875cfe4b-d49f-4287-ae62-b744db619ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b8b260-291f-440f-9ad3-c3cdba47f910",
        "cursor": {
          "ref": "e55776d4-eede-4ebf-b389-b14a9dc34646",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "388c534d-7f19-4d93-be67-cb98d829b8c7"
        },
        "item": {
          "id": "07b8b260-291f-440f-9ad3-c3cdba47f910",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "328ee99a-e4f6-4053-a9d7-45b004ca38cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379d9cda-b9f3-4ac7-acc2-66c30b5b92ff",
        "cursor": {
          "ref": "c37718e3-61bb-429b-9648-0c05170fe8e9",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "334c14c3-00f6-4605-9b23-98e6f41ab10e"
        },
        "item": {
          "id": "379d9cda-b9f3-4ac7-acc2-66c30b5b92ff",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bcc75749-308b-484e-89f1-849c1dfdebfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2a7dbe-24a6-4ab5-af9c-a73b7fa0fe89",
        "cursor": {
          "ref": "dd28fcdb-3832-4ba8-b2d5-2c002bece096",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3ab18d9a-7c5d-4365-8826-11f3c56ac8c4"
        },
        "item": {
          "id": "0d2a7dbe-24a6-4ab5-af9c-a73b7fa0fe89",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c55522b5-9d2c-4888-a52a-4b575d821711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901dc2c3-69c7-4f88-9e1b-817d4cb876e8",
        "cursor": {
          "ref": "207d37a3-a494-4ace-ad0c-c4332fa7113a",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ba324e8a-6c89-4174-9c03-80a3b37a5242"
        },
        "item": {
          "id": "901dc2c3-69c7-4f88-9e1b-817d4cb876e8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2ab1b7f3-e9e3-4730-bab0-abe266edbb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e092cb71-0935-48ac-bb1d-b0ddbb2dd63b",
        "cursor": {
          "ref": "c6f8619f-56cc-4937-bb61-c467ccbf199d",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a7aea111-b7b0-4f9f-a81b-2c979e06442b"
        },
        "item": {
          "id": "e092cb71-0935-48ac-bb1d-b0ddbb2dd63b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5619a815-3850-4012-b403-ea68815ffe65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b85994-89c8-4338-aa52-cd8d23dc1f75",
        "cursor": {
          "ref": "61272d1c-1c3e-4fa6-9dc8-f37b10a876b4",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6ec12c3b-0f5c-4b0a-9711-9a3b54d9dbf5"
        },
        "item": {
          "id": "32b85994-89c8-4338-aa52-cd8d23dc1f75",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0a8e17be-ea68-4d44-88f1-ac1f0358936f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee9d7a2-84c0-4b50-a1fe-0d3536455ee3",
        "cursor": {
          "ref": "df2bec55-34df-42ef-970f-c4ae7b54bb3c",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "34ad190c-fa9c-4d6f-9ca0-5d599ad33479"
        },
        "item": {
          "id": "bee9d7a2-84c0-4b50-a1fe-0d3536455ee3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ca83d250-f873-4d58-a4b1-d09e82b7e01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987576e0-6e25-4869-9675-0bf20e34891c",
        "cursor": {
          "ref": "bb8ea644-e154-4d14-b9a5-787bcc2bde1c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "84bc82a5-8fef-45e0-bf26-70d528b499bd"
        },
        "item": {
          "id": "987576e0-6e25-4869-9675-0bf20e34891c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9d0fd264-5e3c-4752-b5dc-fe048a0d499a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2256de71-2fae-4bc1-bb75-4c2ef287b11f",
        "cursor": {
          "ref": "85f46f32-e6af-46ce-890c-de140fb8bd89",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c653b791-85e8-4668-9b6b-635456191de3"
        },
        "item": {
          "id": "2256de71-2fae-4bc1-bb75-4c2ef287b11f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3039cf23-dc2e-463a-80d7-202cd9e4d99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113c88e3-9053-4caa-8470-371d536ac4c4",
        "cursor": {
          "ref": "3c13defc-28a5-40f1-9714-c33162096ef3",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3be2a921-cb84-4491-a91a-fcf90f6aa31e"
        },
        "item": {
          "id": "113c88e3-9053-4caa-8470-371d536ac4c4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "328b185f-f58d-43e3-8b34-02095147d9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705a5212-de0e-43c5-b574-909a6e7af5e8",
        "cursor": {
          "ref": "78a0c83d-e7b0-41aa-99fb-0bacff7ab341",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3eddf45c-c782-4902-a424-3927f7f94091"
        },
        "item": {
          "id": "705a5212-de0e-43c5-b574-909a6e7af5e8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c757ac37-c099-4806-a19d-41c2a6e3dcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b790e7b1-acd4-4720-a940-f3b947713090",
        "cursor": {
          "ref": "74f92733-e85d-4768-9450-d88c820cc824",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "23f5c78c-2ec7-4864-aa4e-f450bfa18971"
        },
        "item": {
          "id": "b790e7b1-acd4-4720-a940-f3b947713090",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "967a1a27-ed3c-4ae5-8f67-a1a8f458d7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d8a2a2-1e31-4d71-851d-0df140c41da9",
        "cursor": {
          "ref": "98aaf6f1-fd90-4ee6-be75-9d73e4344314",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5ac30834-236f-422c-b696-73916cea627b"
        },
        "item": {
          "id": "e2d8a2a2-1e31-4d71-851d-0df140c41da9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "594ed6df-42b2-45f6-8940-efa078ec3c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9bcd58-6880-43e6-a7b6-7b5e455a46da",
        "cursor": {
          "ref": "97fb09db-9467-4cc8-825f-d68c6a4bb743",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3733866f-b72c-485e-a39d-af4942bf4476"
        },
        "item": {
          "id": "2e9bcd58-6880-43e6-a7b6-7b5e455a46da",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "54718dce-af2b-4a3d-a966-606c32ff4f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdd7d52-c8d7-40b9-970b-cbd2c6a5f0c7",
        "cursor": {
          "ref": "8cea3b81-5fb9-4cc5-87af-352928df98a0",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "62591382-405c-45b2-8cfb-5f5c684c6a75"
        },
        "item": {
          "id": "acdd7d52-c8d7-40b9-970b-cbd2c6a5f0c7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "09912c5e-4066-4f31-889a-0b1b2f29175c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28047bdd-c311-4185-9e57-ac8f04c09026",
        "cursor": {
          "ref": "b6624fda-b39e-441a-9839-f9674e7a8f35",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2ddc3eca-d4ad-40ce-aecf-bc370d5439f3"
        },
        "item": {
          "id": "28047bdd-c311-4185-9e57-ac8f04c09026",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ba8d10a9-d239-44cd-810d-a00279515ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7385292-83c5-489f-949e-b063a3796e0d",
        "cursor": {
          "ref": "dd0d04a5-1017-4b75-a606-b93d409d8939",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a36fc748-b9a4-40e1-8d61-612ca2a69921"
        },
        "item": {
          "id": "d7385292-83c5-489f-949e-b063a3796e0d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4b65c900-654a-44b3-8104-bf830089f957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8bdaa5-8943-453f-bafb-f9687fefce31",
        "cursor": {
          "ref": "2aabb1dc-2a04-4655-a995-3e9389a9c5e3",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "39ed3ad7-05b5-4d38-9c66-6e0698580424"
        },
        "item": {
          "id": "7c8bdaa5-8943-453f-bafb-f9687fefce31",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1c77bf8d-ad33-495c-a1c9-cf96e1b830ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d219944-18a6-4be0-b92c-07d5fea8dced",
        "cursor": {
          "ref": "ff1f19e3-5f94-4fa1-becc-7191d932a81b",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1ebbde3f-e197-42df-b60c-a24be9683445"
        },
        "item": {
          "id": "8d219944-18a6-4be0-b92c-07d5fea8dced",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5053742f-b288-4d61-abe3-20915c008383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b67d21-a540-4631-8070-8e50fdaa4e98",
        "cursor": {
          "ref": "377b4394-1319-446f-badc-549aa9cf42f7",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eceb17c9-f607-4ff7-8642-34ace97cc391"
        },
        "item": {
          "id": "f1b67d21-a540-4631-8070-8e50fdaa4e98",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1130908b-4722-4c56-b0ee-8ec3d0cb32e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30942c4-9ce6-4ce3-b355-e3acb93925c6",
        "cursor": {
          "ref": "eaa05ab4-bc2e-4c7b-bf95-49cbdba401e2",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0b787adb-0b28-45cb-875b-f5fbd511441f"
        },
        "item": {
          "id": "a30942c4-9ce6-4ce3-b355-e3acb93925c6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "49c3dff9-fdf0-48d4-8623-c61d76bbd8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e5c6fd-545e-485d-ac79-e2c122776e29",
        "cursor": {
          "ref": "759fa613-c324-49a9-9028-9570f7801b25",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "803fc2b4-41dc-4057-ad1c-2336da13f8e1"
        },
        "item": {
          "id": "64e5c6fd-545e-485d-ac79-e2c122776e29",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ecaa6b99-437b-45d0-992d-4a884a092f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0324470-b460-4cf3-a84b-eb861122f4f7",
        "cursor": {
          "ref": "ee205cad-e204-4f1e-bf67-977d47b6af60",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c611c9b4-d30b-4ef5-8f60-0e49db4f088d"
        },
        "item": {
          "id": "e0324470-b460-4cf3-a84b-eb861122f4f7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "59526ae0-1699-4638-8265-1804289cf071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099a596e-0841-4821-ac62-96f56c65f834",
        "cursor": {
          "ref": "50530727-f3c0-4c49-92ad-ea730fcd30cd",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c7db42b1-ade4-45dd-8b77-4f80257c9fc9"
        },
        "item": {
          "id": "099a596e-0841-4821-ac62-96f56c65f834",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8f394f84-cf78-4137-a4b0-aa43739856b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67fc13f-3966-4545-8e8c-d582a61fd1d9",
        "cursor": {
          "ref": "585d9a35-79c9-4e58-9809-472d1e8436a6",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6d3a3636-09c2-4207-94f2-8dfa14aff243"
        },
        "item": {
          "id": "a67fc13f-3966-4545-8e8c-d582a61fd1d9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "01fe015e-1f68-46f9-b9da-f6f7e21cecb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1575646-69b8-4e2b-9784-1ac3248063a4",
        "cursor": {
          "ref": "30ea596b-299f-4e85-a2e6-7f6e750971d5",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a0590b35-6ba9-41a4-a1ed-6a8912c41a08"
        },
        "item": {
          "id": "f1575646-69b8-4e2b-9784-1ac3248063a4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6e8a6f3c-c4c0-48c2-a5ee-fc4b78cfed21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b460721-27af-4ff7-b2b7-87ea0f3b694f",
        "cursor": {
          "ref": "26507088-5c51-4c74-b428-06fd47874fc2",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b04662ee-0b59-4566-8507-5e567a4b2f75"
        },
        "item": {
          "id": "0b460721-27af-4ff7-b2b7-87ea0f3b694f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "60c87ee6-d876-487f-98f2-8c1fec92bd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be522682-8810-4498-bb66-92d3c3cbe752",
        "cursor": {
          "ref": "40c105ee-8ccb-46e7-9ffe-b7693bb26d68",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a92b762a-12e7-4387-a882-dc901510f676"
        },
        "item": {
          "id": "be522682-8810-4498-bb66-92d3c3cbe752",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "36c5c18e-9679-4a88-8c24-31c7dc3851e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd55b33-7f05-4a96-a185-e6f8979b4b54",
        "cursor": {
          "ref": "ded3fc90-0cdc-43d1-b83b-e4bf9fb21488",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9374aacc-e494-4446-838a-6972f7a6bb6e"
        },
        "item": {
          "id": "cdd55b33-7f05-4a96-a185-e6f8979b4b54",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fe5664f2-7751-4664-82ad-15cfc0ed365f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c4b4ae-fd74-40c6-9db3-e626f57e01bc",
        "cursor": {
          "ref": "350711bc-383e-4b82-9248-92bbe7373082",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ab276d4c-4395-497e-9d5d-41c4ffc362a8"
        },
        "item": {
          "id": "13c4b4ae-fd74-40c6-9db3-e626f57e01bc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "be6b83f6-2e8d-437b-acdf-f4a47e0287ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba4349a-58e4-4c46-8fb8-a5170753b48d",
        "cursor": {
          "ref": "488c325b-79e6-4621-afab-efbde2b0a774",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "92ef3594-b770-42ac-a47e-df6d514c0dfe"
        },
        "item": {
          "id": "9ba4349a-58e4-4c46-8fb8-a5170753b48d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4c44dcd5-67c7-42d9-b0f0-280b2bd74648",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e10f903-6300-4dab-af6b-a7fe64cffd8c",
        "cursor": {
          "ref": "34a87ad7-a5fe-4185-a55d-dfc928766c5a",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9684567c-df47-4002-a5c2-24cc730f31c0"
        },
        "item": {
          "id": "7e10f903-6300-4dab-af6b-a7fe64cffd8c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1230576a-5ad0-4016-bf58-5e69ef286807",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 172,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75af2f03-88f1-492b-b696-cd9bd7e23d0a",
        "cursor": {
          "ref": "91cc1756-2eca-4c51-bd87-8c7163bce70f",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4189b7fe-9f51-4948-954a-af470a88a9f8"
        },
        "item": {
          "id": "75af2f03-88f1-492b-b696-cd9bd7e23d0a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eb75463e-0b61-4601-bba7-22a28da589c8",
          "status": "Created",
          "code": 201,
          "responseTime": 110,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "07867b6d-4ad5-4c0a-82a1-5f3367c1898b",
        "cursor": {
          "ref": "444e397d-01d5-4fda-9229-64ea6af7a271",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "10adc5ba-dafc-4b45-ab43-87926767f2d0"
        },
        "item": {
          "id": "07867b6d-4ad5-4c0a-82a1-5f3367c1898b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "640ac8b1-4cd0-4c73-b86f-2256acf7a0f5",
          "status": "Created",
          "code": 201,
          "responseTime": 71,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e935a5c-ca62-43fc-bea6-df3e3141b182",
        "cursor": {
          "ref": "e52981f9-f000-4fd9-a262-01ba61de04a8",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1aa5c278-a7d1-4498-a421-43a9f9284aa0"
        },
        "item": {
          "id": "1e935a5c-ca62-43fc-bea6-df3e3141b182",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8c5bc26f-efbc-4221-adbb-e85bc2dcd28e",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0998078c-62a3-4908-9f93-9c53415b8646",
        "cursor": {
          "ref": "e36e52e7-851e-48e9-a4bf-26af8d2585eb",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "af66c45b-73b3-4706-8752-cfd19c646ade"
        },
        "item": {
          "id": "0998078c-62a3-4908-9f93-9c53415b8646",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "03152884-3756-4125-a783-49b428f7792d",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef2fd1a-fd37-4907-8fcd-3538dc73c854",
        "cursor": {
          "ref": "8a0c605c-12c2-4a10-84a3-1f076d945d05",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3de17811-da76-4b4c-90f7-7bd8a12febdc"
        },
        "item": {
          "id": "bef2fd1a-fd37-4907-8fcd-3538dc73c854",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f6297a8f-1329-49f9-a792-134339123e9c",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb9c01c-3aed-42d4-9d81-07dfa764712c",
        "cursor": {
          "ref": "32d7b584-d910-49a8-aaf4-527c0f1fd0bc",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2b21f91d-85ef-4e44-9fae-c5f4396814ca"
        },
        "item": {
          "id": "8eb9c01c-3aed-42d4-9d81-07dfa764712c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d50f9f2e-31bc-4e45-a432-ed9ef4b6b5f1",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a798d0-b939-4d41-8034-7c5b9735e85a",
        "cursor": {
          "ref": "f103bad4-b5e0-4fd8-866c-0c9bc081a88f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f73214ae-fbc2-4426-882b-0d1df75b65eb"
        },
        "item": {
          "id": "55a798d0-b939-4d41-8034-7c5b9735e85a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cbc3420d-5ede-4584-9d7e-bdacf848be80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a798d0-b939-4d41-8034-7c5b9735e85a",
        "cursor": {
          "ref": "f103bad4-b5e0-4fd8-866c-0c9bc081a88f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f73214ae-fbc2-4426-882b-0d1df75b65eb"
        },
        "item": {
          "id": "55a798d0-b939-4d41-8034-7c5b9735e85a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cbc3420d-5ede-4584-9d7e-bdacf848be80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f186d5a-9d63-4175-993b-69ed2e0f6eb0",
        "cursor": {
          "ref": "30f06405-8a6e-4a92-827b-335ec1b4f04d",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e7f595ce-ba52-4427-95b0-fd3ad93a4f61"
        },
        "item": {
          "id": "1f186d5a-9d63-4175-993b-69ed2e0f6eb0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "55dd35cf-bef9-4ed0-8b3a-ebe64e0e723a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7867f512-0a6c-4058-b402-0f5b3bd6c7e1",
        "cursor": {
          "ref": "f43507a1-836d-4efd-be8d-87440d790225",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "70bf3510-c1d5-4e3b-ba9e-0e95b7dd1eb5"
        },
        "item": {
          "id": "7867f512-0a6c-4058-b402-0f5b3bd6c7e1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1efcb175-f08c-4ae4-879b-a51459861622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8c0d8a-9b76-447a-a65f-d5d0bd02cecf",
        "cursor": {
          "ref": "35b39c14-d9f0-4500-bd60-0d4a2ce49faa",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "04395e59-2439-47fa-95c5-bfff813a14f5"
        },
        "item": {
          "id": "2d8c0d8a-9b76-447a-a65f-d5d0bd02cecf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a20dc936-4451-4749-a671-faed0636c08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85720d0-04af-4ae8-81de-2d9eb23fca3e",
        "cursor": {
          "ref": "de5543b3-2ced-4f27-84dd-e337b6140895",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8d461416-bd63-49d2-b7e1-8d0131aa3b72"
        },
        "item": {
          "id": "a85720d0-04af-4ae8-81de-2d9eb23fca3e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c114a07c-624b-4af2-bc9d-0b555c71f3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd115051-a89a-4d97-9710-1fd2fa49c55f",
        "cursor": {
          "ref": "f1b3c226-7ed2-4820-89f1-ba3285853600",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "af8942ab-8080-47e3-b7ea-f3924ba2736b"
        },
        "item": {
          "id": "cd115051-a89a-4d97-9710-1fd2fa49c55f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3a6a088a-7346-4989-b7fd-29d541596e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d598aa-03ba-401c-8b46-eb3364f32b6f",
        "cursor": {
          "ref": "ab69308c-38ca-4739-b765-757df276e5de",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b78f037e-ddc8-4915-b65f-4a87f81c35ad"
        },
        "item": {
          "id": "65d598aa-03ba-401c-8b46-eb3364f32b6f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "997d1ae8-6c7e-472e-8117-b79071e39267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5ab6a9-f0d4-4d0f-8ffc-df55d8e15fbe",
        "cursor": {
          "ref": "45d926c2-6ed8-4f8e-b8d9-48892c369dfb",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8ddc54c3-e85a-497f-9060-444af0d2584a"
        },
        "item": {
          "id": "1d5ab6a9-f0d4-4d0f-8ffc-df55d8e15fbe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e6c990e8-fa8a-4ce9-a195-40186216f380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54726b6-e18d-4ba6-8dbf-46766bc71b32",
        "cursor": {
          "ref": "50e4f6d3-96b6-4964-a1d7-5bd9ef1ed4ec",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b222665c-75d3-4165-9b63-4cd2df90ff09"
        },
        "item": {
          "id": "b54726b6-e18d-4ba6-8dbf-46766bc71b32",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0804a362-21c0-4de5-8a2e-c44390409061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b34167-3e1d-44ca-9cdc-00af4d5d9e74",
        "cursor": {
          "ref": "92d50bd2-6171-4081-abab-e7d4fd60fb87",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a372ed61-4bab-4327-bbe5-12af1ca4a626"
        },
        "item": {
          "id": "80b34167-3e1d-44ca-9cdc-00af4d5d9e74",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5013d434-26b0-4346-b7f9-952d608eb142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a818f0-5d0c-47e1-b43f-2d1a4332323c",
        "cursor": {
          "ref": "5dd62864-ad84-4fa7-bfd7-71794183201d",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d1ad3b4b-3301-4eb9-9a45-b6bdb41587fe"
        },
        "item": {
          "id": "f7a818f0-5d0c-47e1-b43f-2d1a4332323c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f0163399-c371-4063-94e5-18678a9313b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd353550-e735-4277-85b7-f2f8c1bfb640",
        "cursor": {
          "ref": "f07a3b75-6353-45e4-8bdc-84594868e396",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7e7e70ae-c650-4b26-82e1-d75c9690d405"
        },
        "item": {
          "id": "dd353550-e735-4277-85b7-f2f8c1bfb640",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "063b3a37-0073-4703-a826-35243ff60573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a895b7-1b3e-40c0-bc32-6db3d5f54b4b",
        "cursor": {
          "ref": "3b9a9e39-29c8-4d00-86e9-9acb19004b50",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4fa4d3f4-0c58-4986-b851-f33813e12007"
        },
        "item": {
          "id": "e9a895b7-1b3e-40c0-bc32-6db3d5f54b4b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e8c6768e-674a-4426-82d9-5929aaf31a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64088645-b139-49ee-8be2-6c4b546f2170",
        "cursor": {
          "ref": "c0faf268-f0e9-4453-a69c-d9cf9c20910a",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dac702b2-6de9-4b9d-a4b8-521eea9f1497"
        },
        "item": {
          "id": "64088645-b139-49ee-8be2-6c4b546f2170",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d01b47d1-9e66-453d-8962-b51be3a3cea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86406c70-3104-4e22-a740-1c44802c2e11",
        "cursor": {
          "ref": "684a328f-7261-4cd5-87e0-d95928513687",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "989ed1a1-d1dd-48a1-8976-8096e6551396"
        },
        "item": {
          "id": "86406c70-3104-4e22-a740-1c44802c2e11",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dca73c36-59a0-4329-aff2-0e8a1e6b3205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec117c7-2893-405c-8442-491947883f6e",
        "cursor": {
          "ref": "89c7440c-0881-47c3-8020-ee37c55b2559",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bb9636c8-656a-4c79-8ad6-731b26eb1f81"
        },
        "item": {
          "id": "9ec117c7-2893-405c-8442-491947883f6e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7796229d-8c86-47a2-8b5d-8366b4ed8054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4008bc-92a4-4866-b3c6-8707fe0c5fee",
        "cursor": {
          "ref": "91606b78-cab0-4b15-9e70-ffcce0f82995",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b839a712-43ee-4432-b197-d6af9c797d91"
        },
        "item": {
          "id": "5a4008bc-92a4-4866-b3c6-8707fe0c5fee",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f3c696f9-7628-469d-8217-f45f1668b4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f148b126-7c10-4bf6-802b-0d80ffdb1ba0",
        "cursor": {
          "ref": "cbad02cd-cf6b-4306-bb99-2b2ce32cf8a9",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4d5a1a27-17f7-4826-a3b7-202c2de88eba"
        },
        "item": {
          "id": "f148b126-7c10-4bf6-802b-0d80ffdb1ba0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ac898156-68d5-4a3c-b95a-dd1ba31883ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c30fa99-c9c0-4af1-8304-9eee096c257b",
        "cursor": {
          "ref": "4488505b-9c19-4fd4-b057-60b0f72ef264",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "945c1088-22cf-4ed2-9276-9a302f51bc0b"
        },
        "item": {
          "id": "4c30fa99-c9c0-4af1-8304-9eee096c257b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f40f02fa-afd6-4868-a9ba-6461e4029391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc49073-7490-4667-93a1-9d132a6af643",
        "cursor": {
          "ref": "fd0a9673-c07d-4766-82da-d31255206f42",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1eda79e4-15dc-4580-90f7-4cff924398f5"
        },
        "item": {
          "id": "3dc49073-7490-4667-93a1-9d132a6af643",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6c7a78f7-4486-46f2-82e2-f477eff79e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18662adf-92a1-45f3-9d4f-02be1f99e010",
        "cursor": {
          "ref": "9d5766ea-a3d8-4a56-880e-20457816882b",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4a0bd902-b445-4ea7-9187-e0eed5858df8"
        },
        "item": {
          "id": "18662adf-92a1-45f3-9d4f-02be1f99e010",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "51360e2d-4183-4cc6-925e-fda47f561154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c00c5fb-aa72-4705-b64e-55a214ea30c3",
        "cursor": {
          "ref": "dec269e2-607c-4909-971c-dbe92948076f",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f991a76e-154f-4b46-9087-d2d2b5822704"
        },
        "item": {
          "id": "9c00c5fb-aa72-4705-b64e-55a214ea30c3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "de1287a5-5ad4-486b-94f9-10d4209bbecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001c1139-bd18-49c0-959e-88584fe1118b",
        "cursor": {
          "ref": "9c84d11c-a20a-4693-b0e4-0de01c2bc175",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d5d5aac0-5248-44a3-8340-45e117b876e8"
        },
        "item": {
          "id": "001c1139-bd18-49c0-959e-88584fe1118b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d550af37-957f-4007-a99f-8d71af5e0812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc156fcb-37d2-47f1-a3c0-b7eeb31c5dfd",
        "cursor": {
          "ref": "b710e12b-28ad-4625-864e-e7bef7a2f469",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b44775d2-6df3-4650-80fc-e94278b146a1"
        },
        "item": {
          "id": "bc156fcb-37d2-47f1-a3c0-b7eeb31c5dfd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a772a61d-ed44-414a-af81-c489867b6d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4d6e66-603a-431b-b34f-7a4c93e32015",
        "cursor": {
          "ref": "0380e9f7-7ce2-499d-a512-eb49cc22d458",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dbff0e05-8afa-4674-8fcf-a55b783009aa"
        },
        "item": {
          "id": "3a4d6e66-603a-431b-b34f-7a4c93e32015",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "072cea99-2d67-4e1c-b955-7f64b01ddc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d6e47d-21e6-4119-8d31-ba440878cc49",
        "cursor": {
          "ref": "2f937f1f-dd81-4a5e-9271-26724488c456",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6f7c16ab-126c-422a-92c4-c516b6cb6056"
        },
        "item": {
          "id": "42d6e47d-21e6-4119-8d31-ba440878cc49",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6415601b-83db-4f08-bef0-1070265ca173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5931b707-c5b0-4ff4-9bc3-aabd2feb3f8c",
        "cursor": {
          "ref": "a9e3a372-ad28-4061-a7a1-963cebd1f2f1",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "111e707f-a0ae-4532-a60a-6f21dd0c181b"
        },
        "item": {
          "id": "5931b707-c5b0-4ff4-9bc3-aabd2feb3f8c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4eb5309b-fda4-4551-8da4-25c8a7a0dca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8555f3-45f6-406f-88ab-79a3d37a26cb",
        "cursor": {
          "ref": "a829034d-b703-480b-8ad7-e7c4cf81ed3c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f25856d2-33b5-4c73-a5b3-972c1a54de20"
        },
        "item": {
          "id": "ab8555f3-45f6-406f-88ab-79a3d37a26cb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1da4e8b0-56a2-4679-a9df-ae2027e25dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d68e8b-7064-473a-8fc8-f32757bba17d",
        "cursor": {
          "ref": "12e6cf2f-ec05-41ff-a8ec-db686f84b979",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8dfa7efd-6ee5-499d-9be3-cb51cdcd2c20"
        },
        "item": {
          "id": "81d68e8b-7064-473a-8fc8-f32757bba17d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "867fe608-48d3-440c-8e00-234d6b69ccec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf4bca5-b2c6-48af-a5f1-6d57f58ed259",
        "cursor": {
          "ref": "5b10ffc5-d98c-46c7-8184-78bb9ba69c3b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "80570fa7-451c-41e5-8df6-178eda12cf09"
        },
        "item": {
          "id": "9cf4bca5-b2c6-48af-a5f1-6d57f58ed259",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9800e296-46e3-49cb-9599-77599bcb94a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104ea342-4528-425d-8d93-534dc9883cb3",
        "cursor": {
          "ref": "acc518df-2d72-4ac4-a9f7-75168cda6f6b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f7e5c405-206a-459b-a221-2483388e5465"
        },
        "item": {
          "id": "104ea342-4528-425d-8d93-534dc9883cb3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e7b67fe8-c2b0-4b9d-b7d3-d08769a5a756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d0d0c0-7444-49d2-8ac0-b48e3be12b19",
        "cursor": {
          "ref": "e1d64477-21b8-457e-809a-203cdf1f071f",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "12a7dcaf-73c3-443b-8a0f-57d78072c20d"
        },
        "item": {
          "id": "63d0d0c0-7444-49d2-8ac0-b48e3be12b19",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c07dcdec-a2ec-4482-9e70-800561227913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fc9243-b393-4115-96da-1030fd12d010",
        "cursor": {
          "ref": "6832bc4f-12cc-47ee-9497-bf23c8456923",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0f69df4c-5437-45cf-8507-89f1303b8430"
        },
        "item": {
          "id": "f2fc9243-b393-4115-96da-1030fd12d010",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1211bc0c-87aa-45d3-a24c-98f659663274",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a660cc-4d38-446a-a493-d232549cb238",
        "cursor": {
          "ref": "00a89752-757e-4b4c-b4e1-5db579a6d5d4",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9edaefb1-ad92-409c-b307-fed9e591a4fb"
        },
        "item": {
          "id": "b9a660cc-4d38-446a-a493-d232549cb238",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "9f88e0d6-ae63-46f4-964a-338dfe7738c9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 51,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1f7d26-7d94-4bba-ab1f-a94b1abda5be",
        "cursor": {
          "ref": "521cf698-3a72-4933-942e-92ce5a7ec331",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0d019460-3be4-415c-bfe4-da529e05e14f"
        },
        "item": {
          "id": "be1f7d26-7d94-4bba-ab1f-a94b1abda5be",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9fd26962-04e1-43c5-9e30-e6feacb2c77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1f7d26-7d94-4bba-ab1f-a94b1abda5be",
        "cursor": {
          "ref": "521cf698-3a72-4933-942e-92ce5a7ec331",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0d019460-3be4-415c-bfe4-da529e05e14f"
        },
        "item": {
          "id": "be1f7d26-7d94-4bba-ab1f-a94b1abda5be",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9fd26962-04e1-43c5-9e30-e6feacb2c77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6e530f-85a6-4a8e-8289-1789186be5b4",
        "cursor": {
          "ref": "1e162ff6-29dc-468b-8439-5b0eb9feaeaf",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "43078327-3121-4135-ad2d-cbd11fc1474b"
        },
        "item": {
          "id": "1a6e530f-85a6-4a8e-8289-1789186be5b4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "eb939521-4c10-407c-8817-381fb00a96f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a9a6b6-76d7-4183-8664-aa465d323ed2",
        "cursor": {
          "ref": "16fafa19-2be0-49b8-8e54-45b8f2be983e",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bbfe1b7f-b047-4660-9e07-3b22039b9cca"
        },
        "item": {
          "id": "02a9a6b6-76d7-4183-8664-aa465d323ed2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "330240ac-b0f0-479d-a3da-5c8d2c9fa4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a721910-2323-449d-a969-77195dbb8752",
        "cursor": {
          "ref": "9b031cf5-0f25-4faa-b45d-88c71061d135",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e7417a87-0810-4306-8955-ff0386e1e4b2"
        },
        "item": {
          "id": "1a721910-2323-449d-a969-77195dbb8752",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3090a64a-7737-49ab-b9b4-4c60c7fd5717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd7c4bf-611b-4e56-bab7-1a75904d300a",
        "cursor": {
          "ref": "e30c2bcf-f7de-4256-a5ff-52a21ba50731",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "75d23690-677e-43d4-b2fc-4d8f61b1f192"
        },
        "item": {
          "id": "5cd7c4bf-611b-4e56-bab7-1a75904d300a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dd01bfdf-5d3d-4116-9d0e-ccfb77e01880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f52d2b-3717-429f-bc34-7c2b1d2b5282",
        "cursor": {
          "ref": "bad9005b-1fa7-4ed3-b858-53b87a3cb261",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "21280a2e-d2e2-4ddf-ad89-609001b80336"
        },
        "item": {
          "id": "d4f52d2b-3717-429f-bc34-7c2b1d2b5282",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ce6e28dc-b0a0-4559-b272-40b4cf0c3324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a792d4-97e6-45db-9b1d-a86281f8eb2f",
        "cursor": {
          "ref": "e6349c40-fbd7-49fb-b4ab-d9fd915d6949",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "091d3a83-47b4-4a59-9e4e-b43eb3e39aa2"
        },
        "item": {
          "id": "86a792d4-97e6-45db-9b1d-a86281f8eb2f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bc88aea7-ecd1-4b4f-a010-f16337f6aad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b68039f-3534-4749-b941-9fc5a450545d",
        "cursor": {
          "ref": "fa6d9543-767c-48c0-b2b1-8a20ba6afb3d",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e9179e6e-45b5-4d71-95a8-79041658c064"
        },
        "item": {
          "id": "6b68039f-3534-4749-b941-9fc5a450545d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2d2acd9c-def0-4f15-a598-89eff6c9efdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcf2efd-5b90-4a9f-92e0-7e59fd8cddca",
        "cursor": {
          "ref": "50df3459-48d6-4dd6-b6a7-a2b95ae60806",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4b7a4762-0cbb-474c-a1fb-c2add6c6ea03"
        },
        "item": {
          "id": "3bcf2efd-5b90-4a9f-92e0-7e59fd8cddca",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ca62608c-b931-49ca-bef8-a90a4f695874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109a556c-864b-49a4-8a78-e4c46c1a0f99",
        "cursor": {
          "ref": "0ddc4609-2d0e-44bb-b836-6d0d2c778374",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0ec93d8a-c46a-4689-a4b9-a34dcaf888dc"
        },
        "item": {
          "id": "109a556c-864b-49a4-8a78-e4c46c1a0f99",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "eeeeabc0-ab83-4dc1-8d06-cb3dc5e17a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7420b041-88e9-4c6f-b1da-778d945b8eac",
        "cursor": {
          "ref": "52a94e9f-f216-4c37-b185-1f26bf898245",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f6cff704-4d5f-4a94-b70a-d0eb319e723b"
        },
        "item": {
          "id": "7420b041-88e9-4c6f-b1da-778d945b8eac",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e5bb1260-f069-4a28-a0f1-86d09e211fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40553ad1-6bf6-450e-9e8f-866173e694b8",
        "cursor": {
          "ref": "ed897ac2-589e-4614-b7c3-2040a5defeae",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fa1e7a8d-9ddb-4fbd-bba4-b40d2a1e6152"
        },
        "item": {
          "id": "40553ad1-6bf6-450e-9e8f-866173e694b8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ba68789f-b74c-40c4-800c-01656f683ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9631c6-c810-4c65-94d3-d5cd0a409d40",
        "cursor": {
          "ref": "a207a133-9cad-497c-aedd-b2b715b61681",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "76b3289f-c4c0-45b8-8788-b74258af137b"
        },
        "item": {
          "id": "aa9631c6-c810-4c65-94d3-d5cd0a409d40",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "caa434fb-19bb-4db4-8d49-cbf0b47a4f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a49c61-778c-44ce-bd4f-bd3ef5f88215",
        "cursor": {
          "ref": "49e938ed-5f16-4e7a-9e6e-1206a47cc9dc",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fd8f50c7-1fdc-4bd8-88db-d40e6f8a6c1b"
        },
        "item": {
          "id": "51a49c61-778c-44ce-bd4f-bd3ef5f88215",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "37eb520c-d296-4206-9f9f-d336c34f15ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb37cfb-2763-4bf7-91a9-fb7d6fa288b8",
        "cursor": {
          "ref": "24f80526-ecf4-466e-9655-5fbd51d23a12",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "580de4b7-8495-4b77-a00d-1e48960529e4"
        },
        "item": {
          "id": "3bb37cfb-2763-4bf7-91a9-fb7d6fa288b8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1f146610-066d-4b77-9f71-a3da8fb3983f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d220049-e5c4-4eb8-b2de-69c7b0364103",
        "cursor": {
          "ref": "140e9bd0-e8aa-470f-b8e4-38298879ab2c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cb0ef0b9-2d9a-40ad-a48b-9db3d0cc851e"
        },
        "item": {
          "id": "5d220049-e5c4-4eb8-b2de-69c7b0364103",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ad2d6b55-f1bf-4d2a-8dfc-bd176b03800b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d990b5-24af-4768-a532-bb70d0f06dc8",
        "cursor": {
          "ref": "e289e358-8ad8-425e-bfdc-3517df532a9e",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d89bfa59-f483-4908-b2bb-b3627896ae15"
        },
        "item": {
          "id": "16d990b5-24af-4768-a532-bb70d0f06dc8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d6f6f92e-0e59-4074-9be2-7e500b6805cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5ca18e-b419-412f-b172-59fd80c71969",
        "cursor": {
          "ref": "57a32b48-a96d-4fc0-8be5-f25d3b4583dd",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "39327837-16f2-4512-bc9b-4e0f32b93631"
        },
        "item": {
          "id": "6c5ca18e-b419-412f-b172-59fd80c71969",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "60b15065-8920-4136-ada5-68a2f1035078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a213f3-06ec-4eaa-a0cd-2d619a43cc0e",
        "cursor": {
          "ref": "3e2e4127-1b2f-42d5-ace0-4a8fecf3a0fb",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a1e41e5d-fe35-418a-a7cc-2e5e7bedee46"
        },
        "item": {
          "id": "08a213f3-06ec-4eaa-a0cd-2d619a43cc0e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "abe27c6c-93da-4db6-b7f2-75b3b7b657c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5722a74a-7afd-4e5c-af74-1e1316ccfcdf",
        "cursor": {
          "ref": "9696307c-9b02-4daa-a87f-82713470c278",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f958e9f8-5e45-4dab-9341-93a4be17603d"
        },
        "item": {
          "id": "5722a74a-7afd-4e5c-af74-1e1316ccfcdf",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "252a2c65-1c15-42c4-97b0-24ab6ef0da4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d1ecaa-4229-459a-b1eb-309899d4d6cd",
        "cursor": {
          "ref": "7da0b8cb-10c0-4b1d-b1b9-0fc0a35f8872",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5413bda7-f1a1-4ae9-a0aa-d51eb5a7c3e6"
        },
        "item": {
          "id": "80d1ecaa-4229-459a-b1eb-309899d4d6cd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c374e658-52a6-4577-b2e9-2ec46df71c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c66582-81e0-4112-8153-7153625f8ea9",
        "cursor": {
          "ref": "392d4403-dc77-4758-85fb-22aac9a7327c",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2894fa56-92ca-4f98-a20b-80cad02a06fd"
        },
        "item": {
          "id": "e6c66582-81e0-4112-8153-7153625f8ea9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b09354bd-0950-4cd5-aafe-02e7f2154286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e70201-00e1-4cc8-998c-767bfd8d503d",
        "cursor": {
          "ref": "2af935db-39b5-49a9-bfef-53ad45ace05e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6b659260-ea2d-4739-8221-51022b3fd2b1"
        },
        "item": {
          "id": "97e70201-00e1-4cc8-998c-767bfd8d503d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d2b242a1-8bb5-4f2c-98d7-3a4670a22927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f942c8-a4e7-4fc1-b10a-f2f1ade6eedc",
        "cursor": {
          "ref": "ae5a40a8-9fc1-46e2-bec9-d075bd5d4405",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "11caa41c-8c26-4436-b949-f9e19fb38051"
        },
        "item": {
          "id": "d7f942c8-a4e7-4fc1-b10a-f2f1ade6eedc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4b204b2b-4308-4b7e-981b-59aefaefab93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c764da0-75da-4c3f-8477-875684d95e78",
        "cursor": {
          "ref": "ec4cfb48-d486-4d53-b631-f1b095cb8190",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2a64659d-27b3-4a90-abb1-62b4bf83f665"
        },
        "item": {
          "id": "1c764da0-75da-4c3f-8477-875684d95e78",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "717a775f-9839-4d4d-b312-c40cfa854b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458fe998-f3d5-4eb5-8639-07229f131fb8",
        "cursor": {
          "ref": "4187571e-cd3d-4565-bf47-fdf9609974ac",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "732f3a6f-0ce1-4a47-ab0d-399338c0b7ac"
        },
        "item": {
          "id": "458fe998-f3d5-4eb5-8639-07229f131fb8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "71f35f70-7bdc-4a4b-b49d-91ddce717296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbd70b1-1684-41a5-8979-8ccabd0706ed",
        "cursor": {
          "ref": "d60044e7-7c26-4eca-a877-1930be5f0472",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c0a469f3-f0b9-4fb9-95a9-4a2bd59fcda0"
        },
        "item": {
          "id": "1bbd70b1-1684-41a5-8979-8ccabd0706ed",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6f220aa5-fa75-460c-ba4a-36f5007c4747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73da95c-d902-4581-8837-32d35948251e",
        "cursor": {
          "ref": "daedd2d8-9fca-4b95-a290-3380638b4e2f",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4a207588-b996-4021-a22d-16ddabb523d4"
        },
        "item": {
          "id": "a73da95c-d902-4581-8837-32d35948251e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "61a41560-1862-4aa3-9400-b76ad871d837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bb4997-1c00-420c-ab15-8006e48dc801",
        "cursor": {
          "ref": "e2f50bb2-0777-4d3c-8e13-ed97c0c127b6",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7b5cc120-0e92-48bf-97da-7414584c43dc"
        },
        "item": {
          "id": "25bb4997-1c00-420c-ab15-8006e48dc801",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b25bbb46-ca2f-4a0c-b5ad-12a7caebd5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d74e5de-7ccf-45d0-801a-34e25cbb1331",
        "cursor": {
          "ref": "8e8d239a-ad12-466a-8034-58f03b28c00c",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cb97a8ef-ad75-46eb-b9a0-e74bdfec5ea3"
        },
        "item": {
          "id": "6d74e5de-7ccf-45d0-801a-34e25cbb1331",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8e5da80d-f95a-4ed6-8c39-ed05ecb928d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6a0e1d-6379-40f2-8090-f854c504d8c9",
        "cursor": {
          "ref": "27884c01-13ed-468b-b891-2680ce62f26b",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fd5b40c5-a848-4438-9d40-71186fe09372"
        },
        "item": {
          "id": "ee6a0e1d-6379-40f2-8090-f854c504d8c9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e67e6d7c-2a27-4ea8-84ab-b74a83839252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fbf538-90f1-489f-a7c2-6f097fce8844",
        "cursor": {
          "ref": "eac19fba-7a41-44c3-bc7c-100c870ee62c",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ac114756-c813-47e5-bb51-b0a64d38aa65"
        },
        "item": {
          "id": "a5fbf538-90f1-489f-a7c2-6f097fce8844",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3ff57ab7-1378-4319-81c0-ad710417d0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105dbc39-7b79-4940-b818-807091128d53",
        "cursor": {
          "ref": "c8bec947-9b91-4800-a942-2db65b56a5b7",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "db24da04-621b-4fe5-bddf-3e6f305f000e"
        },
        "item": {
          "id": "105dbc39-7b79-4940-b818-807091128d53",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2a9fc364-ad0a-4c91-b6b8-f31c00d2f9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ce8aa6-515e-4a02-89ea-7364dbb800de",
        "cursor": {
          "ref": "f12c28d5-87e6-4820-a3e9-1d19f92134d7",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c3df3a10-3244-4ff0-8ba8-a003afd25e1b"
        },
        "item": {
          "id": "08ce8aa6-515e-4a02-89ea-7364dbb800de",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "eff659a8-6807-419f-a2be-c434b33ca5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa04a083-f331-47c6-9bdd-e1dd149c18fc",
        "cursor": {
          "ref": "b8654424-238e-445d-a66f-dea0fe4caf50",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "55baeb01-1b29-4e07-824d-bfa88ebc6478"
        },
        "item": {
          "id": "fa04a083-f331-47c6-9bdd-e1dd149c18fc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3643a550-755d-41fb-83fb-e1d3dc256d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb36028-fc58-44e0-886e-54e372e3715f",
        "cursor": {
          "ref": "2a031ac6-808c-44ea-a837-23834aec7ba5",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "22d3bc86-bfe9-4723-9d42-7dad51f3af48"
        },
        "item": {
          "id": "0bb36028-fc58-44e0-886e-54e372e3715f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "553b2961-1495-419c-a0af-91cdca7f8d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c162d941-c809-422d-85c5-6d938d6d0312",
        "cursor": {
          "ref": "13a34e77-5309-4f32-b720-4813a316c3dc",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b96ceb0b-61d9-4387-b5d9-70e0cfcada4d"
        },
        "item": {
          "id": "c162d941-c809-422d-85c5-6d938d6d0312",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "76e5aa7e-55ea-4e5e-b617-5ea592d9d3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a39a8b-1110-4a4e-bd53-ee432e541b73",
        "cursor": {
          "ref": "29baaa66-4cb8-4db2-a6be-6e9fc1fbf279",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "beb480ba-2da4-4c81-8dcf-e886d348d9dd"
        },
        "item": {
          "id": "63a39a8b-1110-4a4e-bd53-ee432e541b73",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9d6c55fd-f224-4f1f-b42a-c0e52cbd09b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f4c292-99d3-44fb-9ecc-9be93080cd28",
        "cursor": {
          "ref": "1b7d5726-551b-4829-8f21-ce3ae0494933",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "56d1a2da-02af-41d6-b665-b607cbe302d9"
        },
        "item": {
          "id": "c2f4c292-99d3-44fb-9ecc-9be93080cd28",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9f12a184-05eb-4ee3-9d21-6dcac4b00e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38e71e9-ff01-476e-8e39-f50feda88683",
        "cursor": {
          "ref": "545fa397-06f8-476f-a9da-8d4da56b2c29",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2b23aae5-4ec7-4b0c-a6ea-99febe911149"
        },
        "item": {
          "id": "a38e71e9-ff01-476e-8e39-f50feda88683",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fa72032e-b228-412f-958a-b7b76bbec087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8846d425-386d-4b71-a956-02a67ecfc3a0",
        "cursor": {
          "ref": "3796a1c6-8999-48af-9fa1-f3b2f6e8f3a3",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ca957d0b-d8e1-4137-9ad0-c38d61030107"
        },
        "item": {
          "id": "8846d425-386d-4b71-a956-02a67ecfc3a0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4bfc2c1d-1848-4f16-8e9e-bd401aa62455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c35b434-f627-43ae-9c93-52bd90b561a1",
        "cursor": {
          "ref": "01333f55-05a1-471f-8412-c8018decd3c6",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "203029ed-bb67-4d86-a120-e53314b49e36"
        },
        "item": {
          "id": "7c35b434-f627-43ae-9c93-52bd90b561a1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "01a4067a-c26c-4956-8972-179e3fdfc7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d60e2a-19ea-41c2-97db-93a0d5774094",
        "cursor": {
          "ref": "6c3fc6ef-33c6-43e1-b69e-1efd62b0656f",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "67868a81-358c-4450-9d9e-485166793fc9"
        },
        "item": {
          "id": "b0d60e2a-19ea-41c2-97db-93a0d5774094",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "80c09407-22af-4818-8546-76c7f4e766cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef11cbc-7461-43c7-b4c9-4f5cfc26b7ca",
        "cursor": {
          "ref": "7e76466c-611b-447a-8204-eb02c70d16c0",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f4bd9714-5b37-45a5-b5a0-87fe11d090db"
        },
        "item": {
          "id": "9ef11cbc-7461-43c7-b4c9-4f5cfc26b7ca",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6f8c7791-d7a6-47f7-b2b3-a00af7006b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a9a361-02b8-4b87-b5ac-3f5323587651",
        "cursor": {
          "ref": "71346129-b325-4f57-879c-39c641939887",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0f873cd0-a3a0-4ceb-821a-07e18555512d"
        },
        "item": {
          "id": "f8a9a361-02b8-4b87-b5ac-3f5323587651",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "422890b0-2d0a-4b58-b037-e04c224d19d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0b2398-fc96-42b6-92a3-987cefcb1a64",
        "cursor": {
          "ref": "6bc806db-fb3e-401a-828c-eca252681fa6",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b59a0f79-fcf5-475b-b1e7-5df16545d986"
        },
        "item": {
          "id": "4e0b2398-fc96-42b6-92a3-987cefcb1a64",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7a3e3fa7-7ab8-419d-b89c-a6b918158305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0ed4e0-80b3-40e4-abb4-1dac18cb5310",
        "cursor": {
          "ref": "49099022-9cae-4daa-a32b-4d3b421726bd",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2a793879-be5d-4bd9-85a1-ad6019501e21"
        },
        "item": {
          "id": "df0ed4e0-80b3-40e4-abb4-1dac18cb5310",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2f01d863-46b4-4393-9485-cc04301c85c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cbfb7a-7f39-4c60-88b8-b58e02517eb8",
        "cursor": {
          "ref": "1887a1da-47fc-4844-ba12-c7fd95b4d53b",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ab9d82e2-4d97-43a2-a280-ef263ecc8e9a"
        },
        "item": {
          "id": "87cbfb7a-7f39-4c60-88b8-b58e02517eb8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2c5ce1c5-7c63-4f75-9edb-38a0fd206e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6452f8-f16a-4140-81bb-84635c7a079b",
        "cursor": {
          "ref": "02e6edf9-8e2b-451f-95b4-51f121fd514f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dedc9c1b-339e-4623-90f0-b8b0a2603438"
        },
        "item": {
          "id": "4f6452f8-f16a-4140-81bb-84635c7a079b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4ab0dd9d-6d10-4b78-8ce0-a882cf670390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c4aa15-92be-4e9e-94b3-cf732152ba52",
        "cursor": {
          "ref": "68cfd397-d9ea-47a4-82be-c35c28e53fe2",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ade1e0be-ebf6-4ec6-9924-2e5bebca21a0"
        },
        "item": {
          "id": "80c4aa15-92be-4e9e-94b3-cf732152ba52",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dbd5bf45-e4e7-4f40-9740-d95cfa0346fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988ae5dc-6aa7-4859-9f78-136c93b2739f",
        "cursor": {
          "ref": "226ca6ed-2c09-4980-b785-2a36ea1fda18",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "31ae5caa-0f7f-4a13-bc90-38ba41cd941c"
        },
        "item": {
          "id": "988ae5dc-6aa7-4859-9f78-136c93b2739f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e53f15a3-8aef-465d-bb6f-dfc3a5eeb42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7449f3-dd08-49d2-9c5d-3d4da8826715",
        "cursor": {
          "ref": "31925a42-6ba5-4699-b809-afc7b4639af1",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7a97103a-a22e-4a8b-9416-e5f446376ce7"
        },
        "item": {
          "id": "3d7449f3-dd08-49d2-9c5d-3d4da8826715",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dd3f5c0b-2189-4671-be03-a0df68ce8eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40a1dbd-a2c5-4d7d-ac24-a117aba65a47",
        "cursor": {
          "ref": "b0c02254-a90b-4802-a040-f3569599c8ec",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1bff0f71-58e4-4d58-9fbf-1e048d22179b"
        },
        "item": {
          "id": "b40a1dbd-a2c5-4d7d-ac24-a117aba65a47",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9ab66073-a161-40a6-b33c-ef17c8ee6164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c622d1d-a325-4509-891f-97d2971d860b",
        "cursor": {
          "ref": "cdb8a674-4ad6-46c8-b281-a470ddaa44b3",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7728b1e9-459a-4945-9e5d-e959ae659b32"
        },
        "item": {
          "id": "5c622d1d-a325-4509-891f-97d2971d860b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aca63708-a068-4050-bedb-0f685d1d921e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6581b80-89c7-4fcb-90f3-f855d3510e03",
        "cursor": {
          "ref": "91d2b952-8647-448f-afe3-cdf9d05a8c62",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c442c445-ab25-4443-98f4-fe46e078c6e1"
        },
        "item": {
          "id": "b6581b80-89c7-4fcb-90f3-f855d3510e03",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "59ceb599-5004-44fe-af37-ffb150dc1adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf250b2-e8cb-4c75-a191-77bb052fc806",
        "cursor": {
          "ref": "1897325a-2afe-485d-8889-43569f6d7948",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bfe9c3dd-cbf1-4a59-afc9-40134cdc89ec"
        },
        "item": {
          "id": "fdf250b2-e8cb-4c75-a191-77bb052fc806",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "37d688e0-9b1c-40de-87aa-835f0a198505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a86139-e790-49ce-a983-066b2ff6fa1e",
        "cursor": {
          "ref": "8bf33373-a517-44a4-9450-a8eb8f88a687",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fbe3b3eb-f13b-490b-aa95-870847872cba"
        },
        "item": {
          "id": "12a86139-e790-49ce-a983-066b2ff6fa1e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "99ff6995-6882-400b-8394-2a0ffac5834b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbcef3d-31c5-4a6a-80a1-f7a54df56c04",
        "cursor": {
          "ref": "40ad62d3-fba3-4f53-9b71-efd7e307e1f5",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "74756af8-958e-4e1c-be13-c272940dc1fe"
        },
        "item": {
          "id": "bbbcef3d-31c5-4a6a-80a1-f7a54df56c04",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ab8e4adf-7c2c-440f-aec3-d3af5dd97279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03917aae-5529-4a16-970d-537b48dd4be7",
        "cursor": {
          "ref": "9019942d-19d4-46fd-b34f-d3e86041f266",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "470c2dc8-def4-45ff-8318-5c2f133fae77"
        },
        "item": {
          "id": "03917aae-5529-4a16-970d-537b48dd4be7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7653209f-b33d-469a-b031-bbc72f2fd553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0891dc92-8fba-47ee-bbea-dbc54f4b64e6",
        "cursor": {
          "ref": "d1e404f9-8776-4e74-a197-dd95a14ce415",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0db3163d-542f-4f8d-8eed-fcd1095840e9"
        },
        "item": {
          "id": "0891dc92-8fba-47ee-bbea-dbc54f4b64e6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8ccc65d6-59ba-4116-b062-642cc6de6a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cee6255-0a9b-42cb-8435-83b8e140c18a",
        "cursor": {
          "ref": "c46510de-cf83-4bf4-98c1-f08514e88f6c",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "595a0a2a-263a-46c2-a6ea-1ec446a26b48"
        },
        "item": {
          "id": "8cee6255-0a9b-42cb-8435-83b8e140c18a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9c8185c1-f070-4557-a561-7c387b993089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d051abc-c81c-4e3d-8488-106a702daf61",
        "cursor": {
          "ref": "11ce06b0-d231-468f-abc9-67e92020f8e4",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d39dd79c-50dd-4aae-ae37-860efe92023b"
        },
        "item": {
          "id": "2d051abc-c81c-4e3d-8488-106a702daf61",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1ddb2578-3865-4614-9ead-65b507d3bdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb297ade-7124-4b50-a585-2cca985d74ab",
        "cursor": {
          "ref": "20b7908f-9175-438d-96ab-18194508ca83",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "43ff4613-656a-427d-a212-1299f2c5d19a"
        },
        "item": {
          "id": "eb297ade-7124-4b50-a585-2cca985d74ab",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "71c58aca-9a9a-4335-beb5-085daeea1f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71ff9ae-9a81-4c85-b9b0-5de0b4ba6072",
        "cursor": {
          "ref": "05ad1883-0f99-45a2-b334-999c1edb268c",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bd8a74e3-0862-42a6-ae28-77b4dd5df184"
        },
        "item": {
          "id": "f71ff9ae-9a81-4c85-b9b0-5de0b4ba6072",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3d7c36fe-6ec9-475b-b63e-abd43b1c2e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66edb3c2-2c0b-4158-bc54-cad643f7809f",
        "cursor": {
          "ref": "4e2ece1b-d3e3-4fa6-9513-a53de35d6795",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fcb4a59e-98e0-4fcf-bdb7-ed8d3ce02ddb"
        },
        "item": {
          "id": "66edb3c2-2c0b-4158-bc54-cad643f7809f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "15ba01c1-04fb-41df-b6b4-d059abbfe46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523b531e-bb63-44fe-974a-8d0febf827e8",
        "cursor": {
          "ref": "22e719c9-b3af-4bde-96e3-1735e9e9e4ea",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5d2faf0a-13bd-470d-848f-dc3510491cf5"
        },
        "item": {
          "id": "523b531e-bb63-44fe-974a-8d0febf827e8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "074788de-bfd5-4e2f-b719-ebaf6ec1b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa0b7c7-87a2-45d9-b247-4fbf4c7f4f00",
        "cursor": {
          "ref": "34ccb653-a619-4ad8-a72b-d7f180acc428",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4b4c4925-20f9-48ea-a8e6-97a5d335a1f5"
        },
        "item": {
          "id": "efa0b7c7-87a2-45d9-b247-4fbf4c7f4f00",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "40eb8852-a1d2-4523-bcc5-e865062f06fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a59a165-a462-48c8-866a-726f55169d03",
        "cursor": {
          "ref": "e51d707e-e489-4658-aa22-64062c02c99b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8fe82a8a-dbc1-42cb-b4e9-eaccf9c6fc91"
        },
        "item": {
          "id": "8a59a165-a462-48c8-866a-726f55169d03",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f583e54c-6c55-42ee-a5e2-69a02dde0610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c2aecb-c4c9-4106-a9b1-f7ea1a12cb5e",
        "cursor": {
          "ref": "ee83c3d1-7461-414d-9787-95d7b884ee81",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0fd61ca2-7dd8-4398-a184-cd3522f72ca1"
        },
        "item": {
          "id": "93c2aecb-c4c9-4106-a9b1-f7ea1a12cb5e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7896750d-6fb4-4d84-82db-c31806836563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8d6f2c-976a-4fb6-abc6-581ea32c6d57",
        "cursor": {
          "ref": "b4d6a8a2-80b1-45c8-9d05-2f53f95515f9",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0435dd7d-357f-4597-a139-467eafc31caa"
        },
        "item": {
          "id": "be8d6f2c-976a-4fb6-abc6-581ea32c6d57",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b8850565-5c96-4def-9fac-cf8fa042d628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2eae56-e3f3-4fff-a415-22f5749e7e52",
        "cursor": {
          "ref": "781289eb-92a4-4faf-9d86-36d813586f94",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4f9383a8-83bb-4ad4-a9b5-6c3e54a785fb"
        },
        "item": {
          "id": "8e2eae56-e3f3-4fff-a415-22f5749e7e52",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8b506209-82fc-4681-a8ed-2fcb718a2caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ce2e05-cc72-417f-87ec-b43006e08271",
        "cursor": {
          "ref": "f0f8746a-de41-44f6-b21c-4cd357b5d24a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ba185d47-514d-4179-bf2f-6eb831e9b069"
        },
        "item": {
          "id": "32ce2e05-cc72-417f-87ec-b43006e08271",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a8da9cad-701c-438d-97cd-78f2f9f9259c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc6ccd6-82c1-4121-8de0-f1a9b0fa68ef",
        "cursor": {
          "ref": "f6c398e9-17b3-4c3a-92f0-deb4370b36e7",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6da38ebd-f0db-4843-991a-26d764f71eaa"
        },
        "item": {
          "id": "dcc6ccd6-82c1-4121-8de0-f1a9b0fa68ef",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e8652bd1-addb-4a44-a9ce-b927ffab0b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cd1a10-4c4e-4c79-a10c-0df1d1b8ae48",
        "cursor": {
          "ref": "71da148b-56b6-41dc-884b-69564cff28f5",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4f34040a-6cc4-479b-81c8-9a6f61560851"
        },
        "item": {
          "id": "61cd1a10-4c4e-4c79-a10c-0df1d1b8ae48",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4494fe8e-6575-49b2-be55-00e9262e835d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174b5694-e37c-4cb3-b227-da1f2e49d910",
        "cursor": {
          "ref": "d1fdd51f-7042-48c6-8098-7e27d653db18",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a0b15189-3ae4-44bd-99f0-c83536b1c2ee"
        },
        "item": {
          "id": "174b5694-e37c-4cb3-b227-da1f2e49d910",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7024a8be-c3c1-4f50-8d53-eff44f99a3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b099eb0c-b2aa-46f9-91a9-d11ec23d3749",
        "cursor": {
          "ref": "528a304a-8990-4b30-9df5-36d5aee38175",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "80dc7607-89bd-46a9-b629-935d96febca7"
        },
        "item": {
          "id": "b099eb0c-b2aa-46f9-91a9-d11ec23d3749",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3b29b625-cc8b-493e-898a-43dc108e747f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa7cbf6-6f8c-4323-9920-4d5f6f1b297d",
        "cursor": {
          "ref": "157cabf5-f20a-4857-b6f5-da6266148644",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1d0b746d-bda6-4d29-9c0f-3e8be79f7876"
        },
        "item": {
          "id": "caa7cbf6-6f8c-4323-9920-4d5f6f1b297d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3fbdf6b0-3668-4a83-80db-2649458f0468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c0f819-77f4-4397-b5b7-3365ef847faf",
        "cursor": {
          "ref": "ce7b8854-25e1-4289-ae53-9fc00f4ba47b",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4d6614a5-128c-456a-803c-6e93f5f85e6c"
        },
        "item": {
          "id": "d7c0f819-77f4-4397-b5b7-3365ef847faf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "90b2566f-7d5c-498c-8b0a-069cf2c112a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe80b75-9146-4dec-86d4-48e3c04f2b95",
        "cursor": {
          "ref": "3109885d-72a5-474d-a853-3d8169ce4a2b",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1782df50-4a16-4870-9189-e9f22522b859"
        },
        "item": {
          "id": "afe80b75-9146-4dec-86d4-48e3c04f2b95",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f80daf09-ea08-41b0-a376-e2d85a518c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531f460c-a316-4d03-9605-72cf57538b2d",
        "cursor": {
          "ref": "274bc709-44d4-4211-b60b-329176246175",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "04ffff42-46b8-4552-b6bc-3ff8991974b2"
        },
        "item": {
          "id": "531f460c-a316-4d03-9605-72cf57538b2d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6d9a43d9-fd22-4dfb-938e-80ce902eb4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2738bda-4b84-409e-a8c5-c6047f5719d2",
        "cursor": {
          "ref": "ff413aff-9c0c-447f-a5b8-a88567ef1a48",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "12582fe1-3111-44e6-98f2-a3e014adda99"
        },
        "item": {
          "id": "b2738bda-4b84-409e-a8c5-c6047f5719d2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7de20aea-d742-4dec-8bbe-c8ed8989a65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f4baa0-d32b-4354-b293-35407939eed2",
        "cursor": {
          "ref": "38308535-214c-4bd6-87a8-eb15865aeb3f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5c0f2d28-e2b1-4c57-b0ad-5276a9c0b97a"
        },
        "item": {
          "id": "08f4baa0-d32b-4354-b293-35407939eed2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d16ea9cb-b0f8-4b39-9a60-6e4bb05d5e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e8a5db-c4a0-4731-92a2-f30fbbf369dc",
        "cursor": {
          "ref": "3b3e82fc-78fe-45be-92ed-9f30a2db899c",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a146b3b8-e097-45b4-a6d7-997119e3238d"
        },
        "item": {
          "id": "e9e8a5db-c4a0-4731-92a2-f30fbbf369dc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1c489e37-3cf2-4c5b-ac99-45b22e6f5326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf0434f-e9e5-48e3-853f-4703d3c095c2",
        "cursor": {
          "ref": "c12e0c8f-1fe6-446a-b357-5d474a0c6c6f",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5eba20e3-837b-405e-88e1-3dec42e497e0"
        },
        "item": {
          "id": "0cf0434f-e9e5-48e3-853f-4703d3c095c2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "08a5ef4a-4b18-42b4-b107-31268a16c5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2400a1-4cc4-4d62-9c1d-2ee6dd42b04a",
        "cursor": {
          "ref": "19a78e59-a15a-45c2-a7f6-59dc34ba6f92",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9a279c6e-c776-4146-beed-dbfac64326e5"
        },
        "item": {
          "id": "9f2400a1-4cc4-4d62-9c1d-2ee6dd42b04a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d45c53f4-d25e-4199-b35e-93bdd942b7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420adea7-14f8-4168-b586-1626f4219279",
        "cursor": {
          "ref": "26b1c786-059e-4b6e-96de-91db59e604c5",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e2868fb0-a6f4-4259-b1fd-fbd69f8571cc"
        },
        "item": {
          "id": "420adea7-14f8-4168-b586-1626f4219279",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "375ed54b-924a-4d7b-abf6-de0027c543bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae4de3a-6364-4a93-b8b9-30a11275cfa7",
        "cursor": {
          "ref": "77bc562d-915c-42d4-a4ef-fff88429720c",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "439baba4-2331-473b-8df0-d0121b20f2b7"
        },
        "item": {
          "id": "9ae4de3a-6364-4a93-b8b9-30a11275cfa7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3a783eaf-b80c-42ad-a929-187172a309c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cba9975-39df-43a7-aae0-e7c4d3b96c6d",
        "cursor": {
          "ref": "aaabfbb5-bdbd-4525-ae60-e118ba86d7bb",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3e39236d-864c-44c8-8ce0-2508f87435dd"
        },
        "item": {
          "id": "6cba9975-39df-43a7-aae0-e7c4d3b96c6d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "278e4851-91cd-4b43-b676-1d3d529baa6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475111d7-e93a-4c12-9871-3c3a9db14566",
        "cursor": {
          "ref": "0055f043-c5cc-4ad0-aa45-a71aabaaa7b9",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "aeac64b9-a7ee-4073-afc5-40f4fbbbc2de"
        },
        "item": {
          "id": "475111d7-e93a-4c12-9871-3c3a9db14566",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f95ed627-812f-4db5-90c4-b70d0f3a97b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3883bbb5-d0d6-4638-bd84-c9a21d10e556",
        "cursor": {
          "ref": "e1130857-69f4-4c1d-af9b-c5ba93fc87da",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "50e8832e-264c-4cea-a123-608a2cd91e65"
        },
        "item": {
          "id": "3883bbb5-d0d6-4638-bd84-c9a21d10e556",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bc35853f-fa77-4589-9c14-ec6d8566b15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dab586-82b2-4ee6-9949-050ac2374b02",
        "cursor": {
          "ref": "64003606-a3bb-4582-931b-938eaa517325",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c6e09640-2264-46df-a909-bfe55640ec29"
        },
        "item": {
          "id": "c3dab586-82b2-4ee6-9949-050ac2374b02",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b742c0ed-4a16-40d3-971c-15bd5e2dd2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63c619a-b877-4e9c-8f0c-38a896e3977b",
        "cursor": {
          "ref": "3af9fcdb-5bda-4000-99bd-421957cc2bd6",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3f9b99d8-02c6-4b4f-9d3e-36d4a0c86208"
        },
        "item": {
          "id": "b63c619a-b877-4e9c-8f0c-38a896e3977b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cc48ac17-000d-419b-9c97-98909200bde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12b4620-97f7-4722-8513-e44879651757",
        "cursor": {
          "ref": "21a29c01-834a-46f7-abf6-5cd25210fc51",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cc3af912-23ba-44f9-be09-76c39c83b1d8"
        },
        "item": {
          "id": "f12b4620-97f7-4722-8513-e44879651757",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a78f1806-1bf3-4a2c-a5a4-7de335550147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33316868-4490-44b8-beb0-290ab9c16d13",
        "cursor": {
          "ref": "d11bc2ce-576a-4b24-9db9-7cd086fce0eb",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ab5fdc47-88d2-43a3-ada2-5a78aa6a5597"
        },
        "item": {
          "id": "33316868-4490-44b8-beb0-290ab9c16d13",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5eb72f04-7c1b-418e-b26a-8089ca60cf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8256c9c8-e535-42e9-839f-4c41b31bafa8",
        "cursor": {
          "ref": "7761389e-660e-44ca-8dd9-623fc279e81d",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1dcc53b9-c3b4-4c08-8c7e-375ab4115a62"
        },
        "item": {
          "id": "8256c9c8-e535-42e9-839f-4c41b31bafa8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "427ef76d-bd23-4012-91e4-fa52ee5b0ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e042ec-256e-47a7-94c0-c00b10cf3fc2",
        "cursor": {
          "ref": "d6c98414-7a42-4c4f-aace-03ff93636b4e",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a84cd524-dd5e-49e4-bf89-3b368e498317"
        },
        "item": {
          "id": "04e042ec-256e-47a7-94c0-c00b10cf3fc2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6aced764-888c-4d8c-9ec8-bf97fc7318a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a468e5-b722-403d-9103-f7d683f078f8",
        "cursor": {
          "ref": "67a45664-29d6-4256-ad18-e237cfcfbec4",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fe84f730-14d2-4de3-ac47-9612f6616a5b"
        },
        "item": {
          "id": "e3a468e5-b722-403d-9103-f7d683f078f8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bc00b0d3-368f-4253-9f10-581304113a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1c12ca-fb32-4e01-bd8f-57f433ffcfc9",
        "cursor": {
          "ref": "a2708fce-a06b-456f-97d6-3309d6e03672",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2fbe0da9-23b3-4d7c-be89-5e508f51983c"
        },
        "item": {
          "id": "9e1c12ca-fb32-4e01-bd8f-57f433ffcfc9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d0f6c040-495a-4e80-8f86-e59c02a974ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32235124-48e4-4d0b-b091-1439244d6593",
        "cursor": {
          "ref": "ccad90d9-c7d5-4157-b226-f070d1a166ae",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d67c36d5-136f-42f2-bd8a-f344456c63dc"
        },
        "item": {
          "id": "32235124-48e4-4d0b-b091-1439244d6593",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "4833a2dc-8ba3-4624-a9f9-dd221ce7c500",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 51,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf17344-ad82-4b89-911c-049c0351877f",
        "cursor": {
          "ref": "ef3cc8de-1f23-464c-b8ae-bb27dcc16dff",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c3c5dff2-6e09-4d9f-89c0-b40fabd95a11"
        },
        "item": {
          "id": "ddf17344-ad82-4b89-911c-049c0351877f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "61e7e15b-e1c8-4b59-a9dc-838f16cf4ab1",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd51ad40-bb7a-4dc0-b760-b9bddd6e99b5",
        "cursor": {
          "ref": "f2af21fd-6667-45b9-85d1-2cc5fad032fe",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dc677f5f-8bbe-45e8-a5cc-02e370faf860"
        },
        "item": {
          "id": "cd51ad40-bb7a-4dc0-b760-b9bddd6e99b5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "34e64e18-9662-4ac5-b928-35a13d67000e",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6f1148-b921-477c-abe0-1fddefdc45ad",
        "cursor": {
          "ref": "7cd7849c-6a88-4737-a5bd-5df149369499",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a63f630e-ee08-4aa0-af2e-2124cb12c600"
        },
        "item": {
          "id": "3f6f1148-b921-477c-abe0-1fddefdc45ad",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7ed532bb-453f-429a-aa27-0ff67e71ae5c",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "465bb05b-d4bd-4dc2-a4c4-6f3d0281e392",
        "cursor": {
          "ref": "23a66b4c-c0fe-4f58-8354-3a2258a95d30",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "188ca96e-5b1a-4466-85a5-d2b4248ffa40"
        },
        "item": {
          "id": "465bb05b-d4bd-4dc2-a4c4-6f3d0281e392",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2f97e2d-20c2-423a-9125-021548845eed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465bb05b-d4bd-4dc2-a4c4-6f3d0281e392",
        "cursor": {
          "ref": "23a66b4c-c0fe-4f58-8354-3a2258a95d30",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "188ca96e-5b1a-4466-85a5-d2b4248ffa40"
        },
        "item": {
          "id": "465bb05b-d4bd-4dc2-a4c4-6f3d0281e392",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2f97e2d-20c2-423a-9125-021548845eed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465bb05b-d4bd-4dc2-a4c4-6f3d0281e392",
        "cursor": {
          "ref": "23a66b4c-c0fe-4f58-8354-3a2258a95d30",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "188ca96e-5b1a-4466-85a5-d2b4248ffa40"
        },
        "item": {
          "id": "465bb05b-d4bd-4dc2-a4c4-6f3d0281e392",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2f97e2d-20c2-423a-9125-021548845eed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517c6807-4aa9-4159-8100-170dd4ce3538",
        "cursor": {
          "ref": "14be94a5-578e-4024-a864-38b2340fa555",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fa57f9c2-e9b6-4946-91aa-17390d05498e"
        },
        "item": {
          "id": "517c6807-4aa9-4159-8100-170dd4ce3538",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "7ce8e612-1fff-4761-8a27-eacbc6306cce",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 51,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbb4db3-fff9-45df-aea9-392d592af099",
        "cursor": {
          "ref": "960ef9c9-fe81-41fb-b789-d73adfdc79b3",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1f742915-6643-4abf-8578-9cd4b6efb943"
        },
        "item": {
          "id": "fdbb4db3-fff9-45df-aea9-392d592af099",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d3539fe4-c5e2-47d6-a835-60d6e8eb1a01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbb4db3-fff9-45df-aea9-392d592af099",
        "cursor": {
          "ref": "960ef9c9-fe81-41fb-b789-d73adfdc79b3",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1f742915-6643-4abf-8578-9cd4b6efb943"
        },
        "item": {
          "id": "fdbb4db3-fff9-45df-aea9-392d592af099",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d3539fe4-c5e2-47d6-a835-60d6e8eb1a01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e601fe7-760f-4944-a1e2-6d1e95064b51",
        "cursor": {
          "ref": "35600b1d-af2e-4406-a5fe-826fa1fc3d5a",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "910be3da-6511-42d8-b395-3032f3051d02"
        },
        "item": {
          "id": "5e601fe7-760f-4944-a1e2-6d1e95064b51",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3a1e4ca9-d067-427c-9e38-83dd806dcc5c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 52,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3124b09f-88ef-4d9a-8b4e-be05208e9c95",
        "cursor": {
          "ref": "ed9c6f41-36a3-459a-b43f-4b50b5786a36",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "95bedf4c-9004-45e1-8d17-d93608b1e76f"
        },
        "item": {
          "id": "3124b09f-88ef-4d9a-8b4e-be05208e9c95",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "15418a47-84a3-44a9-b542-be8a1235c15e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3124b09f-88ef-4d9a-8b4e-be05208e9c95",
        "cursor": {
          "ref": "ed9c6f41-36a3-459a-b43f-4b50b5786a36",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "95bedf4c-9004-45e1-8d17-d93608b1e76f"
        },
        "item": {
          "id": "3124b09f-88ef-4d9a-8b4e-be05208e9c95",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "15418a47-84a3-44a9-b542-be8a1235c15e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121ae720-8ecd-4b8f-aa85-a6d04ac95323",
        "cursor": {
          "ref": "fb24b281-5e8f-4eb2-a0cb-0112dc80a4f1",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "63041b04-5cb8-4a2d-9bbe-52385d4950a5"
        },
        "item": {
          "id": "121ae720-8ecd-4b8f-aa85-a6d04ac95323",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4e93bd77-1757-4718-9034-a0b700908111",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 51,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}