{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "57717d5b-ba93-4031-8246-54a4e150e839",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e7da035e-2d0a-4d9c-9c74-d031a38f9d6e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e26f7070-43b0-4c78-bc1d-fcb85a8d49e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "17adabc1-7bb2-47d5-8af0-324574b8a6b6"
                }
              }
            ]
          },
          {
            "id": "e9979bb2-e3dc-44c4-b611-9eb8dd243aeb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d5a0789-8959-44cf-8cc8-9d29248a1311",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a4a03fe9-95aa-4901-b524-dde59ffac51e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3a9321be-a3ed-4c29-8f2a-3673f7579a61",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5c434884-e492-4867-8e9c-7e839e19559f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9754056-ede6-4222-b9bb-8e8147c136b9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c992dfc-1aa7-43aa-b1e8-f36fea408b18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1af9f9a-90fd-451e-ae81-df1916a06170"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "171301e4-4181-4614-af30-73fe1f36828d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8c2fe05-a50d-494b-8748-d2386c64d260"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7788a4bf-6156-4325-be46-dd08ac1a0f3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "733d4a43-0d03-42f4-a455-ae2df3083f04"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87f05d83-eac8-4561-9de7-f490ee1cbd1d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ddebdc81-ec04-4e1d-b544-cb7a376e4115"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "094c46de-37ae-4d8f-ae74-7a0d1309a876",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b94691f-3611-425d-a654-28b4e118a533"
            }
          }
        ]
      },
      {
        "id": "0abf1455-0aec-430e-9422-4546f4a85ed9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "23101367-f0f0-4ca9-bc77-a8921bf6a12e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71de3b17-a85d-46ab-96df-882cd68cf71c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "26994a16-fe8b-47c9-a8a5-4487aa76d6de",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d334df-2326-4356-b5e3-61f8ccddd7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a89ef15-99cd-4b2b-885c-5a427bc4f7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be0017a-ab32-47b1-a717-74db2cd8eb11",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b253a3-721b-47fb-8416-60a168874f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43c3e9b3-aeef-4f65-afdc-cfa11132502f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9617b155-19b0-41a4-8807-f42599515ce8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8e670f-0eec-40d7-a56d-90030eb0ddcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d6092dc-3717-4861-ae56-03bc636f6940"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f71e6f01-a3ec-4053-b227-f2b274d2ee78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb3916ff-d369-4033-8a3f-591de70a4a04",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8735fa2-515e-4188-854a-1b0b56ad6b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14e38e34-cf12-4e2d-8073-4e2ccfd0ccc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01547fc2-eeac-4cae-ba19-23cb83f5cfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fed791-9cc9-4545-8381-13b11b526213"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "59ec920d-b662-4339-9295-32859071bf9c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "389922eb-031a-4dea-a9e8-1ae858ae1645",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a9582af-1f19-42d1-b9f0-19974a593706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "63844941-aace-4f3b-ada3-b3f58e970050"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce7e977e-dbd7-49c5-a750-979566e640f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d1fbe725-7107-47ec-a9e3-b2d0608ba8cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7270c97-518f-4d2a-beb8-4962780a629c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eaea9c6c-32c3-43dc-9a65-63036ba1155b"
            }
          }
        ]
      },
      {
        "id": "7a673d43-5028-4cfa-ab42-ef0b5996758a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c8440dd0-bbef-49f5-a91b-ba2b4ab5f4a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "909c55cd-8599-4faa-8ddf-17149856d5ee",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e38ac105-4735-43a1-be0c-7b46df69ab79",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe875b39-2dd9-412d-8b79-9bee5a3f5372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74da2595-183e-48a7-91e8-8edbb7b39177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238d3904-b54c-4362-ba74-1f773d7e72ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7242fce-ff96-44fd-8e93-f4666435a3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8687a755-5870-4f00-88ed-fa59e4749652",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740b3c85-fbbc-49f5-9e0f-6bd75dc068fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bac888-fabc-4df4-b667-20941418e2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da051d71-7329-4e56-8a0b-83110e4307f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24233d3e-833b-4e7a-938f-a5293eb1f262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33be3ae7-4ebe-4d9b-8324-727217eedf0a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c55910-6a62-4ca6-9722-902a92bdf336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da82fb96-1011-41c6-9624-d7d829d45579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6b1aa2-9f0d-4565-839e-174d619c9e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af5552e1-9b6d-49ae-b305-e363ffec394b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201c84e9-c4d5-49fa-b5af-a1c12ec777a9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c659de1-ab7c-4900-bd6e-e13f9c5e8369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933ce882-aa16-47c9-be60-68cc123e947b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2773506-9b50-4842-ad48-895d7c39f23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2768d29b-86d3-4fd7-bf41-ab83b6bb4597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43218e91-7292-450f-bea8-b33ca544ee11",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32c16db-cf57-418c-b551-48e731005057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563a73da-e3e6-4ec3-b0dc-ef83fe735590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adcfb6b-c70e-434f-bd78-698abd721a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "941ba856-c13b-4de0-8d36-2ad158804d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6346cb5-8f65-47bc-bcf8-19d7602e268b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaff2ea4-3e83-43e4-b906-9448198af91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1810befb-93b1-46e5-9e42-cbdf693f89da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dab5097-bc93-4c37-afbb-906cdaa516a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac5f9b00-829e-4e1e-be42-acc273addf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6063d10-1ff8-4a91-9396-6ee7da6a5c09",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fe31f7-f991-4103-be60-09c77141dd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0230aa08-e1f8-4874-b35a-91ccf7057d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2abb708-ba65-43cf-a248-c5103903928b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ece0c6f-2efe-4596-ba49-481f5b9e5b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49bbd5d-abf0-46c8-b471-976f5c3436f5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97da334-7e43-4ed0-b2ce-265907aa28cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecee083-f1a7-4436-b035-e61a66d653a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab24a92-9dfe-4c34-9c16-33c7d038f3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "190d5927-1678-4153-8385-4a71ba73359c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27936894-62b1-4140-9de6-2ad5685836c4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668b7b2b-0086-4470-9c0f-5f8f40adb5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e7ed8f-6c79-47d0-8be9-01a81ec967bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7582b2-027a-4b07-9c31-da13ea9e44ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d35ea6a-ab04-4437-bf9d-569f726a1af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1c785a-b46c-4da2-b53f-0e73fdcb829e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adce1b09-989d-4ee2-921b-0d8921f00841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b680fa42-1717-4404-872b-211d5470f299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdf0793-faaf-40b4-84af-bd45f50fffa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42818a83-cc64-4fab-bf87-4da131f4b623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f91131-a222-4af0-a66c-9ec1f7df487d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb516ba0-03a2-4259-870f-6d702928caa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25035ac8-26af-4ced-8ece-00daf076043f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4633a248-fbd8-4594-a6ef-0e854a7eb2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddc5a72c-af5a-4c2a-b991-28a9f6050cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6baf83d-7bb1-455a-8c6c-49fda7da5d65",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73f5fa4-4125-4b25-ba23-3bf07fc7837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c18643-8f4d-4f18-9334-85dc5fed9523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b302b643-8192-4bee-872d-6fa549f18a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4eeec11-5b2e-40f3-b1dd-f03a06dd1041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca5116a-815e-487d-b210-c99eb5f635c2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252f54d7-b55e-4fb1-9779-5c6a874b8b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328b107f-1da4-4074-9c8f-90f9157556de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f4c066-164c-4cae-98e9-8beb80e7ee91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a093980e-5ea8-41c9-b983-5a2d78b9ad2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f59de0-8a26-48a4-858c-64bd8887b47a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf79827-aa90-4233-9c42-66e9db5eebaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a88d20a-3694-433e-8dc8-84e49dad2b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6af616-e84e-4c9c-bf23-76165c518b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ccd69ad-042d-4dc2-a371-c7334218278f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad498e3-136c-4a7d-9857-c0e6a5f1c8b1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5e0a52-cfd1-4bc0-968e-aa5fd45eddd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0482e5-b128-4af8-802e-e0f15ce406b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a647f3-a777-4bc8-b8d6-b8803ebbe7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00ea2fee-7051-4411-963f-6283db62502d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412b940c-e05b-46ff-a052-5d95fa25648c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a62bc4-2e17-4a64-9af6-41fd7bd0d911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fbffad-9f2c-45f3-8785-f9646d3fc288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3158b642-1970-4777-8494-e1b8cd0782d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd48670e-628d-4cdc-96d6-12cfcd4a8eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5912a5ee-4b7f-401b-a488-aa2d3c7c0217",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05da9f9f-c75a-4f20-95df-7aff10359362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a0a38a-bdef-4312-a698-861e2d8879d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07823636-d236-4c23-bc4b-5d42505709c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ad303eb-fdc6-468e-bbf4-a52e43bb698a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b7452c-41dd-4946-b4fd-f36b4378f267",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b44192-1347-45bf-bed5-71de23421d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befd6818-d63b-4d8a-940f-426c2b203308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95edd4a2-6391-4c2f-9666-17f9ada798ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d76074cb-0522-4487-8954-75883caec3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98560a78-bfe0-4873-b14d-1a44b2029835",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77c3f84-4190-4673-b8c0-ce3d0b737d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6905b350-cafe-49e5-a357-46e13cef0df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89775aa-db99-4f6d-bddc-3153fd87f21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea86b1eb-250d-49d3-9d66-39cbf519bfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac4931d-d25c-482b-b481-ae7959f08176",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f208a062-082c-492f-8f77-ef0cd005d8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9ff3ec-e24f-443c-af4a-bf9855de36ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c5fe3e-67db-48c0-b78e-02dbd2f2e848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a75d9b77-70b0-4ac6-a4dd-8404af34a389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b12dad-6253-4b5d-a2cf-89ee5d70f581",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839fa9a0-16d8-48c8-871d-949830b84c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47290a93-91c7-4e92-ab36-82972df1326e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79154ad-5a83-4653-9075-ec3f3c3c1ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e928ed-786a-4248-a347-2eeed24c3075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6199b624-8745-43c7-879b-4ae0b0748451",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01293bbb-41e2-46b2-9cab-9cc304031c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90161df3-81d7-4735-9f0c-4cb38e1f79dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a345db5c-8c88-4561-abf3-2ce36bcce302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23cabf41-15db-4f32-bee3-60d3c1c6f7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe0f7a3-7339-4890-a83b-321cdba85404",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd93822-1b95-4b83-9b60-9781b092bf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33fb2eb-5739-4325-8d36-a189977a96d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af22310d-5959-4bbf-88c4-0d1bb0c973d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00378f69-3f55-4f75-bcf6-37ef144a6321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a08a8de-d589-441e-99ae-d532fce1c48c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048685a8-fd06-4095-a1c0-02c6ab9a30a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8dfd19-66a0-4376-a2ae-ef31803022fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7c48b3-06a3-43bc-8be3-046c9844ea4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "34af39d0-868e-47b3-952c-ca52ab4a9a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aba63f3-bb9a-40c6-98cb-4751e3d50b24",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b6aaba-950a-4e4c-b97d-3da12510df44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c5dd4f-cb1d-4a97-a488-e0f767474ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29950929-6636-4ab0-a37c-37434c36c943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ada241-3e3e-45c0-8143-76fb7b026974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638f0ea5-147e-44bb-9769-5b090ef93066",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09143a6a-4680-4295-9179-56655732e248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa9ef50-22f8-45d2-942f-83a97a4e15a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ecc38b-e6bd-409d-b2dd-4b2705d544ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b852dfac-7d39-42cb-996e-1aac1af39ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a42669-120d-41e4-861c-fc06e9c7870d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af5377f-1f79-41a6-9060-4f6accfd45ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1eb3de9-d581-45ba-9feb-30857c22d5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b67e06f-c690-4e2b-a051-e1680125d7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca51d36-98d7-47ca-8441-b49faf9a835f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed5bf17-f494-4214-981e-b2d71e45de40",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c30e39-5897-48a9-a82c-99405703448c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1f7c70-2053-4a74-8b68-2fef54028999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08db6207-da40-4fb2-84c3-0a268d593d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49e2d53-6c4b-4a55-b659-5ecefe94fb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35db67f7-e5f5-42a6-9bb2-d09eacaa8726",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3d5e19-93e2-4572-b08f-a46267ae36ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a137df-4d65-4514-866b-c5a59d52c9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a02393-e627-49e8-878a-f384b777064e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18f74c5-c304-4309-82fb-4c72f3a6e171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0177091e-91c7-423a-a900-a85db1eb20cd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c2882c-091c-4c88-982e-756f12e9402c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc50635-f6d4-4702-a73e-86ba405be7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eaf116-14ee-4701-84f4-a8f13724d4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe247c5-562c-423e-923b-fd3908bb4335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab2bce4-b4b2-45d1-abc5-00875f2d69fe",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd98aee-b46c-4c21-9b20-6460c5f53163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4bb82a-63ee-4572-b1c4-20a53abffdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d587d61b-ed8e-4b2c-9ce7-fb43b2e68af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa9e970-d26a-4ec3-8a52-00e6bec66591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35f8b4d-061b-414f-87a7-63aeb4535262",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e487dd0c-c27d-4c54-b101-0f229f55c648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474137ca-806c-40bf-ba13-85f85fb72300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1632a38e-3885-401c-88e6-34b1d2a4a312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe7fc54-df97-4844-934a-cab049ba2a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c92917f-815c-4bd9-94e9-fa3b4b93af78",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dec170b-ce72-4c8c-9ff3-0083ffefc781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64afe045-0055-4e3f-a842-5be5ff3cf528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4897a9fa-6d50-45c1-ad5d-53c3d6bae6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5cf7f9-7e98-4bf4-a363-bdf8bd15c508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64c8ba8-fa2d-4396-ab92-9721f91b2f99",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4cd691-d343-41eb-8165-9fce5ff41fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36978479-f7cc-45d2-82ea-8a93de7bc875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea99c6e-d599-45b9-9a16-85f24bca2f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78648934-a873-40d2-bfd6-fba1dedd42c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4720d0f3-ac44-4db9-bbe9-e47d973c6eb0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea556ea9-af06-43e5-9116-8482da82faab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0644883b-ab1f-4a56-a3bb-df24bbb8ca54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f26ad53-d808-4a73-8ffb-c62712f5e404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6872c9-0820-439f-a160-36c19e482dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a450aa-8040-40c6-9732-0a70fca3fbae",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3ef175-8b53-40f2-9d35-b254b901dfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4615b8d2-f147-4181-b4ab-58c59bfd58a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e327a3-1886-4881-8490-b1ae61d6aabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4615a3a2-bec1-4f28-8582-84687415d10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eac83d-767d-4160-ba89-30af1d4c7bcb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d7b2d4-6464-4b40-8c62-17929a08d9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b18cbf-a25f-414c-9db1-e386fcdeb319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061474c9-136f-4307-8f4d-49288d6249c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ac9d4c-e2c1-408e-a6ef-8fc54ecd9634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890850e4-7735-4268-a326-f89c100cfd8b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dcaaa1-6a7f-4d33-9d11-979a79656335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c5372f-f80a-4432-a9a5-f872b5c0815d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8344eec-2004-433f-a9ca-4f69e66c7321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b10121b7-3413-4f4b-8d9b-1829ab5520a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2439ad46-88b4-44b1-878a-1e9e01f1cf51",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cd36b1-5e5d-477d-8ae6-601e141fcc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9609d10-a3ae-4d22-bffa-a0535813891f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005fd439-436d-4e95-a574-f8582d261cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7754ac-62c4-463b-b942-0a1404e0ae14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1f87b4-4539-4b05-9249-42d791ad675d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c310316-9a87-43f9-b057-ba51a241058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6bf953a-a066-4131-83fa-35fc6ee09bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9c4c68-51da-4bd4-9b5d-63a01c05d514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce78663-53e1-4cd1-b814-3398bbe5b2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9af86a-24d2-4039-a034-0b873a9e15c8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a5db50-b43c-415a-b8e3-5d255c13316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2527475a-8156-484f-86d6-23b314f32a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cbd04d-f68c-4b02-ae24-60be9b3c5838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf53d80-a150-4cd2-818c-0a8c07572692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b853477-8134-4981-b32c-d68ce3dbc87d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b359f43b-c56e-489b-abba-32cca72e40d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355a42fe-af85-4c44-bb61-a44e5ef0a607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395af733-31de-4c11-aed9-e896e46207ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b90b4c04-7e56-4aaa-8f20-fa2919f3807f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f24dde-e19c-4759-a37a-70a2fabc0939",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9726fe-c604-4f9c-be27-af7c3ece9d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bbe47f-c818-491a-95ab-4333063a6d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2caf7d1-3a44-4dd7-bb2f-7b02afec9135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "54da9b03-edbe-481f-bb3c-29bacb4d89ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7516d8b8-1f70-45db-ae2e-c0a239882aea",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04aa2183-72e2-40f5-a8df-93a66ce11c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c2a9f1-6c72-4a99-bf55-ec4835352546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ec054d-10bb-4aa5-b3ce-5620bc0909eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0b053b-5867-42b0-9006-8c209498e80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfc190f-2eb7-4a76-955f-4018dfd580de",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55135fd9-910b-46f1-b789-57ba735a5b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec80779b-b214-4177-b84e-2db2bcdee3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684abbc5-07d0-478c-b783-2535504275c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee75d21-c17f-4202-a871-ee13aa5ac3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd926fa0-9aa4-46d7-b481-55658f7ab52f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3361a8d9-9de9-42a7-958f-3f23a9ec25fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49bbac0-2c6b-44fa-b182-e7a2b30eae99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b424136-0d55-48aa-87bc-322fe27d9218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "259569c4-358a-4102-9968-017c779a813c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f4f8ec-b038-4724-9899-3d21c2a60680",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e49e18-a8a1-474b-8a78-e893d030d543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d972f39-7872-4b3d-bb29-8c680654746a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba62eb4-65d2-48b0-a0a1-7d8fa6e7d9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89fb02a5-d5be-4a53-b5f3-b92c3d1c6e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a2d054-51f1-4b58-86ed-1a89ea0921f7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336c61a5-f275-48b5-97d4-bfad07176998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31a16e9-5594-4a40-9536-9c82d14e587e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d432c55-e176-48d5-bc2c-99e5dabc9506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29bc9a58-6ea5-408e-b779-0f23cd0541d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cec52a-c864-48d0-8099-ded3817d159c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c01354-847c-4513-a588-310ffe086906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f70bae4-cf3b-4039-a6ac-504dede27b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a09b250-8cef-474f-9f7a-9377670d2332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0131468-4377-47c4-83b8-69eced8c055d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b929c613-5d23-48cc-b999-23752e15bbe3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e546bbf-7076-4c76-aaf8-759bfbcf2d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c59206-f1d6-448a-afe4-ae9fd8b7c49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87871735-50e7-441e-ac37-74fc07de67ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b8f724-9957-4c32-961f-4b41412d0661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c744651f-edd5-409e-a591-e8552e00b403",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b4bdb1-216b-4185-9e65-ae036b59bf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c6a025-b3a2-419d-9f1b-f4dc255acc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e2a6e3-6ca6-4cb3-83d7-98fba6639b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "54705cd4-4cfe-4c24-9563-1ebd1151579c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0cb5e3-9f22-4653-afc0-363f80ba4069",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0776c968-6798-45c2-b1d6-fb160d758950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f493bf2a-cd0c-450a-bd77-c3db468636cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e04a4c-973c-4b62-a634-42cbb97501e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e197377-f9ed-4e51-adcd-8ab516c646d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d200a042-9b97-45f4-90f3-9f48b4e3c872",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac92d99b-00ab-4bae-9b3a-35ce68d57158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6f9747-7b72-44fd-825c-e03320d6a4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce573fa8-9d75-44cc-ad9a-60d0de9bdf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5700c10-a1f9-4013-81ec-8cc78a5f181a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116067ef-346a-4112-a923-aef945fa2f7b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35120e69-704f-4124-972f-24fc8a199b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a5ea44-1a6c-4417-b22c-9bdd61bb19a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1993bc06-6425-4e33-ac3f-6a03657cadf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1514136-aeed-47e8-a34b-2eafabb70769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08711394-0be7-42b3-95c8-1c6191eea966",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87964d67-5f0f-4517-92f0-5194a487710e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c41d3d6-a0e1-473d-8169-703b5ae7bc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c3c9cc-319f-489d-bcee-8981f7320085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28097e5f-7b19-4e70-84fb-3f02dab5b811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02231672-6448-4139-8a88-f8a9e24d8f76",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a4040e-8400-4f51-8967-efde20d59c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18e1b52-b77f-4fcb-aea7-5afaa8930446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea08e76-ab2f-4a86-9d2e-89d5d15c88b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "da53c4fa-34dc-4442-aa63-08aab3800653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3678b3-cf19-48da-9386-cb67bcb0aa11",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8717d203-bad5-4fa9-aa32-27b2a84d668b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8e20ab-632d-42d5-a0d1-2d178d1aaf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069b0163-7b69-438d-b285-79446eb420d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee74d12a-a00c-401a-af2d-941278f12190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7feb592-2dcf-4e89-9b3f-1d6040b9cde7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108c9069-a7f9-421e-a93b-681ede2ea7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69e19b0-dbd2-4f53-80cb-c48adb6abacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972b4908-c363-41e7-af68-86fe2732d50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9596389-bd4a-48b4-8218-97ed8616216e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738674da-b8c9-4355-be08-87ac07b1dd97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fad0d7e-434d-4eca-af37-d1c0f23d88b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd49b847-068d-4ec0-bae2-b74667330422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bb42c7-ea9e-4f8a-b883-82071a65abb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a57d7b-fd36-40b4-a5ea-392308139c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd3645d-f359-4f47-aeb7-21b877754242",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7bbefe-268c-4e50-ae61-0133473b922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1dcf1a-01f4-408a-bb3b-64a80314375d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b41ebc-d632-4654-a6f4-8b5145787412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35c85d79-adbc-4af7-847e-9dab5c88b38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3538c80-4078-46bb-a627-29609f91b5d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49664944-2320-4071-9dcd-7fefa525f8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a359c312-9bd6-4831-9b4e-5362eafee3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18317287-bd44-4856-a407-13675ed1be11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a99c2f40-33db-4c4b-948d-d58b469c48d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80e59e9-5fd8-4d26-ba43-a9f7c8bb23ff",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe14dbc-c625-46a3-9760-1bda4535c58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de30fdc-d1a1-49fd-b90a-0c9d9380f4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275ca17e-6353-4927-838b-f0f7c788f446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9744983-ece4-488d-a4dd-edb8c25689ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d50c4bc-6f3a-4813-972a-8a65137b9c88",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed241d4c-7d14-4a82-94de-4e3663c70d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c98c09-8c11-4452-b2e8-3dd0d275ea33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf85f3e2-3545-477e-bbf9-cca895d4ba7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a327f6-d0c2-48f2-802c-05d96a0dcc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2ac4de-c155-4539-9d5b-5241f3aa8106",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d268e1-8e6b-4755-b0fb-3e7a4ff631c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf9d0fc-da4b-4943-9f1c-c13b98d0d759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116e9f4b-e425-424d-a4fc-7bcc2fadd181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4a9e7d-932d-43f7-8c2f-6eba7f47a431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843d1255-11cb-4a00-ae7f-7866a56be7c5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d8f725-ff50-4720-bd29-86968db6d624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f209fa6-3e44-4b15-82f6-a4c0bd18ee01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c551dd8a-eb7a-4933-ac9d-9ba467316366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb605dfb-2015-4920-9a64-7f53ae54e30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cd6916-22d0-4248-932d-ad51b2c8345f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a5db93-30f4-43d5-b8c1-bd732b6f424e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901d6b12-5152-4ec1-a37c-5496fe55f0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea7f884-e00e-4848-8144-a25f56d5e6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2f681b-8db4-4a98-98e4-7a3b3cadb48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681e5119-a3e0-40ec-9bcc-1696e12fb479",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396ab9b9-8cc2-4cdc-9027-692d4f976b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc94072-3a65-4bfd-8643-f65dd595eff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7ae8f6-d5fe-4ee0-9623-0c6af5656d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd438b8-5939-4cbb-9200-5e9dba836f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7eeaf2-0e55-4b18-9d2b-94f5fd530b29",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80f43ab-acff-478d-b491-a00c56e343a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d74bd51-78b8-46c4-8597-e68adc3c36a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71317559-ad03-4371-a7fe-88763bf9a8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6998a9c2-963c-40fb-a29e-ef12b72457ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e7842e-3184-4ce8-9b9f-d255797943a5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d95112-50cd-40fc-a11c-e005c56575bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b981ee01-1740-40c6-950c-ee5c6ad36a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d15ca77-ef17-4ea0-ba40-6406e836d9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b909d5bb-a026-4ca8-947c-cba87947ae2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed819f34-b64c-4290-b62d-45e34f6a3132",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d4d7d5-332a-4827-b324-847715ce6e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a1d5eb-de97-453a-aed0-f4c18fa2bd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c4545a-1b1f-414e-b9f7-a8e6b1397f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c55367e-e85c-40ca-9333-8396cff30bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da7dc61-195b-475c-aa69-d142d7a01748",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c222fb7-55fe-4016-862d-05eb226c22b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb4aeea-b264-487e-8abd-9043162bbe37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57ba77b-10f9-4ac8-89f9-42b2dac3d44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c8adb2-97e8-4d92-b69f-57b150d85bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8489a87-b9cb-4a44-8244-2c1e4a3b8261",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca0031d-dd95-4c0b-ac91-5a3b3c2a2563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee2b829-1188-4a49-b58d-d2257a5eb61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88776f6b-ea3f-481a-a519-718444f68e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dba9006-95f5-4792-95f5-b3ca715c6983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d02fa5-248d-40f3-a0f4-8aa3367b4bc2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21717ca9-bb76-4dcf-b496-52f498402544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb59f286-8063-4992-b198-ca9f6a3b9db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0513fb30-c7c6-455c-9628-450e7ad668f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "726e4d17-8c7d-48de-a194-0ecf0ddcc1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18d5eb1-176e-4679-aef5-e9af05016dec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca4ab24-5045-4327-8574-a3586d454a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da42aaf7-4977-4d6e-8798-825b2336d922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0961907-c366-4400-a47e-b1ac21706b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7de4e8c-a4a4-4ada-8fbf-16e012109af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8318adcb-09bb-4e4f-9d6f-8a0efb321bd1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29ea76d-8fba-4e1d-b913-a3a868f09b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7439d9ec-aa29-4383-b2ba-576ccc3d0e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9274506f-253d-4162-bbf9-628c129873fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e734c5bf-830e-42dc-b6da-cb18cd7bb515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55967d87-13f9-4ccf-a50d-290ea9ab5d36",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2426417-a149-42e5-acbd-f103437924b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f163f79a-27d5-42fa-ba30-ce178301ea35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849c7dd4-112f-43d1-8e02-6162011dc48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcd19d5-e1ef-4808-a3c8-0e79c9a2c4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1093ee48-68a7-4787-8c5c-1bc402f26de6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612e6cef-d7a6-4799-a488-7f5ed57facb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99225e3-a195-4e1c-9426-b1e33aca3077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854733fa-1a73-41c4-84d3-37677cab7506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf74c59-a5a9-494c-b7ba-4df11dc27c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e1a699-015d-4b7f-8ac6-3428d109da77",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4cc645-a2f1-4174-a77b-dec799798b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cbe461-6a13-418f-bfaa-44468dd3b4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f95f55a-7e82-4898-8ac4-ff1bd89245aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d36e1032-a74d-4276-80c2-e598ef7c0e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a980db39-0a1b-4f2e-b8f5-2a76fb35d180",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bde9ba-28c7-408e-b19a-71d7ac3d8e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a925b61c-8276-405b-8ac5-f7a198854045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9932b64-7094-4d0b-806a-5c15d8f68911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92535b9a-90b5-4411-8884-9e2804c77266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194c1103-8a31-4fd8-9f82-3ab2e189e39f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3135f6fe-4c13-4813-a37b-57955e0dee1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef779c3f-648c-4821-9c25-8cd9dc217be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630aa5bd-052c-4245-8a78-f00363fdf7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d33e1da6-08a8-4641-aba1-d43a2ba089ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04153876-d543-46dd-9109-b8a6860f9ab5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c065db-14ab-4ea0-8f82-fa1df52bfa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6d75b5-593f-424b-83a7-93d5a8b31516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0d2b56-e454-45c0-80cd-285edfb2036f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "744d32ce-f064-4bbf-9fb3-4840c62df167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0bfcd5-0c1f-4ddd-b190-a605ae3062f1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1ea8a6-b09c-496e-bb71-924dd3d02105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9684e8bd-299c-4e53-997d-1d456664c196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beb8506-b253-4591-8f5b-64602112a207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c2a9ba-2c7f-4533-87a1-f05c933c4abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d7a19a-cebe-43e3-8511-52764cc2f9a9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cf2f99-98da-40f8-83e0-2043aa9f6e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702e692a-61b8-4ed5-aaae-6d9f89a27d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c03e94-743f-489d-bf5f-3d91da462be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9761161d-b51f-417a-ac0c-58d7e08c16a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7e715d-5669-4df2-b06e-d63984732975",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e97dd8-b240-4ea6-af56-93ab072cda85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228d89fe-b4e4-487d-a21f-2dda05a7af39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46d5b8e-f172-4f17-baaa-fd30910fd234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7309c4-e576-4eea-9286-f5595e51099d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8e6570-8a59-49fd-a224-3d1eb450b3e7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cd2110-a25d-44dd-a651-b27e77fe0f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229d1e42-901b-41a2-af25-8b4a864f8eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fd6ed8-c236-4b61-9872-046713c7521c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb722db9-c65f-4bfe-800c-a8562d7baa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c42bdd9-a5b9-475d-a7be-311fd19a103b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3594c827-9c0c-421e-88a6-5356069b266c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17c4c23-229d-4698-97c5-91c50be1595f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d009e8f8-1535-46ee-8b61-f860685efc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e7ed18-c75c-4991-ab85-1d5feb9b5957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c25adf-36cb-4a21-b603-e6a34c92d76a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714231f7-c73e-4923-b549-4a4195cede74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9fc379-71a8-47f4-aba5-bf3ee4d4d754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb089e6b-ae82-402f-a0da-18aa859386ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb86941-6658-47ff-985f-c150c4e55c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fe98c2-7761-407a-998d-b4bfc01f2640",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f12d03e-ee5a-4aac-92e5-f04e25f4c4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6f729b-e7f3-4cef-b56f-3b5bd950d57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb140fe0-1d88-4423-8506-b9ca4662f1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a72972-020c-47b5-b065-8dd90e176402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fff6e5-0952-4a61-8493-964cd7fe1c28",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b297e1df-bce7-49e5-a4eb-0a31338573b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca08114-3fcf-485e-b9fc-283ca2d15934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274aa0ba-f4cf-4761-b69a-7977b3cf83e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ee78a0-7c24-4465-84f4-6a4793504851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38be7c23-eca3-4103-9140-dc1e572cc899",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5152e33-431f-444d-a596-5f6452de8ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad40d5e5-6583-4df7-b13c-d6fbdc5a237f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371b4811-0b74-4f20-94b5-da988b5f4631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29f10158-89fa-4dca-a3ca-f1977d64f9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f15f09a-147e-49b6-b8de-3faae3afe52d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1829f4-441a-4398-9e1d-e8cb9a2a1731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d9a55e-7300-45d8-babc-149beb4b71d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deacbdc2-e1ae-42e1-ae76-680431ef9803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2011841-8798-4fa5-9013-3c5f89fecbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71b612c-e78a-45b7-86f2-56b9c4c0d932",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506ef626-3b22-4a65-8861-07daafcba022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9c86579d-204a-4983-bba5-1cb2cb1f248a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781d3676-70b7-4ade-bcf4-3cd1f526eec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcbceb77-cd7d-465e-af0a-4d08b8325a01"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "272f8d31-3eb6-4383-bcde-47177cf17dc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7650c311-fdec-4864-899c-d6801e83328b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4900aa-3b25-41e8-8178-a75b70d66ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "742eb9a0-1dfe-48e2-8834-a3b0248db90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7715a37a-ad4f-4b6b-b79b-890e9bf5dcd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc10aef6-12e0-4127-8063-c071a7adc6b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42024881-05a2-4336-a6f3-224aecffd91e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "012c3f36-f710-47b0-9eb4-1dae9e492834"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37a14d9e-fed2-4191-8e4f-195b53fc6b52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21d04fd8-f886-495d-93d8-50b25eee32c1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a0c22f5a-2fa9-4ea6-a3c9-c1f0d25eab38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63d7939e-0839-45f6-9aa7-e9417c1e647f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d69c9411-59e3-4b6e-aa59-7d34efb569f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e696c78d-5a4f-4c0d-bc88-0c3761509f3f"
                }
              }
            ]
          },
          {
            "id": "08000cdf-0f14-40c9-9665-bb2d3216bddf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48464cd6-c298-4782-aaa2-984c909706ad",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "27c15d93-37b7-4397-baec-e61eecb113ba",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f9a24d-5f57-4a42-8146-725b903be566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "148e4fb3-3211-4b7e-9bde-180411c90735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee47da6e-4bcb-4832-9285-f5969dbc25e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298fca69-a987-48a8-9f1e-b3192e859f2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad9a0202-70b2-4b28-857b-d62b6a501a80",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91d16c0b-ef57-400c-9e7a-72f0c3c826f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6313d12-aa0a-4a90-88e8-effa43d2b560"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40f6d211-999b-4044-b1ac-b507e00586e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "11de569f-2350-470b-b1bd-9ed35b688cb2"
                    }
                  }
                ]
              },
              {
                "id": "f0ccd91d-c41e-4a42-8e96-3313c21e6de1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3105629-9532-4958-9779-7e3df28c6cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec54490c-ac94-4efe-909c-13cf1b29a46e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c9e2390-23cd-4d8f-85c4-609b368f8ee2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5521d9ab-3d67-4dbe-93b3-050051c023a4"
                    }
                  }
                ]
              },
              {
                "id": "60803792-b0f6-4b3b-b39c-b3d703ce0a94",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eee8e16-c071-4418-9903-677ccb15d63a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0465775-322d-4ff0-b612-2a7f543109ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2375969-ccad-436b-8b22-546514831127",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d35af2e1-bc9e-4d71-8cd1-e4b6430775ee"
                    }
                  }
                ]
              },
              {
                "id": "39cb18af-ab66-444f-99db-f96efcc899a7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e47b9f96-4563-41ee-80b2-a6fba2400cf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da1eb3f5-44a0-4b0c-b9c3-6e744b409128"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49432272-8d96-4d97-aab3-c78085292fb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9bbcfa02-acec-460d-b0ae-f8704dc9ce17"
                    }
                  }
                ]
              },
              {
                "id": "8531cf25-6296-47c8-a4ce-1d4e9ab6eff3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0df4890-f823-4b8d-a959-ae9d393c05df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "768d01a9-5bc2-4721-8636-f116a03e2549"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eef56e6d-04ea-4e2d-b34c-9bf956ceacb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f593e11a-d1f9-4590-a477-7834d294d396"
                    }
                  }
                ]
              },
              {
                "id": "bb51b6ce-0897-4d28-b974-8e1d8ba5c48c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "607e36d1-151f-4a4a-ab91-3d7d825b4890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0ac9f5e-9f45-4e8b-aa9a-6efd6b114983"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5937d694-ddab-43b8-8d12-a70858aa9ae9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "078a1366-342c-414a-a069-6c1458b10634"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa858ab5-efe6-4d9d-b761-21a7d81b8272",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f792dbe1-4d53-47d4-bedf-b5edc785901d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ee69ee1-49b6-4eab-a3d0-822b4a9aa839",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "919c34a5-ea2c-4c28-a7b4-c922d46c6a83"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e019b09b-d85f-4bf0-be71-d1d742233539",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c802fecd-016c-41de-8ef0-4441de35a96a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5fd0d73-f072-4ce4-a1a1-29917dd5bfd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c1e6c8c-4f1b-4612-8135-221caa104114"
            }
          }
        ]
      },
      {
        "id": "5e1da2ff-4c52-424f-a4cc-0ef3b599fc9e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c6bb492c-0a65-478c-af55-ac7163421fd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "444949a4-6d6f-4799-bfed-0a0546425c64",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "437e58b3-a8ef-4588-abdc-f309be2237b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2093fc78-49fa-45f2-b8ad-5c9a0cd1d577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe09ce55-0bc9-4615-8ce8-47ac16f7ec30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475a7196-bfe2-4330-b657-091f6a643b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffaf5a87-8369-49d7-8c9f-e5491b9c18e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0557172c-b469-453f-97ad-58d0810efe84",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c68ec7-2443-4e35-a6a9-2a75e49d3ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1965893-ba26-4c70-98c4-206dbc8d7d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfdde9a-6f3e-4e44-b972-e0109ee07588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fbaa18-4613-472f-8c1f-620a6c78f3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7eec53-c4e7-46d3-b3b3-eb8641099f6b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daccb21-bd75-458b-be0b-6f9cd1c44ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfea3f17-afed-4551-9743-3c93308fe462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b623c79-7221-4720-8229-26c017185da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8eae09f-2b37-4c1a-8d9d-4bfc5ec24629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78327de6-2719-46c2-9e40-82422f78a866",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d93a20-447a-454f-8523-69292fc9b5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51dff9b-a01e-440e-8821-07989c026f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de356af4-579a-4179-a5b4-01fb6c9e65bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1282ab40-def8-4842-9db1-5deffe6e3ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9273a9ca-9781-49fa-8820-f89d21a87046",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa151f8-fdb1-4189-aed0-f990a97e746a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5032bc-506f-4edf-a3e9-104cd3e3751a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5a7baa-b159-4bf8-b0e9-eaa328dd23dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21bfb008-dc4c-4702-a14d-245c4b2af395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771c9dea-1873-4142-bc66-8d73f4c35a7c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054092de-a4aa-4e8d-9f00-e99f6c29af0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e838a16d-d8f5-4a41-a763-de3968f3e4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5baa49-a5c5-49eb-bc49-7d7396743bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2f53fa-c775-4dfb-a1e9-83e24cd955f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc4fe16-28fc-4571-8fda-1a2ebaaf35d8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376d7e2e-3269-4f6c-ad1e-61261bc63e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae78e9a2-1581-4cfe-9071-5c7ba82eea29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cfe85b-3405-40d9-b3c4-47f142d84f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8f85f1-9cac-4e0b-ba74-d0c8c9b71c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9d7678-37c4-40c1-8a44-b3939b23f6ec",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61ca909-8037-43fc-86ea-0c0f431bc9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f31e16a-43a0-4bf0-9cf8-823d97739b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c84c1ef-c140-4470-816e-f9892dfe92c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a64f00c-49c9-49c0-90dd-edddb582d5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04596e58-c475-4f2f-b751-e8d1ce868563",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796a502e-efa6-48a5-a8b7-72d96a5b6c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fdc67c3-4297-4a02-9ef5-e37e04270d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9568ff-7c01-4365-b4a3-b7f957d27f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da075cff-489e-4268-8941-2fe421ce67a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca33b04c-0ae4-49a7-968e-9f6b85586191",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c8e8e0-356c-44d1-b1c2-26982a097481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2be356-4e94-48d9-93dd-fbca2e872eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ae0170-02e0-4361-a4ff-1ae3a18599a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c07b5e8-167f-4eee-b0bf-b7a380e55a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7058c1-0880-4fe2-a20c-2b96fc240b91",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab361f3a-d512-4209-b5d2-f5de3527a89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9b2bf4-68b8-4031-bb7b-259f057d4261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5c263a-26f8-46dd-8b29-068df0fdfc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "910462e7-17ab-4d19-9b19-573aaefd7451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09310421-3b7b-4bb6-8ccb-b05bedcb15d4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1879cd0d-2230-45d4-a1ec-bba62a3d2629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87ec27f-7c55-4874-9bf7-8c7245e04c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e38e284-f587-428f-bd51-38b60b5e9d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca27849-0bef-48e6-822a-771206034ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7201dbee-70f0-427b-aca0-7961dd167bf3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6af09de-f712-4abd-9e2e-fa51a3a6f239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d5add8-8e84-4456-a91c-7356635e2d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920e9ec6-7190-4469-ae18-ca1fe6c57e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a8bf30-f83c-442e-98b1-389e37e59a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b8c44e-54ae-4c20-9e95-2c1052c4539a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8c000d-b680-44b0-924f-bb14b6ee45ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c22f4b-1af7-4163-925c-c2f4519ace7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6713ded-f6ab-4d36-8b4d-761bc5415b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b5b8ae-0206-48b6-9340-0e9822fa11eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800d6206-ac31-498c-8498-8a42f6c2812e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5556304-d1f3-4ce2-b233-83088593bcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27abdc6e-f1d3-4a80-b412-8dfe35fc6980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83ad780-48d1-4223-a16d-0b090a95cc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5e7b02-34f8-4cde-8752-c8a33b90b26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7d3515-4909-426b-b4b1-66c5c7a10d98",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d305712-a964-4067-b856-ca5ed3e7542c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4122de7e-21bb-4cf5-81f4-06f843486f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69f4be5-4a4a-4fd1-af1a-d9fbaaa74a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8735b1-dd55-4e6f-846a-1401853b9371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee47954-3b05-4ac4-a16b-fc20e3244737",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b57401-93e6-42ad-9510-2bc0fbcc6f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754842a2-67c9-45ff-9f7d-2ca89a038837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af33dd1-c8c3-4497-a09d-57794393cd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b9bbf4-2036-4aef-9bef-016b587738af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce197752-fe76-4d3c-bec8-5b807c10d43c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2086a3-09fd-4e04-8df8-7ba69cd42969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c669e033-6cb2-4b51-974b-4ad313fc36be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b494f0a-3871-481d-a26c-783d69bd5a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "12feabd9-96e1-4610-abb0-ae94e03178b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2b8c8d-4719-4859-a7f4-f196f801f3c2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c858a9b-bc4b-476c-a340-744f45e5d2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a64c68-dbc5-460c-a72e-129c6953c890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62b421a-0b68-46bc-93f7-5af1f2139a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd92a27-f0c4-4a2f-b24c-e95e271b7e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60106efc-454b-4da9-b58b-0200788fb8e1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563694b8-2cec-416e-9f9d-5c42d1a484c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fc83db-48fc-4398-91ee-dfd83693247e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fa1eeb-c873-4879-a85b-e97395778041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0370f298-5822-4e8b-a3ce-7e6479bc1d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81f45aa-8557-4a2d-9288-3b9f8884fb1e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c868276e-c004-4e6a-88d9-be246e777159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e120ba4-b834-4a29-b275-46836ea7e8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5eb101-c2cf-42c2-9ab9-3a42dfc32fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "140fd7e0-870a-494a-822b-72083b8ca64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2350902-14ac-41e7-95fe-1e9fc775bbe0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23751320-d82c-4970-ad2e-b72e8337c18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b689a4e5-5097-4181-bae2-87b7d25cd44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebc1c56-adfc-4e55-afbe-6e6fa850d37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4b2a89-a5f8-4f6d-99d7-654583c54579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dada2f-2b77-4ea3-8b0a-a2781948b17f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3354d65-b799-41e1-803b-4cce0fed8b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa7936e-f114-466b-aba0-c636a188ae04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c841dfa5-bb86-41b3-baa8-c4045830a069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5547e63-7950-415c-88b7-a8403f6a771f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89584f17-eb5d-44c5-b926-29a4db1ec3a2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f25fec-487c-430f-8129-97cb64b575cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc60806d-934d-40c1-9701-6cf2da6601f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814c49e5-803d-47c7-85da-bafb0a7c9cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e95f01-eff5-4d25-ad31-64484d74b969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2c582a-e8af-4047-ab69-abb13fbf4421",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d3f987-d08b-49f7-9b45-c2e85acfd5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af3cf15-74db-4af0-b0bf-c7004451b151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818d8aa5-0603-4290-8d62-513e933e65b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf2d4bf-1ae0-453f-87b0-a7e6d17c31f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a3e5ae-a05c-46d9-b1d3-f0f72ce3f422",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6743eb2-13f8-4512-a353-d380195f0bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75f27e7-af98-44e7-adce-0561477e6ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306ab98e-32c1-4a4d-a055-59c1af22c9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b017e9-7516-47f3-a697-e7ba1cf2d2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1311365d-a226-43bd-8c4e-838ff2298b93",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2d4b8c-9c8e-4ef5-bf9a-44de55078a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6fe501-3047-4e3f-95af-97da9af3b454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3055dc0-7a5a-453b-ac05-2b860131c4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a4d418-2e27-4b41-9f9b-b0964cfebfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36c655f-7256-4486-b7a1-1fb957f23597",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581ac8d0-5ba5-4a6a-a18c-cd11f06a38dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c6e397-3f52-4098-b655-0592521d6fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f487e2e8-49ab-4313-b05d-1d5bb2e9ad40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb86bbc-d4cc-4eff-9953-d9804162087f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1783c8-f8ee-4b58-809c-47209294ec2f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43b88ed-4662-4663-83c4-bf54755b312e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea827a25-fd3e-49c3-850c-460d69813683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b758db18-395c-4eb6-a584-7ddc59c4506a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67752841-972d-4b26-8a9e-7da6141977b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890e0fa3-a2bb-4b00-bf7c-22216a6eec4b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a41234-1329-459a-9579-30c0c6d4bff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d095fc4-e9f2-4dd9-90e2-26ee8937cd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e18995-9dec-4fb3-a3ae-3de88868abf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa98978-1cc5-4fc2-a138-649b16c1b980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebba1c2c-140e-49f8-9d67-82918b672a3e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097d5461-5342-435f-afe3-9125c768a329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fae7bc-036f-42c1-bd3b-90c4668e857f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadb020f-4b9a-4379-a03e-45edb11b26a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa07c004-77dd-46a5-bc79-b01c93f6da8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0811fd7c-2d27-482c-8101-ba7a98c501ba",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea92ef2-4710-45ba-8d05-7b7fa81ae6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629a267f-3ced-473e-b62a-ba920fe6362f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4354c3-75c6-4f5b-9fd6-b7650f9423e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e475035e-4b23-4ce1-b6e9-d5249554a200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f125bdf6-fc23-4e7f-8b44-9ee3abef95e4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c31a3c6-47ee-4535-9141-4a57d32a9d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd194ef-3293-4cb1-bea9-e50d30ecbbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ff2b2d-d081-44f4-b1ff-7d49abdb9f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5549960d-1d64-4635-b6ee-156c15fe8f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c8fb8d-e7fc-4a74-b1f4-98ba27081b71",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296f712d-7977-4d93-93a1-3b7cd8190765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f48f2c-5c65-47a9-850e-1a7f6bb41ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c523ccf-8939-49c8-aeb0-927a2dd0f305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95bf6d22-30d4-4601-8048-4ba0a5216a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a020d72-e723-4019-93c3-4b1396b156fc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b163dff-5c1f-4b85-a5c0-8d7acee9474a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f100998-c444-4607-aee7-e2ef7f756b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bae108-ea17-4197-ba13-0c38f23b2c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b88f240-901a-4328-a306-2a38db88912d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b96f6e-2a70-45a0-9cd9-a09c64b61a19",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963ff68f-12b0-43df-a23d-fa8f10e2117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87444eb9-5b2e-446e-832d-b4776e7e46ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163d2693-a104-4090-9b41-43a69692aff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8f21b0-a5f3-47f0-9853-54d75aea1513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551e6df3-18fd-4b16-937f-e66601f9b2e2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5934c35-9a05-4a1e-925d-57aa3d7c8d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f288037-0c8c-4a39-ae65-c362596769b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f73c33-dc4d-4fe8-a9da-d773513a577a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d34950-05a3-47c1-b8ba-8fb6418171a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "400787ea-2af0-497a-8e3d-c2944b8a1dfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da758f98-d0a5-424e-98d0-7ba4e623cd73",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a77487-35fb-48c8-91e8-265c527a8169",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2031e3-befa-49ec-98c4-0651fbe59ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf90545-892f-4505-a322-663d158b0c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64914139-107d-400d-918b-d4013d684c34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41b24b83-82e0-489f-bc44-5b558e20ee3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "927de142-e2f4-4fcd-947b-4a87c61a7335"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "631ec8a1-fe62-420b-bfde-59459a1ae5d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1044daa-fae2-4777-8bbb-841de28cf62d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8894cd57-999f-4514-8b2e-85a92e8fd82c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21e90568-55e2-4a19-bcd5-de33f835ced4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b261175-90ea-4f53-aeee-37135a820c0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79b438d0-9895-4822-a4a1-0bc69753d5f8"
            }
          }
        ]
      },
      {
        "id": "3b58773d-f14e-44f1-bff3-7ba076516e7e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6e13f6c9-e04c-4cc7-85a4-e14a9d7c8364",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0279543f-2527-40e8-8caa-9be155b13e86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a33c9049-e313-45ec-bfd4-dccbc0705622",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4960db-e91e-4b40-aee5-863e57521b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e925189-2660-4bf8-b59b-0ffc25a3de2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ac2246-3e85-44ba-b094-79a19e8c9490",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fdf512-bf68-4eb6-a646-79b8652ffc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d92a60-4f58-43bf-9c26-b048a632a7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a1b5b7-85aa-4947-9af4-a3b428e82f03",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4f2de0-9e6e-4aea-821c-315f34253da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76019269-1b21-4185-8c79-6759fac78f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cb6935-1f2c-4e2a-8721-882c96e4b92e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554b12d2-fea9-4fef-8643-ac564ae63b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55974530-24a6-4776-9642-ba216e736f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e509c369-49d9-4caa-be22-6c553d6e5963",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bd8154-3470-4d1b-a563-8f66c1a996f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce56db2b-5666-4f83-87f4-3aecfd578315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbea5aa1-8001-49f0-a37a-4dc9cf44b136",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e042fccf-d619-4f1f-ba7c-f845c271839f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac22929-fee5-4cda-a453-07993392f50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68defe4-64ea-44da-8961-2a7bb6f8c2c2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4c59d0-d8d1-4b08-a91f-bfc9298b10c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01c371e-092f-479d-afdc-88f80157660d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a3363b-28b0-43bf-88aa-89d4dea140df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3e25c6-a889-459b-8b39-35cb79fb9d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172294d9-b802-482f-a231-19a693923d32",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e190da5-cabb-4637-a2da-a41f79a8690f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a33a7e-d17b-4fba-a471-6a41d9fab0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace86fff-4f9b-4f1f-9405-8fab6e802825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46894380-76c1-4cb1-b972-94093ebcf144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4850d04-10c5-4bbd-8bb3-5837cad7e663",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8211b84d-bd75-4138-9ac8-908f1237a2a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e370c1-7939-4070-8fc2-69e6ed505d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1a8b53-e770-4433-a308-d7f415f899b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28896a8-4e18-4645-897e-39fbb812b17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc2bc7c-a0e2-4629-9b1e-6ab03c078599",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05eabff-f79c-4fc5-bcbb-d03aa27a49de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4609227e-c98f-47cf-804e-711934f8db5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd8c516-fd9a-4baa-9391-7abdcf4d2405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e725df98-da81-4072-b9af-28d64b399f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c09635-1b27-44bc-a2e7-498373d109eb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd040184-f1e0-4e10-b548-b81c67540b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb1b5c4-a5e5-49c3-ad25-f14c36393f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9de6a1-d369-42e6-a9ea-3e8ef4e6427e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a1b43b-a505-4aa5-9869-382c83d2bc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056d63d4-331b-4617-8610-a3d3baea8648",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5053398-f4ec-43b6-bce2-eb928376dfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9868f285-df89-4fbf-ab83-ab2cdd85fadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ac012a-3021-45e7-afaf-b969d17bc5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e960b88-3a08-48d6-8a27-b0af1400c7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c30cddf-b2ad-422f-8867-eceea95c3662",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b287863-2101-4f51-b7e8-35220b12143e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8606c036-0475-4bb9-945c-f09739bd981a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa63a6ad-4650-4e89-98a2-691b27a07a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1346051-9fc9-4aff-8b56-d459e86b7a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43a2e10-860f-44a1-be5b-623a8a65e6e9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a48b5e-2f10-475d-9c12-312385e76d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2474832-9872-43c0-a056-78f4680ca1a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c16a46-30e4-4bca-95c2-a721c1976457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21b4830-2d37-4a07-b31f-1bad0a9701c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c460df-cdd1-4fe6-a194-72c67a992381",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0449bef9-1b92-4bab-bb86-961fa4cca9bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb6871d-e6c1-4ffc-b973-d8c63eb46017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a162e7a-fca1-412c-896e-7977d2841e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61dba2e4-165f-45ad-8565-ee5a576b0b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d93bba9-4f56-4b55-ae47-b545017dcf28",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88df5bfe-0d9b-490e-914d-d720b96f531c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e673bf8-2231-46f5-af14-50b6ea04f859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d68371b-bc39-4cd7-ac6e-7003e425994c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51c6268-c5dd-4bc0-b19c-0d8112b12d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95cb404-dea2-4ad4-b2a4-e0a42ef21497",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020a2575-3fba-439d-a72f-fb48afa13897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737ba1ca-b137-4943-86ee-66e83ee1a9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01ce2b1-6a84-430e-ac0d-b81b9b4dc7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30884745-218a-42d6-81dc-718181bf39d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668c996a-3273-4f86-88d5-b6cbc9eaf5d6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1a1e8f-d184-4aa2-9ae2-2dbd30bc349b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b624e5-a4ef-4a2b-bc5c-59ac478ba747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8058dc-5c05-4864-886e-432df30933a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d75b3f-0bd2-40d4-b581-cfb66eb2a781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68218d1a-9dbb-4155-a5e1-7391303f1441",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb44907-6d68-438f-a86b-dc1e126d71c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb0afd0-e128-4e36-81b8-8098c8c22a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e276126-4776-484e-af85-e31012850d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4fee7b-6ae4-4288-9c01-8205fcdb05cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611a83ef-8ac0-4b41-a214-c8d24779bfc3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cfb3c8-2e3f-4744-a53a-b6f8afedca98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffead672-50db-4f15-b57a-4aa6dfbaa62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e693132a-f4d2-4643-b469-ae83b9772c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b66d79a-2ff2-4966-af39-ea5e0810300d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17925fe5-0ec6-43c8-8b1c-067db3ebbe06",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8d2c9b-ec3d-43ff-82b6-ac0d6a9a4586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5b1745-7e8f-462c-968b-7d6e81e806d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f40f09-a20e-4697-a2bf-2eb265474cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a254fe-b978-4a54-ba78-9d021a233194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f66b554-5c60-4304-8b1d-f96ef1d195e8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b494f42c-af34-45e2-9897-3d91c5010f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009e22cb-c7a6-47fd-aac6-c11cfa3b2ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12ca8da-5974-44cd-9fae-a8a48c02b39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d035a328-1924-46dd-bf9f-2c4c311f9b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a50220-b41f-44f6-8188-bb16999a2637",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab4fea7-5b60-424a-814c-15b6b881c389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2912dab-f458-4d40-bad5-51cc1d0433a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef45c718-24ad-4fcd-9cee-65daa1a58592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f1dca5-84b1-44f0-9969-374b73971ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821d8d39-b2ce-47a3-b7fc-76d37329d46e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eedb36-e0bd-4dfb-bc48-73d0db6c6151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da86e092-fa58-464f-822c-88e017b05813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41955403-ee1d-47e9-b7e2-40a45908b815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab24794e-cdba-48f7-9fc6-8ff8cf86ca89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa067c6-7403-4174-bf46-7fa62f6b533f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae369002-afbd-466b-bb4d-5eff410c1631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f4639f-33ac-4f4a-90d8-fa0fbe8e0643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bdbb98-ce75-4afc-b02e-ade3bf1ad3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839c84c7-0056-4144-8ffb-b74330ff17eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b45cbb-0845-4551-a182-d53fade7ab89",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7745c833-060e-4af7-807b-f4cbf1ddde93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c799b51-cf35-4b1b-bd1a-2b59a3ef0bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75698731-8b8b-422e-9e12-aa696e7a419b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca07bb04-b982-46b5-8ed6-dbe19c4b6183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40538a0c-8d32-4d7b-a5cf-57a115e975fd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6237148f-420b-4a43-b8d4-c869b9661f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c3f63a7-f37f-41e4-8326-02b3f45a550e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b017453a-30e1-48c6-b71b-32cb1a373bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9073250-c4be-4d35-9650-dcac7d76aa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f087d06-4c0a-439d-bd05-cc98c982b29f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d275c09-1e9e-4e07-91e2-2494718da308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d637ebb8-e77f-4324-afa9-03f0d64237ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daca7b28-fb55-408a-9565-4b4e73d154f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc60a661-39e1-474b-82c3-4ddb269e3e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef5a263-8736-4035-afce-efc97683d8fc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6d0a29-48fe-40b4-8358-fc3ad2397442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a42ccc-61b3-48ba-845b-668cee5e1fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0440bfb9-5c1a-4fbe-b30e-e765b36d406b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614b8c6b-33e3-4712-bdd2-aec1c4cc25c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dc5d2c-dfeb-451c-9869-f54316c284ac",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f4711b-c2cb-4446-805e-c6cfc532969b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29593c97-5b9f-46c8-9e85-f33e3cedd7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc85525-86fc-4f75-ae78-e89d3f208bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa10ea3d-652a-4651-b828-c9148886a68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cacb08-f81f-400a-a564-93e970fcc7ec",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c04da21-a75a-4dd2-acc2-a3820531f52c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce87a0c9-3bfa-465b-8a99-bcd67a9a8d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a52967-86d9-49e4-b1d2-787ae76bcff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc52d596-635a-498e-81b4-c045fabfd4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b939fb11-079a-4774-8efc-2594cae2e64d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecba6bd4-2907-44d1-bca0-6b5928220bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e1253d-4677-4904-a496-6722fef41484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c197d6d-e1dc-43c9-8237-32ca6f29fa88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b685fc-e636-40c5-b549-ee9d74005254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df311d3c-d3dd-4722-88d5-66c3bcf14698",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bcdb76-fac1-4e01-9a12-630d0d7dafe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68999696-ad33-411d-8ba2-c9fa08ba1757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7664bd66-93fe-4216-8ff9-85acd87781b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6971b24b-cbee-4773-baf9-51311cac7970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351d014a-4c8c-4e6a-8975-434c34616e7a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725efae0-67b0-4dbc-afc6-557bb0749871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc777ce-3d4c-45cb-8f08-3c9e2015d33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a996880-37a1-43e2-90f5-e534ac389b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2796d3-0d3f-4a6d-964c-57885aed1b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a6cd27-a49c-40ba-b9c9-033fbbd2f9d4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36d125f-8d6d-4ca9-85e1-fe733155cadb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47def3c1-795e-486e-95d7-a73172029b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a93631-5ba2-4792-94c2-9968e1080688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ded93f1-5bf7-429c-b16a-c8376ecf9dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d54546-c316-459b-a8eb-c89732274f61",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32252c4-6dad-40bc-8daf-36d2faca893a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212298ab-2208-40f3-80ad-139f5e7bb50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e198e49a-5d75-4c5f-bcc9-d2694238ade0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f28abab-6ab7-46dd-9cec-571001e898e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bb8dbc-f036-458d-8d38-a5ce14a8f983",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a37d2b8-be8b-4ae0-bff0-a6c757831504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbe539a-91b7-4463-b69e-fe0dfd7508f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6f13e0-8db2-4ac1-8b69-82bcaa62ac67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d398b228-655a-4533-a22c-ab1cc9e098b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6733bdde-bcd6-422f-8f36-2e58a6ff224a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7a5dbc-d0ed-4a7b-aa61-254df19dfb8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9743ab-640e-47df-bada-e7562e356860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b53dc53-341b-40a7-89aa-baf8883ea36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3502fc-4b4d-4b7c-8ac7-46ab8f19840f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145ad4e0-21d0-42ae-a701-db03ea05fdb5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51eda268-ed44-4055-ac88-dd4bee74880f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7616548b-83e8-465f-8e6c-9447cd27cace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a093069-57c2-4973-982a-3ed9125eca85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30865e45-f6d1-4101-9d72-a4b588b08cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9683235b-6483-4fe8-821d-c3890b3c82f8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e442a31-8432-44e8-ab49-519b37e7efb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a92550-ffab-4845-8a7a-51e99f4ffc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4487c70f-dbac-4c65-8821-7e126d6e81ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffca7c9-3bee-4511-968a-b1cc804d6857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aedbe0-44a5-45dc-a4d7-6f13b605bc6b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a276ad5f-c064-404f-a68b-4e9bbd6550d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79bb0a0e-6b71-4b56-a5fd-f1f6f75a560c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b84379-fcb8-44a3-8099-4a5ae305ed57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6072177c-b7a9-422a-8df0-33389114a19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cf38d1-28f3-4e2f-a8f5-e4b5ae08c415",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f461551-e54d-45ee-9706-85292524ed18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166180d9-8b6c-4ceb-bf56-db7f1cfc033d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7954f8c-f5c7-4336-a717-332bf92f5aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1521619d-e53c-426f-811e-e27bfb3bdfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa30826-c90f-478b-96dd-0e93d172c3b3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f05a682-86f3-4d65-80d5-404c1b81c26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4268295c-2cbe-4867-8847-6c458a44f3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b7fb56-cda2-41fb-bbcf-2cf46a2c0a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6faa2d-0f9f-4f90-9717-e336996a2757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558e7ecd-ba8b-4739-8fc7-84184374ae18",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8ae0de-fca5-4292-8924-2cba57129128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c868dc90-f0f0-44b8-a47a-bca5c8ebf41e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74e2e0b-2749-47bb-982c-916409ac1380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ad85ea-6b0b-46ee-b3c7-3a93f64f0630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f1c001-652c-446b-b1b3-e39d3977f4e2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b9d413-6de6-4b03-9c37-323365f6d582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eaac217-5230-42ed-8625-9896287ecd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463099ff-c6e3-424f-835c-664d43bc179a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791169a9-6605-45c7-abd6-292a55515f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee22e590-8b1d-4442-9e4d-5dbfb53f3111",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71237736-eff9-477f-8dd5-5bf731189248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2730109-2d9a-4261-9365-0d942b4e6caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1618f7-c59d-4975-9fb4-ed234e2bc012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df485359-5982-40ff-bf46-559674d508e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c51e65b-126d-4f52-859c-9a5d91e98764",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8ba7e5-e869-41c8-a020-b48b469246c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da4bc6b-b838-4415-aaac-b41241e02c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5ba7cd-04cb-46ae-aab9-95c1b6cdf72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ffbfa7-d784-45fb-b34c-77b9211850f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b72e83-a1f5-4a95-a536-535263ed2496",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe0c7ff-290a-42f4-8e26-3fdf94ed6b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18175a9-f279-4d40-accc-5e07194d5e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1316d6a4-39bc-442c-8441-ca1c37e44757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04a3846-7c5d-48c4-a52b-d5093eddeaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad29e31-c67c-48d7-b89a-2b12d5b6b57d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a81700-1fcc-4b89-b149-5fc2b9c96f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e5ead7-c716-4867-bf37-d0f6fe82ed63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f46e04e-48f9-44e9-99fb-f89df092e533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8431dbc-a0c0-4449-8495-1f3c7eb57658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55598522-154c-4586-8be2-124eab44ee63",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ea56c7-94f7-4bc2-8fe8-ca40bd51a7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89d68cc-fe1d-431f-9d65-23fcb4781f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38546f3-598c-439b-ba15-b065737421c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af4b472-6189-4ecf-9798-8b6b7aa56046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bb5792-70d9-4348-825f-4869431df2c0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e132854b-276f-492d-ad18-5e0a33f4e136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a8aced-4ac0-4bb3-89f5-c356f2b79445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f765f49-a7ba-428a-b0fe-9d71574e1c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e27c15-f177-41be-bc88-da344b573ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f1af63-63d1-4a1c-b9be-6031afb99a62",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170c90e0-433e-4eec-9e11-bc0f87a975a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc08efaf-8553-4345-9596-1a4c94c5ea68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240d55de-0e2b-40b7-82d8-d947c9ca7ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b2dbcd-9b2f-4ffd-a9b7-2e378d01545f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfef3df-08e7-4401-8cb3-52a922b90d9d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6923fc-a0a2-496a-a6fc-83006201ef70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4adef35-a211-451d-9da4-6cf8ac7173da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bf5e52-3ca5-41ea-b59f-52f7964b28cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89a115b-df00-407a-ac33-ff25c3550744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da48d30-6f87-45c2-900e-3b1d656cfdcc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d57e3c0-9df1-420a-a3c4-b6d4285f838c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd4de4d-6b4e-4d45-8e9e-c3e58a9ae1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49072286-5097-44f4-9686-10ecaa83bf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ada771b-e560-438d-8d30-08a491d3a63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32bf440-c5c5-4dce-990d-f3368dd2efea",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5013babb-bb82-4d1e-bedc-fbe6e3c06b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1dc9b8-7670-4491-987f-b3d63ed43e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db277dc-b1b9-45e6-9a78-d618c75c63a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521a7442-5f60-47e7-8fa6-9453806d2727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f48186d-34e1-47a1-a939-e1d87eb9167d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e698353c-e85e-4b64-b646-439b669a6317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba1ab51-c083-4e02-913c-31728980f14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0ac9fb-94a4-4022-9d51-187f0e367a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dee73d-4e7d-4da6-b47a-b4d6298df6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b2440e-1a74-4624-bf56-685dace4da0e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8157bee-fcc8-4f0e-b4c0-a43fe578329c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefa50b5-77bb-4e46-91c6-f5931432dda3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b20d35-b99f-4cc4-8b97-e0cb25320fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e759d35d-5c28-4d5c-be7a-cb9380620859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6d8447-7449-4735-872f-3a11f30f808d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96a71c9-ef9a-4d94-b1d9-29da40cb84c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd08682-046b-4c76-ab75-cd7c8eb5535e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3639826a-94a7-4107-b7db-2b12d83501cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01138c1e-3e9f-40cb-9697-c4943bb57024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fda820-b357-4dc3-9c70-8329ee53060f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c0a72c-7bb7-43eb-a5c0-4839ae2685e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc168d4-e88b-4a98-bdbb-a890f0eae572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8373a9b-9ed3-472a-92e7-d868b8348fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af774aec-9394-493c-a306-043c6986e0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d71f3c5-f237-4d24-9696-bb817505c101",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011c2154-e767-4b58-b96c-823a37c2e5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743b2ab1-60be-4a6a-baec-285d81d4269c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa0a1e4-b8f8-403a-b5fb-37311912f2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8057233a-e8ca-45a5-8c8c-ff6b22dab8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3affd65-16af-41dc-a047-d1b34fcbe8d0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f59bd1-9a2f-4680-bb6b-57bdd725dd90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7fd8a1-b152-47cf-bedc-ba62a716d4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9065345c-9412-41ef-b43a-18a0afaedd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4be73a-5cb2-419c-b898-338d2fedd8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd90a805-6444-4734-bcba-a3508ae275b6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00913f8-26df-4c17-8100-0bdfc6058f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e21657c-5b16-469f-9939-4d5059110ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c407574-2bfa-4bc2-b6c4-ead48137c43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e325ef06-ba6f-47d6-af35-5e8f168b9e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc935a8d-0381-4d2d-a011-5cd1642598a6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0fbd07-e447-46cb-b229-6f45b7d7264a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c624b31c-8190-4ce4-8e54-8374e3b344cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9742a48-eb26-4b50-8a11-4eb86db42160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b599cdb-f5d5-4bb9-9e85-9cc35003a89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4980bc5e-6ae4-40ff-a739-28ac64f3c199",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d45b79d-604e-43e6-90ab-702605d70b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81459a8-b170-4bfc-a249-9f7f47a87008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0e1cf0-d82b-403e-947a-a8ce99311eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef88bef-62a8-4b19-8c7e-c1113bf43565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc0fae2-d3c9-4d85-aae0-f1d78b5ee396",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a796761f-03a6-4bbe-888b-da9bf128c42c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f05d3a-45b8-4a5b-8700-bf761a677724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c28780-7e4c-402c-b77b-370a35d593b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5687b9ca-2867-43e0-a041-2ccb15563d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70656aaa-7ee4-46ef-93be-2b4858e23c60",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9211108f-5a3e-47a9-bba6-dce256a54002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f9e6365-a47d-4178-ba71-e8c73c481190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39b2617-72f3-4e93-adde-25dcf482c2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec4c2a4-1cf9-4efe-a50a-883660288330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaca3b53-cc3e-47fa-8c4e-655a0cfb2af2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dbc5d1-19b4-4870-94cc-38e0ca10c0bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492427ce-1b14-43dc-a4a9-2c1cd57d8b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba8f500-ce9b-4055-9f96-67b31f51aae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecadc02d-fe56-450d-a02f-4f87f233d2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd36a31-c3c2-4111-9feb-612b5a618183",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eb8414-d946-44b0-8808-6f7ac1d428c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb9b6291-1a53-40e9-bbb6-ecffd12cbe4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69078b13-12e8-4ab1-b646-704f1eea1c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68faf89a-be47-446a-aede-c27943cf6ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c935ca3-3d27-474e-b571-1f380209aac1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a0f5c9-abd0-4b87-9ff9-cd38e941c49e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a46142-bd94-4873-8106-bad7e30344d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d171999-9aa4-4936-9389-8c9c16ade596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c900e235-c847-4393-945f-51f330f6a11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9af6179-d98d-43fe-8941-63cb14d83dd8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d75f82a-93d5-4a4e-a684-0d80b321f2a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe2a41a6-6665-4d2c-8ceb-a80f412ccd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a460c283-f8c1-438d-a8cc-1e5f641a178a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79684d36-ac8f-43c2-a3d4-ddeec6b7ff0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0810587d-9c73-4f01-92e7-ea94a097335f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7dd11fa-f0a9-4bd7-b8cd-4855292bfed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e44e8a0-fd3f-4c7e-8e5a-2e9965469915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffadf85-936a-411b-9861-352dc2f3620f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c27afc3-7e63-4f41-b095-33b49c6c4c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c307547-cb86-47b9-9169-50588d1a9f21",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca29c67-8498-444a-8bc1-f8a980c057cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d33482fc-b1a5-4846-a3b2-68c53515084b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e14130-aee1-4602-88c7-8c9590740d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d5e648-3d0d-44ec-9fe5-da789b9c7fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2f8837-9ec1-45d2-863c-ac187ea3faf7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd25cad-1082-498e-9aea-91009903f64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b9201ee-f214-4c24-b088-c73f7659696b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba089561-903a-4dc7-8801-9c59bb62e9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074d8152-616e-46c6-b1e0-3e349dcfecd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8670ee6a-0846-465a-8b8c-6b69043c4987",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a921490a-dd8c-483e-a278-c19d814b485b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9ed216-ae01-4a93-8829-791da03197ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3d145c-5ac6-42fe-abc2-e8eafa1f8dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5cb0a8-c6d9-4daa-8fa6-850837845a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7966f9be-c746-4b81-87c9-1b650fa9ff5c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a7548d-8a89-47f8-854b-ae7d252bf44b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "befd2b0e-83d9-4828-ba1c-b8a796c7ed4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ed2c89-0444-4fac-811f-7932874db83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9b7094-c7c1-4044-a408-af73226f91e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade861e8-6e79-4875-bdfc-ac0d53f66768",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1ee396-4216-41b9-8024-233aa18abb3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8cb1e2-db33-421b-90ef-7d8f0be2be61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b8b0e6-e77b-4905-929e-0d6c96eb9917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b850a19-eb1b-4ec1-b7cb-e3ce34ff738e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdd15b5-3608-49d9-bbce-d6f07dbd8b94",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1dd291-c028-4adc-ade1-9c569f264be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40713181-9db3-4ec4-9222-4dacf33de97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5947a246-bc09-4dc8-b3da-26de1b727a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2ec04a-c477-488f-969b-f830d701eaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b660248-5309-4ceb-bc19-32ab816176d6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454e6f4a-38b0-4660-93de-2c919be658dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913368ff-dd83-4d80-a2e1-15c13accfd69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55532ccd-ce90-497d-9ea7-f77fc19900c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9ed8bc-a21d-47b4-a1f8-c4044d5b4ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c349da-090b-43b1-add6-2786a25dd480",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cb4976-a7f6-45f2-b488-378d7399217b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e712ecb3-3d40-4786-b6dc-f48f8847704b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a3907f-9b71-4f15-8833-73e109b975a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35158a73-64e5-4f69-9ae8-4a4954bb2206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89911c68-e84c-4754-89dc-0edc76e62981",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d608de4-1a1e-4993-a56f-885790fc7ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3572a9ab-a1f6-492d-a6e8-8a04172c8c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab8d0ea-56ed-42f0-81b0-4da0dea786f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b254c1-0606-4fef-9503-2e9ab6c2b2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bec2f6f-7cec-4f65-86df-d66cdb0618b0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db7a5cf-8881-4f0d-a00e-cefa27097127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a34e8fb7-7d65-4460-bbe0-bd046d21fb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37d2a88-8f57-47fb-bb1d-900f34ba6e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cc050e-ee32-4b46-836e-b8ffc1ad40ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a88b22-5b8a-4c75-942b-efdacd00aff5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa38194-b396-42c5-8f08-a879abb523b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc04cbf-eb56-4dce-ac63-cd2a0142b3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8656b6d4-f66d-456d-9f82-72c559335f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb07f08a-4fcb-4ff9-944b-c94da1890fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13e7c7f-145e-4f1d-b5e2-df177c811306",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70a3307-6c20-4659-8c86-8e9803d870e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "649943f6-b13e-4f1c-9699-1483f45f6139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e128ff3d-2c1e-4a40-bdde-a1ad7c315015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4deae22e-767d-4bd8-a9b6-a8c6d8938e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f73ece-7aec-4091-bf5f-101baf35bbe0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d850eaf-7022-44b3-93b6-dcdad6837ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c573a1-54d1-4aa6-8524-800cf8e5fb3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8bf09a-9044-4ce5-b831-fbb558585269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460da7b9-5c3a-41de-8d14-6db31f60bcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47209fe3-dc7e-4529-a1d0-282efdc1b3c6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e801ab2-4697-4101-b638-8195fe5dfa65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91da241f-2ec2-44c4-b095-cd19103d2b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98be63e2-e407-4ae4-87e5-093097f2101e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6764ee3-0fa6-4535-a7dc-37b9d585bc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464129a7-fbff-46fa-b5a2-6ba2e069d586",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bb8ba5-2bd3-4302-94b7-9fa4e5e59118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "644efa04-1753-45dd-8f13-54db64a58514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafcf432-dd49-4a75-a60e-8c77a6f17bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1665dd51-d2d2-4190-9bc0-c166fc4ed8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e939e32-d42b-4d11-a3d6-1b6d52b24633",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1584f389-e873-4251-bbdc-62f954acc153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d505b0b2-5c81-4b1e-a93c-3751bd6e3a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df02e7f-7e92-44d2-a658-d84b6018a415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddc4c02-1a59-4dcc-b286-6bf764cde525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913e4edf-bf6c-460e-8f90-9c5fda2dfd02",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81135fee-cfe5-439d-acf9-b433482cb1c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1295f16a-1ebe-4746-adc3-c4df880f11fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00f57b8-372c-4d21-a896-703b810dea59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56959483-5f64-461a-902b-e21407bc3d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e8d755-0e6d-4f6d-bb6c-ad92e08001e7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2856bdb2-5218-4cc3-a08a-3c12965ad04e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f4508df-69a0-4920-aaf2-a90d75e39812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1008fd-eca1-470b-84be-977a2c397eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c554ae-8fe7-497b-a5f3-6ff1333e22c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63bba75-9724-495d-bb6d-89d6d06b8d7c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b86e5ff-3a77-444e-b8d7-6b60307d3705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994c8a9a-dd46-4cc0-86cb-7540133ae1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5194fc-b1d6-49ef-9acf-3ec02bc4f5e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a06fef-20fb-4de3-ac39-7c6ddffb047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8878df1f-3b85-4447-9814-b1e574e37af3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb7d82d-20a7-4a07-946e-1bc49f580483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9d98fb-ca72-4bca-b62c-115445b06240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3507221-8ef6-4eae-bb73-8af7d8b692bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccef38a9-9a4b-4044-8ce5-038259d22f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b0a44d-4295-4581-8af3-97e4a2bf383f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2e4d0a-656f-453b-aa67-a7d29549d43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc34e687-5d8a-4e13-8e31-5e11217e686b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f250d8-a136-4d7b-b601-7ce9270fd710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458cc1f3-7dba-47f4-b644-bc09d683eb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225d6d3d-e67e-4c02-8068-23f9b0263347",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1170778-77e6-492a-94d7-e70eac46a505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a3dd43-0495-4bdc-a4f7-dfd2dc97d0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5b05e1-a68e-405a-b70a-042bc31c19e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467ae0c7-abf5-4a8a-930a-83f0fbc55d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b57f1d2-96e8-42b2-b1db-5ffec53ca7ad",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99905c44-b38a-4622-88e4-261525eef528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ce078d3-a78f-47f8-a463-229d538b8e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0e635e-0b21-42ab-aba5-6c50c577e965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9122fb-cc00-4e59-b824-e5c116a70fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd789e5-89d5-48d7-9162-ee1ddd487a42",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6466da-049c-45ae-a69f-9eb113f83df9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86377d6d-180c-4b54-9f13-c98470a9d2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124078e2-9a31-47cc-a994-d25051df1416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df5cff5-665e-4ab0-b4db-e4e543ae7fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ea2093-1cdf-459f-b9bb-9efe30745908",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44021e4-d567-4dfe-8db3-2d83a93cd0ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4779ae4-2905-4b83-a0f7-0d272acedae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371aaa5c-bd36-4259-b30f-56dc83fe961b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b17e0f4-b563-4e5c-8740-998b8b65d62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667bcb40-6b56-44bd-a5ad-fca5c693cc6a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8139d0e8-27ed-4f35-99c0-83cd1613457c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c339c2ab-2772-4180-a969-752cc3cc69c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb45f84-635c-4797-b8b1-7ed5318052b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd24e09-3326-4d65-880d-501005013754"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b44e551e-7d39-43ed-8338-a40349dbeeb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71c3d7eb-0f35-47a9-937d-dbc820e140f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeecb070-11db-41dd-a866-62a9767f2044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd978d1f-a8bf-43ea-baaf-ef58d0a0f304"
                    }
                  }
                ]
              },
              {
                "id": "d0ad905b-e969-4ace-8704-ca64967980b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa57c22f-8967-4adf-ab4f-c2d9a722d1eb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5f4969-d53e-4bd8-b5b9-5076a77068bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9e209432-3ece-4522-a961-57dee3838680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19e9b16-76b9-4ae4-b468-2c63ffd8980a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7486fc47-6731-4f9b-8928-17b295f988f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83285232-563a-44b1-90aa-ea4bf559634f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe6cfbf4-fb31-423c-9c59-7053edfa81c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10644d8d-c365-4016-9e82-354b61897098",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e60ce1c5-4e19-4821-8365-fc5610962187"
                    }
                  }
                ]
              },
              {
                "id": "87b73982-6148-48ec-8799-09a72fedeb3d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da1e8092-53ee-4710-8ab3-8f8f53410316",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f175693-d94c-4069-9b25-e3370ec3a7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "13ecceb5-ff14-4e9d-9bef-af18c2557571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee30d03f-95a4-4a64-b908-0a3ccdf73a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133d8243-8e38-4dee-a9df-dab2e1cf8799"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "35fe92a9-fc3a-4f3c-8af5-341c10672d98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00b8a33d-250c-4058-8b82-7f083fbf1c55",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c886333-021a-4013-ae6f-08c581f7d102",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd095112-12a2-4de5-9717-ffab7eda6611"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5861d5fb-ca05-4237-9bf3-420f08abcc64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74ffacb1-2fb2-4d44-96af-92f7946d26b0"
                    }
                  }
                ]
              },
              {
                "id": "df0714c5-745f-4b83-89bb-15ac741db1d1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30e6fa80-fc24-4371-9b03-e6c49f1d3d00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6aa0848e-39f1-4fae-a207-b3730ef02de1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7e51c29-c309-4009-b791-344ed1d0ebc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "863fe841-9b35-4218-a01c-6078a0c7f6da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e520680-1767-4ab1-98f7-e60d231cc412",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fe2099cb-df76-4c00-8627-bab4464898b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d346b746-3903-49af-879b-5bbc408e40fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a66151b7-3e34-454f-8c1f-c7be8dc7fb67"
            }
          }
        ]
      },
      {
        "id": "ff818514-6067-4d2c-8a6a-8ae8913d43bd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9cc8fcbe-8714-4860-9b6f-29850001ef9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93b91446-6590-4506-acd6-ca1715be662e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba71194d-2c4d-41ec-90b4-68a1ce301947",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3337495d-0b8d-4467-8eb3-3f8d7d93c4ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "53324feb-cd86-4eb3-bca9-8e57e8afd5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89938c54-5462-4d3f-817f-49aa942f110c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32ac10ab-928f-4247-a738-968560ec1fd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "110987d9-264b-4586-af0f-452eea1cf2cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc323a2c-fc9c-42fd-9d7d-6677a4e3e25a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b08ff524-ae04-4b5c-a978-801ff56092bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b680e55-b527-40ba-ac6e-cf9ffae860e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bf635b5-3265-4d75-8d1d-99bd731dddf9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0cf15435-a7e3-4cb1-941a-3befbdef778f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38641695-3c35-4708-8171-af9ca1fce7e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f82ce1ca-98e4-4b8e-a95b-3cbeeb03c493"
            }
          }
        ]
      },
      {
        "id": "186d30cf-da8d-4176-b157-a1452c8e5861",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e3a2425e-7e90-4aca-b0cd-5fe336a04b56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b8ff8e4-ea84-450b-8aef-9c44de174325",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "273f4158-f528-4b45-9776-9395c573720e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccd2c20-0812-4e72-a351-0910d8dac42e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66b1f61b-a7bc-4b4d-8680-f67c8a799544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e697652-48e3-4ceb-9e43-08a4bebe1044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b279c20-f256-4682-a66d-e98f897328c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a47f567-12c5-41c4-b416-f6439d3ecd45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bae0172c-aedd-49af-b01e-701bfb4b8428"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdcf092f-a1cd-4928-a367-94059b2e8f79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68b5bdcb-58c1-407b-b9ff-151e8fbf7801"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "106937e1-bfee-46c6-91de-ab4d7c87f29b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4fb2d66a-9969-4db5-974b-7695c8df0b27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "305152ef-ec8c-4d46-b439-62668e215cac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44e5dd28-7d2e-40ce-a2c0-d6359321aef0"
            }
          }
        ]
      },
      {
        "id": "f786e87c-c06b-4d7d-b2a7-92d89de19379",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1c8a783c-739e-4fc7-aca7-adf7fd1021b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c23043a-a414-4440-9a60-63040aefb6f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37e50f55-227f-48cf-adca-ff5d92b294a8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021edd7d-fe6f-47fd-8c03-51def3a19124",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a104bc7-2acd-4e16-ab45-aaa98fce4b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28db3fd2-e7eb-4805-9771-b1da20e4fc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aff6fd7-e866-4290-9f86-48d5cf931ea1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc29ce3f-93f2-4668-b0b3-3f70f1938786",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3863e5ad-f264-4a9a-b998-d6b67358e5a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf1bbbed-0edd-4a4f-ae0a-b92bad1c9b4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa0b000d-37b2-4f1f-900d-b379bf55257c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3acf5267-f6e8-4d73-b8f8-7c4326d17a5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2109f72-cf32-4f3b-ac86-3d68e47ab444"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a14c03df-1935-4a68-b02e-ff83d3de6c96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "513aa7c4-b616-4397-8a50-a4e0da3602b9"
            }
          }
        ]
      },
      {
        "id": "15d89f6a-bc54-4612-967f-8051d8f134b5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f2978ec-6b07-45dc-b1c7-8a28ccb660c8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5584305a-5069-4709-a164-b70839bad933",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e7b9100b-d961-4860-8f84-6fd1e184d3c9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63374de6-838b-474e-9d51-64d1dffa503f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2bde381-8659-416b-83be-45de79815025",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 114.1071428571429,
      "responseMin": 4,
      "responseMax": 14869,
      "responseSd": 981.7221184660589,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717375106492,
      "completed": 1717375143466
    },
    "executions": [
      {
        "id": "e7da035e-2d0a-4d9c-9c74-d031a38f9d6e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7f5cb074-3f91-4987-b720-0a7017181d09",
          "httpRequestId": "b8d210e3-bda5-42ea-a7c1-afba159dba6c"
        },
        "item": {
          "id": "e7da035e-2d0a-4d9c-9c74-d031a38f9d6e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5e9f94f4-94f4-46a2-8083-3d207b3f47f5",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "e9979bb2-e3dc-44c4-b611-9eb8dd243aeb",
        "cursor": {
          "ref": "958922fd-fea4-4890-aa6d-08f5c7edce68",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7d7633df-f43b-4fac-a853-55d6891bb905"
        },
        "item": {
          "id": "e9979bb2-e3dc-44c4-b611-9eb8dd243aeb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9274e589-c88d-4718-ab7c-0bb1b331531a",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a9754056-ede6-4222-b9bb-8e8147c136b9",
        "cursor": {
          "ref": "65e90c06-f99e-42f9-a804-57281dea769d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ac93da86-ed2f-441f-97a7-9dc36c72e15c"
        },
        "item": {
          "id": "a9754056-ede6-4222-b9bb-8e8147c136b9",
          "name": "did_json"
        },
        "response": {
          "id": "47b9fc68-c83c-4dd2-a82e-fa23b4329080",
          "status": "OK",
          "code": 200,
          "responseTime": 211,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26994a16-fe8b-47c9-a8a5-4487aa76d6de",
        "cursor": {
          "ref": "3b6db7a9-a0dd-4916-b00f-6ca5ea8f5736",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4e1a6f8d-5cb5-441d-9462-f6718fb55dd7"
        },
        "item": {
          "id": "26994a16-fe8b-47c9-a8a5-4487aa76d6de",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d769d18-092e-4d40-ab91-f6cff05921e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 475,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26994a16-fe8b-47c9-a8a5-4487aa76d6de",
        "cursor": {
          "ref": "3b6db7a9-a0dd-4916-b00f-6ca5ea8f5736",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4e1a6f8d-5cb5-441d-9462-f6718fb55dd7"
        },
        "item": {
          "id": "26994a16-fe8b-47c9-a8a5-4487aa76d6de",
          "name": "did:invalid"
        },
        "response": {
          "id": "9d769d18-092e-4d40-ab91-f6cff05921e3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 475,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be0017a-ab32-47b1-a717-74db2cd8eb11",
        "cursor": {
          "ref": "e66f91cc-77cc-47cd-a209-7bd45d2dd425",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "61e3666c-d6f0-4b57-94c8-f6c2f1e826f4"
        },
        "item": {
          "id": "9be0017a-ab32-47b1-a717-74db2cd8eb11",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "60d6cc20-2b59-4ddd-b3f4-06b38e544935",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9617b155-19b0-41a4-8807-f42599515ce8",
        "cursor": {
          "ref": "3b2a5a96-ade4-4060-a063-2116def4da23",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "24902368-86da-4bdd-a510-823f341e4a2b"
        },
        "item": {
          "id": "9617b155-19b0-41a4-8807-f42599515ce8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "95dd8169-e1e3-4a89-a1c4-6789eb61e6d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 21,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3916ff-d369-4033-8a3f-591de70a4a04",
        "cursor": {
          "ref": "ce842773-4867-4d3f-a7a3-a04836b40cf6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d5bdb7f5-d606-4aa6-a6d7-4ce94ca3a37e"
        },
        "item": {
          "id": "eb3916ff-d369-4033-8a3f-591de70a4a04",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "85294560-401a-4a42-bfaa-13dffe9e6646",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389922eb-031a-4dea-a9e8-1ae858ae1645",
        "cursor": {
          "ref": "2875bd9c-2506-49a9-be79-faf8848b2a10",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ac03c5ef-ca1f-432e-8dd2-f06215b5a8be"
        },
        "item": {
          "id": "389922eb-031a-4dea-a9e8-1ae858ae1645",
          "name": "identifiers"
        },
        "response": {
          "id": "734dc700-4feb-4a14-989a-9600701b4699",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38ac105-4735-43a1-be0c-7b46df69ab79",
        "cursor": {
          "ref": "91d5c0bb-775d-4ff4-bd8c-d0468f3468f7",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d967df36-be64-4c58-80da-d10422b4ebb8"
        },
        "item": {
          "id": "e38ac105-4735-43a1-be0c-7b46df69ab79",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e0d464a6-e5e4-4dcb-b54f-db15dbafbc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8687a755-5870-4f00-88ed-fa59e4749652",
        "cursor": {
          "ref": "73d81539-a38b-4a81-babf-f092521412af",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f5dc9df8-4660-4f09-9506-35617a6a7bc9"
        },
        "item": {
          "id": "8687a755-5870-4f00-88ed-fa59e4749652",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "359c745f-056d-4302-ada6-930f560f789b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33be3ae7-4ebe-4d9b-8324-727217eedf0a",
        "cursor": {
          "ref": "eb31dca5-08c1-4707-ad3f-35af6ee71b7d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b2fbafa1-11e9-45ca-9d0e-aea2b21e0c72"
        },
        "item": {
          "id": "33be3ae7-4ebe-4d9b-8324-727217eedf0a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "df51e372-55c2-4a02-9b09-a618c2bdff90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201c84e9-c4d5-49fa-b5af-a1c12ec777a9",
        "cursor": {
          "ref": "ff50de8f-cc23-4e22-bc56-ace7d31c3d14",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fc6da7bc-5646-4285-89d5-1188bb6b93e7"
        },
        "item": {
          "id": "201c84e9-c4d5-49fa-b5af-a1c12ec777a9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "59488963-acf4-4891-ac04-b2823d61f908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43218e91-7292-450f-bea8-b33ca544ee11",
        "cursor": {
          "ref": "0f4581f0-ce1f-40e2-86e2-e5e900b01258",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9446d181-c86d-4333-abd8-13837e7a0365"
        },
        "item": {
          "id": "43218e91-7292-450f-bea8-b33ca544ee11",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b25dfa43-aa0e-4a26-930c-45c6f8ef1574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6346cb5-8f65-47bc-bcf8-19d7602e268b",
        "cursor": {
          "ref": "0d455c92-6af9-4500-88ca-bbedd634537a",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4f57adeb-6bde-4de9-b710-9c36aec01cd8"
        },
        "item": {
          "id": "a6346cb5-8f65-47bc-bcf8-19d7602e268b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "137737dd-146e-47e5-a6ef-98fad7f67b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6063d10-1ff8-4a91-9396-6ee7da6a5c09",
        "cursor": {
          "ref": "db6c0351-3dd2-4c09-968e-fadbded2ab97",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0152ef9a-1b74-48f3-99ed-68ad62fb1832"
        },
        "item": {
          "id": "b6063d10-1ff8-4a91-9396-6ee7da6a5c09",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5962c0f1-d1c8-4ec6-944a-a6fece1a1c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49bbd5d-abf0-46c8-b471-976f5c3436f5",
        "cursor": {
          "ref": "769e52b3-063e-4aa6-9580-88106881b0f9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a798c9b1-5ff8-4c37-9d5e-e0ba25f373f6"
        },
        "item": {
          "id": "a49bbd5d-abf0-46c8-b471-976f5c3436f5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d27aeb47-779a-40b2-bc83-4f0c2fa60a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27936894-62b1-4140-9de6-2ad5685836c4",
        "cursor": {
          "ref": "6ea84eaa-2a1a-45ff-a0a8-998e8fd13f07",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "db5b8e46-34e5-4a68-9f69-5235cb516a6e"
        },
        "item": {
          "id": "27936894-62b1-4140-9de6-2ad5685836c4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e27e710a-2a27-4f43-b3b8-400f821c084c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1c785a-b46c-4da2-b53f-0e73fdcb829e",
        "cursor": {
          "ref": "ab7d162a-5a6d-4f92-90f5-780de92d982f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "93407a0e-a82d-44cf-991a-9a04e4515f8f"
        },
        "item": {
          "id": "5b1c785a-b46c-4da2-b53f-0e73fdcb829e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a1f14897-536a-4aa0-8ff1-d67c04e65f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f91131-a222-4af0-a66c-9ec1f7df487d",
        "cursor": {
          "ref": "218a1220-774f-4293-b2fc-da6e7820e4a1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "22052645-ccb9-49e7-a7e2-c816788c680f"
        },
        "item": {
          "id": "a6f91131-a222-4af0-a66c-9ec1f7df487d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f3f8c635-ea27-4336-bc3a-05ada1ee412c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6baf83d-7bb1-455a-8c6c-49fda7da5d65",
        "cursor": {
          "ref": "038e3b8b-55d4-4489-8749-6c5e46734383",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5e84038f-e24d-4c3c-bf3c-118fa96caece"
        },
        "item": {
          "id": "e6baf83d-7bb1-455a-8c6c-49fda7da5d65",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "09ef0ad1-0407-4fbb-b108-290debf9d42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca5116a-815e-487d-b210-c99eb5f635c2",
        "cursor": {
          "ref": "38e55b16-70a1-4e6d-a3b9-cb774ed589ff",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7553a415-a0cb-4906-8859-50119dc6e4e9"
        },
        "item": {
          "id": "3ca5116a-815e-487d-b210-c99eb5f635c2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b935e02f-303e-451e-a3b3-c0cb4b6b7706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f59de0-8a26-48a4-858c-64bd8887b47a",
        "cursor": {
          "ref": "5633388c-37d6-4a52-a8e6-8f1811d03c68",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "18ef3b66-968c-4d69-8c56-c60579d7934c"
        },
        "item": {
          "id": "31f59de0-8a26-48a4-858c-64bd8887b47a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d98a5eee-bb3c-4aaa-8ef0-db63e719bdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad498e3-136c-4a7d-9857-c0e6a5f1c8b1",
        "cursor": {
          "ref": "5114b2a1-2bdf-4658-abd4-0f5f47d710ab",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c2c218b7-5cb2-4f59-a439-957e5159ff23"
        },
        "item": {
          "id": "0ad498e3-136c-4a7d-9857-c0e6a5f1c8b1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e22a6760-8c79-4d49-9089-934409bd5388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412b940c-e05b-46ff-a052-5d95fa25648c",
        "cursor": {
          "ref": "e186cced-168b-42a9-bf8a-2624a9a7667e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "72267073-c0a6-4f54-ad15-62997f7c9c10"
        },
        "item": {
          "id": "412b940c-e05b-46ff-a052-5d95fa25648c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b7d88089-f575-4308-a622-d7d7fa747f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5912a5ee-4b7f-401b-a488-aa2d3c7c0217",
        "cursor": {
          "ref": "54b9076d-8091-493e-a71d-a47d0b1d7d74",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c4f2bec2-261b-4d72-a4e9-fbb9551a3792"
        },
        "item": {
          "id": "5912a5ee-4b7f-401b-a488-aa2d3c7c0217",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2c458a7c-ceb5-4f0d-900d-71f38d11b222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b7452c-41dd-4946-b4fd-f36b4378f267",
        "cursor": {
          "ref": "500c3e45-9399-4597-813e-4ceb0713fe4e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ca66d522-2f47-48da-9095-7493ecb539b0"
        },
        "item": {
          "id": "f0b7452c-41dd-4946-b4fd-f36b4378f267",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "49ba9378-1a55-4fc2-8096-86bc39f794a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98560a78-bfe0-4873-b14d-1a44b2029835",
        "cursor": {
          "ref": "1a606631-9a75-49e7-900e-513d452979cc",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9d8d9de0-c6ee-4225-bb67-7f6a0b54346d"
        },
        "item": {
          "id": "98560a78-bfe0-4873-b14d-1a44b2029835",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "50e6a4aa-f20a-4059-afc5-55cc28e34fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac4931d-d25c-482b-b481-ae7959f08176",
        "cursor": {
          "ref": "c8abf758-c9a8-4263-8f93-7cf834b34b1a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "400b67d2-dc9d-444c-a6e9-9dc6c74e6f68"
        },
        "item": {
          "id": "8ac4931d-d25c-482b-b481-ae7959f08176",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "de5598b4-76e4-4cc1-8e63-aeef22be82d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b12dad-6253-4b5d-a2cf-89ee5d70f581",
        "cursor": {
          "ref": "f715f06a-d421-4449-8839-33faa33a18f2",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ce8e3967-b6df-4b2f-a07c-318358c38785"
        },
        "item": {
          "id": "f6b12dad-6253-4b5d-a2cf-89ee5d70f581",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "693618ec-8dab-40ac-9ea4-3a8b9a05adf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6199b624-8745-43c7-879b-4ae0b0748451",
        "cursor": {
          "ref": "bfc6457d-a5f1-4c27-8def-21fde9d17542",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d0e22401-2ed6-4d96-90fa-14bc1a497a96"
        },
        "item": {
          "id": "6199b624-8745-43c7-879b-4ae0b0748451",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a4a463d6-96d1-4dcd-8884-e041631226d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe0f7a3-7339-4890-a83b-321cdba85404",
        "cursor": {
          "ref": "02aa6ab9-225a-4cd8-a4c9-65780a85d201",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "50c664fb-7d9f-475b-bf23-f95e8cb8b760"
        },
        "item": {
          "id": "2fe0f7a3-7339-4890-a83b-321cdba85404",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4516ba11-be7a-46ba-a9d7-e0b81a7ec24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a08a8de-d589-441e-99ae-d532fce1c48c",
        "cursor": {
          "ref": "a35fb09b-0091-4b02-a548-ec9c5f4aa230",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3a6a46fc-9fbb-4ae6-badf-c8921d7133d4"
        },
        "item": {
          "id": "6a08a8de-d589-441e-99ae-d532fce1c48c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8ae7af42-f64f-4cba-a0f8-5d561bb4ca17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aba63f3-bb9a-40c6-98cb-4751e3d50b24",
        "cursor": {
          "ref": "ba668d07-bbfb-4630-8b66-e8796028e5f6",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "50042d0d-cf8f-434e-92c4-59f2f7797074"
        },
        "item": {
          "id": "4aba63f3-bb9a-40c6-98cb-4751e3d50b24",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a068644b-da38-49bf-82a6-a20212e80b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638f0ea5-147e-44bb-9769-5b090ef93066",
        "cursor": {
          "ref": "915d2d3c-50d0-4656-a843-a1a1d00f4982",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "666eedfa-a6a2-4dfd-bd37-e1da349e3646"
        },
        "item": {
          "id": "638f0ea5-147e-44bb-9769-5b090ef93066",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e19c3aec-a491-4401-9eec-70fe84a1956c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a42669-120d-41e4-861c-fc06e9c7870d",
        "cursor": {
          "ref": "a2c53877-1a65-4279-9474-0282f24482f9",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "689df6e9-ddbb-47d8-a418-6ec6a9493c43"
        },
        "item": {
          "id": "73a42669-120d-41e4-861c-fc06e9c7870d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e4e6a48d-8e10-4bc6-9fc9-93def7e134d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed5bf17-f494-4214-981e-b2d71e45de40",
        "cursor": {
          "ref": "c387e46d-fde6-4eb1-a00b-01ce4e18fc14",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ee8a12f4-0f81-4c15-a073-539c4795632e"
        },
        "item": {
          "id": "1ed5bf17-f494-4214-981e-b2d71e45de40",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "497c68a6-2f57-4431-8204-5801de693ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35db67f7-e5f5-42a6-9bb2-d09eacaa8726",
        "cursor": {
          "ref": "a8143862-1d37-4d26-96da-1edec62e734b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3ce513d4-cada-4564-842a-10a7a0fb3dcd"
        },
        "item": {
          "id": "35db67f7-e5f5-42a6-9bb2-d09eacaa8726",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "74edd5b1-721b-447e-8313-991b5f9f88a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0177091e-91c7-423a-a900-a85db1eb20cd",
        "cursor": {
          "ref": "9b82c23c-0120-40ca-8237-7be14708f1d7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "11bf4ddc-93f0-4055-b345-b9f43f0547aa"
        },
        "item": {
          "id": "0177091e-91c7-423a-a900-a85db1eb20cd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1cec2449-a0d9-404a-b80b-ab9a5e7f32d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab2bce4-b4b2-45d1-abc5-00875f2d69fe",
        "cursor": {
          "ref": "21fb7ff6-eefc-4af8-992e-635267069aab",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2c1360dc-4061-4629-8120-ce48c5fc63b6"
        },
        "item": {
          "id": "6ab2bce4-b4b2-45d1-abc5-00875f2d69fe",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2d14557e-d42b-4aa4-a14b-2739503d423d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35f8b4d-061b-414f-87a7-63aeb4535262",
        "cursor": {
          "ref": "68454db5-0269-4d98-984d-8ef6524c7eeb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7247efdc-077f-4dae-aea5-90d646960639"
        },
        "item": {
          "id": "e35f8b4d-061b-414f-87a7-63aeb4535262",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9afbe8ff-697d-4feb-9664-107dea6e6141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c92917f-815c-4bd9-94e9-fa3b4b93af78",
        "cursor": {
          "ref": "94d68a99-a550-4ecc-8b70-e4a84a8f1ca6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "64bade51-204d-4ff1-9253-16699f0248e7"
        },
        "item": {
          "id": "4c92917f-815c-4bd9-94e9-fa3b4b93af78",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dd478982-2ac4-4109-a541-d2e85a69e0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64c8ba8-fa2d-4396-ab92-9721f91b2f99",
        "cursor": {
          "ref": "c97f1962-caa4-4281-9d60-a5dd80e301ff",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4608f1a7-de9c-474d-8c30-385b8e5acb30"
        },
        "item": {
          "id": "a64c8ba8-fa2d-4396-ab92-9721f91b2f99",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b1f8e3e9-9aff-4b14-b770-d83e04ea1485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4720d0f3-ac44-4db9-bbe9-e47d973c6eb0",
        "cursor": {
          "ref": "bea32fa0-862d-4aef-b257-0958c5cc4020",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "44e3249a-f030-4181-a462-53b8826f24b3"
        },
        "item": {
          "id": "4720d0f3-ac44-4db9-bbe9-e47d973c6eb0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8b53ceaa-d6af-4f85-b1f4-7248c273596b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a450aa-8040-40c6-9732-0a70fca3fbae",
        "cursor": {
          "ref": "c942309e-2c1f-4731-8444-c191533b543e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "84d02971-048f-4677-88bf-fa9e72fe2b57"
        },
        "item": {
          "id": "32a450aa-8040-40c6-9732-0a70fca3fbae",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e71e8d78-2bba-491e-b615-51abe0f33e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eac83d-767d-4160-ba89-30af1d4c7bcb",
        "cursor": {
          "ref": "d73b2c4a-44a7-4a3f-a09c-1f60cd9c0672",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4d6cc8b6-c9f5-4b5b-83e1-5c3ab1ae86f9"
        },
        "item": {
          "id": "b3eac83d-767d-4160-ba89-30af1d4c7bcb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ff81508c-a677-4157-9b3a-4140301c5623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890850e4-7735-4268-a326-f89c100cfd8b",
        "cursor": {
          "ref": "94cca07b-535c-4e7f-94e3-258657732367",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0e7ecf20-bb41-4952-8bae-61c5d8ecbb05"
        },
        "item": {
          "id": "890850e4-7735-4268-a326-f89c100cfd8b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a98d6545-f83a-4c60-add1-78adb51aa128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2439ad46-88b4-44b1-878a-1e9e01f1cf51",
        "cursor": {
          "ref": "7522a877-288a-48bd-86a4-95af396b4b92",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f938c01c-e099-40cb-a2d0-e072fee67dc5"
        },
        "item": {
          "id": "2439ad46-88b4-44b1-878a-1e9e01f1cf51",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "29a0329e-74fa-42a0-b7a7-7049d7e6a68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1f87b4-4539-4b05-9249-42d791ad675d",
        "cursor": {
          "ref": "3e45a58e-2477-44d6-bc20-daa19ba1eb12",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "494c603c-8949-416d-a8ec-bc3fb1bc3e74"
        },
        "item": {
          "id": "fb1f87b4-4539-4b05-9249-42d791ad675d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bc785a5d-906c-4af7-81f9-5b6f78e3a6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9af86a-24d2-4039-a034-0b873a9e15c8",
        "cursor": {
          "ref": "8d14a739-1f99-43e1-b6fa-bfe92423bdc1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3030d99f-e3f2-47ed-b728-7c0cc75315fd"
        },
        "item": {
          "id": "ab9af86a-24d2-4039-a034-0b873a9e15c8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "af1de4f6-d046-4995-83c8-09d710255a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b853477-8134-4981-b32c-d68ce3dbc87d",
        "cursor": {
          "ref": "31f49026-a789-4fae-9a8c-a7734e734820",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9b634d37-6893-43e1-87c4-b3052fc2a043"
        },
        "item": {
          "id": "1b853477-8134-4981-b32c-d68ce3dbc87d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b3a6ed2d-fa95-403a-87f7-e63df5ccd80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f24dde-e19c-4759-a37a-70a2fabc0939",
        "cursor": {
          "ref": "b9cdf288-efa4-4142-aa00-ea17e0089d31",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fb8aa221-a67d-4269-8a58-eace2766c3c3"
        },
        "item": {
          "id": "93f24dde-e19c-4759-a37a-70a2fabc0939",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5f305133-4fe0-4d10-9613-c4bf207d0b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7516d8b8-1f70-45db-ae2e-c0a239882aea",
        "cursor": {
          "ref": "44d1485f-87ec-4071-8b35-8ee3ba0fa4b5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a95508b6-fa4d-4f64-ac94-16d5ff897281"
        },
        "item": {
          "id": "7516d8b8-1f70-45db-ae2e-c0a239882aea",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e02190e8-a166-40c4-9dee-b4b06fa2d427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfc190f-2eb7-4a76-955f-4018dfd580de",
        "cursor": {
          "ref": "c0d70215-2db7-4657-b4a9-b3c2eea2ca01",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "caaeaadd-aa9e-4cad-bc84-7c9f5e357a1d"
        },
        "item": {
          "id": "bcfc190f-2eb7-4a76-955f-4018dfd580de",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "393dc153-f782-446e-95d4-1dfd98dd431b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd926fa0-9aa4-46d7-b481-55658f7ab52f",
        "cursor": {
          "ref": "2f79fa34-771d-428c-af9d-25ec5c062f2b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4b5fcca7-718b-4814-adf4-034593c65985"
        },
        "item": {
          "id": "cd926fa0-9aa4-46d7-b481-55658f7ab52f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4c1611f5-9a69-4135-98ad-0ffb765066fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f4f8ec-b038-4724-9899-3d21c2a60680",
        "cursor": {
          "ref": "7e28202f-1d55-4a3c-9ace-024096f98da8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f1a6ceae-c57c-4111-8cc8-9b2ee0c52df4"
        },
        "item": {
          "id": "76f4f8ec-b038-4724-9899-3d21c2a60680",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8f6b89b8-4058-442f-a207-c12d546f15c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a2d054-51f1-4b58-86ed-1a89ea0921f7",
        "cursor": {
          "ref": "b42d2496-a600-457b-87e4-9e36890bf954",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a0f1b88c-aa51-42e1-b91d-1697d1f7cc84"
        },
        "item": {
          "id": "85a2d054-51f1-4b58-86ed-1a89ea0921f7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8b1bd055-1dd4-4bab-803e-438450bd415f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cec52a-c864-48d0-8099-ded3817d159c",
        "cursor": {
          "ref": "bc8a678b-3ec8-4989-b683-bd15544bf614",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a318cee4-586b-4bd1-91dc-a7e2abe83d84"
        },
        "item": {
          "id": "69cec52a-c864-48d0-8099-ded3817d159c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a85fea5e-3401-479b-8179-38c48eb20599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b929c613-5d23-48cc-b999-23752e15bbe3",
        "cursor": {
          "ref": "0877ddf7-485d-4589-81cc-63551ee1954a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0d25ec8d-52bf-48be-bfe6-5a373c5a5587"
        },
        "item": {
          "id": "b929c613-5d23-48cc-b999-23752e15bbe3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ced806b6-5b2d-47ee-8a2f-7ad2238b826d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c744651f-edd5-409e-a591-e8552e00b403",
        "cursor": {
          "ref": "7efab599-e8fc-4db9-9baf-0f611254c51a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cbb81e92-1312-4629-8c2e-7ce7ab2ca831"
        },
        "item": {
          "id": "c744651f-edd5-409e-a591-e8552e00b403",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "56112ba1-5061-4b28-a0d2-845e87157786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0cb5e3-9f22-4653-afc0-363f80ba4069",
        "cursor": {
          "ref": "61f588fc-7c99-4c1a-b3b6-c174e0aa471c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "25f02cfb-1536-44de-80e6-a0356a044c88"
        },
        "item": {
          "id": "1b0cb5e3-9f22-4653-afc0-363f80ba4069",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e0ac089b-ed11-406b-8bd6-cb2c30650ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d200a042-9b97-45f4-90f3-9f48b4e3c872",
        "cursor": {
          "ref": "6c3f2454-552a-403d-8dff-e81f8b0defc6",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b2c205fe-9573-4aeb-922d-06f84a5ce550"
        },
        "item": {
          "id": "d200a042-9b97-45f4-90f3-9f48b4e3c872",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3a46030f-4354-46f0-8585-6a9fc9d30d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116067ef-346a-4112-a923-aef945fa2f7b",
        "cursor": {
          "ref": "2347e237-adfc-4f0b-9eb6-81ce2f2c7277",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fbf73ded-867b-449c-b2b7-9034fe60af69"
        },
        "item": {
          "id": "116067ef-346a-4112-a923-aef945fa2f7b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "faf4a6f2-9d09-4cc9-b364-b47a34e2f4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08711394-0be7-42b3-95c8-1c6191eea966",
        "cursor": {
          "ref": "fc5f9628-8eef-4090-aa72-a7cddfdd9003",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "28f156e9-23b2-4964-b87e-83ed1dd375bf"
        },
        "item": {
          "id": "08711394-0be7-42b3-95c8-1c6191eea966",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "051530ba-981f-4194-894e-294798e7b8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02231672-6448-4139-8a88-f8a9e24d8f76",
        "cursor": {
          "ref": "7d68a11c-f4fe-4b54-9ed8-984c84a350c1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "590536cb-c9e9-4253-abea-94dd010ef756"
        },
        "item": {
          "id": "02231672-6448-4139-8a88-f8a9e24d8f76",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "915ef5c0-8888-4a51-914f-083d1f4ef3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3678b3-cf19-48da-9386-cb67bcb0aa11",
        "cursor": {
          "ref": "25e02d06-3daa-4563-8e04-d1108784a766",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7d886727-b9ef-42f7-b78d-bdff016d867d"
        },
        "item": {
          "id": "6d3678b3-cf19-48da-9386-cb67bcb0aa11",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "13fbffd5-ef38-4946-98cf-f1e4158bb9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7feb592-2dcf-4e89-9b3f-1d6040b9cde7",
        "cursor": {
          "ref": "b94911e7-2fc7-4871-ac6d-a94783eb002d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6531d25d-9bc9-4510-899a-7fa65af92eb9"
        },
        "item": {
          "id": "b7feb592-2dcf-4e89-9b3f-1d6040b9cde7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dca9c8d2-8920-4b9d-9b32-e01ea0e275f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738674da-b8c9-4355-be08-87ac07b1dd97",
        "cursor": {
          "ref": "fa5eda41-e63c-4d01-b622-673be456a45a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a92718fa-16c5-4833-9531-34e15ddb47a3"
        },
        "item": {
          "id": "738674da-b8c9-4355-be08-87ac07b1dd97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4f103bf5-7f08-4df3-85b2-a0d9b15476ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd3645d-f359-4f47-aeb7-21b877754242",
        "cursor": {
          "ref": "e6ff17b0-4cc9-4c9f-b51b-aa0a7fafea10",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eb0c23ee-09fc-48cf-af72-b8cb40bab139"
        },
        "item": {
          "id": "4fd3645d-f359-4f47-aeb7-21b877754242",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "221aea61-20fd-42c8-8f46-d24ad29dc2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3538c80-4078-46bb-a627-29609f91b5d7",
        "cursor": {
          "ref": "1603a64e-e097-4c6e-807f-578cdc9f539b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0c6243e3-d72c-4d95-b73f-90a5bbd77ab4"
        },
        "item": {
          "id": "d3538c80-4078-46bb-a627-29609f91b5d7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4f57ba09-015f-434e-a785-db59d81af960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80e59e9-5fd8-4d26-ba43-a9f7c8bb23ff",
        "cursor": {
          "ref": "8416a38d-e84c-460e-8787-a420a17027df",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c11b684e-4a1e-43dc-ad3a-58406f21ff3e"
        },
        "item": {
          "id": "f80e59e9-5fd8-4d26-ba43-a9f7c8bb23ff",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dfa1aeeb-e7ab-4ea1-8602-99a715597b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d50c4bc-6f3a-4813-972a-8a65137b9c88",
        "cursor": {
          "ref": "7c826f97-b1aa-4741-a2da-0b80ee36365b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "50613b18-f2e6-47f2-ba55-da196d56ec47"
        },
        "item": {
          "id": "0d50c4bc-6f3a-4813-972a-8a65137b9c88",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "06ab1874-2c3f-4d6b-b854-3b02d076a307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2ac4de-c155-4539-9d5b-5241f3aa8106",
        "cursor": {
          "ref": "881011be-00b9-4c9a-914e-abd864be765e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8564bbe2-90bd-4178-bdc3-4bdac12f9860"
        },
        "item": {
          "id": "2b2ac4de-c155-4539-9d5b-5241f3aa8106",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1a09c502-b729-4e45-be6d-3f0c775fafc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843d1255-11cb-4a00-ae7f-7866a56be7c5",
        "cursor": {
          "ref": "208a8ede-18fa-443e-ad6f-2fc44ae2cec0",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f5005816-3776-459f-8c5b-f761fdc9556f"
        },
        "item": {
          "id": "843d1255-11cb-4a00-ae7f-7866a56be7c5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "862c4be3-7bc3-46ba-9fcd-b643487dae0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cd6916-22d0-4248-932d-ad51b2c8345f",
        "cursor": {
          "ref": "131bd01b-0b87-4d68-8542-0faceffb3b9a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "efe39705-c904-44ec-8bee-85e89d66c831"
        },
        "item": {
          "id": "c6cd6916-22d0-4248-932d-ad51b2c8345f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "80048e1d-90af-4c58-8b53-b8955743976d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681e5119-a3e0-40ec-9bcc-1696e12fb479",
        "cursor": {
          "ref": "20752f42-4cd5-4be2-9734-6ec7bb8b5203",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "baeb39b0-13c3-4e15-9bf0-145c35c9d6d8"
        },
        "item": {
          "id": "681e5119-a3e0-40ec-9bcc-1696e12fb479",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d88a9c49-0913-47c6-a73a-ee252c9fded1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7eeaf2-0e55-4b18-9d2b-94f5fd530b29",
        "cursor": {
          "ref": "5fdb35f3-83a5-48cf-8d0d-3555ad4ae674",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4c548536-42f0-4163-b195-1d59e3296f58"
        },
        "item": {
          "id": "5c7eeaf2-0e55-4b18-9d2b-94f5fd530b29",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8c378256-f4ed-4d59-87a9-0b187935598b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e7842e-3184-4ce8-9b9f-d255797943a5",
        "cursor": {
          "ref": "ffe320a5-ec62-46c7-992b-1e547781aea2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a71f7b98-8147-4330-a76e-4857e5683fc6"
        },
        "item": {
          "id": "12e7842e-3184-4ce8-9b9f-d255797943a5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aac6fcc7-ab5d-4a5c-bb6e-b8cb625bfd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed819f34-b64c-4290-b62d-45e34f6a3132",
        "cursor": {
          "ref": "0cc498b3-0668-43de-bed1-e4a6bbafdfad",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "407fee04-d502-42bc-8d76-61ac44e3135b"
        },
        "item": {
          "id": "ed819f34-b64c-4290-b62d-45e34f6a3132",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8f129f08-3ff0-40d8-9117-2def09e23d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da7dc61-195b-475c-aa69-d142d7a01748",
        "cursor": {
          "ref": "144cc5fb-ec80-4549-b2be-85b3f50a2d39",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "801f2d6e-763d-4d62-837c-560b8c8a7fe6"
        },
        "item": {
          "id": "6da7dc61-195b-475c-aa69-d142d7a01748",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0846917b-921e-495c-a208-37efd373eb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8489a87-b9cb-4a44-8244-2c1e4a3b8261",
        "cursor": {
          "ref": "422c68ff-2c68-47d2-a0a5-a6a3db918d9f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7553ecc6-ad88-4463-b0ac-a6292a3a6248"
        },
        "item": {
          "id": "c8489a87-b9cb-4a44-8244-2c1e4a3b8261",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "73e103ec-090a-4c78-b55b-c82e9d5fd8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d02fa5-248d-40f3-a0f4-8aa3367b4bc2",
        "cursor": {
          "ref": "c7c4372c-71c7-474f-ad1e-20d9da94b823",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9b85dff4-2636-4843-bad3-7bb1be2ef87f"
        },
        "item": {
          "id": "e8d02fa5-248d-40f3-a0f4-8aa3367b4bc2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "10c475b9-94e3-4705-95f9-87eb6a0bca48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18d5eb1-176e-4679-aef5-e9af05016dec",
        "cursor": {
          "ref": "222d3b21-e951-4f52-a735-f2eb11a3940d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "344d4c2c-3d2b-4b96-9b8a-09841167c343"
        },
        "item": {
          "id": "a18d5eb1-176e-4679-aef5-e9af05016dec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1ccc0bd1-82a0-4bc9-b55a-badf3b0405fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8318adcb-09bb-4e4f-9d6f-8a0efb321bd1",
        "cursor": {
          "ref": "b3b046a6-271a-404d-bfa0-8995aff289bf",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "347b682d-d68d-4e61-863f-87f9ffd3849d"
        },
        "item": {
          "id": "8318adcb-09bb-4e4f-9d6f-8a0efb321bd1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0744652b-a590-4249-8a13-5502a4442424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55967d87-13f9-4ccf-a50d-290ea9ab5d36",
        "cursor": {
          "ref": "cc227c57-372d-400e-a05c-f9ee8e774dcb",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8e934a2c-7886-4c44-8af4-60816d5aea3b"
        },
        "item": {
          "id": "55967d87-13f9-4ccf-a50d-290ea9ab5d36",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a73e63a0-f7b5-4a38-bc2a-70a893a4fa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1093ee48-68a7-4787-8c5c-1bc402f26de6",
        "cursor": {
          "ref": "6c71631f-4c32-48ce-8fa9-2542371be4c3",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f564e34d-8a07-48b8-819d-33ac20b1405a"
        },
        "item": {
          "id": "1093ee48-68a7-4787-8c5c-1bc402f26de6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dcf99349-5503-4a53-942a-7dcfb6dac108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e1a699-015d-4b7f-8ac6-3428d109da77",
        "cursor": {
          "ref": "67322b82-93cd-4f0b-8c0a-166cf4192ed7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4ea11b98-ecca-4043-a39b-dc6e34c399ef"
        },
        "item": {
          "id": "a2e1a699-015d-4b7f-8ac6-3428d109da77",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "587f1912-805c-4af8-9ea7-7d2a180665ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a980db39-0a1b-4f2e-b8f5-2a76fb35d180",
        "cursor": {
          "ref": "a1069be0-2b4f-455d-8099-5374d369f613",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "777caceb-c176-4058-931c-a5419c4a2f14"
        },
        "item": {
          "id": "a980db39-0a1b-4f2e-b8f5-2a76fb35d180",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5ab26c15-a32e-440e-99d2-2bc92f7b3c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194c1103-8a31-4fd8-9f82-3ab2e189e39f",
        "cursor": {
          "ref": "b7618094-d5af-466e-96a1-bd4bb46a03b8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c0b02584-5e81-4f96-9261-964104205ff6"
        },
        "item": {
          "id": "194c1103-8a31-4fd8-9f82-3ab2e189e39f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fb2accac-c265-4913-8e79-f4b37c1e7114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04153876-d543-46dd-9109-b8a6860f9ab5",
        "cursor": {
          "ref": "70018356-65c0-4f29-9587-cdb31e24966b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "71a078f5-4cae-40fa-9252-3d8244f1b4de"
        },
        "item": {
          "id": "04153876-d543-46dd-9109-b8a6860f9ab5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1c926215-5262-4d8f-a5cc-8de24087d41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0bfcd5-0c1f-4ddd-b190-a605ae3062f1",
        "cursor": {
          "ref": "10874dc0-2db4-4069-8a91-ce423d85823b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5df2cc71-9694-402b-8762-35e10a8b1e63"
        },
        "item": {
          "id": "5f0bfcd5-0c1f-4ddd-b190-a605ae3062f1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "88c35d17-492e-4ea3-9656-ba5faec964cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d7a19a-cebe-43e3-8511-52764cc2f9a9",
        "cursor": {
          "ref": "0b6f37f1-1596-49c0-9161-85ae704d054d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "67b90679-f290-43de-841c-51b246f583b6"
        },
        "item": {
          "id": "63d7a19a-cebe-43e3-8511-52764cc2f9a9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5312f23e-5b31-4324-a1d3-0608563daa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7e715d-5669-4df2-b06e-d63984732975",
        "cursor": {
          "ref": "bb1f1cc2-8513-4fcc-b9a5-94ec3b7e1f3c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e14e2e80-2c2d-4a4a-916b-fc7862272790"
        },
        "item": {
          "id": "ce7e715d-5669-4df2-b06e-d63984732975",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d34d59b9-ae47-4211-bef9-8403974e8bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8e6570-8a59-49fd-a224-3d1eb450b3e7",
        "cursor": {
          "ref": "4f38d835-5c93-405e-bfe9-f6bd4a9e1642",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e39bab57-9195-4615-b858-e00375b52251"
        },
        "item": {
          "id": "0a8e6570-8a59-49fd-a224-3d1eb450b3e7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "aa91adf5-3bcf-4522-9a08-543446b41ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c42bdd9-a5b9-475d-a7be-311fd19a103b",
        "cursor": {
          "ref": "5a777fc9-fa39-4467-b7be-ae1925608ec8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e55fb975-9dd9-4476-83ca-25500db5a1aa"
        },
        "item": {
          "id": "1c42bdd9-a5b9-475d-a7be-311fd19a103b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "67f8d933-29ad-46d9-83f6-363c1b4c6fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c25adf-36cb-4a21-b603-e6a34c92d76a",
        "cursor": {
          "ref": "a056d706-5b31-4f9e-89c8-693840fcfd03",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b57085b7-e333-4c66-911e-b85acd713614"
        },
        "item": {
          "id": "89c25adf-36cb-4a21-b603-e6a34c92d76a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e5ff71b5-2ac3-4204-b61b-9e70aa85f3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fe98c2-7761-407a-998d-b4bfc01f2640",
        "cursor": {
          "ref": "537423f6-cf35-4fb0-9761-8d5a6555d619",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "46d44f0f-338f-42f3-a552-40e11a319b05"
        },
        "item": {
          "id": "22fe98c2-7761-407a-998d-b4bfc01f2640",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "00707390-37ca-4b9e-aed1-21934fa39172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fff6e5-0952-4a61-8493-964cd7fe1c28",
        "cursor": {
          "ref": "febea8f2-25cb-46f9-a02b-2168b5c27d90",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6575b7b1-b14a-446f-9b34-5bbb75c96eeb"
        },
        "item": {
          "id": "55fff6e5-0952-4a61-8493-964cd7fe1c28",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b3ca7c10-4b7e-43d0-b95f-6bfa9c0ed51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38be7c23-eca3-4103-9140-dc1e572cc899",
        "cursor": {
          "ref": "c73de6a8-99dd-46ae-9c6f-3c96a7734299",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ce689f9a-593f-4559-a3cb-ad722e963b4b"
        },
        "item": {
          "id": "38be7c23-eca3-4103-9140-dc1e572cc899",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2751e7f8-7a35-4ea0-85ca-08a83bbdf0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f15f09a-147e-49b6-b8de-3faae3afe52d",
        "cursor": {
          "ref": "a47b74a0-6bc4-4e70-b13b-b0c7b3c6ad6e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fce0ecd6-52e9-4d27-b104-bb317697403c"
        },
        "item": {
          "id": "2f15f09a-147e-49b6-b8de-3faae3afe52d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "16f233ca-4c60-43e4-9e5c-82b4442c7afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71b612c-e78a-45b7-86f2-56b9c4c0d932",
        "cursor": {
          "ref": "568757b9-30ad-4f3b-aa2b-9cc6536c1199",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "99dc2e22-c92a-4625-9bac-403aff775907"
        },
        "item": {
          "id": "f71b612c-e78a-45b7-86f2-56b9c4c0d932",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f46e0246-6c36-415e-ae8b-52bff3991e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7650c311-fdec-4864-899c-d6801e83328b",
        "cursor": {
          "ref": "13ca4422-3b07-4485-98c9-13dbbaf4a621",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8431e280-6a12-406e-9fd6-15ad74190624"
        },
        "item": {
          "id": "7650c311-fdec-4864-899c-d6801e83328b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c1647fa9-59f7-47bd-aa75-ef498018de62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c15d93-37b7-4397-baec-e61eecb113ba",
        "cursor": {
          "ref": "63fb840e-ca90-46bc-ab6a-f4fc537415d0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8cec2f92-844d-4365-ae4b-f0876e12ec32"
        },
        "item": {
          "id": "27c15d93-37b7-4397-baec-e61eecb113ba",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "22b2e620-3c0b-4b5f-a21d-f19e1d853aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ad9a0202-70b2-4b28-857b-d62b6a501a80",
        "cursor": {
          "ref": "c6a269c6-4132-4911-bcef-2350aad708d8",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e74ce8f4-37e9-4e73-b75c-5d94ff9147a7"
        },
        "item": {
          "id": "ad9a0202-70b2-4b28-857b-d62b6a501a80",
          "name": "credentials_issue"
        },
        "response": {
          "id": "89b27b3c-6c69-4c0e-b4a1-daa77a781826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f0ccd91d-c41e-4a42-8e96-3313c21e6de1",
        "cursor": {
          "ref": "a0561106-cb4f-4b67-9509-f731ad9badd9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "44490e86-4e08-4dae-9649-985329a64344"
        },
        "item": {
          "id": "f0ccd91d-c41e-4a42-8e96-3313c21e6de1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3fc8b979-ad04-4aed-a079-3097f67e328e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "60803792-b0f6-4b3b-b39c-b3d703ce0a94",
        "cursor": {
          "ref": "9f4e3725-44a8-4599-8f13-08f15344859d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "635b94ae-6246-44ca-9bad-e349c31cdfb0"
        },
        "item": {
          "id": "60803792-b0f6-4b3b-b39c-b3d703ce0a94",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "768b9248-3c66-425e-b38c-ceec0a4540c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "39cb18af-ab66-444f-99db-f96efcc899a7",
        "cursor": {
          "ref": "489056e3-f817-4bbb-bf27-c86e1446530d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9cc27df9-c9db-4b58-a7fe-caffc7255373"
        },
        "item": {
          "id": "39cb18af-ab66-444f-99db-f96efcc899a7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3ade0f63-e5f1-4e6d-a530-6303ccda970b",
          "status": "Created",
          "code": 201,
          "responseTime": 14869,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8531cf25-6296-47c8-a4ce-1d4e9ab6eff3",
        "cursor": {
          "ref": "1e9346e4-958c-4ec6-a58e-f90baae5f18f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "299cddf9-6654-4b70-a9e6-4b0fe512af0a"
        },
        "item": {
          "id": "8531cf25-6296-47c8-a4ce-1d4e9ab6eff3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9cca58d7-6258-4f37-9372-168817df7b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bb51b6ce-0897-4d28-b974-8e1d8ba5c48c",
        "cursor": {
          "ref": "b47f5391-1835-4d65-ab64-4ddbbd7dd5be",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2ca70aa3-1ab4-4a39-ae47-47465cedeaec"
        },
        "item": {
          "id": "bb51b6ce-0897-4d28-b974-8e1d8ba5c48c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a1c1d486-1748-4f2b-ab23-6de8719e43ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "437e58b3-a8ef-4588-abdc-f309be2237b3",
        "cursor": {
          "ref": "c97a19d4-ce4f-43e8-bd5d-78449c63f298",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ba4cb9ec-6e07-4f0a-9bbe-9d01bc9d3667"
        },
        "item": {
          "id": "437e58b3-a8ef-4588-abdc-f309be2237b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cf06c147-593c-4577-9247-bf2fe7f160bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0557172c-b469-453f-97ad-58d0810efe84",
        "cursor": {
          "ref": "2f81c7f3-5275-4756-b543-2a1833af87b1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3daf4e99-b958-4613-a780-c0c801a325da"
        },
        "item": {
          "id": "0557172c-b469-453f-97ad-58d0810efe84",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bf12aa2e-a293-47b0-a4e1-f3f172e6ea6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7eec53-c4e7-46d3-b3b3-eb8641099f6b",
        "cursor": {
          "ref": "e92c8cf2-aa46-433d-9e86-b208243b7e73",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f4843ea8-da0b-4fe0-8e77-a96e088a8595"
        },
        "item": {
          "id": "9a7eec53-c4e7-46d3-b3b3-eb8641099f6b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b4a7ab82-add0-4e78-93ec-bbeab459999a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78327de6-2719-46c2-9e40-82422f78a866",
        "cursor": {
          "ref": "d6e81642-fd4c-481e-bc72-9f34cce6868a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "49001278-3822-4e39-8ce2-29f6cef1734f"
        },
        "item": {
          "id": "78327de6-2719-46c2-9e40-82422f78a866",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fba3766e-486e-42fa-bb46-6650838c1f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9273a9ca-9781-49fa-8820-f89d21a87046",
        "cursor": {
          "ref": "161911a0-ab35-458d-b074-1aeec3cee05b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c0543308-a6f1-4693-943b-fca5c04a1222"
        },
        "item": {
          "id": "9273a9ca-9781-49fa-8820-f89d21a87046",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0b1f343e-0e6e-477e-8966-6de499bf20e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771c9dea-1873-4142-bc66-8d73f4c35a7c",
        "cursor": {
          "ref": "878f46c3-f064-4683-be2c-62cbf3ccb5f5",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "35b9ffed-0a81-4d44-9f05-d621c4ade79d"
        },
        "item": {
          "id": "771c9dea-1873-4142-bc66-8d73f4c35a7c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ee7d094f-4984-41d3-93fb-b8737dec8b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc4fe16-28fc-4571-8fda-1a2ebaaf35d8",
        "cursor": {
          "ref": "18402586-015c-4f9c-8940-aa78b02157d7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dd10bbce-094a-493b-9573-2aa80a09fba0"
        },
        "item": {
          "id": "0fc4fe16-28fc-4571-8fda-1a2ebaaf35d8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "12745c25-a46e-45d0-865a-dc7b908817e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9d7678-37c4-40c1-8a44-b3939b23f6ec",
        "cursor": {
          "ref": "16ec7c51-dfb5-4165-b339-8d3767f1552f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2060ba3a-dbba-4628-8d23-25a9a9c35da7"
        },
        "item": {
          "id": "3a9d7678-37c4-40c1-8a44-b3939b23f6ec",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "637c6499-cbc0-45a5-adf0-dbf4bcef740f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04596e58-c475-4f2f-b751-e8d1ce868563",
        "cursor": {
          "ref": "64bbef84-22d5-4491-aace-ce51714d53aa",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5787313d-cc87-44ca-8712-7214a4392e19"
        },
        "item": {
          "id": "04596e58-c475-4f2f-b751-e8d1ce868563",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c0525885-7ea9-4416-9f52-932ac5226875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca33b04c-0ae4-49a7-968e-9f6b85586191",
        "cursor": {
          "ref": "8dda6064-06b6-40dd-96d4-13a72791897d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e549094f-ee90-4380-ae7a-d5b377af44cb"
        },
        "item": {
          "id": "ca33b04c-0ae4-49a7-968e-9f6b85586191",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a0977c5c-df22-4afd-b9d5-2dcde49b5300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7058c1-0880-4fe2-a20c-2b96fc240b91",
        "cursor": {
          "ref": "293718ad-3831-4cf8-9b47-f021ea0e81ca",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "66a33840-faab-4923-8f23-153d8a871b3b"
        },
        "item": {
          "id": "de7058c1-0880-4fe2-a20c-2b96fc240b91",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1dbbee98-dd5d-4a2a-b068-355d55bd6db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09310421-3b7b-4bb6-8ccb-b05bedcb15d4",
        "cursor": {
          "ref": "19faa759-3125-4284-9fc5-a3100bb3a856",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ded72978-8811-4228-8c21-015b01f76cd8"
        },
        "item": {
          "id": "09310421-3b7b-4bb6-8ccb-b05bedcb15d4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0c0a04db-d4d0-4025-abc2-c950685e2a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7201dbee-70f0-427b-aca0-7961dd167bf3",
        "cursor": {
          "ref": "4e63e8a3-7389-44b5-ad61-cae1515ae65a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b7f3e29a-d3a3-4279-9450-2822275026d2"
        },
        "item": {
          "id": "7201dbee-70f0-427b-aca0-7961dd167bf3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "10c57582-37db-4bd7-872a-54c01ccb6d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b8c44e-54ae-4c20-9e95-2c1052c4539a",
        "cursor": {
          "ref": "6a3c1225-1f07-4a65-a593-6cf51b8de56f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c9691675-4daf-460f-a71d-1ae0b03712f3"
        },
        "item": {
          "id": "83b8c44e-54ae-4c20-9e95-2c1052c4539a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9bf09601-ec9c-4ab5-83c8-4478aebf0a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800d6206-ac31-498c-8498-8a42f6c2812e",
        "cursor": {
          "ref": "129bfd05-0f7b-46b4-bdc6-49ab84bc22c2",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "eb83a56b-be43-4426-a87e-8dda916b3cea"
        },
        "item": {
          "id": "800d6206-ac31-498c-8498-8a42f6c2812e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "62ba5d15-93ab-4909-b353-31b332bc371b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7d3515-4909-426b-b4b1-66c5c7a10d98",
        "cursor": {
          "ref": "0c1d8d1a-ac78-4bc1-a98f-efafe93c19b4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a5c5ce08-674b-47f8-b712-a701fc9d5dfa"
        },
        "item": {
          "id": "1c7d3515-4909-426b-b4b1-66c5c7a10d98",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "818ec7c8-86f8-4473-9fe8-887a76ee466e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee47954-3b05-4ac4-a16b-fc20e3244737",
        "cursor": {
          "ref": "3103095a-455e-49c9-99ff-ccd81ccf5d0a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ee2198f0-b886-4e23-b140-e74b8d178b79"
        },
        "item": {
          "id": "3ee47954-3b05-4ac4-a16b-fc20e3244737",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f5d97f31-4855-4ccc-bd1c-129bcd162b8b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ce197752-fe76-4d3c-bec8-5b807c10d43c",
        "cursor": {
          "ref": "3159df53-e2f2-4a68-9f3b-115575ac56c9",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "38e4d64c-ca68-4edc-9f19-3952779bc7e9"
        },
        "item": {
          "id": "ce197752-fe76-4d3c-bec8-5b807c10d43c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e58f537a-bb3c-4d7f-9ba2-3049eb51d17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2b8c8d-4719-4859-a7f4-f196f801f3c2",
        "cursor": {
          "ref": "0dad8f17-a7c1-405b-82e0-54c59b635e8d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "04c831a6-89fb-4929-8009-d31eefa5331b"
        },
        "item": {
          "id": "4d2b8c8d-4719-4859-a7f4-f196f801f3c2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bf232be2-f5d0-4f97-8c57-073d89cd4e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60106efc-454b-4da9-b58b-0200788fb8e1",
        "cursor": {
          "ref": "9a92fa73-13c9-429d-8d06-291f2cab5616",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "65b65ad5-0b41-4df8-a5f0-c658158b88dc"
        },
        "item": {
          "id": "60106efc-454b-4da9-b58b-0200788fb8e1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "72bd1960-e5e3-44e5-ac09-791cf1623b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81f45aa-8557-4a2d-9288-3b9f8884fb1e",
        "cursor": {
          "ref": "4a0b56be-f378-452f-b187-0bf1c37e9901",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "61496b79-8542-4139-84fc-55a8f535bdbb"
        },
        "item": {
          "id": "c81f45aa-8557-4a2d-9288-3b9f8884fb1e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "216da879-1c64-4838-950f-a750f25db646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2350902-14ac-41e7-95fe-1e9fc775bbe0",
        "cursor": {
          "ref": "be2fd708-dd16-4b2d-b469-cecd6bd2bb71",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e173b037-cdbb-4006-b97d-29f84cf1534a"
        },
        "item": {
          "id": "f2350902-14ac-41e7-95fe-1e9fc775bbe0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1f5fae9e-06a0-430a-ad39-76af54de0932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dada2f-2b77-4ea3-8b0a-a2781948b17f",
        "cursor": {
          "ref": "694ab1b4-8d12-4180-a426-fd1a91fadb01",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3522560c-710f-482b-a589-2e64421cb31c"
        },
        "item": {
          "id": "b8dada2f-2b77-4ea3-8b0a-a2781948b17f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5d7f4728-e815-458d-98e6-2ac37156b76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89584f17-eb5d-44c5-b926-29a4db1ec3a2",
        "cursor": {
          "ref": "4c5a8eb8-1eaa-417f-abbd-2b8d73f45568",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d333f07f-be03-451e-b827-f1c6d68f80d0"
        },
        "item": {
          "id": "89584f17-eb5d-44c5-b926-29a4db1ec3a2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "876413ce-8705-481e-a9e4-f2be87312eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2c582a-e8af-4047-ab69-abb13fbf4421",
        "cursor": {
          "ref": "994b83f1-d866-431d-8b18-fc58fb859aff",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "38f16a8c-87b8-4b82-bd7f-4a953f9f093b"
        },
        "item": {
          "id": "bc2c582a-e8af-4047-ab69-abb13fbf4421",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "286a5f83-ea80-49b0-9ab2-98dc4829c974",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "38a3e5ae-a05c-46d9-b1d3-f0f72ce3f422",
        "cursor": {
          "ref": "85ff5c8e-4e46-4f43-ac22-18a70d0313a0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ae5d7a57-af29-4dec-9255-200db5c6de3b"
        },
        "item": {
          "id": "38a3e5ae-a05c-46d9-b1d3-f0f72ce3f422",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8084f087-33be-4add-8f30-b761ecf9d421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1311365d-a226-43bd-8c4e-838ff2298b93",
        "cursor": {
          "ref": "97da8d1d-b7ef-486d-8056-5db05ea7a4e3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "42498e8e-9023-4482-ac2e-58f0ea849251"
        },
        "item": {
          "id": "1311365d-a226-43bd-8c4e-838ff2298b93",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "118658b6-5f6d-4a80-aa3f-ab5f0fe8a807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36c655f-7256-4486-b7a1-1fb957f23597",
        "cursor": {
          "ref": "e73236fd-646c-4fb4-aec4-a1f327d17af8",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4ce6a7b8-f5fd-4312-b44e-ff44af4c0da3"
        },
        "item": {
          "id": "d36c655f-7256-4486-b7a1-1fb957f23597",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f2fe410-36de-4750-8a47-cbbbb98efd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1783c8-f8ee-4b58-809c-47209294ec2f",
        "cursor": {
          "ref": "4654fdf4-104f-475d-931f-66240eb54cec",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "29470be0-ec6c-46a2-a0c0-527fb84b4013"
        },
        "item": {
          "id": "8f1783c8-f8ee-4b58-809c-47209294ec2f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e48dc1a2-a6a3-469a-93f4-e303241ee121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890e0fa3-a2bb-4b00-bf7c-22216a6eec4b",
        "cursor": {
          "ref": "f4c8cba4-c78d-41ca-a2fe-e468001baa4a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f8cfb707-a618-4f21-b0fa-df8dcb68f148"
        },
        "item": {
          "id": "890e0fa3-a2bb-4b00-bf7c-22216a6eec4b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "55e6cc47-a60c-40e1-ade3-ab9fc45f2fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebba1c2c-140e-49f8-9d67-82918b672a3e",
        "cursor": {
          "ref": "4fc05f73-6f1d-41d4-8bd9-981ab55028f7",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c7f54037-4431-4b57-ba6d-2fff39b32b3c"
        },
        "item": {
          "id": "ebba1c2c-140e-49f8-9d67-82918b672a3e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "28236c92-ef81-4c71-9a10-7aa2d7138c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0811fd7c-2d27-482c-8101-ba7a98c501ba",
        "cursor": {
          "ref": "cd909c50-d34d-479f-9c46-fe837bc10044",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "52a56d70-8e86-46bd-84d8-7154d0cf932d"
        },
        "item": {
          "id": "0811fd7c-2d27-482c-8101-ba7a98c501ba",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7bed4928-68ba-4c96-a92f-df151c56b008",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f125bdf6-fc23-4e7f-8b44-9ee3abef95e4",
        "cursor": {
          "ref": "041c3a06-9f0d-4858-ab10-8002d66c0252",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1705b9ec-22cb-41d6-b8f7-ad96a7a29484"
        },
        "item": {
          "id": "f125bdf6-fc23-4e7f-8b44-9ee3abef95e4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b68a6166-3873-40eb-bce5-d04d8e12c9ba",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "d5c8fb8d-e7fc-4a74-b1f4-98ba27081b71",
        "cursor": {
          "ref": "642ed43e-e947-482f-823a-446f239b3137",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f2f2f4f7-9a85-499f-96cd-af1c6944c695"
        },
        "item": {
          "id": "d5c8fb8d-e7fc-4a74-b1f4-98ba27081b71",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "613edee9-29a1-4f81-87c9-70a67f1a2226",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "6a020d72-e723-4019-93c3-4b1396b156fc",
        "cursor": {
          "ref": "fd7b0092-1712-4fd3-86c9-50f513947f06",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1e790014-8f54-41ee-8216-e282a7796f4f"
        },
        "item": {
          "id": "6a020d72-e723-4019-93c3-4b1396b156fc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "be0c9261-62b6-4e7c-8250-86744c31db76",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b3b96f6e-2a70-45a0-9cd9-a09c64b61a19",
        "cursor": {
          "ref": "0e831e18-70e6-4ef9-8610-ae8134d6ad08",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fe3020f8-6755-44e4-ac1f-3a6ae4876de8"
        },
        "item": {
          "id": "b3b96f6e-2a70-45a0-9cd9-a09c64b61a19",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f7e31d7f-08ed-429b-8efc-941e2ebc1b63",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "551e6df3-18fd-4b16-937f-e66601f9b2e2",
        "cursor": {
          "ref": "9569ca0c-df9d-44e3-a7b9-13c50ac66366",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0334065a-f1d8-4e22-9e92-69b5ebbe0463"
        },
        "item": {
          "id": "551e6df3-18fd-4b16-937f-e66601f9b2e2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4040d341-3175-42d3-a07c-d583825186db",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "da758f98-d0a5-424e-98d0-7ba4e623cd73",
        "cursor": {
          "ref": "824303c2-63d3-413b-a693-5995159b9751",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6cb0d5cc-9db0-4251-b3be-7334215aa851"
        },
        "item": {
          "id": "da758f98-d0a5-424e-98d0-7ba4e623cd73",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ad86eff5-2fd5-4ec2-a8e4-4eb7c431b2d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33c9049-e313-45ec-bfd4-dccbc0705622",
        "cursor": {
          "ref": "724a1ed5-02d7-4a56-bbd1-64d8b42426c1",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "14f82054-1c69-4a9c-b1e2-5344d0844cb9"
        },
        "item": {
          "id": "a33c9049-e313-45ec-bfd4-dccbc0705622",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "435a520a-0275-4158-ab7b-203ca9e718e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ac2246-3e85-44ba-b094-79a19e8c9490",
        "cursor": {
          "ref": "8582e8ad-c5af-4731-bbe3-51621ca5478f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fd3cb638-d8be-4908-8f03-7c23ea568a52"
        },
        "item": {
          "id": "13ac2246-3e85-44ba-b094-79a19e8c9490",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "089f0ef6-a027-448e-b578-dd1b3844a6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a1b5b7-85aa-4947-9af4-a3b428e82f03",
        "cursor": {
          "ref": "f3eb9ec5-8a49-43a8-873f-7c9275faa6ce",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2b95e02b-a91c-4b09-a4c0-11fd4ab70e29"
        },
        "item": {
          "id": "f7a1b5b7-85aa-4947-9af4-a3b428e82f03",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "64a9f6c9-947f-4aaa-b229-c17fdb07c853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cb6935-1f2c-4e2a-8721-882c96e4b92e",
        "cursor": {
          "ref": "fc6be664-25f5-49b0-a242-780182b06dc6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "de7ee2f6-a8f7-46fc-aafb-49b592158dc8"
        },
        "item": {
          "id": "61cb6935-1f2c-4e2a-8721-882c96e4b92e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "62899e31-d1b0-4664-a114-f2da28b7e0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e509c369-49d9-4caa-be22-6c553d6e5963",
        "cursor": {
          "ref": "f5b2aac9-7b4c-424e-b763-9974f9bfd276",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2a3050f2-e407-4078-a4a2-9a55e3905554"
        },
        "item": {
          "id": "e509c369-49d9-4caa-be22-6c553d6e5963",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4caccf72-ba9c-41e3-ba87-21c51f21aacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbea5aa1-8001-49f0-a37a-4dc9cf44b136",
        "cursor": {
          "ref": "5bf0cb1e-f5f6-4e89-be42-6346e3fff438",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7f5a2054-b251-443c-8719-c4718d9f75a9"
        },
        "item": {
          "id": "dbea5aa1-8001-49f0-a37a-4dc9cf44b136",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "67dff172-66d3-4e7e-957c-10914ab4c25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68defe4-64ea-44da-8961-2a7bb6f8c2c2",
        "cursor": {
          "ref": "b0116069-70fd-4509-ba0b-50f2dfcf98a7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b01e9a4f-fb60-4556-9eee-790b56d4d133"
        },
        "item": {
          "id": "b68defe4-64ea-44da-8961-2a7bb6f8c2c2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b1771ade-05f6-4fa6-b8e5-36f23aa8a446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172294d9-b802-482f-a231-19a693923d32",
        "cursor": {
          "ref": "ffd40664-ce33-42d2-a569-92b6c0cf63a3",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "491db315-e9bb-44df-a7da-22b8dae3b639"
        },
        "item": {
          "id": "172294d9-b802-482f-a231-19a693923d32",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f7e98494-a509-4b75-82b9-b580826d8e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4850d04-10c5-4bbd-8bb3-5837cad7e663",
        "cursor": {
          "ref": "2430cdbb-7f9c-454f-b955-9fac4561496c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9ded6f5c-5f65-4ace-849d-124730ec346b"
        },
        "item": {
          "id": "c4850d04-10c5-4bbd-8bb3-5837cad7e663",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cbf232db-21d6-4802-8cae-cb4f1b7585eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc2bc7c-a0e2-4629-9b1e-6ab03c078599",
        "cursor": {
          "ref": "57d71500-ebd1-4267-bd05-968c53de21d2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4974e92e-e55e-4859-af41-a050b4e498c2"
        },
        "item": {
          "id": "7bc2bc7c-a0e2-4629-9b1e-6ab03c078599",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5907b9c5-20cb-4919-83d2-6feb2fb58d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c09635-1b27-44bc-a2e7-498373d109eb",
        "cursor": {
          "ref": "ce7661fd-ddbe-485e-9beb-a936b4f24108",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aa410a73-d52f-4bb1-a7b8-d33147d8a053"
        },
        "item": {
          "id": "66c09635-1b27-44bc-a2e7-498373d109eb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9abc53ff-e0fc-49bd-9edb-093b48e6bf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056d63d4-331b-4617-8610-a3d3baea8648",
        "cursor": {
          "ref": "6a2fb824-fa5d-4e70-b130-26fadce6699f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1a2e3c54-c49a-4cdc-832a-7c558208012c"
        },
        "item": {
          "id": "056d63d4-331b-4617-8610-a3d3baea8648",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0c2c737d-4627-41be-8741-eef2f336ffc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c30cddf-b2ad-422f-8867-eceea95c3662",
        "cursor": {
          "ref": "bdde0613-bdf3-4b37-8307-f362df223c7b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "de3edd12-74a2-4c39-94eb-067860e92c23"
        },
        "item": {
          "id": "0c30cddf-b2ad-422f-8867-eceea95c3662",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dfeb2757-73f3-49e9-bb6b-2b53eb26e7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43a2e10-860f-44a1-be5b-623a8a65e6e9",
        "cursor": {
          "ref": "eb0c4a2b-fc1c-4c58-a8e4-fd7478896468",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9e406fef-d588-4d19-8711-fe2ff44d7c2e"
        },
        "item": {
          "id": "e43a2e10-860f-44a1-be5b-623a8a65e6e9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7a1e48cf-4522-4942-9c21-c5b2bb43bf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c460df-cdd1-4fe6-a194-72c67a992381",
        "cursor": {
          "ref": "6b27a26c-6b0c-4842-8ab1-a113ea20aabb",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0a9e8366-0e1b-411a-9f85-abef33b2cc36"
        },
        "item": {
          "id": "97c460df-cdd1-4fe6-a194-72c67a992381",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7e725320-0237-492e-9e3d-a7f24bbe43df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d93bba9-4f56-4b55-ae47-b545017dcf28",
        "cursor": {
          "ref": "e2f530d4-1784-4926-8d64-059d3ee7cef5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "62a35522-1c5d-4524-a442-9da40455cc6c"
        },
        "item": {
          "id": "8d93bba9-4f56-4b55-ae47-b545017dcf28",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "37c8ef11-aecf-4b97-a250-3157950fdeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95cb404-dea2-4ad4-b2a4-e0a42ef21497",
        "cursor": {
          "ref": "2694ac49-3d07-401b-a6b9-c07a5800578b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "400ba731-d4d5-4941-ba5d-a01c8fc26709"
        },
        "item": {
          "id": "b95cb404-dea2-4ad4-b2a4-e0a42ef21497",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "da25f149-b46e-4417-81d8-c1e7e84df7b2",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "668c996a-3273-4f86-88d5-b6cbc9eaf5d6",
        "cursor": {
          "ref": "665679d7-cdfd-4c3f-b13b-e76a350e893f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "904b69ee-afd7-487c-bfa9-fef764d5b221"
        },
        "item": {
          "id": "668c996a-3273-4f86-88d5-b6cbc9eaf5d6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2c120601-5ffb-439c-a4a8-8c904ba078d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68218d1a-9dbb-4155-a5e1-7391303f1441",
        "cursor": {
          "ref": "3e8f7b84-d452-4b59-ae8a-168193725626",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "54a36f79-07b0-4dac-b9c4-1c763ea6fa3e"
        },
        "item": {
          "id": "68218d1a-9dbb-4155-a5e1-7391303f1441",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "761ada28-9be1-40c1-b99a-3aa54c46946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611a83ef-8ac0-4b41-a214-c8d24779bfc3",
        "cursor": {
          "ref": "79fe8ab9-8aef-4aac-9acc-f82c86f19729",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cca3820a-aa30-4b2e-9210-7a1370823348"
        },
        "item": {
          "id": "611a83ef-8ac0-4b41-a214-c8d24779bfc3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "da86aa22-edb4-4e49-82b9-e9d3c6cc38c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17925fe5-0ec6-43c8-8b1c-067db3ebbe06",
        "cursor": {
          "ref": "bb3957e2-9bdb-4a76-a522-569ad3667775",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e00dbc77-4ba5-48a6-8412-f21537747bb5"
        },
        "item": {
          "id": "17925fe5-0ec6-43c8-8b1c-067db3ebbe06",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1e2cd7a4-5128-4750-8222-236fbc0d3cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f66b554-5c60-4304-8b1d-f96ef1d195e8",
        "cursor": {
          "ref": "98881f8c-c259-4811-a9e5-adf976e1b290",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5feaf381-0741-49e6-b1e0-130854c86e02"
        },
        "item": {
          "id": "4f66b554-5c60-4304-8b1d-f96ef1d195e8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bc70a1ea-6b2a-45bf-a71c-59bd4f5b6be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a50220-b41f-44f6-8188-bb16999a2637",
        "cursor": {
          "ref": "e67950d8-b832-4cd5-9d14-daecf4511794",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f0149da7-2709-458e-a7bf-732ef7786c01"
        },
        "item": {
          "id": "c7a50220-b41f-44f6-8188-bb16999a2637",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fd58ba95-7dd5-4bf9-9b30-cf549cfc9739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821d8d39-b2ce-47a3-b7fc-76d37329d46e",
        "cursor": {
          "ref": "7a93636f-8984-401e-8840-a1c1c8b34247",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "32455234-eea7-4137-b319-b21f90971dc0"
        },
        "item": {
          "id": "821d8d39-b2ce-47a3-b7fc-76d37329d46e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a20f6ed1-3567-477c-affd-dadc22e1d0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa067c6-7403-4174-bf46-7fa62f6b533f",
        "cursor": {
          "ref": "0b4d36ca-838a-4599-9060-587b601a84ab",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "890a2a80-827b-4e65-9daf-2293b8516346"
        },
        "item": {
          "id": "1fa067c6-7403-4174-bf46-7fa62f6b533f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5943012c-42ea-4946-aafb-f576a179372b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b45cbb-0845-4551-a182-d53fade7ab89",
        "cursor": {
          "ref": "1b396008-fcae-4127-b9b0-b116dbefe737",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f1a48ba6-c97d-403b-81d3-e698f2ed22c5"
        },
        "item": {
          "id": "44b45cbb-0845-4551-a182-d53fade7ab89",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "91f4e75a-7bdf-4d8d-90c4-94e832f6a719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40538a0c-8d32-4d7b-a5cf-57a115e975fd",
        "cursor": {
          "ref": "6e043a4c-4e13-4360-8f87-a60b7e01cee1",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ecf6dc1d-c109-47c6-be23-f87e0710a4fd"
        },
        "item": {
          "id": "40538a0c-8d32-4d7b-a5cf-57a115e975fd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "df4a05ef-e8a9-4eeb-a27a-98020b4b80f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f087d06-4c0a-439d-bd05-cc98c982b29f",
        "cursor": {
          "ref": "ea43b5a9-3cef-4400-84ef-9d7e3f2bb375",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "66add161-7478-4232-9937-54c24b3b1795"
        },
        "item": {
          "id": "1f087d06-4c0a-439d-bd05-cc98c982b29f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "32bd2d62-a002-4000-999e-596cde64dc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef5a263-8736-4035-afce-efc97683d8fc",
        "cursor": {
          "ref": "88ee2475-ce87-4f7e-a292-25745389eaae",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "94ee99b4-7bd8-43f1-a231-d2107ec7c1e3"
        },
        "item": {
          "id": "cef5a263-8736-4035-afce-efc97683d8fc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d660a655-5880-48c3-9879-deba7638ca7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dc5d2c-dfeb-451c-9869-f54316c284ac",
        "cursor": {
          "ref": "032736f1-f7a4-4f19-aaea-ee93052ed1c9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "21fa7e1b-b6d5-41be-85de-1dd5cb208e4d"
        },
        "item": {
          "id": "f8dc5d2c-dfeb-451c-9869-f54316c284ac",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f2afbb35-12d4-4554-9611-f59db5a0ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cacb08-f81f-400a-a564-93e970fcc7ec",
        "cursor": {
          "ref": "b7bf9bcd-4943-4c5a-9ce7-24fa1c564309",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5583f22c-faa1-497e-950f-a381449568f7"
        },
        "item": {
          "id": "69cacb08-f81f-400a-a564-93e970fcc7ec",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "421b5e2e-249f-4ba5-b13a-49632d246097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b939fb11-079a-4774-8efc-2594cae2e64d",
        "cursor": {
          "ref": "0d9aa940-a7a5-4e0e-be41-a7b8133ae553",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "99507aec-0c19-4ee9-bdee-cd1b3b204704"
        },
        "item": {
          "id": "b939fb11-079a-4774-8efc-2594cae2e64d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "62e4f2c6-1fef-4573-b8b9-063f65b49fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df311d3c-d3dd-4722-88d5-66c3bcf14698",
        "cursor": {
          "ref": "374384e1-28f8-4ecc-8d91-d9a7556fa5f0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "568ac4a4-dcf9-44e8-bf9a-da2ccd375ecb"
        },
        "item": {
          "id": "df311d3c-d3dd-4722-88d5-66c3bcf14698",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "af22eca3-b0d8-4b83-8759-242fa4c0e292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351d014a-4c8c-4e6a-8975-434c34616e7a",
        "cursor": {
          "ref": "74006a6a-a5c8-43b7-86d7-3eb2067a451e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6a6ca293-c115-4109-913b-2ff26502e473"
        },
        "item": {
          "id": "351d014a-4c8c-4e6a-8975-434c34616e7a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a2f4c7a4-d890-4ffd-84ef-acf57e309703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a6cd27-a49c-40ba-b9c9-033fbbd2f9d4",
        "cursor": {
          "ref": "a5cfc8ff-a8cf-4d0a-bb5c-57f4995aeae9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "86b4446f-ada8-4b5d-8221-804715476860"
        },
        "item": {
          "id": "18a6cd27-a49c-40ba-b9c9-033fbbd2f9d4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "72cd0d3c-5fb5-40b3-8428-6b0f085eefd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d54546-c316-459b-a8eb-c89732274f61",
        "cursor": {
          "ref": "aab450aa-dd5d-480b-9edf-76a362f8cc53",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "53fbb452-d1dc-4f47-969f-fd79a4209918"
        },
        "item": {
          "id": "95d54546-c316-459b-a8eb-c89732274f61",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "58bd627f-86a8-496e-8c49-bc1b8c388039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bb8dbc-f036-458d-8d38-a5ce14a8f983",
        "cursor": {
          "ref": "e199a3e9-4b2d-40b7-b8d2-e80ccb7135bb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "279f8378-f6fe-4d39-93e9-88af7c132cc2"
        },
        "item": {
          "id": "99bb8dbc-f036-458d-8d38-a5ce14a8f983",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2095011a-49c1-4ca5-aaf6-b12798a487e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6733bdde-bcd6-422f-8f36-2e58a6ff224a",
        "cursor": {
          "ref": "c054e0db-251c-4917-b3ae-4bf40b0cbed5",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1d259d6e-5a95-4f71-8ad2-cc7cb4c4ca59"
        },
        "item": {
          "id": "6733bdde-bcd6-422f-8f36-2e58a6ff224a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c8bddc67-f25f-449a-a087-ba9da0a38c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145ad4e0-21d0-42ae-a701-db03ea05fdb5",
        "cursor": {
          "ref": "10b2a7da-745e-4e91-a25c-ebf48f5a3673",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fd28c95c-f70f-45f8-9897-74eb6e5c5813"
        },
        "item": {
          "id": "145ad4e0-21d0-42ae-a701-db03ea05fdb5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "57a8c662-3549-4ba4-803a-d09cafdf4d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9683235b-6483-4fe8-821d-c3890b3c82f8",
        "cursor": {
          "ref": "e4dcad79-c8e4-4113-8b8c-33f7950790ab",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "87487ed0-2723-4569-baaa-f08d381227e4"
        },
        "item": {
          "id": "9683235b-6483-4fe8-821d-c3890b3c82f8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2ffa59bd-06f0-4399-9bce-5db892a37ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aedbe0-44a5-45dc-a4d7-6f13b605bc6b",
        "cursor": {
          "ref": "4720df60-85af-4ae0-90f8-cef47d51b9d3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cf19b52c-f948-4e13-b0ad-43ac37800fcc"
        },
        "item": {
          "id": "80aedbe0-44a5-45dc-a4d7-6f13b605bc6b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "464806d4-bc7e-4a9e-9d35-f4452e62d7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cf38d1-28f3-4e2f-a8f5-e4b5ae08c415",
        "cursor": {
          "ref": "29b777d3-0396-4dae-b53a-014f531f3ee5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f225a616-ccf6-446a-9f97-ac507a680fc7"
        },
        "item": {
          "id": "98cf38d1-28f3-4e2f-a8f5-e4b5ae08c415",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "91aa37b9-753f-4a50-873a-a809c37a14bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa30826-c90f-478b-96dd-0e93d172c3b3",
        "cursor": {
          "ref": "74857a2f-be06-4657-83f4-017bb7714b02",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "57a1491d-2ceb-48e8-9c85-1940ba616cd2"
        },
        "item": {
          "id": "9aa30826-c90f-478b-96dd-0e93d172c3b3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b52300bc-aa0c-4c29-acaa-4d29a09a0677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558e7ecd-ba8b-4739-8fc7-84184374ae18",
        "cursor": {
          "ref": "4c7e1627-53dc-4d1a-bd3f-4a1fe7846ec7",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "acf73321-28b2-4754-94d6-be89a1827f58"
        },
        "item": {
          "id": "558e7ecd-ba8b-4739-8fc7-84184374ae18",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0c50a9fd-3b04-40a2-a954-fd82b50edbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f1c001-652c-446b-b1b3-e39d3977f4e2",
        "cursor": {
          "ref": "db7a6519-9d18-4715-8245-c8b59a763527",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "32d4e677-311c-4aba-92ef-6bc6dcead8b3"
        },
        "item": {
          "id": "f5f1c001-652c-446b-b1b3-e39d3977f4e2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a6806bfe-55b7-498e-b5d0-fa59c12fa80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee22e590-8b1d-4442-9e4d-5dbfb53f3111",
        "cursor": {
          "ref": "5252ba19-b9b4-4555-87c1-1d8222c145e3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "014aebdc-b802-44a9-9337-f1f45d32a462"
        },
        "item": {
          "id": "ee22e590-8b1d-4442-9e4d-5dbfb53f3111",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "61a531d9-719b-496d-ae89-9d15983b00e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c51e65b-126d-4f52-859c-9a5d91e98764",
        "cursor": {
          "ref": "6665576e-a3a2-451c-9494-da3b8e361460",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "06168426-eb4b-451a-93c3-2893c96ec244"
        },
        "item": {
          "id": "1c51e65b-126d-4f52-859c-9a5d91e98764",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4151fd23-43eb-4d6a-b437-96a550403ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b72e83-a1f5-4a95-a536-535263ed2496",
        "cursor": {
          "ref": "67ee7822-1c3a-4f5f-ade9-48e8f3706673",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e6821c79-ea4b-4fe7-b065-bffd789003ee"
        },
        "item": {
          "id": "87b72e83-a1f5-4a95-a536-535263ed2496",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "67b50f78-84eb-4387-abff-2877082030e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad29e31-c67c-48d7-b89a-2b12d5b6b57d",
        "cursor": {
          "ref": "ff1e9f3a-08f9-4b66-8b96-c237678b7cd8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "df1f4b33-d8d3-49e8-b543-0d2547248147"
        },
        "item": {
          "id": "9ad29e31-c67c-48d7-b89a-2b12d5b6b57d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1ccd97a6-c14c-41ce-b8a0-bde3abe1a88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55598522-154c-4586-8be2-124eab44ee63",
        "cursor": {
          "ref": "55791fa2-81d9-46dc-b0d6-06236d405223",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "31c3c47c-93ca-49e4-8fc9-6d1a8a134231"
        },
        "item": {
          "id": "55598522-154c-4586-8be2-124eab44ee63",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5800b84c-b574-4494-8206-bddca257e253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bb5792-70d9-4348-825f-4869431df2c0",
        "cursor": {
          "ref": "527eb636-8956-4648-81d5-c7bf3d65865f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a1924a33-92b0-4f53-a679-a23ed6495a30"
        },
        "item": {
          "id": "e3bb5792-70d9-4348-825f-4869431df2c0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b459a369-4495-4c0f-b52e-463120e0086c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f1af63-63d1-4a1c-b9be-6031afb99a62",
        "cursor": {
          "ref": "a4270d17-eaf1-468a-8708-212d9f040267",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0019308d-6a96-4936-a0c5-003bbf4d5ae6"
        },
        "item": {
          "id": "b9f1af63-63d1-4a1c-b9be-6031afb99a62",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ad88faff-0cc9-40ea-a1c0-289d5318d5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfef3df-08e7-4401-8cb3-52a922b90d9d",
        "cursor": {
          "ref": "e7c35a6f-ebdf-46c9-9d49-feefed3d64d7",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a1587fe6-9bdd-40c3-91ef-d2039176c5c7"
        },
        "item": {
          "id": "5bfef3df-08e7-4401-8cb3-52a922b90d9d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b972bc0d-9cf8-441e-a568-25ebbafe8455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da48d30-6f87-45c2-900e-3b1d656cfdcc",
        "cursor": {
          "ref": "066fcc5c-69a5-4fe5-8059-f26c7a753b14",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "423f42a7-ccc6-426c-941c-55216b3749a0"
        },
        "item": {
          "id": "3da48d30-6f87-45c2-900e-3b1d656cfdcc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "88db8565-997a-4104-a890-5a895b230711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32bf440-c5c5-4dce-990d-f3368dd2efea",
        "cursor": {
          "ref": "59846b81-76a4-40c7-8514-5b8e7f7bb7b2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c03d7929-7fe9-4fc3-bffe-2e31a5956d24"
        },
        "item": {
          "id": "d32bf440-c5c5-4dce-990d-f3368dd2efea",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c72fddb9-547b-4509-bc19-749e149f1c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f48186d-34e1-47a1-a939-e1d87eb9167d",
        "cursor": {
          "ref": "967b45b3-7e45-4c33-8e02-565f98b79f64",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b0c9f1da-8bfc-4a36-a16e-005689013401"
        },
        "item": {
          "id": "0f48186d-34e1-47a1-a939-e1d87eb9167d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8d8a7826-52d9-499b-973f-247f6bb25e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b2440e-1a74-4624-bf56-685dace4da0e",
        "cursor": {
          "ref": "fde63ba0-f596-4e79-b08c-606fe4c34375",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "19a306f5-9254-455e-a13a-5460f3895af2"
        },
        "item": {
          "id": "d2b2440e-1a74-4624-bf56-685dace4da0e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "76f84058-147e-40b4-b5af-7480b63e0298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6d8447-7449-4735-872f-3a11f30f808d",
        "cursor": {
          "ref": "88de6115-cc9e-4c92-9fdd-edde05bd21f0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7453157c-a4f8-45ee-83ca-28f50293acb9"
        },
        "item": {
          "id": "6f6d8447-7449-4735-872f-3a11f30f808d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "02243f58-d5bb-478b-bf9f-815f9eab6f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fda820-b357-4dc3-9c70-8329ee53060f",
        "cursor": {
          "ref": "8a6e4bdb-0cf2-458c-b85b-50d1a5ae8d0d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "54f3e7fe-683d-428f-9261-dd1bbcf4e866"
        },
        "item": {
          "id": "23fda820-b357-4dc3-9c70-8329ee53060f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f58b9088-e732-4d4f-a2a1-8a4ba5d3df42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d71f3c5-f237-4d24-9696-bb817505c101",
        "cursor": {
          "ref": "852bbe2f-1b37-4aec-9d83-380dbfdba634",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "276af6a3-9d4c-4fce-9a40-822ccf4bcdfd"
        },
        "item": {
          "id": "4d71f3c5-f237-4d24-9696-bb817505c101",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "26e30c85-6000-47b3-aa4c-d2dc6f4db061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3affd65-16af-41dc-a047-d1b34fcbe8d0",
        "cursor": {
          "ref": "e1f9701b-81bc-4fc8-aad9-fdc3f497c6e0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7a97e800-0b87-4adb-a85b-8fe0850da63e"
        },
        "item": {
          "id": "e3affd65-16af-41dc-a047-d1b34fcbe8d0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d0045b61-14d5-4507-b600-597491a1e901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd90a805-6444-4734-bcba-a3508ae275b6",
        "cursor": {
          "ref": "637d225d-e63c-41ad-974f-d77a5971c57d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bfb9a775-3dfb-4329-9913-b4e6bdc4315d"
        },
        "item": {
          "id": "dd90a805-6444-4734-bcba-a3508ae275b6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5d6acec0-a232-4afb-b0f1-d546eb3f959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc935a8d-0381-4d2d-a011-5cd1642598a6",
        "cursor": {
          "ref": "adee8f44-0065-4390-a7c9-7a9acb299325",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0d2ff95b-7e69-4308-8752-2f0009a38530"
        },
        "item": {
          "id": "dc935a8d-0381-4d2d-a011-5cd1642598a6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6faa461f-aa96-4ca5-964b-207add6d7fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4980bc5e-6ae4-40ff-a739-28ac64f3c199",
        "cursor": {
          "ref": "1f7b8ec6-3bf3-49a5-bbd8-83ee0704165a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b98a1092-9779-487f-b8cc-7dee70518b5b"
        },
        "item": {
          "id": "4980bc5e-6ae4-40ff-a739-28ac64f3c199",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "23be7039-8af7-4169-8d70-b49cf2cd904e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc0fae2-d3c9-4d85-aae0-f1d78b5ee396",
        "cursor": {
          "ref": "fc494db5-a76f-4e2b-bb83-e8649d9f9a68",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2aa92058-b60e-4500-abf2-f6066f8eb6b3"
        },
        "item": {
          "id": "0fc0fae2-d3c9-4d85-aae0-f1d78b5ee396",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2e0dc372-c931-49be-81a0-657b08c11064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70656aaa-7ee4-46ef-93be-2b4858e23c60",
        "cursor": {
          "ref": "36d8747a-1978-40d8-9164-20ea042f5148",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d90727c2-322e-4dec-9b10-7a266183867a"
        },
        "item": {
          "id": "70656aaa-7ee4-46ef-93be-2b4858e23c60",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e2c5fa5b-dd88-4d91-8e64-ed6d0a88f86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaca3b53-cc3e-47fa-8c4e-655a0cfb2af2",
        "cursor": {
          "ref": "6e1071b6-0a51-4d5b-9924-aaa88735de5e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b8bdb7c9-ab29-4bbf-9e22-9040af976fa3"
        },
        "item": {
          "id": "eaca3b53-cc3e-47fa-8c4e-655a0cfb2af2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "561fabb0-eca2-47f5-b131-c75c13e1188c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd36a31-c3c2-4111-9feb-612b5a618183",
        "cursor": {
          "ref": "d2116ea2-2b6c-47f7-9fe6-f678afa59f33",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "839bef30-1ce0-4290-8d96-c9f5e15e54de"
        },
        "item": {
          "id": "0bd36a31-c3c2-4111-9feb-612b5a618183",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f996083a-2386-4090-a6d5-52c48c9edaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c935ca3-3d27-474e-b571-1f380209aac1",
        "cursor": {
          "ref": "1d147736-b0c5-4ba2-b21b-c9ba5a70d7cf",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ac0b5831-3faf-4677-a59f-b0f56384fcd2"
        },
        "item": {
          "id": "9c935ca3-3d27-474e-b571-1f380209aac1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "321c3402-c6e4-4a00-a994-7928b467d7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9af6179-d98d-43fe-8941-63cb14d83dd8",
        "cursor": {
          "ref": "60be8d6c-c69a-4f61-86a0-60d94b34afdf",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "88369c43-d8d8-4afe-a1f5-077fe2138e4a"
        },
        "item": {
          "id": "e9af6179-d98d-43fe-8941-63cb14d83dd8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3099a12c-4c4b-4e30-9648-7ef9ee0acbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0810587d-9c73-4f01-92e7-ea94a097335f",
        "cursor": {
          "ref": "5a1276a7-ac11-4031-b558-220662941d9e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c54a449c-e10b-4eaa-be02-150f6880639f"
        },
        "item": {
          "id": "0810587d-9c73-4f01-92e7-ea94a097335f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f9d22497-c133-4938-91a4-5ddef7e81a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c307547-cb86-47b9-9169-50588d1a9f21",
        "cursor": {
          "ref": "790589c0-1cea-4346-b660-8e0822416eae",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fb5af06a-6b35-4e10-9858-05a483c4191a"
        },
        "item": {
          "id": "2c307547-cb86-47b9-9169-50588d1a9f21",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fc41031e-0c96-4916-b1d8-42202e62b941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2f8837-9ec1-45d2-863c-ac187ea3faf7",
        "cursor": {
          "ref": "8567ac48-bcbe-40cb-a226-abf5ea5fbbc3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d56c1f25-3129-4de1-989f-a795138ff93a"
        },
        "item": {
          "id": "1b2f8837-9ec1-45d2-863c-ac187ea3faf7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "255633be-ac18-4fef-9fb9-806c2c179730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8670ee6a-0846-465a-8b8c-6b69043c4987",
        "cursor": {
          "ref": "fd136414-4dd0-4de2-969d-0c4f75d22cd6",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7557e46c-edd0-42d1-8a12-78100ec138c5"
        },
        "item": {
          "id": "8670ee6a-0846-465a-8b8c-6b69043c4987",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "84561943-4e4a-44a2-9493-9e7a047238c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7966f9be-c746-4b81-87c9-1b650fa9ff5c",
        "cursor": {
          "ref": "fe3e93f9-4c15-4f66-a114-ba92f8637af0",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "552c0925-40ac-4164-8342-a2183a5b2f84"
        },
        "item": {
          "id": "7966f9be-c746-4b81-87c9-1b650fa9ff5c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "59657410-9f4c-4406-aa41-eb70f8778115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade861e8-6e79-4875-bdfc-ac0d53f66768",
        "cursor": {
          "ref": "eeb313f2-59d5-4cde-99ba-37c52d5bd623",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2d0fadcc-f83c-4cc4-8ea3-512296dd0330"
        },
        "item": {
          "id": "ade861e8-6e79-4875-bdfc-ac0d53f66768",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b0e0e75f-c1b1-4111-a8f6-d16478a23618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdd15b5-3608-49d9-bbce-d6f07dbd8b94",
        "cursor": {
          "ref": "9a09c4ee-732b-47bf-8cf2-eeb6e76536f4",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aa5d6b01-4d6e-41e1-a4fd-f13b71cd9c96"
        },
        "item": {
          "id": "0bdd15b5-3608-49d9-bbce-d6f07dbd8b94",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cf67b443-9271-46b1-a383-0a78d1444694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b660248-5309-4ceb-bc19-32ab816176d6",
        "cursor": {
          "ref": "4d57d0bf-2692-4791-9824-abd28242db64",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7ae6c874-5bcb-4f67-9c09-62649dde7fb9"
        },
        "item": {
          "id": "4b660248-5309-4ceb-bc19-32ab816176d6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1064fb21-85c6-4821-9e8f-0697a30f7be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c349da-090b-43b1-add6-2786a25dd480",
        "cursor": {
          "ref": "f379d6e3-9124-4381-a9d6-efc53d7e5e1e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e65effb3-460a-4c66-865a-d6bf8ebe4430"
        },
        "item": {
          "id": "e7c349da-090b-43b1-add6-2786a25dd480",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8313f81c-3553-4248-994f-991b1dcb6c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89911c68-e84c-4754-89dc-0edc76e62981",
        "cursor": {
          "ref": "87a4fb26-e021-4d71-a2ec-9fceb92fde3e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "69ad7adc-2b4d-4c4c-b60c-a7279d50848c"
        },
        "item": {
          "id": "89911c68-e84c-4754-89dc-0edc76e62981",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0c9c07a1-babb-4020-8819-e03694acdcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bec2f6f-7cec-4f65-86df-d66cdb0618b0",
        "cursor": {
          "ref": "34af0ddd-8b8b-410f-b852-630ae9fe0042",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4c43b32b-1077-4406-8e47-a49179a6c8df"
        },
        "item": {
          "id": "2bec2f6f-7cec-4f65-86df-d66cdb0618b0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e786ab20-7150-4f2f-97e0-e8eeae04c2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a88b22-5b8a-4c75-942b-efdacd00aff5",
        "cursor": {
          "ref": "08044d96-f4c3-4a26-9bac-e98f2f666e51",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b132c824-5753-4081-bf05-1fea76054bc0"
        },
        "item": {
          "id": "23a88b22-5b8a-4c75-942b-efdacd00aff5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9d859ff5-095f-43dc-9208-444d19114876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13e7c7f-145e-4f1d-b5e2-df177c811306",
        "cursor": {
          "ref": "e37063cc-85aa-4c70-b63a-8a987361cfac",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a84096ff-fc3a-4869-8ce3-1b03f3f75ced"
        },
        "item": {
          "id": "f13e7c7f-145e-4f1d-b5e2-df177c811306",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "dc34f952-2138-47de-8ec8-9c61fb5a3091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f73ece-7aec-4091-bf5f-101baf35bbe0",
        "cursor": {
          "ref": "6eeaea4c-d776-480c-94e0-2bb53dd31313",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "aff6c564-ef52-40af-b61a-0147e91f1092"
        },
        "item": {
          "id": "66f73ece-7aec-4091-bf5f-101baf35bbe0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b8b339df-6fe0-4e34-968e-ff8924735f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47209fe3-dc7e-4529-a1d0-282efdc1b3c6",
        "cursor": {
          "ref": "3c3574bf-99af-475b-80ef-603fed8e481a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e0d03d19-d414-4e28-8b1b-ac3f93af085c"
        },
        "item": {
          "id": "47209fe3-dc7e-4529-a1d0-282efdc1b3c6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5892c47e-ba0d-4b87-8231-030c86517b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464129a7-fbff-46fa-b5a2-6ba2e069d586",
        "cursor": {
          "ref": "3bedbd9b-0fbb-44c4-b0f8-a4ed3f229b1e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f58e1036-26d9-4170-9c80-a032cf027825"
        },
        "item": {
          "id": "464129a7-fbff-46fa-b5a2-6ba2e069d586",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "af984602-5c02-4e3f-a5dd-45ce11e38897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e939e32-d42b-4d11-a3d6-1b6d52b24633",
        "cursor": {
          "ref": "b8448614-32e8-47b3-8977-dea6af80fabc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "84e8148a-2203-4523-9145-258a89158a19"
        },
        "item": {
          "id": "9e939e32-d42b-4d11-a3d6-1b6d52b24633",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "52988bee-a91a-499c-b118-14536306c459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913e4edf-bf6c-460e-8f90-9c5fda2dfd02",
        "cursor": {
          "ref": "4d645ac0-6659-43fe-b6cb-f18b03b43898",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d68d7381-c5f3-406c-9070-0c7c0c888289"
        },
        "item": {
          "id": "913e4edf-bf6c-460e-8f90-9c5fda2dfd02",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5e80344c-eacf-4fa3-a787-3a389fa90b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e8d755-0e6d-4f6d-bb6c-ad92e08001e7",
        "cursor": {
          "ref": "fb383ee6-2575-49ad-b76a-2c839ad0824a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bfd30d32-fa8a-4fa1-b962-b239b251931c"
        },
        "item": {
          "id": "39e8d755-0e6d-4f6d-bb6c-ad92e08001e7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "07a76447-1bce-4baf-9e9f-f42c90cd6ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63bba75-9724-495d-bb6d-89d6d06b8d7c",
        "cursor": {
          "ref": "17197585-35c7-4efc-9374-eefa51667811",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f65ae4ff-585d-4a53-ba65-96e7d01bc25d"
        },
        "item": {
          "id": "d63bba75-9724-495d-bb6d-89d6d06b8d7c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1545eee5-d9c5-450d-a355-03c973048607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8878df1f-3b85-4447-9814-b1e574e37af3",
        "cursor": {
          "ref": "24962e35-87cb-4c89-b861-a33e9a1ee647",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "72569cba-28e3-44f4-ad22-6cedbc77f84c"
        },
        "item": {
          "id": "8878df1f-3b85-4447-9814-b1e574e37af3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cfe7af02-8130-45ff-87f0-d4aa7bbf038e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b0a44d-4295-4581-8af3-97e4a2bf383f",
        "cursor": {
          "ref": "9744ce59-af42-4583-935c-721f32719a8d",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0f465d6e-11c2-4db7-9bce-d913cd5efe00"
        },
        "item": {
          "id": "e2b0a44d-4295-4581-8af3-97e4a2bf383f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4657c71c-674e-4bfb-9288-b04ffe245352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225d6d3d-e67e-4c02-8068-23f9b0263347",
        "cursor": {
          "ref": "fb5604fa-b030-4c28-80b7-b09cdf184f4c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "428e2184-a559-4cc6-9419-fbce2b9e9791"
        },
        "item": {
          "id": "225d6d3d-e67e-4c02-8068-23f9b0263347",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7f10b233-ef6c-424c-9bbe-df10ef7a6d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b57f1d2-96e8-42b2-b1db-5ffec53ca7ad",
        "cursor": {
          "ref": "b836cba0-b7fd-4fcd-a204-be5bd6b0d886",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5a6d4542-c9cf-4ce3-8a9d-268aae0c307a"
        },
        "item": {
          "id": "3b57f1d2-96e8-42b2-b1db-5ffec53ca7ad",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fe7f4508-1f29-420a-a702-df812d102070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd789e5-89d5-48d7-9162-ee1ddd487a42",
        "cursor": {
          "ref": "088bbaaa-b220-4057-ab4a-2a044733fc76",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4d4cbea9-3e46-419d-a4c7-3b009fd55936"
        },
        "item": {
          "id": "ddd789e5-89d5-48d7-9162-ee1ddd487a42",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "894c4762-55ce-42b1-96b7-793918984bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ea2093-1cdf-459f-b9bb-9efe30745908",
        "cursor": {
          "ref": "e51e3b2d-1736-4b76-bc7f-944a4d4b129c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f986ddff-dfa7-45ac-b95d-e3a466f146ca"
        },
        "item": {
          "id": "56ea2093-1cdf-459f-b9bb-9efe30745908",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "90328d3d-2737-42ce-abaa-efa1d280ba23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667bcb40-6b56-44bd-a5ad-fca5c693cc6a",
        "cursor": {
          "ref": "5edcb09b-bd83-4e91-a27f-807a2bede777",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e549c818-fd1a-4791-b8fd-5d7d6dedec74"
        },
        "item": {
          "id": "667bcb40-6b56-44bd-a5ad-fca5c693cc6a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "aa714ee7-79b7-4545-a004-d636edb755e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa57c22f-8967-4adf-ab4f-c2d9a722d1eb",
        "cursor": {
          "ref": "4a2f29e4-f8a9-4825-828f-2ebf08c95f3e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9b16c547-5646-4371-8c78-0e5cdeea48ae"
        },
        "item": {
          "id": "aa57c22f-8967-4adf-ab4f-c2d9a722d1eb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0b637af9-21aa-4ff7-9625-9e84d0bb6f21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1e8092-53ee-4710-8ab3-8f8f53410316",
        "cursor": {
          "ref": "87c8cd34-c48d-4f3f-972b-732a4483228f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "26db11a5-c041-4267-8755-3f541a7db1a4"
        },
        "item": {
          "id": "da1e8092-53ee-4710-8ab3-8f8f53410316",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9d2ab9b8-d046-4a0a-8b51-118110ba951f",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b8a33d-250c-4058-8b82-7f083fbf1c55",
        "cursor": {
          "ref": "79cde627-9081-4327-9fd6-d53ec19a4320",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "91e276a5-c335-4ed0-ac77-3ed61f5d0b78"
        },
        "item": {
          "id": "00b8a33d-250c-4058-8b82-7f083fbf1c55",
          "name": "credentials_verify"
        },
        "response": {
          "id": "47e26d42-acc6-48ad-bc5b-22e71662a650",
          "status": "OK",
          "code": 200,
          "responseTime": 2755,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0714c5-745f-4b83-89bb-15ac741db1d1",
        "cursor": {
          "ref": "e7f9b0f1-72ff-4df0-8d36-68a9ac19905b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8929fd54-5376-47fb-9172-2e70cfa85a07"
        },
        "item": {
          "id": "df0714c5-745f-4b83-89bb-15ac741db1d1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0692b52c-3d7d-4efb-a4f9-2eb6181df1f0",
          "status": "OK",
          "code": 200,
          "responseTime": 3946,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba71194d-2c4d-41ec-90b4-68a1ce301947",
        "cursor": {
          "ref": "8c639208-09e3-4ba5-91fb-aa7cfc688998",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b58b20f3-6783-4ce6-8b2f-c7146ba24bc2"
        },
        "item": {
          "id": "ba71194d-2c4d-41ec-90b4-68a1ce301947",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2eab4f5-682f-489d-b5df-b3b5ac942511",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba71194d-2c4d-41ec-90b4-68a1ce301947",
        "cursor": {
          "ref": "8c639208-09e3-4ba5-91fb-aa7cfc688998",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b58b20f3-6783-4ce6-8b2f-c7146ba24bc2"
        },
        "item": {
          "id": "ba71194d-2c4d-41ec-90b4-68a1ce301947",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2eab4f5-682f-489d-b5df-b3b5ac942511",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273f4158-f528-4b45-9776-9395c573720e",
        "cursor": {
          "ref": "66911ec5-ee22-466f-a785-d8a136cb4740",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ca64ae5d-50ac-4480-b69b-37a5588b3ff8"
        },
        "item": {
          "id": "273f4158-f528-4b45-9776-9395c573720e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "03d9dd52-f9a2-4e93-ba84-5ab81c6ce919",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e50f55-227f-48cf-adca-ff5d92b294a8",
        "cursor": {
          "ref": "9b9ee6de-0ca3-4ead-9348-a1342abdc5bb",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "59be47f7-dafb-4491-b5e6-b1e579869846"
        },
        "item": {
          "id": "37e50f55-227f-48cf-adca-ff5d92b294a8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5d02c969-c1f5-40ef-95e4-0d27530f2490",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}