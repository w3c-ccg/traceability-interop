{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cc272aa0-4da6-4c89-8c55-77f29593c742",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3f9c088c-72c0-4cba-b8e7-698dd5bdb855",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90aeb639-9b06-4cfb-854b-4f820df94170",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fabe5813-568e-48da-ae51-d02f287ccd61"
                }
              }
            ]
          },
          {
            "id": "62ab4438-461e-40ec-b6d8-dd5b7732ae0d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39f6d02c-8183-4da2-a195-4f53aae63eb1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ddcbd28b-ea53-4f22-8969-38d733b3ca3d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a50f9360-8702-46ee-8998-974338db852a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "50078974-2e62-4890-a5fc-3df5a0f89ca5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0d1fdcc-d1fe-4943-9be9-6d7bd0e4a232",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7ceac83-3ca7-49d9-ab4c-cffbbde7c7d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45426e63-cc39-420f-bcdf-b48493698c67"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ade87538-80a7-4f81-bb4e-6feb1053806b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18e73654-6fc2-4244-a104-edd1cbf7f17c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "efd6e0b2-1572-48b4-a690-89cef832076b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10aac1cb-50c8-4862-99ec-272477f8dc9d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9247957c-b2cb-4f23-a111-9974f03746b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c0d798e1-3b74-404b-a9c1-79a823576e19"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbeb77ac-075d-4ecf-858f-34203d95d189",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94be965a-ad32-43ca-bbad-62d1a3ba45ad"
            }
          }
        ]
      },
      {
        "id": "758b5211-27dc-4d86-aa7f-c8a6acdd7b74",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "99493ade-c8f3-4e65-814b-2c04cab620cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7d5a47b-3134-4b49-9f51-cfa88bc1f545",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b632eccc-011c-4c2d-81e0-5ed5722be99c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a7d26a-1b16-49d3-af5d-141524f1b528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4cc5146-3d17-4ead-aa2c-740e2551e5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875c53ae-5856-4a6c-8156-e4b4e08a40a0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1841f7eb-d6c0-43ff-8023-a7303ba8a56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0a01866-c96f-4911-ab02-a9e6751d7c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6110b838-6821-4fa2-bbee-aa2a0a6189fb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e997b6c3-d3f5-46b9-82bd-983f386bc998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6a17efc-6167-4f8d-a57f-89778e4e662b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1833a7f-87e9-43c4-9191-417676802110",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "082f2b34-aaa8-4d5d-866f-59460c11b4d3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf1745f-7af8-473c-9e52-6df424c4be6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "597bf3c5-7038-4ed7-ae9e-50386d1d601a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916c8038-647f-4e79-8395-d2db817ed0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0e0f2b-5d74-4f8a-a0c8-dcb75779b1d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1a7a259f-4603-45a3-9aa1-1c9944de6eb3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5af6233d-9a13-4b83-8893-bc67e0e644b0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e98a9f86-0ec5-4aab-a284-be5f88a3fb93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7ced9ba4-979b-4e00-8df2-981c4bc60b7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a7f71ad-12b5-41a4-96ea-48d2ce845c9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d1ebe156-e297-49c9-8d10-c5fa559d89de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90d9b967-b712-4bdf-826b-7825966ef0d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3981f88d-55ed-4f58-98a5-b1f6de4be7dc"
            }
          }
        ]
      },
      {
        "id": "06d15982-c7d2-4fd5-a477-2c5d5f39f716",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "81b9d870-68f3-4c78-b8e0-2f7d08bf1b1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d98d95a8-3a35-4708-a350-cdeeeaa31e87",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d18b9888-568a-4541-b81f-fe20b0a3b849",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfbb8f4-ef8d-4089-bb2f-8ad652379a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006df6fe-2005-4a5d-8005-301a2bec878d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33c111a-5ac3-4403-a019-9603de46cb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3aa85a3-0db9-48d2-b700-9a41e82e97c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766e30be-0566-4366-b75a-70a45351c119",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fefed7-2ace-4aff-a421-ffe8324c7c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f35a222-c399-4382-b6d9-7f582926f3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0475af98-7a90-43d2-a3d6-ac74c20eaa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c97cf1d0-256e-45a0-a078-3a110a0fa22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be13f747-9320-422b-9e9c-e1b4bda8c02b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7776a3a2-fa6c-4814-8dee-13603ebd98d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba2eb46-8d6b-4a21-8cde-e4d55c70a3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e59110-4ee4-4e87-9102-667d5f4dc4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "811818be-f04e-4629-9ae9-7d8d250423e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359291ad-6a52-4cb9-922a-3756f8d70406",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8166cf6-d587-49e3-a636-dc19f48d2520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b305ab-67bd-4a8e-8605-6711536a21fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b269ea98-d159-400d-8134-c62243c93f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "befe10f4-2fe6-43fb-bf48-68ac1dd2a9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd99c611-c7d9-40ac-8f4f-5a72556a5aac",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb0131b-54c8-4e68-98dd-5f6f4475674d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db39a1e0-0825-45a2-90b6-018da6dd1f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3def602-b689-4719-ab59-291f0d45d8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "529fbbdb-600e-408e-abf4-ab74b8174369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5a7f7a-828f-4e6b-a8e3-085fcd7a5bac",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe26e6d-1a74-4b02-9dd8-4838f4678e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19be9d58-2d16-4661-95df-995afe1b5ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3f1f5b-7623-4977-8ce1-17e8888f66ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59f24429-e197-4451-ac26-48df8de1dacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367ae4ee-67a5-4e5a-8fa8-bef63d162e95",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5993d9-8b5a-4def-ba7a-8a160713f921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8136e291-6ba6-4630-bb46-2758f3880d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6148d8d-a678-4e9c-96ce-e95338ef8ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f15d6a8-ccc6-437f-b98a-653e9d5fd274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80de4e71-6a7a-4030-adc2-b7fc424df2b3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66391d18-3777-423e-88ce-6e0e0fbc3315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a49652-90bf-48cc-b6b5-abe578d0616a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2cb90b-7580-47b3-8d08-62bde5e8dbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cbc13c1-4664-432d-8325-72150a793bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7020f2f2-f8e5-436c-a200-4aecd7fd26fd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7269ab-df18-4ccf-8325-6ecfe2524a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4290f7e-d144-4fff-9c5a-26227ce11933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec05e026-24a4-4cef-83bc-69620a659f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b8de145-3948-4cd3-acbf-c2b23ac88ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4663537c-892a-4a9f-a8c9-2804593b8119",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba27c13-1d62-4399-bd5d-6455dd314101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4baea4-023e-4a94-94ec-52d26623a36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e842665-592c-462c-a935-adfa58ffe7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ffc8e63-5a93-427c-a9bf-506e54a3699a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f978ddce-a552-40a4-acd4-2bc08b94aa20",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1f9015-26d3-4135-a63d-9edfc170f34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc8b459-a681-4df0-8a17-e07e6cbe283e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417c6e53-03e4-4d07-be98-a68e089abce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aace3593-4468-462e-a8fa-60cde92cbc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2ebe3a-9aae-4930-a1f7-a349a59b0764",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be65317-7087-4262-b145-431982124035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfe0cde-fa7b-4d22-8383-4b2f16398711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a2b832-e07e-4579-ba8b-3a3e11dbf5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97c8d1d1-ed1c-40fc-8d8b-7691bd166779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7a63c9-d529-4907-8ccb-b9dd78cca0e2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06277553-bc3c-4028-8fc3-6a0468bc2eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1023600b-11d2-4815-aeb5-f464d797bb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b93fb9-99da-4eb3-9f41-8583dc9c4418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b323d6bd-0502-4720-90dc-3d42229181ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d50acc1-ceaa-43a1-832b-33e1ba069c72",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f52d91d-ffd1-4775-8c22-6acd2a3554f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38d4ee9-a276-4533-9e3e-543066a7c218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55bdbdc-189a-4f62-b8c7-ebf935062600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a545eaa6-73ca-47cc-9526-776cde6df4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb453d11-8b26-4af7-b553-c637f03b08b2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a694b172-f149-4aac-bbfc-870a583c5216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4d9dab-e802-4e4e-9896-781a779a4c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b439cfa-6be7-4dc1-bf17-4d45938eb2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "729006c5-2109-4002-ade7-bca6dfff6b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5f7c3a-f675-4179-82ff-9fd340b97d18",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8b1e9f-5022-4bfc-a876-52b9d1942f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad74b22-c2ef-4815-b27d-5f67c8c69083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb43afab-bf93-4cb2-be04-8031cb14e967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25fff017-2e89-4507-8440-8fbeba9d5417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63b0eb2-33e5-4def-86ca-6f0c297fde89",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a0102d-2c49-491f-9633-ff7f9a462e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4de4d5-428e-4dfe-b750-da97cfefa4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93cfb5b-b128-4488-8321-6749b7de5253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "852e9a6b-1553-4c25-9824-1a6f5974c20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7183fb45-77e2-41a2-939b-9c7922d63d3b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e564088e-68cf-4384-abbf-d4b791135daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb5e669-37ed-4fbb-826b-c2ab7b3b7d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6a5975-9269-47a7-9de1-2f52dc144e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed671ea-557b-4d74-9226-45b9191e99f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64393ece-8eea-49d1-b2b7-50c1182ae3c4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72a342a-edb2-4180-9fc3-0b601142f9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe484a4-aed3-42bc-8e77-43d3f214170c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7fcf5e-8a04-4faf-94cb-cb31e5792016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a014c16-3e89-47c3-96ff-54c8ac161a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bae3d9-6c52-46de-ad44-2cd503fe0d60",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4e2922-0698-4ddd-bd87-ca85194a0c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2f844c-781c-43df-8cdb-3e73d1860cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fbb1e2-fa1e-4682-a855-8956d804e457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb8abbe-7de7-4a3a-9dc1-b29c9cac8834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d593c6e-0330-4909-9a05-5945a7bd3f4b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2439047c-47b2-4da8-9b81-208e1f40f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cdf924-045d-4403-9b9d-c0899ccb9cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4e8b99-6683-4681-a6ad-cd3af4a6c823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a728731-7324-4d25-be2e-0a3cced47d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1427c26a-d25b-4e37-8529-221b46ded956",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6566a16-4754-45e5-a3ef-d12abee10492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065b5b1a-58d6-4087-9d13-998de6123bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e2ca78-0792-4439-ae50-4f6368c8ab75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45484ba3-34d6-41a3-94e9-5dd2b6cd0e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7d856b-34a4-4038-8f50-5b7dc84eeef4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b03dc05-4dfc-4ab6-b3a3-6f950935bc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9646c6f5-ab7a-4816-8c6e-649174e48b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa618168-c834-404e-b722-e4dff64f8159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e74df45-962f-4b76-adc3-2995fdd93b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c80624-1891-4770-bcc9-d2380cdac0db",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f29ff3-e16b-43c9-ab61-a5ece73028bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b65f21-c29b-4190-b1f0-bcf31c8a5d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f0bfdd-d55c-44ec-88bd-22aa50be2b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "561f3d57-09b9-4df4-86a7-e582dbaae17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4cf98d-5d56-4d32-a2db-6b428ffb1327",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ad337a-cca1-4945-897b-fdb9b962b7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449d145d-2ac6-423b-884c-9242c74af1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0373c44e-ec85-4b47-9143-2566ada01c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35742f68-94e8-48e8-9edf-a0334c9507d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e726102-8bdf-461b-bf7a-7a07806a5c4b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28baa0b1-f77f-4fca-9218-5ca61a8c49a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea4879d-f37a-413b-96db-676e3bc9f080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f9dc22-f02c-43c0-820f-40b92c8889e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "735b4e89-3a34-4237-b6b9-297ecd76a88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30a8e63-ff0b-4d1f-8ba7-b61a48d83175",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45df1146-02d3-4ac8-a32c-5d8094189382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ac9d86-c774-463c-b6d6-93cf95b74c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0469ac2-1f36-439e-9bb6-4af9bbdc952b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbb2ef8-ce05-4b80-9cc8-b53f385f8e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceabf683-542d-4b94-af71-65671e088aeb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12c2cb4-8527-4fa3-a86d-5601b5985eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c632a4da-e39d-4e33-9014-030d3ca98eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4992b694-cbea-47c2-be5d-f70b858711ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af7954e-10bd-4460-bf11-5f8676c46c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d06a64-27fc-4b50-9974-548333b30f80",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6783da0a-273d-415b-8736-5d0c88b89f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8ba24e-846a-4fdd-aff9-e4046618b331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd69148-6edf-4a97-9e50-c5688665b28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "579741fa-2c35-4333-9420-4ecb5ff11faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc528497-fc88-4e62-bf55-b4dcf6af0011",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4203f087-14cd-4808-aea9-26d7c312c4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6c5954-e576-44ec-b472-3acb4dd1d4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6191c62d-8474-41c9-a0fc-e3da30ef8d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "620f5a29-2477-49ba-af7e-003ca3de9c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a96e049-3c43-414d-bb34-8fa1173b2e01",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ee99cb-193f-4138-bbcd-9c5fbac06bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a8fcc1-033d-4070-99af-21569abdf1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f548b5a-e900-4767-a7ca-d6c64559179c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0f0321-cc1c-447a-bf0e-ea71460914c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a841dde8-9b09-4ce8-8eb1-c4b92b5b5cab",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c417cc6-1cf3-4710-b241-08d6636fe499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98db171-926a-4e40-a788-9c7829e7aab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa30117-9e67-435e-9eae-97da70263f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bda829b0-e03c-4915-9552-f265d0c35224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b659bf3-270a-4b13-a16c-98d9fa148ad8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b6586b-6c5d-4ed4-8b67-87fe222d8768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f552b2b-f7b4-42ab-aa5c-bd7820966383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c6d8f4-123e-4bab-b0c0-f89794d5de55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea2d30c-ff75-4159-9141-324e5ba72900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c845744f-2306-4764-8f33-934904ed8d28",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea8633e-ad2c-4130-ad8f-0f95fe7ad151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc77178-355d-404d-aee9-015d040f8810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f39c6e0-6824-4d23-b601-ed763582b340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9313f4d0-ed6a-4a19-8a9d-8fad1a9b3aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0596e94-81f9-4167-89e8-2429511d0066",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c7e68f-c37b-4720-b84c-5f7dae8a1ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9e1c60-4eae-4658-bd2e-36a277236878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1411ef-a9f1-4662-a4c6-63b6318535c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "345ee1f3-b7fa-4ca6-ad30-77f304e36bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ab2476-3a45-44cf-ae4e-d3a0cce6f7e1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a713262-9561-4385-8657-b762988d41de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d6a159c-c7b6-46a0-bceb-b33ee0b74e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6b810e-b337-4130-bd00-f2de147486ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b22519-2650-40a4-8e1d-e3078396a558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f76062f-3ea9-4f8f-90fb-e8f3dfcd1544",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1da423d-e603-4681-8ac3-4ed37a3871be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d47f24-62ea-4d6d-b48f-807e0851c285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28ce3e8-ea9a-41fb-a257-5b121cbff2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00168932-67a5-42a1-87bf-9282de9bd398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4f4404-ce0f-49cd-9204-0fb6faa53018",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0cd523-c57e-484a-96c3-81f5239aff50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4583a14-e78a-422e-9cb7-f598fb059d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dae77f-1cd3-49d3-a6e9-ed076dd4aea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d85d15c9-e3c9-4790-8d09-bdce16ba1104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7d05f9-1837-45e4-9b7a-fde723f3ad69",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e32580-bec9-4ca6-abe2-97a46fad404c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d814d8b2-5823-4234-baa4-f7546a50bab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11510db1-113d-4599-8f83-b3943630146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6563622-89df-4798-8c4b-b6d7d9db5453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be16280b-daea-404e-aefb-343f1ca4beae",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071e3850-38f7-4852-8a31-b9eab6421f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4e6df2-d978-438b-9790-6d0549bf3ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa24c43-3f78-455f-8312-03949f4da223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5565bef-ff71-4fe9-a816-04c8f2628c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258124f2-ac0d-4f36-af97-e97bb17eafe4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b59cd9-8290-4945-b1ba-e2c5b661a94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1509aaf7-a8f5-4f8e-8d83-9cda871545ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce319714-2329-425b-a003-c3563059c554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "21578dab-39e6-45d6-9014-f23f8786f646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dfbd85-1207-469f-8b5b-96ffd5c6551d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891ff11f-a1ef-4744-a8f6-b18fe649b286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efa8f78-f8c0-4c29-b4ad-debcdac10a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad87032-e916-4353-8a4a-7ca501a1cb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "485ef53b-f7b8-4ee7-9f5f-48e24808e5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa1f870-6b93-457b-b3eb-f61747d82a06",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b087afe2-a587-4a7f-85ee-7db75e540aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b4598b-96f3-48e4-b2ee-e1767712a6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6573f4cc-b8d3-4f6b-a651-c3ea9dcc060c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9669ba45-5bb0-4c30-b400-963f4444925a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c437673-f6b4-44f0-849a-b0fecf5fbaa4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5539e63f-044a-4408-9f33-1802a80fe04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c74726-7689-4ca8-aa4d-1de68022552f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984248e1-a526-4393-a1b8-0c01a7e611b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcdec4c-ca07-4d21-b091-50f055b0b247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d165a0-4f4a-4c66-9fbe-3ba3c8abf59b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9967daa2-3e0c-4f61-924d-a9835fd19bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cf0b29-42d4-4166-9017-370e8a1c014b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b748b936-4f61-42eb-b82a-6e1ffd744b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94e2f9d6-5d5d-4472-b315-44c8bae9a531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76eed31f-b70b-4c60-aae3-d72ff4113aaf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903195cf-5780-42bc-b797-327c36084c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5651e1ef-6656-402a-9db6-dfc5662eecc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b30c01-f988-4dac-91c4-757f70338937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a124076-d380-4525-88d5-2b0f2d1d4a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dac3bc6-350b-413a-831b-5ee6ed9ba5e8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a417b1f9-e7f8-4d32-a69c-bffae9abe406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530472e7-add3-4635-8a2c-1d69be4de8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ff7d90-0914-4236-84bf-dc0497f5a3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a84e677-5546-4894-888c-242ed168daba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017fb66b-f013-4ed3-aa5c-b5c7cccb661f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fbbb44-1edc-4689-9456-eaa3fa722b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711d26b8-a8c4-49b6-8aeb-cc70101dc591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a593ee-f54b-40cf-827d-838056309a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9aa977-5761-45aa-a9fe-f47bd29eb967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d64661-a595-4518-add4-eaa32e0883a2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01def5ee-3c1a-49a7-8a02-6ea8088ff75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc1b9d0-18ea-4465-8fee-b0e3aeffb8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e99d0e-28f5-454c-9bc1-93e387d46054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc29f848-aaf1-49d6-bdfc-6a39971e789d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e6279e-2188-4a63-8296-8314a8e4e231",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e422d006-7248-46ff-8e02-2e999033512e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39948e66-7ce7-4bfe-8816-bada6e14fe44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a954e55-cd12-4e09-b62e-22832041d35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49a139ee-77ff-456a-a108-3b1c26ea8320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25edc290-8b78-4df6-83c7-c6f2ec19c88c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0ef09c-530e-4b2d-93ee-8a26bc7f3f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e63d47-724e-47d6-bacd-df40d547d6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398170c4-8a1d-4be4-83c9-3ed8d9299967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f168f7-5142-4fd5-bbfc-496ef60d341d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ede4d7-16f3-4fdd-874d-a5a423b0aedb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159ade26-6823-418b-8edf-b76ed532dca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec02c61f-56b8-4f15-b38d-0a7164c45de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ac3da1-221b-4b99-b551-cf37bd52a2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f6af10-1965-4bd9-b93b-44909658a5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6467ab-84a4-4ccb-a6a7-1a6d340c4397",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a4be73-d368-461d-aa84-656a902ae0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e91b46-cbba-41d3-b0b7-9237bdc27f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b643e89-5e03-4e84-b12d-df7dde1ddbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b9a08f-b889-4ff4-b6ad-cdb87441c6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab8c0b7-d7e4-4a5e-a63f-2c5212f7bba5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269e22c8-dba9-4af5-9d58-0ab3309a44bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5845ee-0f6e-444e-a5ae-a16e7e41a0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c316b9-8703-4763-b57c-007108f582b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fdba1c-225f-4579-a590-df5b21379257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ed9ed5-6e93-4c25-addf-9132434a4cd1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f1497c-68ed-4591-99c6-172ce368e79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fe3836-a287-4cd3-9f53-f72584a3d4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2799145e-6cd8-41dc-ab70-2932c2b95fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63537fb1-1353-4f1c-aeb2-996a16d3c298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1282d0-9856-4a89-865d-bea34c3c2fc0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0abd9f9-59e0-4b48-83c0-902dcbeb63e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b882168b-a415-4188-bcbf-7014424d2d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01f324a-eaf6-45d3-87b7-5df529b2ec72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "db290e00-a29c-42a7-a6e5-95bd2cec206e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4571dd-c626-4ad9-a15a-303dd08fab8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12980fe-5dfa-469b-b72f-7514eea0ca3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d87efb5-cfdb-4181-ae08-3d4f81b8f713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823b8ee5-39be-4b68-9824-cba2f7649193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05a74ea1-7fe8-4d57-884b-5cf7880d30da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44ed98a-0945-427e-89c7-890514ff226a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a4d8f5-b0cb-4ca5-b97e-be9b679a2dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662c26c9-e2ec-4899-b825-f59d4acd68a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e106ef-cdac-4384-9253-da9c2cdc438d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4e64f1-f6db-44b7-88e1-62a3db73cfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f6272d-f0cf-44ab-8fc2-322e7d558ff9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd866b8e-b528-498e-9364-f294d7c9e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89335694-6fab-4935-923a-be7a6593a108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b52ddbd-c85e-4c6b-8e7e-a9ab6520776f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "39747c51-34ff-446d-be7a-375894f7d875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e097cb1e-58f0-4505-9f0c-3c6837d9b078",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02693b32-e713-49c2-88a2-74721682393a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2c314c-95d7-40b1-a9f3-da76925ec4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aa9686-7718-4536-ab96-5c6fec7647c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d10bd6f2-18a7-4366-bc09-823f98fb21a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb9fc96-e7b8-4508-9eca-abaaca66e138",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47944d4-cbc3-483f-a1d0-a9940736e6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2e5024-3649-4e7a-8a85-9c41c9085398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38521a14-ed47-433f-aad2-864e5ea3a834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fabdd95-0661-45bb-ae77-97c1296b6ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553418e5-e5e7-4459-89cb-9b5a54eb151c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1658cb-4315-4727-a783-c2c4331aee94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eef2415-88d0-42cc-b2c5-06075a669507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1759f29-1ec6-4460-89fb-067537fb7a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef48c47c-104f-403a-a4a8-602cb482fce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dcedea-28ec-4690-9333-a8a71e17d794",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b9a55c-9d1e-412b-8265-db63828368d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd5e44b-5d1f-4589-a363-4153958a6ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3157a90-3649-4daf-a01e-5cbd4c18fe24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62693636-2b65-4836-8c35-c2344b1ca733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119f3af0-4c6c-4fb5-8bec-390a4139e97c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a818743d-2385-4f78-bbe1-6f9419290ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05753b25-789e-4aa9-a81b-2ed0b3961f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53db2027-62bb-4acd-adfd-1e3db8e05641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4ed1f6-7e0c-40d6-9741-0b8230d86351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c44e72c-a36c-44d5-a2e6-2eb175793af4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a02d9e-a0a2-42c8-b9a3-a122c0c0774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bbdae4-38ce-4deb-a048-a6e702047e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e113fd-33d1-41a8-aef1-6a011fd8ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d1d27f-ba97-4313-9524-0c3406c06af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd600de-324f-4f03-aba7-99b3bcf1db82",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a948bf7-97b1-4164-a7d0-237c9337084a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e410aa55-6c57-4fe3-a849-0137321b9ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd5a76f-20d0-4324-9907-6b72d0ab63d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5942a5b5-2598-4f41-b66a-b2544aa6922c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca00ddd-3640-4a17-a083-5dde549d0737",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345aa6d8-5bed-4ade-a606-73aaf807e343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028ac1f7-3aca-49b1-a4f7-35c2c1389509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1217b41f-84fb-4f5e-8040-79218947258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8474af-3785-4324-8d00-dc9a6d43818e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36edd69c-c9f5-4dbe-af45-d4208dadb262",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8d2f59-b927-4684-9538-497bdee435cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85771d32-5149-470d-a33b-d1e50685d856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e25704d-1f44-4099-b580-9d22d8d3f9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f35623-71a5-47dd-907c-c7da473791af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1eb8e93-8552-4a3a-8527-9d0932e7a68d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414ea51a-fcc5-4993-9fac-d8c193298680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d267d3-7577-4071-8f6c-412c2c1e7f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3127b0-eaf2-470a-8ce7-7f317d2ce200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "df89a564-f5ce-48e9-bc33-fd5804ab8524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f781ac4e-b97f-4cb2-bf76-b61239509ef3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963cf4f3-c452-48e4-a1a3-dbe964a838ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b4081d-2431-4433-8149-e8e93611bc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43992409-78c3-490b-8679-d3561ccd877e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3193561-67a5-455e-b3e9-2f0899493539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef8c22d-02d8-455d-aee4-1abdee142a1d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d56bc2e-e61c-459e-b0e0-4494e4009456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240f5f75-ef15-4111-bbfc-02586f39a04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c7d08b-4cfe-47be-b783-c0e807a20c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adfeeb12-e618-497e-861b-633d63a265b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5383a5-aedb-47e8-812b-c134fdfe6622",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bd242e-6b7d-4e8f-b530-96bed4616f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8b16e9-482b-4cd9-bfe2-19c2f56f4e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201d8262-3985-4c8c-93a1-faa54fe5fc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b9d423-fcbe-4202-ade7-71d2f084b404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6397b345-6774-4797-8603-3e68574270ae",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f8e1e3-35d5-4826-9bf4-f074e4cb7626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ab2f33-474f-4a09-b9a9-0acd3092e5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42430ada-cac4-4f53-9b20-8778cd48726f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90ed341d-b708-4f67-8df9-0b041b6f7184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f5ec4a-b539-4e7f-90a9-7e46791ed7a0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0633bfb-41d9-463f-b083-e9b1703d9a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58ac3e7-8220-4f9e-a2f0-7633c3118df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd98f559-b8ea-4ff0-9870-e52e41b33788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea164f15-ad91-4123-8a41-84797e4864e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c08984-1bfa-4502-9911-b397e10f07d4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3ffdcd-9eb2-4c02-acb4-77941acf8138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16de07d-1a29-48cd-868f-3f91c110d136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38ecf10-503b-41cd-b5c2-deb57d0b6a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee11599-164f-4011-a4df-75e259abaedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c659af60-82f9-4a13-8ea5-ed49145962b0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb27b8da-75b9-4cdd-b33f-d9c645d13e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f570ef-87b2-46b9-9b25-b0b45e3efa84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6369772b-6b84-4f63-aeee-8dfbb23070e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67ed78af-447d-4a1f-aff9-860ed0d283b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a8f21c-d52d-491d-af35-56e59703def0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f362b9-ff42-43be-a86b-3c4751f25161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004c7231-9c8a-49fe-ab5f-6a0176cce8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d110f9-bda3-4228-8671-e5c0fc9781bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69abc757-6b9b-47b5-b045-3a22bb31ba49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f015de4-feeb-4c80-999e-ba48160ce9e7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938025b0-5d60-4649-9c7c-b26ffecd04a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73aa56b-683f-44e2-915a-cbbc97dafd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda94aa8-3ba9-48af-abd3-2f4bc4f3d3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc0de2d-5b1d-4e31-a1de-a7d64de4e958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d29b60-9eba-42c9-b64e-a4caeb8ea031",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5b85c6-f90f-4d64-be5b-e4443fd5b3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09eef69-e361-4419-91b9-ea9a6f16a9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf3b77e-1bac-423b-85f2-c877f7c8f8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7fddc3-85c7-4e97-97bb-7c5d43cfa27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7fe656-c542-4680-b564-86774c8b5314",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79adce86-4208-4733-b602-b80773e5a87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6286b02-e872-43f5-a91f-92203949dcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0b6372-f1d0-41e1-b6ed-397f18dd843d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d32346e5-1c0c-4ed4-85c6-f06f26987423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d482a1-3001-44af-b8f6-1bd5d8c25c20",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d13d4f-db11-46f4-b578-a56eac3e3f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d4e29f-4741-47d7-93b7-8b040a1cb86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9013181-2c75-4c28-abdb-ad34842c75bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55afc6d7-2654-49fb-b0b0-3a0139e721b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b52e23-ae84-48b6-b88d-fb7ee5461832",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7196e9bb-2319-4a67-926e-ed5baa6eef00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875288cd-23c7-4612-91a7-5bf73136193a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124db0a9-73ad-4be5-9590-5e02064960bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad774f4-ea27-4b32-b5a5-3e748d80a707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3c98b3-ecb5-4281-882f-76c9c6661db5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0beb161-1712-4ee5-a5ce-331fe801557c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8df7d5-0757-47cb-9ec1-3d321cbfd50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a49f40-3264-49e2-ad85-e94b4c4b8c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3679365e-64fd-44fa-a065-497530242b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4915e2ec-7409-4062-9a48-5aad817ae1a3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9a6f83-8aa0-4f4b-8bc6-247a17694b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ab474b-bd26-4cc5-a025-311bab02ea0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ad77d6-3b01-4cba-818b-f21201c4e170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94013de0-0513-4b69-a40b-c2203683d9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5a9587-6665-4d64-9ed3-443d37448a07",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc36ac1-3399-4e8d-9267-e6872dbc451f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3328927-bb7f-4c0c-8ef1-192407bc4096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b52b3f0-8f68-4c1e-a2c4-ebcac3386396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fa4b7e-1802-4855-b4a0-2544ac9355a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207a4e47-4cfc-433c-ada8-5aec054b9961",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d89329e-9606-463b-b75d-0f1a5e95de09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab72ad21-3fa4-47ec-8ca6-801748c8470e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23eaaa08-2a80-4290-9a78-3d6900bce2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6ecbf5-f18b-4ea9-a027-5699eb163d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091ede6b-24e9-48a4-b86d-9b5e47d386cc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975a76be-52ef-4665-99fa-67fc265e2f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4397d6-b892-407a-aa4b-68b3c033c0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de28d80-dfb8-4e31-895e-8f511bda5f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6be441a-afd3-4051-9369-5967b0026cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e221451-e558-4092-b3fa-c77d02bfaae0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e31ed2b-4030-4ed8-b57d-dab5523c8998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46a1eb3-cc2d-4447-ac24-523c8eb0c6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8be11e-f78e-48a5-a2e6-50305665e40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f74363ba-daa9-48e8-84c3-5f6477897b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c28b33-9946-4d08-8e85-72c6f3e0e440",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1daff4a-adf1-4625-a008-815751b3b4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cd8bac-4c17-4c09-b932-54ce032e0ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c43db7b-9c80-4d12-ba71-4a31b96f182e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fabeab22-a351-4069-8f68-01cadbca78be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0519cc6b-0a8e-45dc-af50-908f8227e1fe",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b0bbee-2027-4ccd-9602-be5d06dd08e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8081ce0-484f-4772-a919-8cc5f7327050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc13cf7-2aee-4311-bb16-ab517d600d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "99277f01-15d2-45fd-9771-a51c5c7ab2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076cf61a-1dd4-47f1-805b-c026f0b7a94b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdf3489-2309-4d56-8645-50195f9e0fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9648b0-4224-4cb6-b425-91484805d4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4927be84-43cb-4f14-ae8d-999de42ccace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc57594b-abaf-448a-ac0e-c5300736990a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be31bc0-b2a6-4516-b783-8e444efb4c10",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26bcbb2-1f31-418e-96af-c93380ae87bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2f823b71-9b19-49ae-8b22-9776c96ee378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83e668b-d578-4aa1-ab73-7387d45fe6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "abe00c8e-0148-4e8a-8705-ad05d86b6b75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f2aa75e-4428-4cc2-897b-fd9c9a8f4fcb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "993bd4f8-784c-4463-a942-a7a955da8f68",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fc1105-377a-4391-89ee-b485c1aad151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d73622d5-cd8b-4c00-817e-1e26dcb3495f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4374c92-7a2c-4c80-9201-c550bfdf6a19",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df1ff0f4-8ad8-48cb-ba64-88506e341440"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d669f00e-f7b6-4ec0-8178-603b6288f614",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7591edaa-640b-4fbc-b7d8-e3bf6776d820"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdc5dc6b-68c1-416b-b0c2-f783a19ff983",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2560cd40-5b8b-4109-bb12-270720ee4bb4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfb0cf9e-c210-437b-a14c-66e775d3d4b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "048448c9-35ae-483d-98e9-b00bc76435fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0b41b32-29b0-4a0b-8531-dc391ccc022b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebfa88ef-cb60-439e-b386-c2856414e623"
                }
              }
            ]
          },
          {
            "id": "59f0db85-447d-4cb1-ac5f-ac4c118a0632",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5170c052-b224-4bfe-93bd-2a07f6bd43dc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ddd9a3d2-fb5e-46b0-b6bb-d9279e76d722",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e9a207-8dad-445f-96ce-5a74990005de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d4549036-64b3-4f1c-b034-02ee00bdb69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8c5082-c807-49f8-9d9d-548a02bb204c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367bf336-4e10-46b1-be40-1aa11b4bc824"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9056054e-7218-4a07-be8b-eb3b450ce941",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f963d048-5d57-47e9-8c1d-29749f78d383",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b22d708b-e227-4a36-90d9-da6ab2d88080"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f1e6579-e80b-478e-9028-d2595781ef5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "293f891b-11a6-40b2-99a3-75750af53b1c"
                    }
                  }
                ]
              },
              {
                "id": "83305a55-18ba-408e-af3b-a496d5593a4a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9411b24-7309-4ea6-9666-7bf6a6d5abad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "396b2b5f-1cec-4bea-b456-d245dcf22d0b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "666cdea5-490c-45c3-a543-2e0cd65654ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ddd169d-64ac-4526-b34a-806888129e6a"
                    }
                  }
                ]
              },
              {
                "id": "470bf155-9b7e-44da-a168-e55a0d14a64f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e39ea4a2-95de-48c5-9166-02f5f39b583b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69abd57f-5571-49b2-bf9d-0155f6635e41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "716dce65-9345-4694-be30-0c11efc98bbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "06a8b7e5-06c3-49af-bdb7-1e34966d72dc"
                    }
                  }
                ]
              },
              {
                "id": "349c74a8-4709-405e-b27d-162891ed5ec0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7355a63d-61e0-42f3-a777-80f0a2b7e369",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "241f896f-e44e-4e41-a138-e19765f98a01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8bddcb8-4e1c-48ac-b1e4-749896e0b853",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6524749c-0abc-472a-9543-3299663a5f23"
                    }
                  }
                ]
              },
              {
                "id": "3a19a14e-6849-492e-8b71-7f939f96f34a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f84170ba-c254-457e-9fe9-4de6fd4b779d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aaadc097-ad50-4ddd-8fd5-c8bf7a6ad132"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7074a9de-9620-45db-b6a8-db5b24449b90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66a6d2ea-54d9-4006-a52f-a8620c05a042"
                    }
                  }
                ]
              },
              {
                "id": "a39d5f34-ad3e-4a34-b184-a204302a4204",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "176a97a8-692e-469d-b2f9-b40e5184ed05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a91b151-f1c9-4aa9-8ed9-eadee357b6fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "140277c8-ca04-448c-83f5-742b77937835",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f895994c-bc5c-4892-a0ac-2d7ac048e476"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c35d2b95-6ee9-4a11-a020-94ce301bae50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f60caf29-76a2-4c01-874d-c5840a167127"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2689effe-9be2-4d2f-8727-8779d3c2ef71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77268d97-13cd-4db7-8f89-6816589128f7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a42c424-9405-45c6-a141-59f25cfa6b78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3fb63c30-7f89-499b-a79b-49f164e837c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "355a3c7f-acf5-4382-a037-1370aa8aa9f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e11d0929-451b-4c99-bdeb-3cb2f383494d"
            }
          }
        ]
      },
      {
        "id": "542691ec-baff-4217-bd4e-1908c1084421",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "174b94f7-a282-494d-bf6a-0595be5ac3bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61061d3f-335a-477c-9bf6-a38f308dfb6d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c78d29d-0f64-4aef-9962-f38439c75afc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20b19d6-9e30-48f7-b52d-7a4f9e4bfe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4302b9d3-9529-46a1-8a05-56c72d977475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a220c9fe-a6a3-4638-abf5-b1e0b9c6e737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b73496d-2395-4d27-9402-2358bc7342a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf115bbd-ec95-4681-97a4-eba8757e4895",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e56427c-88d7-4883-8833-ff57a9daf123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df89f67e-b580-45aa-8604-9b7ca1cadf9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43da1fd1-9402-4af7-9b2d-39f263f7af38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7191c14b-fed0-4b83-a65e-130b79832472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cef817-2803-4705-b7a8-4c54b18b9da6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebd394f-3fa0-4c36-ab11-021d571a77d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0805e43-9b10-4227-a9fc-e1ca05506130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266b5786-e823-48f3-a16c-1d0e89fdeb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9afeefc3-9e90-4d0c-8464-2fc41090caaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30327fce-20dc-4210-b136-3cc9a2956c3d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b2fc2f-4c33-4bb9-a58d-5ce46a9736b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c94b7c-4937-49b9-8b18-d0f72934547b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2c2db8-84a7-418b-82db-975bf874e8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7926a27-1a1f-4ac5-8bf2-b4957fa8a521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193e2da2-7500-49fd-bb06-2e1eed9f1d7c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb10675f-821b-4d94-9367-73cca2728c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee0129e-988e-4688-a0e7-60205eb4fce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bd8083-6958-4c0b-a914-9fe056b87ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c10c25c4-850f-468e-b641-b871a44ddf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2161b509-cdd2-430b-a9f7-917ebe3040e0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2394260-8923-4d6d-b93d-d7f05fab35d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4260640-454c-4bfe-9339-96a1c69faab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510a6530-7911-49fa-9de7-fa61d95382bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71dbef34-2c6f-4d81-8228-78d3479e511a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9932fdd-ee0b-40ea-a39f-3115d3089b2d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c934f730-ea90-4b62-a8df-3e794bd029e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a5bc7c-db22-4bda-b95b-2c541c5c4ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0106a70-7a40-427d-b508-0d91c17a8919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d17c3c-78bc-4e3a-a20b-aabd5ab5f24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b330c8-3c42-4220-b782-d8f0521e40b2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d23cf6-6786-45e0-b6fb-3f4cdd029219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83943791-bd14-4952-adc4-980788bf09cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c68397-5777-427e-ad1c-7b2f560a0440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a062a544-d1cd-44e8-b07e-7316db936691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d834693-fc66-428b-975c-07018bd6c0dd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819bf73c-5f15-475d-a0fe-f383fad37116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d922713-3222-433d-912e-98699cb6dc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464ef6d4-308f-4550-a583-6a21e435d3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df608d19-cab6-44e2-8e1b-f9fc8fc91050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0813ce73-13f8-4149-816b-fa08033b64a0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a384091c-331d-4621-a5bd-ba05ca73c207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaffe60-ca48-44ab-9cf9-965ed9ead578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993848d6-19c0-46b0-9785-73006545fad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9d8af3-655f-4feb-ad9a-3c03efd96a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14826bc-a5d9-4f6e-b99e-d2cbde9553b9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea3a6e3-2e23-4555-b352-1d467d85a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696caeb3-eeac-4936-8aa5-cf311576e8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c0cf44-2fdb-4b9e-a722-ae6a56902ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5db8c26e-de72-4f8c-a829-108db9c18cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf48fe5-5b38-42c1-bbb2-f5d442b4b059",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c56cc5-1322-43b1-be08-74bfe760f9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de942fe3-1498-4a5e-8d6b-8f2676d3810a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec2ea5f-f827-4b33-b940-8477fc07cff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f78ca85-66ff-4983-9da8-be01db184034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a56bcb0-5d37-41a2-a433-f291efc41eca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02022b35-7faa-42e9-97dc-210f0b601010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c501cac-348c-45ef-93fa-4f12088c2ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbdf108-fdeb-4f87-b8e9-27d0aa5ad33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87209bfa-6e7f-492d-bfbf-d43729480706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424437c3-ef3e-4de3-afac-81b3e360b915",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba1dc3b-7c39-448a-8f1f-3371fc7fafa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a92ed8-a937-493e-911a-14f8db8c67e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc11558-b0dd-4d15-91ef-ad3156084fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "abfafa5f-ffcb-4727-beeb-905195eed19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592ad4ce-f7c2-410e-8156-8be51f0a55f1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a001f9-ddaa-4f18-8932-99f8d284e6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7c3165-491d-4e5b-909c-29c6d4f064e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586e8c97-2553-4086-9986-3797ee4facf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "05431e42-aade-46e9-b7ab-7c7ed3aad5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d3701f-57bf-488a-96b9-af7f2dcf7858",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bc62fe-3e7f-4748-9429-438b618174ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0c0954-617d-412a-8e84-5f16c4886eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1555a212-3992-461c-8296-35ef10a3a703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "166571ed-725e-42c7-bd24-ba82e137dc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f55ca7-cfed-422a-9cfb-f381fd585ccf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a971c4f-85ea-49bd-a773-da30e9545d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5136aa-71aa-472d-a041-294455e3e913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae19670-c944-4ea1-a7a0-e9d6061cf731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f69f1c79-5c72-4c77-9409-f27b2c4d8525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1273337-e859-4164-82e5-36a057b4972f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afef7fcf-8213-43af-b7c6-d18d43ca1f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2521ae30-9857-498a-a0ea-08285b3a3e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33b3ea7-656c-4199-9809-b2185a75e1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "035b12ae-42aa-4b12-851b-462df533dc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d893b4a-bdf5-4803-9004-773700a1912c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891fcb12-efc3-4f3a-90c1-1aaeecad05bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d0f4fb-270a-4b8e-b216-fac47c112cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce56b23-7a3d-4167-83d2-576353d8aebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c4ec8a-1015-4007-9bc1-b89af600105f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58da27c2-03d4-46cb-b295-c6cf12a1972f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a45b3be-4352-4335-b816-579389622626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224ee69c-af89-42d2-a030-98a9a3f7bc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cd76f0-8bd3-4d82-ab52-dbe8cecfd576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea37500d-8dcf-4dc9-b5c4-eb770f34e168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67610c1-647c-42fe-a722-dd0a41141c86",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13279779-7b29-42d9-827f-5f02cfc9e56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be415e13-d082-4d60-ba81-93bcda4d3ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44d2544-0978-434e-ad12-31aa2cb89301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b76a38-e9fa-4ae6-90ec-5178a2bc7d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a99559-2bde-4807-b564-0e549eb9ab8f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1576c4f3-1998-499f-a913-862caf6d3325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1711edb-b1d1-4820-8636-f21b84313995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e921a4f-5ea3-47b6-a513-29fb686eaee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4280eb0b-23da-48bb-a6eb-391471a8ba56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7410cbc-84b6-457a-8bb6-4232103e408a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c85a212-d5f8-4f22-b74e-72e01be13ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3e78d9-3133-48d3-98fe-2951b1b879c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97486f35-a954-4dfc-943f-e0f2f9195d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09686622-52d3-4bf6-bacd-a255585e9724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7915a17e-61cd-43d4-b165-91cb6a130095",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c570fe12-cc30-482c-aaa3-d65fbf651cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc55999-0b39-4f75-af37-e41c56b5d599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b490ab1-c4b1-4b44-8feb-5842bff297cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "617e0b43-654d-43e0-836f-eba6f5bcd844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8908fd-3586-42aa-9940-eda5d4b09a35",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fc198d-aa30-468e-b2c7-36699b98f5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd8c660-40b7-4841-80aa-767a98c3e917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106c569e-d11d-47b4-8d0f-c3184a159acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7dae8f-5d4f-4a70-bfe6-b8135231f09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9432a8a1-fab0-4dba-9804-15b6ead898c1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fac9e3-470f-42c1-ac0e-692d10b1b1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe2f85b-cbaf-42fb-b662-21e5159a6d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0568c9-0f9f-494c-b283-07e7d1ea5a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a1078f-e130-4f63-b3b0-355c2a703abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d41fc1-0b6a-4b4d-9902-af4580bff241",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c0ed8e-f233-415d-b2ac-754ae1c20ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96dd91ea-4219-4c5c-b11c-9a01721adbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf053ab-9ced-49b7-bf8a-61fc6d9f5c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "615d6be2-5273-4335-bab9-d9c96897b18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799521bc-8897-42a1-af41-d753aac1c486",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e91bb7e-96ce-4976-8719-0680624b0638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380d48d3-593f-4d11-bd99-489be66d0c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccad42bf-a3f6-40ed-9a56-fa713312a3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a04c86a-eac6-4f91-972f-fd7fcae743d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d463885-feb3-43a1-ba85-f3b6dfd55480",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e64f8b-55a6-4225-9941-d8da21ca9596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494cf207-a7b9-4ac4-85cb-e6efcaa096b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e1cb33-ec3d-49c1-94eb-e2a8f9637518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "393c98ee-8238-46d7-acc7-e2c47abe71f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2069c88a-982c-4a51-8d0a-cc6b7bd843e5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a745ba-01c5-4cfa-8cf1-11cda4d4527f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42da19ce-9e41-4f16-bf5a-92e4efdabb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed42cf8-4411-4311-bd2a-1c76d7902505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1c6a57-9a38-4c55-b02a-3f23ac1c38fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8af072-026f-47cf-998c-059c73c3525b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a67e82-4139-49e4-9063-b3247f12e56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32fe383-0699-4c37-b4dc-49abceabc28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a91cb12-5e7f-4bbf-8704-e7800c34a42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85ca4308-f178-434b-9b9d-b9be9f1dec80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c05b343-a490-45da-a67f-6355500d27ff",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4be770-3995-4706-b39f-4f4194d76ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9983d1f6-3482-479c-9a5e-680f7a8faf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f5314b-f730-4d81-8dce-68839c97fe39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1203504d-ee10-49f9-b344-d1f5dae0aa83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82023285-c3db-4e98-a3e5-dd727a72a33f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58956c9e-3780-4ad7-b9b2-33aec45cbbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a50b40a-870f-4e9e-ac3d-d92d2fd3d80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a54b76-4335-4501-bce7-8886bd8ae457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "572e28e6-50b8-4188-b98c-f82a6b23340c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b63c9a3-60fa-4a44-a972-1bc6608fdd57",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729b02e2-80f4-4501-aa34-2dcb16a1b5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb62ab84-c358-4845-a460-8efd25fd49fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0706607a-b4c9-4bde-af20-971c50e32d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "348250c2-1db9-482d-bffa-a41e06167e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58fedb0-79cb-42db-b112-063d26c70443",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd97b05-fe7f-426b-a8c7-984d9ac1675f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b040ef-93b3-46fa-815b-1d6af2fe972f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4c8b0a-476c-4768-83a0-b63d63e943a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b856c9-6a78-4029-903b-35e5bb25fa27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7086c056-587b-4573-8031-11f0ac0fab77",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a38b049-f220-4aa7-9028-1ec32ad1c556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c1fe92-d956-4e2c-89df-43960c3b9821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dab0ad0-1a56-4f1a-947d-869cf50db531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eeeeb1a-a418-4884-b3a7-67536218c8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14fcff9-d95c-4988-9007-7377b14860bc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde09d22-0da4-439b-bb03-a8476db3f360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b9a4d1-b316-49d9-b8da-d2ee25146cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeebdd0-a222-4520-abc9-eba28339f5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb71b6df-c085-491b-a944-096811698182"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d95d378c-f4fb-48b6-a7e2-53123503a055",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b4b0bda-c38d-49ec-bcf1-1c46928859ed",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588d16da-2ff3-409d-b109-b2f5836b671d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0a6b1b-e061-4970-af52-ab826cedaa9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "198a7833-9d20-45e7-b3a5-27102598b57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62e334d8-b667-45ff-80bc-d573f0568598"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61f2f2fa-34ea-4e5f-b0e5-65f8f67ba7e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a67494e-06f9-4087-b86e-38f4e175ab2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59444321-7dda-4cc5-8398-4cbe1adead72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcbbba97-cefb-4758-b1e3-a714bb995134"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a148134-6092-4855-99a5-7697ebd17287",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a4d31e9-0995-4f99-9e16-0eb269e59284"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b559c39d-34f3-45b4-ad91-49686cfc0cf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4ebc19d-5660-4b9c-a227-dc7233e448fd"
            }
          }
        ]
      },
      {
        "id": "ba3b8581-9629-4d7f-8785-6adda5e76418",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "11d124c1-be40-4d18-baed-d696dcab3fb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f1394b2-6f48-40ab-906c-40666856a9b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80bd69bc-38e1-4587-bba9-f5f001aa5a5c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb32ac5-184b-4553-8183-a43278799926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed66dec-3c68-411a-bf0e-cbee6afa5204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57abfdd6-0353-4844-88a4-138216980f96",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c837923-62e4-4261-ba75-ed045ba24577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0a4e1e-f4ca-435d-8732-53abdcd4c638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf98680-766c-4697-8cc5-369307726df2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b354b317-46e6-4d1f-8adb-30093c74848a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492c0675-a5ba-4145-96a5-1c7deccc4514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd784fd-fde8-4d61-b804-a4fd2d423006",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc761d53-560d-48e4-984d-53ff7cb9d0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e477e2e-b013-4ec0-9f15-b828b1d4edfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a246146-eea5-418b-856b-fa27afd424b9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234032ce-4b2d-4be9-b1c9-fad9aa5c7ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42817ff3-35da-40b9-bb75-61a1cece8fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5ae9a6-8324-4cd3-9a27-172ca2d16df8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61fecc7-7eca-44ab-bc42-84af9e7420a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349e42d3-b7df-4891-982f-7f4a2a03f9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559dbc00-99d2-4030-912d-912fe7bdaf83",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91165ae-08e1-4864-9ca7-a5a74b781e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424b0335-3469-4fa4-b061-1bc17e996c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2a8746-0656-45af-a576-1ff6abda481d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9df8e3-b145-4745-8c9d-296847ec369d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a91e39-0141-4cd9-b287-171a34289f21",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77808eb4-627c-4c77-bf22-6c5d81598bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a319c7-1404-4d1f-8977-11c33a0a15ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d16f913-17e9-4952-986f-2fa05492e4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c918e9aa-7fd1-4ddb-b6ec-b64a21922d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5a6734-bb87-4350-8e66-525ecc027703",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7d024b-6861-4d35-9734-ff09e210d7cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836149d6-4a36-425e-8600-34e72e86d535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f899f3da-7aa7-48bd-9107-6d7bb8ad8e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d339d22-160e-46df-9028-ccd8408aef3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d41a193-54df-4374-bfc8-4c26a3ad818a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388c929d-5455-44d9-9cf0-71ea5c4b76fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dfe959e-32c3-41e2-b548-bd33214b6597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc42b8f1-5de3-4e49-a745-8514465104d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943135a3-9c37-4750-bf66-87fdf9485aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afae0038-3a8d-4f3b-a3d5-8ef2650cf4d0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffa2b80-b060-4602-8af1-42b7a117d21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1950e0e-d902-4c91-b50d-382911c61a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9adfee-7d2a-4930-89ca-b04aedf96b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783cf609-1a0a-4ba2-bd93-5f574e978a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d302c65-a262-4eab-a983-13c494db5e62",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e6018f-8371-4675-badf-7909a843f3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab8af18-eeef-446a-93fa-8b74bee4124c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4c1032-468c-4157-a419-e07cdb9bb6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8975eb47-b929-4582-b3f1-66c629f29c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b116ee-2ffc-43b2-803d-dd8166f7339e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c00dba1-1704-4973-bbbd-c58c5be33963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344c6034-1fec-4758-8f74-8b0bbd81aee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37843801-0ca8-4d64-8115-6b02e09573d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07659470-3289-4f95-aa23-f837f61f8083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba297c0a-b284-495b-8fc0-bd4165baf0a4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05273080-68a4-4e89-a9e3-0b6efbcf0a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb85109-9a3a-4b1f-ba7c-29dff3e9499c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ade0ff-db54-43d0-9228-2cc6aeab9776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc8deb8-5a65-4de9-9bcf-4783d495ce03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92997aa5-d0ad-4180-9404-ac77f2f1dea9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cff056-1f8c-4290-8019-8890ea35fda5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df362962-aa28-4290-adf3-be74919ef494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577b9869-a604-469d-a9f9-df819f872e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed6b579-62df-48ed-a275-864b7cc1a8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaadbae4-4461-499d-9da2-1d3d52d0ceac",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312e3c01-aed2-4247-a8ad-b99063127374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b4b02e-cee2-4c09-923e-59f0a92745f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdea4bd-8596-4982-895e-6408593cdd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0b620d-ec63-4a72-9651-099eb8316edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84f09df-1c7e-42df-ae98-fc53098164b1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fb5447-0630-4ac2-a07a-80e1821e2b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822142ea-01c6-43cf-9342-40051714d3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "852753b6-8d93-4e11-87cc-63512e67258c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9487bf10-59c7-4744-869c-54b266c24b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732fa852-c9f5-4b4a-91d2-4d2c9b37e0c7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b490a7e1-7251-48d8-b53b-10825e1a278e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c3880e-a1c9-4300-b012-e79380d8705b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69cee94-7427-4b78-86a4-a9522784de53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc4b13f-b40f-4430-b681-845a3edcb501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f7bae5-44ad-4e7c-bef8-0aa954ea742e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eca49c9-ab82-4c11-ba90-65d7884fc063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f0b789-d658-4c06-afdf-99648cc0c5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030565ac-9a43-4891-8823-fd5a4f49be99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138a7143-dd8f-4044-956a-00805a229a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6155175a-6828-4aa9-80f9-b09e7f94f42c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc61636-5857-49c5-901b-1e03885d0241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f511f9-8174-42c7-8ecb-7cd6619b905d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d565904-7314-4fdf-ba0d-ab1731b91b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ec032f-517b-45c2-92a5-f60c97c5393a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6eeed12-f652-4dae-9ffb-32b4efffeba9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eebd64-1d66-48c4-8c5c-eb39d5d05282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b6fbda-8bab-4492-b465-f51c66189f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c52736-6918-407e-8801-eb31da4989d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca0b553-71f4-4535-9e8f-5837e9c5ef23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0beecf-6643-4773-b5ab-b512df15992b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb54a01-88f1-46cd-abd3-9abf67626010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd24725-6ab2-4a2c-847d-a6b7738880b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599419a8-5ea6-4d54-b138-a61987a9391c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3413c747-0539-4ea6-926d-c8060a4bce2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1917ba90-8487-4e86-a3c5-075e466a3298",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0724051-c3d3-4eb2-b1e5-dc549b4f75f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4484dfa3-15d8-4557-9063-d848f07e03d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1e9269-f749-45bb-bfd0-4485322b8430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a588eced-f3b7-4ac2-8fdf-c15765f9060e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27562b77-4296-4c92-954a-804abf11e797",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86e927a-8228-4106-aeef-2cdcb2b07a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4757c16c-7775-4ce5-bfe2-0e6e7c70f73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdb3ee6-6ef4-4d72-b496-21ad0efa2612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5abb105-df10-41b3-b6a3-8857a7c2be98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd04eee6-f6cc-48ff-aad8-781c539ce2cd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6776062d-7424-4a7c-b387-047223c70dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a01e01-f338-4bb8-b258-86a9d5fa391d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03fc5e0-f1c2-4673-867d-abaebcad38e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d356018f-f5d2-454f-9e2c-79e522cd0101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2715336b-8f62-41cf-af5e-b02075c1451b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5de1b38-de8f-4a7b-a605-f39c83ff1e7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d62b82-9645-4852-bbde-69afe0f97a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf6785a-c045-4330-b88d-c37b3f3ba361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6fefb4-e9f6-4cf5-b9b7-6fac2cf03338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f426e842-de82-420f-a2bd-fdb16bbb0828",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf3dcf4-5316-44a6-89f9-8e533e0a467c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d829af-9d37-4408-a900-dc56f0364886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a662421-cce6-4af1-a669-78d78f65d0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0566bc-90d3-4f10-a06e-97cf4c9589d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32745dd-dd2a-4176-a154-ee79d0883413",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ada7e2-c7c0-471a-804a-5d65b783928f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108818ec-d621-4b72-a283-9b11e93ceb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c2108c-01f7-4e7b-b658-f4517bdbc779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6594a3a-bc64-4fe7-bf30-9219ebd61f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f19b0b3-fe71-4df7-9761-3c760b5f0636",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9f9c31-b800-46b9-83b1-c594bdc131c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b46556-ba5f-430c-80d0-ffc8d4b866de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb56c17-91f6-4839-842b-d14df0884ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f94920-6b1a-4ae3-b726-a6363ce3a55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66940cf8-f957-42df-84bb-5568dfddff77",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe706439-d40b-4886-b6ee-889669d99711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79fc7562-30c9-49b8-bd36-9977a209ec5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78476856-c437-40bc-8846-fe81c8ca14ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2171819c-af5e-4e1a-84a7-00e84eccc544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fde0699-c89a-41c4-bce5-03e79e52bfd4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746d49bc-f8f1-4058-9575-2d474d40abdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4e7edd-6108-4739-b7a0-4cd84080cfe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6662bbad-d109-4a6d-8434-5b78bbf00167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db80e057-fa3d-4ae2-9b42-819fe7880c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4bfd02-cda3-4e96-b3e2-c870f8933a38",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2681c8-22c0-4bac-a36e-55013e35f608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f02599-0599-4f0a-b56a-5dc7ea2c1c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd45673-8532-40a6-b1c2-32fccb77be16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408e6c54-efe9-4c92-a7bc-ba74fd02b3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e154986-9e9b-4b2e-955b-1e31b7e4fe80",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998a1555-e19e-4e8a-9eff-d1c8b1eebbf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33604a24-a07b-43b5-bf9b-3223070b1bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ee81ef-9e70-405e-8ed3-db3646ffcf6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0e3940-b531-4f38-93a5-cc96fc6177ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9309e6-503e-4848-bfec-ec5ae6c0a317",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbff17ad-1bbf-4afb-aa03-349ce6f6129e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0ec6e3e-6383-404b-a069-39e522c724e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cb266f-f879-4e13-86e4-aa5d725fd245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e070b078-cb81-4384-a372-4a26e66e9e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0e0934-0a21-4ffc-892e-c43cecee5049",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c94af8b-9e63-44ad-8ebd-e96ccc342ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559235a6-3216-4234-b69d-eca0a165de2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b91b47-6c77-42d6-a509-da498432e9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41baa0fd-eb4a-4b3d-bed3-8ff9c247bd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388f0331-d4e2-4f8d-9270-7c34738c6c54",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87163581-158d-45f0-8311-a2439c013f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7b002c-451c-49e9-b23b-ee01c2475a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fa763f-fd33-404e-8e3a-5b6b0651cf41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d9ab9c-d04f-4281-be80-cf4a8f38547b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6189aec0-1729-43a0-aa82-0436280d65c3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f484cf1-6450-48e9-99f3-c1bbe949e860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4432f5f-db96-423b-afdd-7dfd6eb57c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dff2da-266f-45e4-bc2d-16d34b0d8182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc72e6f3-f4fb-422b-b50a-9207266bd099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48576a4b-42f5-4648-b805-75c648ebf523",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5df7042-4276-4eb9-a6be-e4915cd0a198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a47ba9-9d5d-428a-93c2-db6c79eea1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edddf2b-34a8-4bdc-bd9c-8897d6e43c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb33b75-4027-40d0-8b42-6da68684077d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc45ecbb-4823-4d2f-9111-c20cd74d093d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b77bf6-07b0-4bd8-8307-c52a9024a9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840eea77-b0b3-4ca4-b71b-c7e2bb0fe107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dab2b3d-00ad-4b17-ab64-5666ac9eb6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1b84ee-05ed-4081-982e-23fb06e918d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2f1773-b107-4322-91ce-891e640f7c06",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c974d85-9cad-40c2-bf4b-11def7f3f342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b872f637-eb86-4a07-a74e-b4a2b711600f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4609f3a7-340f-4d2e-bafb-78ffbcb1f0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba6ba6c-8959-44c2-a8ad-50bbe5872153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaa146f-c0fa-457f-b33d-6162eb8276da",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8293c7d6-0c26-44b4-8600-55ab90c676e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc47a11e-5bcf-44d2-838a-69c37efdc319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6734e342-3494-48ba-82ea-1bf9ef72c939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd399cd-8a90-488a-a9ea-895a07cf3f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c1fd5a-6fd9-49e3-b161-46e0187f77bf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1636b8-059d-466c-8227-e10a7a34551e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655a40be-d2f9-4bfe-a34b-de20311105fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef810d9-27be-43be-b6b0-56a50bc33952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a5843a-89bf-4ab3-97aa-5827bd1f71e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f59b0b-7dd1-4cc2-9cc3-6d16f64c69aa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e81a4b3-b6b4-4104-be02-e2300f2c5277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7039f8d3-495a-4a52-b687-96ac8df4cd5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f714ac02-d213-4a01-8575-9f0abd17def1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d928d28-4a15-4c8d-802c-6abdeefd6866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898defc0-2cf2-4b3d-8a24-b33a5164e4e9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6400b534-98d3-4469-93a3-4f5b32bddf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df786999-4b1f-465e-863c-4c5cf54e473c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb0c62e-9c9a-4c5d-a4e6-96897d628a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49094fc-808b-4348-b2a9-0a55391f4725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a195d8f4-1085-4f6f-a180-871e1592a393",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89cdf8a-b09e-4545-844c-4241d0ad8fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410e7127-d75f-4587-9ce1-3c6e4d00755d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26ba2bf-6b3a-42aa-afe1-7ab0d3990f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a2e1d1-3964-4dc6-9aa4-2125a840ca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddff8077-26e2-461f-9de5-a5bb894bf019",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3926eaba-82fb-4317-b3dc-70221d29be15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a583695-8686-4c0b-81e0-001f8be6bd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edcebca-a427-4a87-991c-7cc829893041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a115c68f-baf9-4040-9c03-111e7a74aa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3477030-8f13-4f25-9973-4b06b441c070",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd467ce-9e80-484d-9956-91cd358cdd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396f5826-0db0-4148-a2a0-4bfec49d9156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befbb26c-9343-4d72-b956-fd251fda22fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0397bbf-bc94-4588-b348-2c7d711aa913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d258b113-ba5e-4f2e-9bc7-b7e2f407f1f0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42db8c3-8148-4a3e-bf26-b67459413862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2b0b12-d5f3-40ef-a767-414d59a364e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c258218-afa9-4499-803b-c4b5774aa85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2c1eb1-e312-4e1d-aad4-91dcb45a6ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd06a9f6-a395-4757-a5ce-053b6aee1ede",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e32b8a-88df-466f-8d26-5b6c85a446d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfb09fc-a77e-450f-9d04-8b2dca050c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc6d0b4-fae0-442d-8592-6291d8302bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6339243c-9b46-47d9-b868-d04306b22079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a22455-0228-404a-a517-b855ab26da2f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4519f32d-2a87-49f1-80c2-20905da0908e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe359728-3be5-42b5-9c06-9dfbbc9ec906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7431bc8c-e7ea-4f08-b777-1ecea8c7d094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3035bf99-ebf5-44d2-8b03-03fa30f72840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6774b884-be76-42b4-9b01-e08fd2b0c5e1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb7904a-6894-49f7-85cb-b425694c5805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94a8c73-9526-484c-bd84-8f04935ba319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1217e0da-17a0-49ab-8016-729e9591608b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39083c3-1fa4-4939-8f27-1d615403ea3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a054bfeb-5187-44e7-b092-bd5b1848a247",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f5907a-a2d8-4d41-9b43-3ccf7d31597f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33538b1f-caf5-4d6f-9660-835799e39029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30e7a67-7add-4fc8-ad14-c553f55448d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5141277f-9bba-435e-9450-8d6cc43a91c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc649bd-9d1a-4d8c-af0c-164d979944c0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e36dbf5-6bf3-4c4c-b7f7-f34eb71f5b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f68589-f6ca-4486-b00f-268b9fa63069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cc69e3-5b06-4e0a-9d99-3a4069d700b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba7790c-e7f5-4271-bd90-2318c35c0552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf70e0f1-641f-4d32-a6a4-85366dc983f9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e3e7e4-f4e0-4dec-bcff-fc089c6d845a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806124e7-e6b2-4b08-b25c-573dc164c2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cb0ca9-c181-4590-bd0d-27ca9675a742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6ec8b4-2702-44df-9972-2b7742a5c628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f93241-ce8a-42ff-91f1-e345e53f9bcb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d8bdb2-909b-4f4f-a327-7ee6fe3451b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c43ac6-a9cf-4816-ad36-2bca63730aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e83aec3-0a8d-495e-a0c8-c710aa598e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9c97f3-7eee-497e-9271-635489d001af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb927575-00e8-4b33-9807-612b3e54e842",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e283a206-d2bf-4f12-9064-35708a07a5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd1a650-b6d6-408f-9e70-554dbdb12d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01583c3-f9a7-4e02-a007-b92e8182b9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5021989-cdb6-4b78-9667-511452808413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dd1828-c2c7-4c28-81ba-d4c9024ffe3e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfe7e82-2ccb-4fb3-ad72-16b747a22e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6a6f8b-2b57-4ac1-b1af-47e09aa3c30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb349370-018c-405d-bb18-d4bf7c6b241d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314f0bbd-c45e-4f68-ad64-3b8f1d2a121a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ef0810-620f-4ba1-947f-9c1cc670e1f4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cfe1ff-95c0-4804-8cd5-3abff4fbd855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc2a99e-e866-43ff-aed0-3ca11abe7df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b24fc7d-a34f-4bce-80b9-c7dbc13321cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adb163d-7557-48e5-b954-58e62b010857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e8b95f-91e9-4871-8382-d076e67a19e3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634d34b0-1f05-45af-a838-2639dba07695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b178ac94-f5a5-43c4-b706-333d908a4bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01195597-fb8c-468b-9f0e-0495292afc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb29dc1-fed3-4033-91ed-e0163305e27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb70a74-bff4-408b-bbc9-5b6268c3b30a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531f8b43-7037-41e5-a172-e194d7dd87d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a36932a-3e62-4689-a730-a72398142512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd72fe74-4165-4e5c-a953-54bff3cd7618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2454a5-fc20-451e-bf05-65018d4dc8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bb1b3f-3708-442c-88d0-d8b7a98387b7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd31c20-8129-4f4b-81c4-750d358e58a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27cb298-4934-4bed-b89f-8569c125daf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78023637-6de1-42d3-b71e-71cc03a26d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c37c49-7f54-420a-91cc-878f93627eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b20ce6-1a1a-40da-b3de-9b1df288a3d0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18b172f-3535-42e9-b127-c12103c16212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccb3174-4778-4b8a-a269-24ec80048ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec92b38-6307-4ccc-8491-62addd59bff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34ae2db-d4d4-470f-a20a-16fa2b005fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7136e3a3-17ea-4e48-b7fe-c54be90daa64",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a559f2af-bf15-444c-87a3-a3a4100f4796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6991c5-1b87-4491-8a54-aa9cc819a8d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c42745e-f357-4659-a983-2fcd7029b84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7fa1da-7fa7-4b01-8573-f6b5f976f734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb043ec-33b2-4440-8a9b-e40c80fa0090",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959db491-ab2e-40f4-874b-290fa35c6a77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f186d3-fb3c-4ad0-aa5a-05eaabf1f5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4a5849-50cd-401d-9eae-337321ffe4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee89afe8-418e-4ce4-9bd9-d3ace73e7df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8022bb34-3c9a-4f24-b534-43ae829c4c5c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f934f7-e418-488c-9f24-e044dbd1596b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02f055f4-14ed-44c1-bdd5-df58b6d9d7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ca8271-ec78-46d1-ae51-f815cd36c7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd953d3-4057-4a54-9529-e63e07a0c234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c294c325-1929-4b6f-87de-7c7fe1a19c99",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7477a3-d7d1-402b-9917-2ad614e0e8b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b95814-732c-4d41-9857-194289b44f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3056abe-33f7-418e-9679-74f21c33c39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69377b23-503c-49e3-ac6d-437eef059870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d790dd57-5b89-48de-a6fa-ea40003146c9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0735ca-7b0d-44bb-af8b-b110f01783c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb39c90-e9f7-41ef-8cc6-a190f4a3f755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc325f39-9c59-420a-9f62-cd325a201c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f444c52-7298-40e4-8b42-bdb109c33cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf695ed-840d-4c5e-9e80-7ec7cb1cc0b8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9112ba6-e42d-44c4-b822-3496df9f56bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67863b10-312b-482d-aef0-490491fe3368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cde0d0-68f2-439f-98c4-326c024af45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5297e46-7862-4d0b-a5cd-b34189cf357f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7192f278-891f-493f-adbb-b4efe166034c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787afe69-c4a1-4da2-98b0-d4da81a575a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9450b8b8-4dc5-49c7-8f3e-ee9dec3026ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4b3744-45ea-415c-91d0-004f1ae4410a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1f5632-46bb-480d-8295-5b276b366b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee1e6c4-3f4c-4cdc-97d4-d74e0185f072",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fdb28c-10ae-41a7-bb72-eccd21ed983c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e7ad853-6e0e-4ea3-9824-dbeedbf5f597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4091a18-c439-4214-9fc5-511b31e0f0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07f7f48-5d70-4152-8db6-ceb5745398af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95e059d-6543-4f4a-bfd3-99d677917c40",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb681b19-ae7e-4efa-8b6d-bf8018ce3e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67200424-8673-4bf1-aa49-0eb2183fa9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedcf63e-fb3b-4196-8672-6b121accfffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149884fd-ab9a-4dd7-8f69-d0274d1da26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685f7d85-96a5-4c97-bcda-3f006066cd88",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654d4551-70eb-40d8-a600-7a7c416f4556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e0ff7cf-d6da-49ec-a176-6d3de57c4b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6e3996-50e4-41cc-bc36-50542cf9b4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b84788a-eecc-4c74-862a-1e4a33456c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e561872-0bc8-49e3-aaf9-10a9c14a61ed",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280e0857-4d68-4102-9bb6-5684a361f69b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3957614b-9a77-47ca-baeb-741452f1e628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26c9385-90d8-47eb-a91c-cc1bb0d43cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2aa74c-464f-464c-b58b-eb818b3a9cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfd7df4-cd6a-4c9b-8b55-b572653bcf3e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034bde45-b88a-400e-8434-4474e23ac433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46987617-bdd1-442e-a55a-050bf115c889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d49c80b-4f77-4475-8a64-161636c3e60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b63be8-6358-4096-a255-3ece19d05241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6426afb1-8b09-4967-86a5-c3c107f16d4f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c109231-59dc-4887-bdd0-732dd95dde30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d516907-a548-4b2b-b170-96672f8cf285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d2620f-01cd-444e-b6fd-a0ac34d7eb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f63488-08af-43cb-b3ba-f91dd0cb3245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656bbe30-cc82-4424-a01a-a05c03ce0bf4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6558f5f4-87c3-43c1-9652-36b635f2bf1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b63656-0fa8-4c5e-899e-be4fd2a6720a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7caa55-6ebd-4316-8296-61a0d1e07e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d48465-8231-4033-8fff-bd266f443f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2890fabe-25a5-4406-a820-40c3eadde266",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35a18a4-9171-40ed-8843-e40b2376078f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c805aa-3957-42e2-85d4-43febc74ad52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130e9809-645a-4611-8568-69c50c30af0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3427d6b-5b95-4dc6-a219-ecb0d3de3e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb41c6f-92da-447e-9d26-0a31e64d8df6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9adb9a-b22b-4088-8b9c-4fc6654ea159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd1903ea-e3f8-44e6-ab05-c37c54949aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883a753f-01fb-4c30-997b-2b2be3eb3638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176a1d88-9416-4909-a155-9085526a4ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1e088e-24f4-4df4-9330-bb0a697fc258",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416a2dab-ee79-4ef2-9dfa-866a29bb8c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acd446e8-3e12-47b8-a04d-a54a569d1bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d34bed6-158b-4a62-b3e4-915d93857b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c63c81-fd2a-4505-844a-edd3753cadb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fd0d19-7ff8-4af3-8929-3def836b3ff7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b865c079-8310-440e-83a7-ba8420835ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40711ede-6e5f-435a-9134-d1ca66167277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5895118-05a5-4725-bf20-68ee1e645566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6630271f-d48d-4c7f-a13c-79df53dd1a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce69b14-4188-4793-b91c-e105725af9cc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39eaa1c-7e6f-4d88-895c-366d25270eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd0fa5de-16d9-44de-9a18-704cb7c87d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666fe7cb-f9e2-4504-817c-de419b468f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc626beb-0e23-4c66-9471-b722d22c9135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2f2ca1-ccef-44b8-923a-4e99c250c345",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af1643c-24ca-4a47-94b5-633060f05441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bec71a6-7e96-4706-8d13-238eb140bd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ad8909-5f73-468d-a9c8-666bb38c6cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5e50b6-c9c5-435d-b333-ea6f655ccf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1aa7b05-0f12-4610-a44a-14f476aca022",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1c0d41-db2e-4623-a0bc-20911d5b22cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d5fde3-a45f-4f03-b9ed-76d573630965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3e55ee-6e15-4337-8dca-ef32cf85d679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9460abb4-4f1e-462c-a245-9d4b0318fbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32d9318-e7f1-45d0-8bf9-d8c9965eab33",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b7611f-23d3-46cd-b5cf-4c61956aab3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85868c9c-20ec-4ab3-875a-de0f5c503ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391ecfb6-905b-496c-9370-d1c6a440b1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfdfb22-0608-4edb-9aec-9defd0014d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839957e9-cb96-4ab6-81e5-853ab294fe63",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4ef23d-7edd-4f84-8272-722a2e592d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a74a3d9-ac0b-482b-926a-1c107d04fc3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e033c5c9-48f6-4e03-b7f8-6d0a762c737d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fad5597-937c-4c3e-9a5e-0389897d27cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cca347-fc5c-47f0-9a88-351d1e3ccd59",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a909c79-b08b-41d4-bbf5-b0266baada0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "177efb17-c874-4a58-abd6-0ddf367d8e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d711dc-77ca-4320-a729-5e2e02648144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526e77e5-4c6d-41f8-940f-8be680be0f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c5a823-ac21-46f7-9505-c55f7d154c1c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87c7bc2-2f22-4d28-ab41-6f03697df148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b890de-d5f4-4d26-b3d1-60c2101fa126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98639fe-34a5-4b59-a915-91228142a546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f76df5-b1bf-4a84-9483-808b0c061275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5743b311-2ee8-4d14-a116-c187f776fa10",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2873ad97-193d-49fd-8da7-4e728eeb77eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac2747c8-3d9e-4912-a20b-cc6444802968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8951d7-dd6e-4f61-9dcd-1967e666b13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cffdbf6-271b-4cc8-8c2f-2ebff2e3f494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566ea6d6-4484-431f-bf85-8cf569cc5f4b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9d4aca-0b48-4ceb-a877-42c862f7038a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "787d6242-9849-423e-99a3-a63c2f17ef56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6381e5-2326-407f-8bf5-0204812beee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a6c7f4-52e7-4776-aff6-34415f312650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad538eaa-db8f-4c6f-8588-3a2947130435",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c2c7a5-67f4-4d45-b5ad-e1f8fdc2aa9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7f77a92-b10c-496b-bd9f-2715e209dae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7793922c-4a76-43e0-975c-f4d7d36f32b3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea370d4-ce0d-48be-b5f4-9c50d6adc4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3623cc6c-bebb-4aff-abbe-36b3ff19e0f6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6605c4bd-18b9-4669-a01b-af577c282d44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1f1621-fc1c-42ca-a277-6a5d1213ac77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184ffee5-a4e0-4faa-b697-7f83a826e337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638d5fa0-0fc5-4e64-a59a-0e356c706e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd1ef92-48aa-4b49-b78f-23243f0f82ad",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc795b7-083d-4c53-8c04-b1c528f00df4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c4581c-24f1-4122-9cf2-0a961d4b50df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf7533b-8887-4763-9f03-f86e8bfd26cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f7b1a3-2296-4627-88c7-9964cbe05f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddad2abf-825a-42ca-8079-d99ba99cf4bd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ec471c-c6b7-4ef6-abf6-290a921b0dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8410c43b-afca-45b9-a4d8-2b5e76353faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cf51b9-2588-4340-bb0e-64fcf3bf01dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12099faa-1558-4bfd-84d8-0e975be7079d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581bde3c-d59d-45b5-997b-5d42f3ba2e5e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84cceb4-9511-4c54-a328-8bf5d2015cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e44c263-db37-4fa3-b531-08a31fa7b41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c68481-c007-4a00-ac82-97e11094b135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcfb36c-2d58-4635-bb20-ff70d0d4bd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c724677c-b0ad-469e-8bbb-154b22b122eb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a771a9-8318-4a5e-89e8-4f87f93d6d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32be2187-aa5e-4ca0-a79e-2980160715cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4a56a6-35e3-4f53-bfb1-89e6f3a70cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd803b2c-affc-480a-b8a8-b29cd6a3019e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea9bfc8-5315-47a3-a0f8-434028b9e811",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ebbee9-fbd6-4682-a9e8-e04d2136fd8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838456db-30e2-4e13-8099-f615c0792049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76e1b88-5f30-42de-9c7e-5e6db84bd8f7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af70f82-4ae1-40ef-a76e-f7eca3963f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf670aa-d8e7-40e1-82ca-4d9d5d701302",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918cee86-592e-4cd6-ba3a-fa77cf427914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f65bf9-a831-4d0d-b8be-079be0b440fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fd4f65-2289-4a6e-bc06-9733ce661a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5707a9ef-9574-4055-9f72-69244ea195d9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82836ebf-c0e4-4313-acf2-00158f3c5a16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dcfde98-09dd-4351-ac07-c05b6dfca032"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1a2d477-69ce-4f59-9ce8-bd2ae633f706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3979441a-daa5-48f2-97e2-41f9e4ea69d5"
                    }
                  }
                ]
              },
              {
                "id": "7ceeee14-182b-40b6-8d2e-eee6cb539bf3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0392ba6-4e9b-454c-b0eb-2e4b343db0e0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08950864-556f-40ce-86c8-da24f19975b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ef1aee6a-d07a-4b9d-8253-987cb438be7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20eb166-2044-4bd1-9365-efe5b3ebcc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "795b3a6b-b638-4b88-862c-034d4e4b5fcb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3f3dce3-4204-4ff2-b7f5-2ec47dcfcac3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb4a8c57-096b-4afd-bf9c-d866e8a3ca5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "234e3809-cea3-421e-835d-a3c86143ccb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64950372-ba3c-472e-922e-17c4572d2cf9"
                    }
                  }
                ]
              },
              {
                "id": "704159df-2ef8-4d7c-95da-5aafb8f17103",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f824ae65-bd16-4e02-bc08-69ba914976d9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2450dcb-ea46-4ba5-9ef1-7c67a5140bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2e44e61d-4726-4764-a0b4-870b7f3c9dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46873f8-7342-4a49-a739-3114f59d5aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603d390c-e350-4020-8b0c-b8c988359b07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "32b54310-e95d-4686-b236-565555705fd1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57c74df1-692c-4c8c-babc-29ba7f775fc8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50050b67-792a-42cf-8ea9-57a5b5dc350a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "82bc6601-f77c-46d0-aff7-4df922080863"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbdf4085-4f7e-466e-98c7-3c974af99bd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26ef1f31-1f51-407a-8d76-9cedb0a45a47"
                    }
                  }
                ]
              },
              {
                "id": "8e356834-2f81-469a-83b8-29d10af88bbc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53d195af-a169-47c0-ab1a-b1ec9f27dd1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2fd3f839-5282-4a30-a078-6e5bb72de8e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c7db9aa-73a3-47e8-92d2-0ed29cbcaf31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00173a24-1528-469d-9293-38056d2376c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c374ef78-8306-4137-9b01-3dc9fff2839a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dc0df5fb-cd6b-4ec3-a762-16d069c00d2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3b1eb73-c6f7-4149-b27f-31dc91b9dadc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1382e47-15a3-43e9-ad25-1f7034361a74"
            }
          }
        ]
      },
      {
        "id": "6f612bd8-ea44-4c47-95ce-2ec3af402269",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "350a1436-405c-474d-b95e-ac8ce1318475",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b44b105-0875-462e-ba5b-58e18e3b00d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12ce2972-2ca4-491f-9fe7-696fcc123367",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf30432-279c-4704-9dc3-af8cb1d0f042",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "70a41e8f-500a-4e3d-a2bb-4bf2f81b29ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cebd03-12ad-4405-99a9-79f447e8d3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1b95367-9b36-4034-a69d-73d5efa60f0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68074753-2506-4911-a70c-e692c18be508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4aae5138-a8b0-464d-9e35-032a7676bd2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53e5bed1-af2a-4de5-9e84-e660e87de741",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdc1c2fd-cb3c-4054-b704-9b68e14c3f5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de1d2376-c71c-414b-9845-7929dc977f6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3592ac81-8320-403e-b016-4e6da098492c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f91276a-5a04-4e7e-8561-444a3b59a9b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fe73c19-50f8-4a4a-b83a-23f65cd03b67"
            }
          }
        ]
      },
      {
        "id": "b5d10f13-a638-4bf6-b856-30af5851041a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "de358d45-a77d-437f-aabf-3c7b4894f4a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a29cda8b-743b-463b-a8bc-74fd73662aff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03d3eb30-33d8-42f6-bb91-1f1669bfa9be",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d124ef3-76b5-42e1-aa03-e2c65e0b2a7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2382122d-283f-486e-a685-f9e1fa45a12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9d5bea-1c1e-463b-81e9-d922a3977dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be4d95e7-ef7a-4fe4-be27-1379f0b1cfd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbfb4b3d-e22b-4630-bff2-99472d3e3fb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d6ad056-c957-4e42-8718-fc518a7fd10d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65650f13-9acc-45b0-85c8-64afa340e63b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31583ac4-ef93-4561-ab0e-013d609ebff7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebc89d0f-2988-4887-ac05-b73423dd447c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "43a21310-362a-43a6-8fe1-3f5004af9afe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e393666-c3a1-42f8-bba1-9b08043be5e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bc8fcbd-8045-4758-93ae-050923859809"
            }
          }
        ]
      },
      {
        "id": "d27ff716-bb34-42ff-814e-f56f8b1e69e0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "94eb6c99-bf58-4efa-845b-d5a7d7479832",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24deac56-b23a-42b2-ba94-7ac36e1e2039",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fb16ba6-837e-4e11-bbea-9c9cc360c69f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f3ac97-43ad-4a77-a862-754c8a6a7d6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ffef85b-486f-4667-8071-78a279fcad04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed8d708-0f8c-40eb-877e-21f756110e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd4106bc-79eb-498b-b07f-58ae30eaede2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "082074fd-02fd-4bfd-b438-4f1bd793c01c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15490256-2878-4820-8cd9-d6a4f4ed085e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b6eb5b8-b632-4498-ac0d-1e3bdffa5974",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "868a657e-7a46-4333-85aa-3cfd7a6f4993"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08a15078-1da4-457f-a6b4-3c8bfe64fec1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd26095e-4df5-4ad9-8a07-9fe168a8f164"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49973ca5-9506-4440-ae40-b60a0e6e4a10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a30a6e3f-6688-447c-9de9-c44971ca5f05"
            }
          }
        ]
      },
      {
        "id": "c02a5596-f1f1-46ec-abb2-4f3f96a9bcb5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14130337-1e1a-4614-b6c6-eecd294e84c2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc8063b6-2098-4bd8-9c06-aabd192613d8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ef8f5cae-9840-48f8-8456-d306c069446e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b41ab90-b208-4874-8e45-490a0a6ff232",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d3abe1e-8a60-4428-b02b-e6325295c369",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 425.4206349206349,
      "responseMin": 6,
      "responseMax": 12570,
      "responseSd": 1836.9172992642068,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724459981995,
      "completed": 1724460097844
    },
    "executions": [
      {
        "id": "3f9c088c-72c0-4cba-b8e7-698dd5bdb855",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "648d6869-f000-4d7d-bb6c-cb88e56e4c75",
          "httpRequestId": "7fd36ec9-1552-4f52-aab3-7ed6ff0401af"
        },
        "item": {
          "id": "3f9c088c-72c0-4cba-b8e7-698dd5bdb855",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "611be4ef-0be3-4ad4-bbe8-606bf406e603",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "62ab4438-461e-40ec-b6d8-dd5b7732ae0d",
        "cursor": {
          "ref": "ef83fdec-39a0-47fe-8452-f82c040587c9",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fb1021c4-ca6d-4fbe-99ba-1bac1425c0f6"
        },
        "item": {
          "id": "62ab4438-461e-40ec-b6d8-dd5b7732ae0d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bc91e588-2402-4678-831f-5d903b927b8a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e0d1fdcc-d1fe-4943-9be9-6d7bd0e4a232",
        "cursor": {
          "ref": "8646b9cc-52ac-427a-aac8-11d8499d0d9d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "93a54f39-4d76-4b8e-9fbd-4f2664c1fa81"
        },
        "item": {
          "id": "e0d1fdcc-d1fe-4943-9be9-6d7bd0e4a232",
          "name": "did_json"
        },
        "response": {
          "id": "6d0fc18c-fd8b-47d4-a3c3-43ec3780a56a",
          "status": "OK",
          "code": 200,
          "responseTime": 409,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b632eccc-011c-4c2d-81e0-5ed5722be99c",
        "cursor": {
          "ref": "b6dc5e4f-c222-4321-9059-bc5f834e8073",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "76eedc7a-3db0-4643-b5b4-758aa76693aa"
        },
        "item": {
          "id": "b632eccc-011c-4c2d-81e0-5ed5722be99c",
          "name": "did:invalid"
        },
        "response": {
          "id": "da5c2699-98eb-47d6-8569-7c2c5cd90a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2016,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b632eccc-011c-4c2d-81e0-5ed5722be99c",
        "cursor": {
          "ref": "b6dc5e4f-c222-4321-9059-bc5f834e8073",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "76eedc7a-3db0-4643-b5b4-758aa76693aa"
        },
        "item": {
          "id": "b632eccc-011c-4c2d-81e0-5ed5722be99c",
          "name": "did:invalid"
        },
        "response": {
          "id": "da5c2699-98eb-47d6-8569-7c2c5cd90a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2016,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875c53ae-5856-4a6c-8156-e4b4e08a40a0",
        "cursor": {
          "ref": "daaaa539-e012-49f8-af1f-f52334e91afe",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "03465a1a-a37f-4646-a598-08d8d3764f0b"
        },
        "item": {
          "id": "875c53ae-5856-4a6c-8156-e4b4e08a40a0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "69261c5a-4765-4a5a-9dd7-fd5daeb86f47",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2378,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6110b838-6821-4fa2-bbee-aa2a0a6189fb",
        "cursor": {
          "ref": "782f7781-6bb2-4704-a6eb-3438c02f0f5c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a6c0b101-433a-4acb-a64d-68b4102d98ef"
        },
        "item": {
          "id": "6110b838-6821-4fa2-bbee-aa2a0a6189fb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "03656c03-e065-4dcb-91fc-b9db90b49601",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2048,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082f2b34-aaa8-4d5d-866f-59460c11b4d3",
        "cursor": {
          "ref": "d357e3d8-ac97-4831-b6c1-81232b00712a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c172e827-e483-4efb-b4b6-521e0a389c21"
        },
        "item": {
          "id": "082f2b34-aaa8-4d5d-866f-59460c11b4d3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7daf0b12-f7ce-427b-bb45-4ec02e8e52f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af6233d-9a13-4b83-8893-bc67e0e644b0",
        "cursor": {
          "ref": "b8634ba0-8050-4027-8498-f7d4c2d6cd44",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "12056633-e655-4feb-82a1-fedc82384f98"
        },
        "item": {
          "id": "5af6233d-9a13-4b83-8893-bc67e0e644b0",
          "name": "identifiers"
        },
        "response": {
          "id": "79727ea5-edcc-427d-9aa5-02cb91bd95a5",
          "status": "OK",
          "code": 200,
          "responseTime": 2222,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18b9888-568a-4541-b81f-fe20b0a3b849",
        "cursor": {
          "ref": "4d879897-8400-493e-a830-982437711468",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9cec6055-6feb-434e-83d6-61d640823562"
        },
        "item": {
          "id": "d18b9888-568a-4541-b81f-fe20b0a3b849",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a14764a9-f0fa-4032-8670-6b9198fe2f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766e30be-0566-4366-b75a-70a45351c119",
        "cursor": {
          "ref": "1f332001-3f6f-45a2-a804-643e1dfee96a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5f331544-157f-48c1-9578-dd3bdfbb7f75"
        },
        "item": {
          "id": "766e30be-0566-4366-b75a-70a45351c119",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "91734218-8565-44b4-bce6-48a5f92dfc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be13f747-9320-422b-9e9c-e1b4bda8c02b",
        "cursor": {
          "ref": "8f064b27-dc7d-415b-b925-4c0232afde89",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a5d2b50e-2787-4497-8e14-8c6f0fab0808"
        },
        "item": {
          "id": "be13f747-9320-422b-9e9c-e1b4bda8c02b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "413c45a8-3690-436a-bd12-a8a0c8d3a420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359291ad-6a52-4cb9-922a-3756f8d70406",
        "cursor": {
          "ref": "78b71c64-266a-4038-806c-ac969983983c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bc7098cf-8d93-4e79-bd55-aac08d8dcf52"
        },
        "item": {
          "id": "359291ad-6a52-4cb9-922a-3756f8d70406",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dead20ab-94b8-46d6-ba41-09a68d8b5943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd99c611-c7d9-40ac-8f4f-5a72556a5aac",
        "cursor": {
          "ref": "f13388d5-2fa3-4b05-ad1f-e6bef9792fab",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "746e9489-b864-4776-b24d-6da577adff14"
        },
        "item": {
          "id": "cd99c611-c7d9-40ac-8f4f-5a72556a5aac",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f5cd6a77-0076-4322-9ea3-f078d6e39907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5a7f7a-828f-4e6b-a8e3-085fcd7a5bac",
        "cursor": {
          "ref": "f24841b5-bbd4-49dd-bbb0-5207adc7664d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "131e0000-e90e-45cf-a612-805c2685c758"
        },
        "item": {
          "id": "8e5a7f7a-828f-4e6b-a8e3-085fcd7a5bac",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0e452633-7c25-4e66-8ce2-9bd67d9c8e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367ae4ee-67a5-4e5a-8fa8-bef63d162e95",
        "cursor": {
          "ref": "cbe60f84-bbc4-40c3-9c41-28aaba01e086",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "adbbc1bd-1dd3-4d1a-bcd8-627a7308389e"
        },
        "item": {
          "id": "367ae4ee-67a5-4e5a-8fa8-bef63d162e95",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e324974b-7f3b-4941-89ce-c9110a3e65f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80de4e71-6a7a-4030-adc2-b7fc424df2b3",
        "cursor": {
          "ref": "d26e38e5-209c-411f-bb2d-6feab59e91f5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8200629c-3f24-46bb-988a-344beb956aed"
        },
        "item": {
          "id": "80de4e71-6a7a-4030-adc2-b7fc424df2b3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "53159127-d5a3-4e71-ace3-4486bc59a887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7020f2f2-f8e5-436c-a200-4aecd7fd26fd",
        "cursor": {
          "ref": "9be05d8a-1543-42c2-ae40-efa3fdb9b60a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b2e7610e-623d-40a8-b700-d2e57bf4086b"
        },
        "item": {
          "id": "7020f2f2-f8e5-436c-a200-4aecd7fd26fd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9cbb4764-d7aa-481b-bc2e-2bb5828a97cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4663537c-892a-4a9f-a8c9-2804593b8119",
        "cursor": {
          "ref": "b5c764b5-c843-4e9c-aa76-739c135d510d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5881b785-21ca-4c5a-b8e6-4019a19d5eba"
        },
        "item": {
          "id": "4663537c-892a-4a9f-a8c9-2804593b8119",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a5506a60-cad0-4096-b229-ce0a9cf7cc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f978ddce-a552-40a4-acd4-2bc08b94aa20",
        "cursor": {
          "ref": "b504cf16-0540-49e8-97ce-d215733665e1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "18d5b419-9314-464a-aeba-4860177092cd"
        },
        "item": {
          "id": "f978ddce-a552-40a4-acd4-2bc08b94aa20",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aae4baeb-51e8-4e18-a5df-c226f2d145a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2ebe3a-9aae-4930-a1f7-a349a59b0764",
        "cursor": {
          "ref": "561e5688-f080-4302-ad42-0a3f135f98ad",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6bab0c00-930d-4e40-a14f-27914676a051"
        },
        "item": {
          "id": "bc2ebe3a-9aae-4930-a1f7-a349a59b0764",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eb43663c-1eaa-4492-879f-2974ad034cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7a63c9-d529-4907-8ccb-b9dd78cca0e2",
        "cursor": {
          "ref": "e2950b8d-94c0-4e24-973e-15e1edafca93",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "22f5850d-8f08-4b2b-b321-aa79b6887045"
        },
        "item": {
          "id": "ef7a63c9-d529-4907-8ccb-b9dd78cca0e2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c03a7210-f5d4-4f26-b9fb-b5e85f78ad7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d50acc1-ceaa-43a1-832b-33e1ba069c72",
        "cursor": {
          "ref": "579a9175-9570-4bf0-ba18-7a8e765072f9",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c342f41b-23bb-403e-b070-d5e3264da117"
        },
        "item": {
          "id": "1d50acc1-ceaa-43a1-832b-33e1ba069c72",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cf0336e3-09a7-456a-9f7e-faa571478ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb453d11-8b26-4af7-b553-c637f03b08b2",
        "cursor": {
          "ref": "8ab7cd31-53d6-4756-8ad2-04a3dd2759bb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "85dfdcfe-831c-48be-8619-6ea9bfafcb85"
        },
        "item": {
          "id": "fb453d11-8b26-4af7-b553-c637f03b08b2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4a388610-ffdb-47ae-9408-9132522461d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5f7c3a-f675-4179-82ff-9fd340b97d18",
        "cursor": {
          "ref": "a8fe5e71-16c9-4f5e-b868-9e232d9d1a39",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d945c85d-fcf3-436d-82c8-0375297a5c3b"
        },
        "item": {
          "id": "8d5f7c3a-f675-4179-82ff-9fd340b97d18",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4fd30312-49b0-47d1-a10f-51056b3e1599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63b0eb2-33e5-4def-86ca-6f0c297fde89",
        "cursor": {
          "ref": "cb79411c-6824-44b0-8c21-939b3f5e8eee",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2f5dcfa0-9804-47f2-943f-b4b14712bdc4"
        },
        "item": {
          "id": "c63b0eb2-33e5-4def-86ca-6f0c297fde89",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8ba02a97-9dd0-43f2-b67a-87d754f75a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7183fb45-77e2-41a2-939b-9c7922d63d3b",
        "cursor": {
          "ref": "0e5014b3-647d-458e-9fcf-86cd153bc57d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bf1ed3f2-e936-447a-abc0-a7292ba47959"
        },
        "item": {
          "id": "7183fb45-77e2-41a2-939b-9c7922d63d3b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4b979c22-6bfe-4cd0-8e1b-e5150ac83a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64393ece-8eea-49d1-b2b7-50c1182ae3c4",
        "cursor": {
          "ref": "2bb33121-6802-4e3f-82d6-2734f331412a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f0b56a88-b59d-4aa0-bda5-87d733df593e"
        },
        "item": {
          "id": "64393ece-8eea-49d1-b2b7-50c1182ae3c4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ee7c0d35-5325-4c0f-8e7a-63a1d0beaf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bae3d9-6c52-46de-ad44-2cd503fe0d60",
        "cursor": {
          "ref": "55d9a24e-5958-4a99-95d3-2d25a717388c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2ddadac0-ddb4-4ee6-ab5e-01d0ee4b4c38"
        },
        "item": {
          "id": "35bae3d9-6c52-46de-ad44-2cd503fe0d60",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "21091feb-eb14-4b45-86d0-26b8544fca3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d593c6e-0330-4909-9a05-5945a7bd3f4b",
        "cursor": {
          "ref": "d54f6884-f2d2-4f2b-914e-2f5e04d9a5a1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "01d97ab2-8d65-4e0f-9d18-c12747804003"
        },
        "item": {
          "id": "2d593c6e-0330-4909-9a05-5945a7bd3f4b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c989b29b-9405-4888-b7cb-2b324269ae7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1427c26a-d25b-4e37-8529-221b46ded956",
        "cursor": {
          "ref": "37f68b4c-1433-4662-9859-3a7c490e4e82",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5a730310-4016-4952-8b7a-9ce5f6933dd2"
        },
        "item": {
          "id": "1427c26a-d25b-4e37-8529-221b46ded956",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b6052345-5479-40bb-b817-1d9a3f83cf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7d856b-34a4-4038-8f50-5b7dc84eeef4",
        "cursor": {
          "ref": "68fd0848-1eb3-428b-ac91-f6df0086667e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "11a7ae9c-3818-4dc3-9d58-18ee31743979"
        },
        "item": {
          "id": "be7d856b-34a4-4038-8f50-5b7dc84eeef4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "85366d8b-0fe7-40d0-acb9-a4be5c5913de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c80624-1891-4770-bcc9-d2380cdac0db",
        "cursor": {
          "ref": "8c44c306-fa62-45db-88c4-6fab7083647e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "940fb2a5-11ab-4d94-a49c-b17335f9b921"
        },
        "item": {
          "id": "07c80624-1891-4770-bcc9-d2380cdac0db",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6e219cda-7993-45cc-be1b-f8c80e528283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4cf98d-5d56-4d32-a2db-6b428ffb1327",
        "cursor": {
          "ref": "9de81aa5-5715-4f0b-931b-8af1d5b36a9e",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f3f874de-e368-4f29-b49f-6cc836b4656c"
        },
        "item": {
          "id": "5a4cf98d-5d56-4d32-a2db-6b428ffb1327",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2a763c17-a877-4d70-b62b-373d3bcf30b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e726102-8bdf-461b-bf7a-7a07806a5c4b",
        "cursor": {
          "ref": "420c9bec-1a4a-40d2-8c55-fdaa6a809abf",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1dc31634-97f2-43a3-9f25-90e0a4e406cc"
        },
        "item": {
          "id": "6e726102-8bdf-461b-bf7a-7a07806a5c4b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b42d192f-193e-487a-a47d-72ac70829fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30a8e63-ff0b-4d1f-8ba7-b61a48d83175",
        "cursor": {
          "ref": "caa1749f-74ff-4e9a-9ea7-72bbf01977a8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f3e9ba83-b028-4d0b-84f3-fc82c743644f"
        },
        "item": {
          "id": "a30a8e63-ff0b-4d1f-8ba7-b61a48d83175",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "042cf956-6eff-4e17-8fd4-139184ff50d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceabf683-542d-4b94-af71-65671e088aeb",
        "cursor": {
          "ref": "7fe17b30-8a96-4c5d-964e-14a02a157e98",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2f713c0a-e0ed-489f-8e2f-36401b9e35df"
        },
        "item": {
          "id": "ceabf683-542d-4b94-af71-65671e088aeb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "237eaba7-bdf9-4161-84c1-a88e4c1c8e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d06a64-27fc-4b50-9974-548333b30f80",
        "cursor": {
          "ref": "15e01fe7-9021-4968-936d-c8f2bdc98841",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e71801eb-b9d4-4ae3-994d-b5602b7128c9"
        },
        "item": {
          "id": "a9d06a64-27fc-4b50-9974-548333b30f80",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d620cc8b-aef0-439a-aa13-f768ab8ed266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc528497-fc88-4e62-bf55-b4dcf6af0011",
        "cursor": {
          "ref": "4bb6ab0f-a069-4ab9-ae5d-bdd2a5a8e4d1",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4d1c5161-8809-4888-9f07-236351a986c8"
        },
        "item": {
          "id": "fc528497-fc88-4e62-bf55-b4dcf6af0011",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "04f08d3e-9e2d-45f7-b2ed-ec72028d7063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a96e049-3c43-414d-bb34-8fa1173b2e01",
        "cursor": {
          "ref": "8b7bf8ba-c990-4850-9b1b-cfe788d9ceee",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "90577298-d049-4a34-9413-d5981df96422"
        },
        "item": {
          "id": "1a96e049-3c43-414d-bb34-8fa1173b2e01",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ba8a7b13-8e2c-4a52-8b6c-ad7845d666a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a841dde8-9b09-4ce8-8eb1-c4b92b5b5cab",
        "cursor": {
          "ref": "e456d251-d547-4442-a5e4-150b908c574c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "549e61cf-ec96-467e-8a25-811c8de1b21b"
        },
        "item": {
          "id": "a841dde8-9b09-4ce8-8eb1-c4b92b5b5cab",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c3223d84-64e5-48fc-a146-81031cc6a37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b659bf3-270a-4b13-a16c-98d9fa148ad8",
        "cursor": {
          "ref": "058a117e-66e8-42c3-9c97-544506fd7567",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "11752469-94b3-4533-84cd-59f9d5c0c9ba"
        },
        "item": {
          "id": "0b659bf3-270a-4b13-a16c-98d9fa148ad8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bdc31fe5-6f4e-41f0-b3bf-9edceb160029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c845744f-2306-4764-8f33-934904ed8d28",
        "cursor": {
          "ref": "f41d7d4e-1a91-4ecd-baee-3b6882fae6d5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6521ba96-fe3b-452e-a392-9d525861cad6"
        },
        "item": {
          "id": "c845744f-2306-4764-8f33-934904ed8d28",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "80df755b-d5cc-41ea-b0a3-992c50af3cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0596e94-81f9-4167-89e8-2429511d0066",
        "cursor": {
          "ref": "d415ccc7-6d3b-4e35-8b75-3bab547607b0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fc57bb8b-2186-446a-816f-25029bcfe36e"
        },
        "item": {
          "id": "e0596e94-81f9-4167-89e8-2429511d0066",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a19a1fcd-5d29-4cbc-a99a-8675b6a06dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ab2476-3a45-44cf-ae4e-d3a0cce6f7e1",
        "cursor": {
          "ref": "73f5df99-f604-4ef8-927d-a783f3836c03",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c4520386-6787-4db7-b439-56bbc35e64c6"
        },
        "item": {
          "id": "f7ab2476-3a45-44cf-ae4e-d3a0cce6f7e1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a317e865-48c0-4f6e-ad95-8538ad827e9d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f76062f-3ea9-4f8f-90fb-e8f3dfcd1544",
        "cursor": {
          "ref": "f3ddce0b-afc9-4c62-8efe-b17b531b6d52",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "af11fe6d-c6fe-4e86-9713-ece3404a0ea0"
        },
        "item": {
          "id": "5f76062f-3ea9-4f8f-90fb-e8f3dfcd1544",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "793cfc25-a2eb-4972-9005-610deb0d01b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4f4404-ce0f-49cd-9204-0fb6faa53018",
        "cursor": {
          "ref": "1b7c2773-4c96-4ea9-bcbd-e88a422e5c7c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8bddbc30-65ef-4760-b35f-2d3c1ec88a8d"
        },
        "item": {
          "id": "ef4f4404-ce0f-49cd-9204-0fb6faa53018",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3267fb30-dd49-4dac-bb2d-08ede0b1385f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7d05f9-1837-45e4-9b7a-fde723f3ad69",
        "cursor": {
          "ref": "d370b79c-c43d-48d4-93f4-9377407a7c24",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "220f7a49-3d09-4ebc-b1e2-b5cc677d5bc9"
        },
        "item": {
          "id": "bf7d05f9-1837-45e4-9b7a-fde723f3ad69",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e4e853a9-13f9-44ea-bbe9-2b7c14ac37bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be16280b-daea-404e-aefb-343f1ca4beae",
        "cursor": {
          "ref": "c6dd1942-0f04-4b3c-a680-719d460e81d7",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "02e68a78-621b-4905-82ed-7b19f0c8728a"
        },
        "item": {
          "id": "be16280b-daea-404e-aefb-343f1ca4beae",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ca93bfcc-c1c0-483d-8010-57be22f92115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258124f2-ac0d-4f36-af97-e97bb17eafe4",
        "cursor": {
          "ref": "6b46cba2-8342-4808-acb1-46022a4561e1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0e49815e-42da-4449-abfb-117ff7b6a6d0"
        },
        "item": {
          "id": "258124f2-ac0d-4f36-af97-e97bb17eafe4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "269f1b68-1875-42ec-8ed0-be4fb2d2f789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dfbd85-1207-469f-8b5b-96ffd5c6551d",
        "cursor": {
          "ref": "98d4cb57-69da-445a-a2d7-dcbc67989aba",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "571071f2-d17c-426b-8b63-4d444ebbfee4"
        },
        "item": {
          "id": "20dfbd85-1207-469f-8b5b-96ffd5c6551d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7f63c389-37f7-41c6-a509-ed9cc7959c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa1f870-6b93-457b-b3eb-f61747d82a06",
        "cursor": {
          "ref": "bce4dd45-077b-4ddd-9d63-8cb76c2e69f7",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "087bef01-6bf5-43e7-9db1-b7ee1223ac81"
        },
        "item": {
          "id": "baa1f870-6b93-457b-b3eb-f61747d82a06",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c6639966-dbf9-4cb9-81cc-baf2c5a93b59",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c437673-f6b4-44f0-849a-b0fecf5fbaa4",
        "cursor": {
          "ref": "650c33ce-d61d-4745-a723-14365a7e460f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e65c336d-fcbc-4695-9f09-df8cc86a2e45"
        },
        "item": {
          "id": "5c437673-f6b4-44f0-849a-b0fecf5fbaa4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0940b5ee-8504-4805-b944-6118a0e7fc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d165a0-4f4a-4c66-9fbe-3ba3c8abf59b",
        "cursor": {
          "ref": "de7ec1ac-267a-4ab3-89e4-efa4c97f35fb",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "98194298-e958-4146-9052-33c8e012a1f0"
        },
        "item": {
          "id": "15d165a0-4f4a-4c66-9fbe-3ba3c8abf59b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7c58e522-e01e-47bc-a131-307d8d7aa12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76eed31f-b70b-4c60-aae3-d72ff4113aaf",
        "cursor": {
          "ref": "16e15c8e-85f3-4ca5-aac7-2546206222e0",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b83de1d-243e-486d-b5e0-24d023a13100"
        },
        "item": {
          "id": "76eed31f-b70b-4c60-aae3-d72ff4113aaf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2192ae8f-105f-4838-a672-f9c603b40f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dac3bc6-350b-413a-831b-5ee6ed9ba5e8",
        "cursor": {
          "ref": "576bbb84-b8d2-4411-adfd-f0f16b4d865a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3a0f8344-bdf1-4573-b9c3-af594c765df3"
        },
        "item": {
          "id": "3dac3bc6-350b-413a-831b-5ee6ed9ba5e8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4f17443d-2d58-490e-89d8-087299813837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017fb66b-f013-4ed3-aa5c-b5c7cccb661f",
        "cursor": {
          "ref": "e3af33ba-377e-48b2-930c-5c41f59188b3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "40689aae-357e-42f3-b55f-f8f36ea328ce"
        },
        "item": {
          "id": "017fb66b-f013-4ed3-aa5c-b5c7cccb661f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "413b1d7b-3469-4cc8-8b2d-1488cbde0810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d64661-a595-4518-add4-eaa32e0883a2",
        "cursor": {
          "ref": "41afd34e-3518-421d-b3b6-af3d905d9aa7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0598b9a2-c24e-41bb-bce2-d301c37f756d"
        },
        "item": {
          "id": "e5d64661-a595-4518-add4-eaa32e0883a2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a40d8e68-f041-41b8-b7e9-43ce877c9efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e6279e-2188-4a63-8296-8314a8e4e231",
        "cursor": {
          "ref": "006aeb6c-e6f5-40c3-93d6-4b384d09b4a2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8e3eb3d9-c0bc-4103-af93-69d01c8d5d9e"
        },
        "item": {
          "id": "91e6279e-2188-4a63-8296-8314a8e4e231",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "41f8a050-7c77-4570-8d47-ef235109ec11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25edc290-8b78-4df6-83c7-c6f2ec19c88c",
        "cursor": {
          "ref": "fb83cdec-130c-42ae-ade5-23a1115f9c5e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "70451961-604f-460c-a31b-36cac9451577"
        },
        "item": {
          "id": "25edc290-8b78-4df6-83c7-c6f2ec19c88c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c9ba8012-4196-479d-b02b-07a59ae00c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ede4d7-16f3-4fdd-874d-a5a423b0aedb",
        "cursor": {
          "ref": "00ce71c3-54f0-467c-a350-382d2ca550aa",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "aa895cd2-f4dc-453e-8a87-38126692fe78"
        },
        "item": {
          "id": "43ede4d7-16f3-4fdd-874d-a5a423b0aedb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "502029e0-6c10-40fd-93f3-a1c84934f132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6467ab-84a4-4ccb-a6a7-1a6d340c4397",
        "cursor": {
          "ref": "e8bb249a-9c76-4dbf-a66f-7d14e265eebe",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f14625f3-9305-483d-a325-872be3db5038"
        },
        "item": {
          "id": "ce6467ab-84a4-4ccb-a6a7-1a6d340c4397",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9831dfcd-bd42-427c-831e-127531ffa8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab8c0b7-d7e4-4a5e-a63f-2c5212f7bba5",
        "cursor": {
          "ref": "543d6560-c752-4bcf-a397-534adb5dc8cc",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a6842f77-b7a3-488e-bbff-91a25a23018f"
        },
        "item": {
          "id": "1ab8c0b7-d7e4-4a5e-a63f-2c5212f7bba5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "07919be4-dbdd-4745-8f45-9819a71570bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ed9ed5-6e93-4c25-addf-9132434a4cd1",
        "cursor": {
          "ref": "4121587d-889b-457a-ad2e-50f46fd07602",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "39abe224-7e5a-4d96-b903-24a36dad7dbd"
        },
        "item": {
          "id": "b9ed9ed5-6e93-4c25-addf-9132434a4cd1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "aedee6dc-1f5c-4535-bfba-162c324a45aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1282d0-9856-4a89-865d-bea34c3c2fc0",
        "cursor": {
          "ref": "7c0374d6-9614-4f8c-8656-577387e2ca19",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9d93ddcf-bd2a-4b19-87ef-e78cb5cabd28"
        },
        "item": {
          "id": "6d1282d0-9856-4a89-865d-bea34c3c2fc0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "65ee0f51-f102-43d4-898a-0c94517676b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4571dd-c626-4ad9-a15a-303dd08fab8f",
        "cursor": {
          "ref": "2caf9232-dc4e-4925-a153-f0473cacf934",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d44b86b7-1732-4fa8-87ce-f6560a1e0b54"
        },
        "item": {
          "id": "4f4571dd-c626-4ad9-a15a-303dd08fab8f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "daa5443d-8685-4c0d-b3d5-0a84d48a5ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44ed98a-0945-427e-89c7-890514ff226a",
        "cursor": {
          "ref": "7f064ca0-98f5-4c04-96e9-3f7616fdfd50",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "02116ae0-bbc1-46dc-a995-d0f6e52a1d56"
        },
        "item": {
          "id": "b44ed98a-0945-427e-89c7-890514ff226a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c1f8b256-d0bc-482c-bece-6cd00b66e496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f6272d-f0cf-44ab-8fc2-322e7d558ff9",
        "cursor": {
          "ref": "aa26c39c-2c1d-4957-a79f-152f2803b39b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6c5546af-22ab-4813-b9c8-c19ba5bb9625"
        },
        "item": {
          "id": "c3f6272d-f0cf-44ab-8fc2-322e7d558ff9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6627ec1a-8043-42c0-b089-bcdb7dd03fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e097cb1e-58f0-4505-9f0c-3c6837d9b078",
        "cursor": {
          "ref": "7f45fa29-4bb1-4e44-8ed0-738acb1309e9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "457e8d81-604e-4820-a793-94778d2ebf8f"
        },
        "item": {
          "id": "e097cb1e-58f0-4505-9f0c-3c6837d9b078",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "959765b2-8003-434d-a952-3fbb27389461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb9fc96-e7b8-4508-9eca-abaaca66e138",
        "cursor": {
          "ref": "47fd4bf7-d777-4e24-9497-c876e944055d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a5da08cb-02ba-4404-976d-09abad6c6dd4"
        },
        "item": {
          "id": "6bb9fc96-e7b8-4508-9eca-abaaca66e138",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "98396640-4aa7-414d-bd68-d0e0aaf67e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553418e5-e5e7-4459-89cb-9b5a54eb151c",
        "cursor": {
          "ref": "05e775ba-516b-4182-a910-5868ede89b87",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5d584559-09a9-4358-be34-0a5fd2c9892e"
        },
        "item": {
          "id": "553418e5-e5e7-4459-89cb-9b5a54eb151c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bb7742b3-637f-4752-b2ea-ddfc36d321bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dcedea-28ec-4690-9333-a8a71e17d794",
        "cursor": {
          "ref": "fe73cbdd-33e6-49e6-acaa-985c135df1bf",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "313558be-4f8c-4e25-a79b-8c71972c7f01"
        },
        "item": {
          "id": "b3dcedea-28ec-4690-9333-a8a71e17d794",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c5ec38ec-ab8c-45da-b45d-f69def805c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119f3af0-4c6c-4fb5-8bec-390a4139e97c",
        "cursor": {
          "ref": "bb200037-d729-4f58-9ad9-c99171c555f9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2f976c42-2776-4b86-b53f-3850c5efea11"
        },
        "item": {
          "id": "119f3af0-4c6c-4fb5-8bec-390a4139e97c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "339ea190-287a-4a54-9c4b-56acb980926e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c44e72c-a36c-44d5-a2e6-2eb175793af4",
        "cursor": {
          "ref": "18826939-42e9-441e-b3a0-02910d339dbf",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d9e4cc49-19bd-497f-b892-dc687b2cfabc"
        },
        "item": {
          "id": "8c44e72c-a36c-44d5-a2e6-2eb175793af4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4e6fc097-a89c-482e-9557-d94ad26a12cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd600de-324f-4f03-aba7-99b3bcf1db82",
        "cursor": {
          "ref": "2a2b8d3f-5360-4874-8e93-85f1a32b2742",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b81184dc-2b22-426d-83fb-b6e1fe2c0579"
        },
        "item": {
          "id": "6cd600de-324f-4f03-aba7-99b3bcf1db82",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cd8ddeaa-bb48-4a74-9b34-3bb415a43b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca00ddd-3640-4a17-a083-5dde549d0737",
        "cursor": {
          "ref": "db7ea34e-3ba7-4673-ae85-4ccbfced09d6",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "879687cf-1208-4304-b26b-bfdcde3993a6"
        },
        "item": {
          "id": "5ca00ddd-3640-4a17-a083-5dde549d0737",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ee5e13fa-b9dc-4b6c-a541-1af60c2ac379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36edd69c-c9f5-4dbe-af45-d4208dadb262",
        "cursor": {
          "ref": "31b7f247-297d-4693-b9d8-2150a8d004ed",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3cc46f74-9de3-4484-bef0-a9c21bb0201a"
        },
        "item": {
          "id": "36edd69c-c9f5-4dbe-af45-d4208dadb262",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e234986f-5d0d-4af4-89bb-9ef388f4fc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eb8e93-8552-4a3a-8527-9d0932e7a68d",
        "cursor": {
          "ref": "64c9a7b8-5890-40f2-b939-11f3e6be1615",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "aa6a719c-bf79-4f8a-92d9-336636554c86"
        },
        "item": {
          "id": "d1eb8e93-8552-4a3a-8527-9d0932e7a68d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cdbae90d-0f63-44df-a480-e5e4e24e056e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f781ac4e-b97f-4cb2-bf76-b61239509ef3",
        "cursor": {
          "ref": "7f450734-511d-472a-b66f-d4a7c5ff55c7",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "600bdb6b-4c1a-4b02-b306-761450860a51"
        },
        "item": {
          "id": "f781ac4e-b97f-4cb2-bf76-b61239509ef3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e61788ea-f13c-4eaa-afe6-6a14bada56df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef8c22d-02d8-455d-aee4-1abdee142a1d",
        "cursor": {
          "ref": "8cf23380-6c83-4c69-9d49-25654daf0b59",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "09dfd704-1d7b-490b-bf47-18e200171b80"
        },
        "item": {
          "id": "aef8c22d-02d8-455d-aee4-1abdee142a1d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e6a4a2d1-872b-49c6-991f-43ee47bfd073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5383a5-aedb-47e8-812b-c134fdfe6622",
        "cursor": {
          "ref": "ac8e1218-0f3b-4928-a796-d282d41368de",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9a71d891-2588-4050-a84a-ff6a40973435"
        },
        "item": {
          "id": "6a5383a5-aedb-47e8-812b-c134fdfe6622",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "977096dd-93b2-4f8f-8b98-accb0177ecc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6397b345-6774-4797-8603-3e68574270ae",
        "cursor": {
          "ref": "b0a07dfb-e7a5-4ba8-a895-c21d39acf2c2",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1105fcf6-f0c6-49b0-9890-13d955e58773"
        },
        "item": {
          "id": "6397b345-6774-4797-8603-3e68574270ae",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "36d111c8-4bdc-4e9e-8ad8-db0b2e5f3ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f5ec4a-b539-4e7f-90a9-7e46791ed7a0",
        "cursor": {
          "ref": "c48e04fe-2b68-4584-b14d-71e880392cee",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "55dae617-281a-4ff4-8547-41ecd81038f3"
        },
        "item": {
          "id": "a4f5ec4a-b539-4e7f-90a9-7e46791ed7a0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bfbec4d0-771e-41dc-ba9d-34f1568dd5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c08984-1bfa-4502-9911-b397e10f07d4",
        "cursor": {
          "ref": "b8b8749f-d52e-460b-aef8-3174feb8059c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7ec0bc6c-c684-4603-b5d5-b4d897bfc9d0"
        },
        "item": {
          "id": "23c08984-1bfa-4502-9911-b397e10f07d4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b44cb0f9-6182-4c2e-a2a3-3d30b10cff1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c659af60-82f9-4a13-8ea5-ed49145962b0",
        "cursor": {
          "ref": "0b35c5bb-21d0-47b3-a2f0-55c58f7ce114",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c2ab8959-45c9-411c-b8e8-4312bf099062"
        },
        "item": {
          "id": "c659af60-82f9-4a13-8ea5-ed49145962b0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0b66e3b9-f737-438c-b03c-d5f392c939ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a8f21c-d52d-491d-af35-56e59703def0",
        "cursor": {
          "ref": "595ab354-8a62-44cb-a43c-35d93bdc153f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "49c364af-5185-46b3-b2af-cd906b920025"
        },
        "item": {
          "id": "c9a8f21c-d52d-491d-af35-56e59703def0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5a88f275-f70c-4ae7-b159-ec90c6e7f0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f015de4-feeb-4c80-999e-ba48160ce9e7",
        "cursor": {
          "ref": "abe3b92e-2901-4f08-a08b-0132caa5e82e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "13f83ed0-db3a-4cd8-b0f5-ce86c96ca459"
        },
        "item": {
          "id": "8f015de4-feeb-4c80-999e-ba48160ce9e7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dab632f6-ba6a-4265-8359-ecdedb21170e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d29b60-9eba-42c9-b64e-a4caeb8ea031",
        "cursor": {
          "ref": "d6c376b2-0d32-43fb-b073-7d744047db37",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e383718e-85be-403e-8507-ebb4a7726114"
        },
        "item": {
          "id": "79d29b60-9eba-42c9-b64e-a4caeb8ea031",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d97827a4-5ce9-4dc1-8752-457b7fc444cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7fe656-c542-4680-b564-86774c8b5314",
        "cursor": {
          "ref": "1a965865-77f7-43d9-bba1-f6d1c6a1b874",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "87edfc04-62a6-4d44-8fb0-eb2ea04c47ba"
        },
        "item": {
          "id": "ff7fe656-c542-4680-b564-86774c8b5314",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "067e1786-efb3-4274-906a-41074febeb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d482a1-3001-44af-b8f6-1bd5d8c25c20",
        "cursor": {
          "ref": "591da4a6-84f8-408e-8d55-9bb9cb207682",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b3cb9b68-52da-4527-b791-300afefb1509"
        },
        "item": {
          "id": "e2d482a1-3001-44af-b8f6-1bd5d8c25c20",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c3fc3d1d-a6ed-4fac-8622-5fb4129f5c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b52e23-ae84-48b6-b88d-fb7ee5461832",
        "cursor": {
          "ref": "c0e5f22c-a5bd-4f42-a2e8-ae1bd3d6b89e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a6eb2961-2a27-4909-9a6b-c4f5aa5f1ff4"
        },
        "item": {
          "id": "c6b52e23-ae84-48b6-b88d-fb7ee5461832",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6cef2829-5937-4e3e-af35-c3c18a7fb588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3c98b3-ecb5-4281-882f-76c9c6661db5",
        "cursor": {
          "ref": "cf29c7cb-b82f-40b9-93f2-e8e139ef8ac2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "93839340-dd63-48d1-90b1-aa21d61363c0"
        },
        "item": {
          "id": "fe3c98b3-ecb5-4281-882f-76c9c6661db5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2af03fcd-50a5-4155-a2a1-b443e8f5627d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4915e2ec-7409-4062-9a48-5aad817ae1a3",
        "cursor": {
          "ref": "9f8e29c7-e1ed-4478-8024-e8747ee055ee",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7d496dd5-e320-430c-ac56-da99df26de5f"
        },
        "item": {
          "id": "4915e2ec-7409-4062-9a48-5aad817ae1a3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c27d5c89-2e43-498b-98a4-f2ad4a89c8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5a9587-6665-4d64-9ed3-443d37448a07",
        "cursor": {
          "ref": "99793af8-382d-4e33-8cdd-ba5b30f9b4c8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b139842a-24a6-4618-8cb2-2c9fbe591b4d"
        },
        "item": {
          "id": "dd5a9587-6665-4d64-9ed3-443d37448a07",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d458cd43-d682-4bda-8951-978fff96507a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207a4e47-4cfc-433c-ada8-5aec054b9961",
        "cursor": {
          "ref": "9383a1a7-6aeb-453a-8ddd-9b7ef0845706",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "efe5c73a-80a7-464f-a127-7c5c200c2ade"
        },
        "item": {
          "id": "207a4e47-4cfc-433c-ada8-5aec054b9961",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e2824988-63fb-44ee-ac7f-fc0587423495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091ede6b-24e9-48a4-b86d-9b5e47d386cc",
        "cursor": {
          "ref": "54183593-655c-4938-ac9f-40a80ed4bb9a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5f5cca1c-2282-4a75-b560-5663afaf1a71"
        },
        "item": {
          "id": "091ede6b-24e9-48a4-b86d-9b5e47d386cc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9ba72978-0a8c-49f2-befc-c6026d74ff98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e221451-e558-4092-b3fa-c77d02bfaae0",
        "cursor": {
          "ref": "2480a96f-cf8c-4cd1-aebe-6120a1a6bc42",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7f53c2dd-13e9-4613-bfc6-8d206aca5558"
        },
        "item": {
          "id": "8e221451-e558-4092-b3fa-c77d02bfaae0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8790d7f1-7def-4e10-8ae8-4b3e8dde793b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c28b33-9946-4d08-8e85-72c6f3e0e440",
        "cursor": {
          "ref": "f18aaeb1-e4e7-4cd1-8a80-cd9b623873cd",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cb7e04f9-3e53-45de-a7ba-2d889439adcd"
        },
        "item": {
          "id": "52c28b33-9946-4d08-8e85-72c6f3e0e440",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "148f5bb0-64b1-4d7a-9b59-1fc31b3e9d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0519cc6b-0a8e-45dc-af50-908f8227e1fe",
        "cursor": {
          "ref": "8e6bd364-ef78-40cc-895d-532de043973f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f4a326a8-c1c2-491e-897b-a9ab14451001"
        },
        "item": {
          "id": "0519cc6b-0a8e-45dc-af50-908f8227e1fe",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e4edd292-520c-4293-9cda-3cf02fc12de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076cf61a-1dd4-47f1-805b-c026f0b7a94b",
        "cursor": {
          "ref": "87740563-6127-4eec-9867-be8b976c657a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "32786802-0099-4e1d-a2d5-44736e24eb36"
        },
        "item": {
          "id": "076cf61a-1dd4-47f1-805b-c026f0b7a94b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "754f2fe1-05db-4ce1-acf0-c3de79b0307a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be31bc0-b2a6-4516-b783-8e444efb4c10",
        "cursor": {
          "ref": "db14770a-95af-43a6-8275-a217b8aabdc6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d6b6b3dc-d069-40c0-a8ff-84239b063a99"
        },
        "item": {
          "id": "9be31bc0-b2a6-4516-b783-8e444efb4c10",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a5147bab-81a4-4dbf-88c2-f7d9906027ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993bd4f8-784c-4463-a942-a7a955da8f68",
        "cursor": {
          "ref": "2d89ecef-5b60-462e-b60d-008b9b54d095",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4128d752-3efe-44ca-bc1e-076fb4b4cdd8"
        },
        "item": {
          "id": "993bd4f8-784c-4463-a942-a7a955da8f68",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5c93e0e0-658b-4e29-9541-c8e57a20f743",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd9a3d2-fb5e-46b0-b6bb-d9279e76d722",
        "cursor": {
          "ref": "f0b16778-265c-41ec-a35e-5f8faf05e6bf",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "09a41d4e-6119-42a7-b243-6cba8432d70c"
        },
        "item": {
          "id": "ddd9a3d2-fb5e-46b0-b6bb-d9279e76d722",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2c4f6d68-5a9f-44ed-a609-c669e6f075d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9056054e-7218-4a07-be8b-eb3b450ce941",
        "cursor": {
          "ref": "77b94c9c-11cb-4997-ace8-ea211068ed2e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4914f9dd-4d59-4eed-be2e-1fd999231ba4"
        },
        "item": {
          "id": "9056054e-7218-4a07-be8b-eb3b450ce941",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a5d4a0ad-e5c0-4609-bc30-ed1aac9646cb",
          "status": "Created",
          "code": 201,
          "responseTime": 12570,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "83305a55-18ba-408e-af3b-a496d5593a4a",
        "cursor": {
          "ref": "04c14b4a-06aa-41c7-94b1-dd56efabce0c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "358d5841-4cfd-4fc2-a045-5c658aa16dd1"
        },
        "item": {
          "id": "83305a55-18ba-408e-af3b-a496d5593a4a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a3dd02c2-b6f0-42f1-921a-5ca2dc7a2f1b",
          "status": "Created",
          "code": 201,
          "responseTime": 12249,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "470bf155-9b7e-44da-a168-e55a0d14a64f",
        "cursor": {
          "ref": "3b685b75-0ca5-4760-a32b-09bb6363e54d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ccd1974b-03fd-408b-aa06-b5a1bfa21cfa"
        },
        "item": {
          "id": "470bf155-9b7e-44da-a168-e55a0d14a64f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4ed7d67a-4644-4bb6-9ecd-1cf699ce02c7",
          "status": "Created",
          "code": 201,
          "responseTime": 11972,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "349c74a8-4709-405e-b27d-162891ed5ec0",
        "cursor": {
          "ref": "066f64b3-ecc1-4185-bf74-99026815f55d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e095c492-94d6-4c11-9a5b-40750b3a1c3b"
        },
        "item": {
          "id": "349c74a8-4709-405e-b27d-162891ed5ec0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "04b47260-d0f0-4955-97ff-e39d5c49e9df",
          "status": "Created",
          "code": 201,
          "responseTime": 11299,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a19a14e-6849-492e-8b71-7f939f96f34a",
        "cursor": {
          "ref": "417d6f82-de44-45b5-91a0-edcfd67b2dcb",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7f887ca4-79e0-4c03-b2be-c252f010562d"
        },
        "item": {
          "id": "3a19a14e-6849-492e-8b71-7f939f96f34a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ee12d869-1cdf-437e-9e9c-977f21c64744",
          "status": "Created",
          "code": 201,
          "responseTime": 11646,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-24T00:41:02Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-24T00:41:02Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a39d5f34-ad3e-4a34-b184-a204302a4204",
        "cursor": {
          "ref": "98db6f6a-dc9a-40b1-af9a-ef9c01b4ddf1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0fbbc9db-f7ff-4307-b8cb-129cca41e4c4"
        },
        "item": {
          "id": "a39d5f34-ad3e-4a34-b184-a204302a4204",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b888df1a-ad95-4966-a5bf-d9252f36b48d",
          "status": "Created",
          "code": 201,
          "responseTime": 11627,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c78d29d-0f64-4aef-9962-f38439c75afc",
        "cursor": {
          "ref": "b2bf7ab0-e265-419f-bbdc-727d7b8111c4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "651376d7-dc1a-4418-ae56-7a3e0b8c293f"
        },
        "item": {
          "id": "0c78d29d-0f64-4aef-9962-f38439c75afc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "54c4215d-2d77-4e6d-a131-1119f5ea1868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf115bbd-ec95-4681-97a4-eba8757e4895",
        "cursor": {
          "ref": "54a8fff1-a6cf-4a39-91d7-98e496c7cf81",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e0bc2f63-96b7-4a0b-bf4a-ae90c02a3fa0"
        },
        "item": {
          "id": "bf115bbd-ec95-4681-97a4-eba8757e4895",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dfbf0b6a-c1e3-4e7d-a960-04c1ba0d4298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cef817-2803-4705-b7a8-4c54b18b9da6",
        "cursor": {
          "ref": "3a985450-4389-4f7b-a07f-51da6bbfaad0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "083daad5-b3e7-4483-8bf5-fd964effbb8d"
        },
        "item": {
          "id": "75cef817-2803-4705-b7a8-4c54b18b9da6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6f6a33e1-f2d4-4d28-89fd-7d46c897f321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30327fce-20dc-4210-b136-3cc9a2956c3d",
        "cursor": {
          "ref": "089270d4-f3e4-4c1d-9621-ed21ffc89238",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "aad1ea93-bf4d-4088-9562-aabe38bb3000"
        },
        "item": {
          "id": "30327fce-20dc-4210-b136-3cc9a2956c3d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3ab94a55-042b-4c4e-be35-8634d7262669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193e2da2-7500-49fd-bb06-2e1eed9f1d7c",
        "cursor": {
          "ref": "5d1f6513-bd16-4d16-816d-af654ebfad3a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d8bd37df-3b92-43bf-855d-2218842795dd"
        },
        "item": {
          "id": "193e2da2-7500-49fd-bb06-2e1eed9f1d7c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "577e9513-3719-4919-83a2-ffd675728267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2161b509-cdd2-430b-a9f7-917ebe3040e0",
        "cursor": {
          "ref": "dac08cca-9a2b-416c-92dc-d79a56b1a323",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d5884ca3-123a-4282-a202-1cb0f99f83f5"
        },
        "item": {
          "id": "2161b509-cdd2-430b-a9f7-917ebe3040e0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f74ae96c-175a-456b-81ac-92ff3db36e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9932fdd-ee0b-40ea-a39f-3115d3089b2d",
        "cursor": {
          "ref": "69786d54-4343-4921-9ee3-add2f1a44929",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a9c0df5e-20b3-45ad-a9cb-aabe9bce3714"
        },
        "item": {
          "id": "b9932fdd-ee0b-40ea-a39f-3115d3089b2d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fc36aa68-9bdd-4584-98a5-7f877b523403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b330c8-3c42-4220-b782-d8f0521e40b2",
        "cursor": {
          "ref": "60689fd9-537c-4f15-a59d-7b2cb3455b16",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1025bd3f-908b-4fe9-8830-4b5de62325f6"
        },
        "item": {
          "id": "d8b330c8-3c42-4220-b782-d8f0521e40b2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4b87f563-fbc2-4bb7-b220-a6c78ac7f90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d834693-fc66-428b-975c-07018bd6c0dd",
        "cursor": {
          "ref": "6c2d2278-2025-4716-b40b-7ccfe5f63533",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0441931f-5afc-4e09-8a29-7f5b88bd0d6f"
        },
        "item": {
          "id": "6d834693-fc66-428b-975c-07018bd6c0dd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3ab17b9f-2778-4806-8547-4804c79d0ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0813ce73-13f8-4149-816b-fa08033b64a0",
        "cursor": {
          "ref": "3ce8caef-66e8-4972-892a-a9ee6020da0c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "018be3ad-435c-40bc-83d9-b2a83cc8f037"
        },
        "item": {
          "id": "0813ce73-13f8-4149-816b-fa08033b64a0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "39b9c2e6-d4d8-4cbe-9887-389ebd3a4534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14826bc-a5d9-4f6e-b99e-d2cbde9553b9",
        "cursor": {
          "ref": "87812242-7820-4de7-9417-41aa7e682523",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "84c1a6d4-05a6-4840-b9fc-f801c95aefc8"
        },
        "item": {
          "id": "d14826bc-a5d9-4f6e-b99e-d2cbde9553b9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2619ce63-a7df-4f9f-83a9-745e20f1fc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf48fe5-5b38-42c1-bbb2-f5d442b4b059",
        "cursor": {
          "ref": "8e215f35-bf52-46d9-b32b-f6761f349cc8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "40f52a12-6392-456b-9b63-3a4077f4662e"
        },
        "item": {
          "id": "ccf48fe5-5b38-42c1-bbb2-f5d442b4b059",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "000198dc-7beb-41f8-8e29-847d8a35322e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a56bcb0-5d37-41a2-a433-f291efc41eca",
        "cursor": {
          "ref": "9c4e7d66-f63c-4723-b4bc-fe7013acc39a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8bc40c26-023e-4dab-a541-656c77d34f72"
        },
        "item": {
          "id": "4a56bcb0-5d37-41a2-a433-f291efc41eca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bf18246c-7114-4003-b70b-181ea509a554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424437c3-ef3e-4de3-afac-81b3e360b915",
        "cursor": {
          "ref": "06ca7d07-7331-4556-9dd9-a5ab63b5883e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "73e1ab32-8aa0-42e4-a1b8-a02f209f45b1"
        },
        "item": {
          "id": "424437c3-ef3e-4de3-afac-81b3e360b915",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "90a6b6ac-e2fb-46f5-8d7e-3c75ecece330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592ad4ce-f7c2-410e-8156-8be51f0a55f1",
        "cursor": {
          "ref": "96ffad55-e07c-4649-91b8-9b05f56b6d54",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9307851d-17d7-475b-b13d-8634e6dcdd89"
        },
        "item": {
          "id": "592ad4ce-f7c2-410e-8156-8be51f0a55f1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e3936348-c8d1-4ae3-b608-3d52e5d44443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d3701f-57bf-488a-96b9-af7f2dcf7858",
        "cursor": {
          "ref": "d6b4314e-f5a5-48c0-a04b-8ec5ff984d9d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a50fcb74-6291-4713-a15e-e333ba9e48f0"
        },
        "item": {
          "id": "14d3701f-57bf-488a-96b9-af7f2dcf7858",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6b428805-d628-453e-b8c0-70cd24e7762e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f55ca7-cfed-422a-9cfb-f381fd585ccf",
        "cursor": {
          "ref": "addd5ccb-fe7f-4d7a-9e86-351904b9535b",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1395028d-b649-4e18-bc37-167fa291022a"
        },
        "item": {
          "id": "f6f55ca7-cfed-422a-9cfb-f381fd585ccf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "39285da5-1270-49be-938e-e05669bb9893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1273337-e859-4164-82e5-36a057b4972f",
        "cursor": {
          "ref": "87cc0cb7-a51d-46d5-9863-d82a0126dd8f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "146b82f5-1005-43dd-a814-63b3db379518"
        },
        "item": {
          "id": "f1273337-e859-4164-82e5-36a057b4972f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "38f479d1-d41a-4910-b156-ad301bdde22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d893b4a-bdf5-4803-9004-773700a1912c",
        "cursor": {
          "ref": "1c4a9140-adda-4b25-911e-aa39ad1b93d1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "292aea42-f1fc-4d71-9cf9-d0dfa8d58191"
        },
        "item": {
          "id": "9d893b4a-bdf5-4803-9004-773700a1912c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "562f8cd1-e9b2-4b6b-8f84-8e5be2f27ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58da27c2-03d4-46cb-b295-c6cf12a1972f",
        "cursor": {
          "ref": "7ae250c3-ad2c-4fb5-b683-c0b78a32d8c6",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f1564083-f99d-444c-bccf-4e4bbed2b8c4"
        },
        "item": {
          "id": "58da27c2-03d4-46cb-b295-c6cf12a1972f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "735cf635-69d9-453e-84ba-b38dcb86a710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67610c1-647c-42fe-a722-dd0a41141c86",
        "cursor": {
          "ref": "239b4eb6-04b9-453d-899e-3f7717ff4ea6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3d6f7d1a-dd6c-4711-b860-381a501879db"
        },
        "item": {
          "id": "f67610c1-647c-42fe-a722-dd0a41141c86",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5dea8b28-f64d-44f5-9938-7109d94c803f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a99559-2bde-4807-b564-0e549eb9ab8f",
        "cursor": {
          "ref": "c5e1c25b-eea2-4d4a-9947-05c2f7d060f8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3f81a909-f58d-49c4-8e1a-71feac607cb0"
        },
        "item": {
          "id": "f6a99559-2bde-4807-b564-0e549eb9ab8f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ffb07712-2cff-43aa-90ff-bc71bd4af889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7410cbc-84b6-457a-8bb6-4232103e408a",
        "cursor": {
          "ref": "5f5b71a2-86fd-49a1-b025-9c556811093f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c3a720d3-7c6c-486a-be93-1d6ea4fe8185"
        },
        "item": {
          "id": "e7410cbc-84b6-457a-8bb6-4232103e408a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e61f2a41-73fd-47ae-ad2c-90a1c9df495d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7915a17e-61cd-43d4-b165-91cb6a130095",
        "cursor": {
          "ref": "0d201641-2d37-40b4-b613-194bdccc7bda",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "87196f7b-e2ab-452c-8101-c68a6d317624"
        },
        "item": {
          "id": "7915a17e-61cd-43d4-b165-91cb6a130095",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d125c5c0-7205-48f6-81eb-891dade3510d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8908fd-3586-42aa-9940-eda5d4b09a35",
        "cursor": {
          "ref": "9cee7e21-b4ff-4769-b8dd-fca94d8e4551",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "791a2a54-5d69-49bc-b363-6bd1e9534f72"
        },
        "item": {
          "id": "5b8908fd-3586-42aa-9940-eda5d4b09a35",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a2a082c8-694c-475d-b986-a2dd7d4da67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9432a8a1-fab0-4dba-9804-15b6ead898c1",
        "cursor": {
          "ref": "b1a95656-25e3-4fa8-97cb-8ca7e498e5f9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d2b0a9a4-3592-4efa-8f91-0dd501b8217a"
        },
        "item": {
          "id": "9432a8a1-fab0-4dba-9804-15b6ead898c1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8ced389b-f0e0-4786-94b7-d4db6cd37c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d41fc1-0b6a-4b4d-9902-af4580bff241",
        "cursor": {
          "ref": "e64f1bd0-5ea7-45d1-a2bf-e03ff9115eed",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a4538e20-97f9-4d0d-8b13-c404c955fa6e"
        },
        "item": {
          "id": "30d41fc1-0b6a-4b4d-9902-af4580bff241",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "59e3017b-4b34-4a30-8a8e-d83362d32c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799521bc-8897-42a1-af41-d753aac1c486",
        "cursor": {
          "ref": "068ff505-e975-4830-9c86-1e860e95d3ac",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "40a7a206-f03a-425b-85ee-f3cf1f575781"
        },
        "item": {
          "id": "799521bc-8897-42a1-af41-d753aac1c486",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2e3b14f6-acfd-458c-a97d-3f63c4a749e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d463885-feb3-43a1-ba85-f3b6dfd55480",
        "cursor": {
          "ref": "47a39a54-f31c-44bd-b1c2-a5d3a9012642",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "425d60bf-0ea7-466a-a774-68c12228c99e"
        },
        "item": {
          "id": "7d463885-feb3-43a1-ba85-f3b6dfd55480",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "40509a65-c200-4ebe-8c7e-3f3a5feae148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2069c88a-982c-4a51-8d0a-cc6b7bd843e5",
        "cursor": {
          "ref": "8aa13cc5-565a-44e5-b8e4-2c316c7dc8e5",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4e81362f-7978-406f-8519-6d0b4811877f"
        },
        "item": {
          "id": "2069c88a-982c-4a51-8d0a-cc6b7bd843e5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "34fb8c52-faa0-406f-ac18-84e9c977a4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8af072-026f-47cf-998c-059c73c3525b",
        "cursor": {
          "ref": "72e583ef-3a0e-4eda-82ad-c556919fbf92",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0dc7aec3-54e9-435f-bd0f-6a4a558fea94"
        },
        "item": {
          "id": "cc8af072-026f-47cf-998c-059c73c3525b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f02f4fd9-a170-4591-80fb-78193522f887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c05b343-a490-45da-a67f-6355500d27ff",
        "cursor": {
          "ref": "3c9e4606-624b-482e-ac45-a020df307ee3",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "63f4bbd1-fa78-4b74-b39c-de14e127780a"
        },
        "item": {
          "id": "6c05b343-a490-45da-a67f-6355500d27ff",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9260f88a-43c2-4f49-b6a6-e2a303b4f396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82023285-c3db-4e98-a3e5-dd727a72a33f",
        "cursor": {
          "ref": "8af20a19-2535-4573-8748-171d90ede892",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "abae3907-23c2-4133-81dc-6d6914acec1b"
        },
        "item": {
          "id": "82023285-c3db-4e98-a3e5-dd727a72a33f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "54482439-c6e3-4355-b2b5-035e28768839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b63c9a3-60fa-4a44-a972-1bc6608fdd57",
        "cursor": {
          "ref": "8a850c5b-51e8-4555-9dec-816ff8cc9422",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "057fa537-764a-4493-bd24-9a775a809826"
        },
        "item": {
          "id": "4b63c9a3-60fa-4a44-a972-1bc6608fdd57",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b9b8d67e-7159-4419-b41d-d5d21ff761e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58fedb0-79cb-42db-b112-063d26c70443",
        "cursor": {
          "ref": "c88e09c8-201c-4f9c-9876-f4b4d6156dc8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f4603155-9b16-48cd-8c55-c90a44ff71ef"
        },
        "item": {
          "id": "d58fedb0-79cb-42db-b112-063d26c70443",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "53d37389-b4cd-4724-8aa6-7bd82846d4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7086c056-587b-4573-8031-11f0ac0fab77",
        "cursor": {
          "ref": "6e75a5b9-fdea-4149-a2b8-2763af5e592b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4d6fba19-1606-4050-95f9-e7fb2805372e"
        },
        "item": {
          "id": "7086c056-587b-4573-8031-11f0ac0fab77",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a6727c2b-070b-4496-820d-cfea24e9200d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14fcff9-d95c-4988-9007-7377b14860bc",
        "cursor": {
          "ref": "fd3c7874-b20d-4061-9b52-683a551bc26e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "693e806c-ada1-4ba5-bb68-d86cbec843e6"
        },
        "item": {
          "id": "b14fcff9-d95c-4988-9007-7377b14860bc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "77e35f80-c338-4528-86a5-00318240b8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4b0bda-c38d-49ec-bcf1-1c46928859ed",
        "cursor": {
          "ref": "52b7c1e7-6851-4ba3-85b0-43294922eba4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "04b04569-29f9-4dd5-aaa7-da4538ad3010"
        },
        "item": {
          "id": "9b4b0bda-c38d-49ec-bcf1-1c46928859ed",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1753ea5e-18d1-40e6-a0f9-10dd9f9cd560",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bd69bc-38e1-4587-bba9-f5f001aa5a5c",
        "cursor": {
          "ref": "1e688710-8556-4981-819d-83bf0b04c874",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "26b5be51-0cd1-41eb-a1b1-ded0904a6afe"
        },
        "item": {
          "id": "80bd69bc-38e1-4587-bba9-f5f001aa5a5c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8029125b-857c-4b5a-b766-5dafebf04311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57abfdd6-0353-4844-88a4-138216980f96",
        "cursor": {
          "ref": "3fd6054a-f0cb-4d20-acca-2e5a2a967c38",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1c2fd1bc-4719-4cc9-bdc4-b319bb7169a4"
        },
        "item": {
          "id": "57abfdd6-0353-4844-88a4-138216980f96",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e0c1393c-dab6-4378-8196-8bfa2e8ed335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf98680-766c-4697-8cc5-369307726df2",
        "cursor": {
          "ref": "b9785a0c-d0ae-4cb3-9e0b-4d4c1fe04ad6",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "32ee05b6-b072-4b7e-a0ef-20736ec0393f"
        },
        "item": {
          "id": "2bf98680-766c-4697-8cc5-369307726df2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fbef1146-cbc8-40a9-accf-39fb701c33e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd784fd-fde8-4d61-b804-a4fd2d423006",
        "cursor": {
          "ref": "eef5dc5e-1608-4aa7-acd4-27bdc1ea7403",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "612b8157-f8ca-42e1-8cde-16083a27a4ee"
        },
        "item": {
          "id": "3dd784fd-fde8-4d61-b804-a4fd2d423006",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "14753ceb-9a5c-4b06-b198-b61f93adb3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a246146-eea5-418b-856b-fa27afd424b9",
        "cursor": {
          "ref": "9a68f58e-d1ba-47d4-8c11-86c6e3cf9391",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cd8c4e46-4c37-4a4c-9b25-b973e327f651"
        },
        "item": {
          "id": "7a246146-eea5-418b-856b-fa27afd424b9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7b10f331-315c-4f19-aabf-106dd322c793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5ae9a6-8324-4cd3-9a27-172ca2d16df8",
        "cursor": {
          "ref": "be8c8d74-81e0-45df-9f03-d2f6609422fd",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b9714313-4ad7-46c4-86c3-3ca2f5e196af"
        },
        "item": {
          "id": "3e5ae9a6-8324-4cd3-9a27-172ca2d16df8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "33e6713e-f4f3-441c-a607-4bb2b6417dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559dbc00-99d2-4030-912d-912fe7bdaf83",
        "cursor": {
          "ref": "164c9ed1-189e-4e52-8032-7e67a6c1827b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "efd8a663-af6d-4bbf-8ea3-e1553ecf0d98"
        },
        "item": {
          "id": "559dbc00-99d2-4030-912d-912fe7bdaf83",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9db2641e-8d8f-4670-adc0-4efa98650479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a91e39-0141-4cd9-b287-171a34289f21",
        "cursor": {
          "ref": "b0cc1ba4-c9a6-4f2b-9507-b6405431c1b7",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eb915d6a-980b-4773-8672-096c458ae7a2"
        },
        "item": {
          "id": "b1a91e39-0141-4cd9-b287-171a34289f21",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "36da08a3-7cc7-499d-bb3b-e5638957223d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5a6734-bb87-4350-8e66-525ecc027703",
        "cursor": {
          "ref": "699e96e9-7291-48a2-b942-ff8c8dde3b20",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f6079d37-f1e1-46d1-a3b6-d68cc75d70a1"
        },
        "item": {
          "id": "cd5a6734-bb87-4350-8e66-525ecc027703",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d5f7f594-e56e-401d-9c61-665315e13008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d41a193-54df-4374-bfc8-4c26a3ad818a",
        "cursor": {
          "ref": "b3be4ed0-ea58-46a7-85a2-dbd551da41af",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "167f4c95-9b5c-4bb4-89a1-5e285a983cde"
        },
        "item": {
          "id": "2d41a193-54df-4374-bfc8-4c26a3ad818a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2a509739-767f-485e-96a2-c4ef59b7bc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afae0038-3a8d-4f3b-a3d5-8ef2650cf4d0",
        "cursor": {
          "ref": "44247b5d-0b66-46c3-9680-ec5572dca83d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8a6b6f88-42f4-42ca-9793-e46b8c295724"
        },
        "item": {
          "id": "afae0038-3a8d-4f3b-a3d5-8ef2650cf4d0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d46f128c-9282-4903-a56e-870e69eb457d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d302c65-a262-4eab-a983-13c494db5e62",
        "cursor": {
          "ref": "7df9995b-3c73-44fd-8e98-97cd883157ac",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5e98767a-ede8-40b3-9bdc-2d0837249aa9"
        },
        "item": {
          "id": "8d302c65-a262-4eab-a983-13c494db5e62",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "29db13ab-0465-40b4-9bd3-c0c888d31644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b116ee-2ffc-43b2-803d-dd8166f7339e",
        "cursor": {
          "ref": "8d77cef5-10f4-4888-8bbe-cc4aec9bee1c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c945a2e1-6b24-4279-a7ce-6ffa5dd5d8f4"
        },
        "item": {
          "id": "51b116ee-2ffc-43b2-803d-dd8166f7339e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5037ff26-6a60-40ec-a408-6cc08a96c105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba297c0a-b284-495b-8fc0-bd4165baf0a4",
        "cursor": {
          "ref": "a1b0adc2-0a89-46da-b079-df14e1aee223",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "30ddde10-de67-4620-b019-6c87f4ad2f4f"
        },
        "item": {
          "id": "ba297c0a-b284-495b-8fc0-bd4165baf0a4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "55cb4e4b-60f6-4d9a-b6e3-29ac47d0ea81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92997aa5-d0ad-4180-9404-ac77f2f1dea9",
        "cursor": {
          "ref": "872a6c0c-89d2-485e-8d4b-9b68d8711e6c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "373b4212-aa3e-4af2-89ac-46f0e721a11a"
        },
        "item": {
          "id": "92997aa5-d0ad-4180-9404-ac77f2f1dea9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eb2f027b-ac8d-41c8-9c83-5d686ed1d3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaadbae4-4461-499d-9da2-1d3d52d0ceac",
        "cursor": {
          "ref": "d48a1517-2a95-42e1-a27e-af912d8133c3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "755930c5-ed84-45bd-93a4-a6cc2f08244d"
        },
        "item": {
          "id": "aaadbae4-4461-499d-9da2-1d3d52d0ceac",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "41bd4aff-cf41-4686-8150-01df7b33acaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84f09df-1c7e-42df-ae98-fc53098164b1",
        "cursor": {
          "ref": "0e570d97-139b-4c5a-9b3b-62b0254c7e6a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c6f32bd6-391d-4ee0-ae73-38d0ed3c59df"
        },
        "item": {
          "id": "c84f09df-1c7e-42df-ae98-fc53098164b1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "46907a30-2d0b-4e9e-8ec6-6b6419e2adf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732fa852-c9f5-4b4a-91d2-4d2c9b37e0c7",
        "cursor": {
          "ref": "3f428e8e-d5fd-4a0a-a18a-877c838d7cf7",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bde70dd7-c0f3-4795-b7fc-897eade84062"
        },
        "item": {
          "id": "732fa852-c9f5-4b4a-91d2-4d2c9b37e0c7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e19a428a-c1d1-4849-a9e5-f430a2c44697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f7bae5-44ad-4e7c-bef8-0aa954ea742e",
        "cursor": {
          "ref": "c45ba81c-3f80-49b8-8aeb-9ef8a5ce61c5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "89e45aac-1817-411c-9604-4ce6f7a4919f"
        },
        "item": {
          "id": "89f7bae5-44ad-4e7c-bef8-0aa954ea742e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1e6df7e4-e541-4007-91b3-b99fb03f67c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6155175a-6828-4aa9-80f9-b09e7f94f42c",
        "cursor": {
          "ref": "157fd63a-0d69-4ca3-b920-df9b1a1b756f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "adeb7ef8-73c3-415c-819e-99f834b69d4d"
        },
        "item": {
          "id": "6155175a-6828-4aa9-80f9-b09e7f94f42c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7d77ef23-92dd-4bbc-b8d1-ec813918688b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6eeed12-f652-4dae-9ffb-32b4efffeba9",
        "cursor": {
          "ref": "468e3ddc-f286-4db1-8909-8ed083e2afe1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "86dd2194-1a1d-4208-a5db-db32465f0908"
        },
        "item": {
          "id": "f6eeed12-f652-4dae-9ffb-32b4efffeba9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "17bf6ee9-5f86-44d6-a57f-e3a49cca3ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0beecf-6643-4773-b5ab-b512df15992b",
        "cursor": {
          "ref": "97101e8f-1f04-444f-95fb-50f12bc32855",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c933e269-5fee-4ab0-9c83-bd789ee96133"
        },
        "item": {
          "id": "9b0beecf-6643-4773-b5ab-b512df15992b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6f8ba7b9-81b0-41cd-b8ea-8fdfdd9b7504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1917ba90-8487-4e86-a3c5-075e466a3298",
        "cursor": {
          "ref": "2ccedfb0-0fa6-4b17-a6aa-0358c88d4709",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e4c6d828-9054-42cc-a7ce-e95725915133"
        },
        "item": {
          "id": "1917ba90-8487-4e86-a3c5-075e466a3298",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "870adba6-84ed-4fb9-99d3-d707d655fcb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27562b77-4296-4c92-954a-804abf11e797",
        "cursor": {
          "ref": "17e7fb8e-919f-4894-870c-9647e9e7ff5c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0dd8a309-568e-4ceb-ad63-76457de26839"
        },
        "item": {
          "id": "27562b77-4296-4c92-954a-804abf11e797",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e0ab53f1-01e8-4e8a-afdb-f61c3592e289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd04eee6-f6cc-48ff-aad8-781c539ce2cd",
        "cursor": {
          "ref": "eba9713f-6b98-49d6-ad40-6aed33992809",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a11b9c7e-dbd1-4b59-b42e-e6e8313f5041"
        },
        "item": {
          "id": "dd04eee6-f6cc-48ff-aad8-781c539ce2cd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9aeb5314-4784-448b-b3b4-58d8a951e4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2715336b-8f62-41cf-af5e-b02075c1451b",
        "cursor": {
          "ref": "cf39368a-9616-419e-899e-46001c91e966",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0b40c178-6aae-43d4-bef1-7caf5ac89fbe"
        },
        "item": {
          "id": "2715336b-8f62-41cf-af5e-b02075c1451b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fed0e8f0-0d5b-4131-8a29-1746b6ad5d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f426e842-de82-420f-a2bd-fdb16bbb0828",
        "cursor": {
          "ref": "4382ab90-9a0d-41b4-87ed-fd9a069ac86a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d4e481c7-c922-4288-a5b0-d64ede09585b"
        },
        "item": {
          "id": "f426e842-de82-420f-a2bd-fdb16bbb0828",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1354a11a-4086-4de4-a3e4-93a33f2251f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32745dd-dd2a-4176-a154-ee79d0883413",
        "cursor": {
          "ref": "774032a5-8cf0-4a55-9e53-caad89df0418",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ed2f1697-dcc4-4583-8377-ac4c97ad7063"
        },
        "item": {
          "id": "e32745dd-dd2a-4176-a154-ee79d0883413",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e86da05b-0cd0-4ad8-9e8b-3ffa5aeb63d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f19b0b3-fe71-4df7-9761-3c760b5f0636",
        "cursor": {
          "ref": "7e1cdb3d-bf02-49fe-af20-b851113e436a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f259ae2e-a61e-434f-bf86-f4f1fe931c37"
        },
        "item": {
          "id": "1f19b0b3-fe71-4df7-9761-3c760b5f0636",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ce39f2c3-80a4-4ce1-abcc-c052c9bef84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66940cf8-f957-42df-84bb-5568dfddff77",
        "cursor": {
          "ref": "e9fccb99-7137-4d97-bcbf-6d5e49086319",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "44431a43-0181-4b8b-9e5e-37a2ee81e3c5"
        },
        "item": {
          "id": "66940cf8-f957-42df-84bb-5568dfddff77",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "afdc4133-9a3f-4ef3-8f05-3b456dc06ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fde0699-c89a-41c4-bce5-03e79e52bfd4",
        "cursor": {
          "ref": "d023db3d-3c7a-4a85-8082-a9b49b2e8584",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f9061c89-7a0d-4091-9345-4f0483ff1ad8"
        },
        "item": {
          "id": "0fde0699-c89a-41c4-bce5-03e79e52bfd4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "49c623c5-0f34-4dbe-b6ef-28c644e8cbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4bfd02-cda3-4e96-b3e2-c870f8933a38",
        "cursor": {
          "ref": "97d3df61-8ace-4595-9a92-cccf02b9d4d7",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "99060ba8-b8a1-4855-8aa7-32ee24289f56"
        },
        "item": {
          "id": "7e4bfd02-cda3-4e96-b3e2-c870f8933a38",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2ce4aef9-b9eb-4751-a4df-cb66578cc58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e154986-9e9b-4b2e-955b-1e31b7e4fe80",
        "cursor": {
          "ref": "c07add29-fe8b-4033-b16a-197af79a3e01",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fa437ae7-5da6-4c80-a113-6533fe29de40"
        },
        "item": {
          "id": "4e154986-9e9b-4b2e-955b-1e31b7e4fe80",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fc7b0235-b05f-4723-921c-0a9420c684dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9309e6-503e-4848-bfec-ec5ae6c0a317",
        "cursor": {
          "ref": "0a9dede1-d0fa-491b-b171-753625550f8a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "44a3ffc3-2842-43e0-9583-ba743a1e102b"
        },
        "item": {
          "id": "ea9309e6-503e-4848-bfec-ec5ae6c0a317",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4bf14e36-c7f0-43ea-8bfb-dcca86808c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0e0934-0a21-4ffc-892e-c43cecee5049",
        "cursor": {
          "ref": "04ce2527-ac18-4283-8852-42186372fc5f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "396f4c61-764f-496e-8018-094ce0507eb6"
        },
        "item": {
          "id": "6b0e0934-0a21-4ffc-892e-c43cecee5049",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "38515c12-bbb8-4f85-a36b-3ded794100c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388f0331-d4e2-4f8d-9270-7c34738c6c54",
        "cursor": {
          "ref": "ee1cc6af-a3c7-484d-8ea8-65957a1f3452",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ccd7dbf4-07e3-4f16-a9ce-d043e7bb8146"
        },
        "item": {
          "id": "388f0331-d4e2-4f8d-9270-7c34738c6c54",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aeaabdd9-3a3d-48ba-8f11-ea377b7fbc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6189aec0-1729-43a0-aa82-0436280d65c3",
        "cursor": {
          "ref": "12ab88b2-cd99-468d-8e69-77e8d7c3325f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6e528f9d-6a03-4fcc-9d90-9044d3d5c96f"
        },
        "item": {
          "id": "6189aec0-1729-43a0-aa82-0436280d65c3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d2dc4835-086f-4c56-bea3-013122f73f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48576a4b-42f5-4648-b805-75c648ebf523",
        "cursor": {
          "ref": "976152a1-ed6d-4083-b26f-1028b1b91e82",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d4aa0924-1a6c-4f5c-9f29-2d6c29f9a205"
        },
        "item": {
          "id": "48576a4b-42f5-4648-b805-75c648ebf523",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3786aee8-90e4-4d38-91d1-0908758f3bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc45ecbb-4823-4d2f-9111-c20cd74d093d",
        "cursor": {
          "ref": "ab67b9d1-af84-47d7-9172-6a4e64f420b1",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8e4da3e9-14ce-4c59-b82b-f6dbb2c1882d"
        },
        "item": {
          "id": "bc45ecbb-4823-4d2f-9111-c20cd74d093d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "58632cac-d70c-4aa7-8f8b-71cdec031428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2f1773-b107-4322-91ce-891e640f7c06",
        "cursor": {
          "ref": "96f515d8-6679-4359-be45-78154c44b590",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1868606f-af98-4e01-a0ec-19c53ae003b3"
        },
        "item": {
          "id": "cf2f1773-b107-4322-91ce-891e640f7c06",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3810fe57-2e61-489c-8ffa-97cfc32dafea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaa146f-c0fa-457f-b33d-6162eb8276da",
        "cursor": {
          "ref": "755247e1-642c-4203-a0ac-4f608bd365f1",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7dab12d6-4bf1-4557-91e1-2b4b7e2b12af"
        },
        "item": {
          "id": "ecaa146f-c0fa-457f-b33d-6162eb8276da",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "508f867c-bd4d-43f7-ab1a-0f2157ae36d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c1fd5a-6fd9-49e3-b161-46e0187f77bf",
        "cursor": {
          "ref": "a9aae5b8-a490-470e-a10d-8b59f59685ba",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9407b75f-699f-489e-8468-460fde541d65"
        },
        "item": {
          "id": "13c1fd5a-6fd9-49e3-b161-46e0187f77bf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dfde3cc3-da14-4fea-a71c-b4de4c653871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f59b0b-7dd1-4cc2-9cc3-6d16f64c69aa",
        "cursor": {
          "ref": "14e3dbfb-5eb1-4f66-9f91-2318835ec08b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "274df3de-2721-4c1f-9484-d7ef74f6ece4"
        },
        "item": {
          "id": "d8f59b0b-7dd1-4cc2-9cc3-6d16f64c69aa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "53c2fca8-9d50-47b9-94c3-740928524b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898defc0-2cf2-4b3d-8a24-b33a5164e4e9",
        "cursor": {
          "ref": "d3286580-3ebd-46e4-a2a6-9a209736f647",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d1b31df5-a4b3-4fa2-9608-49dd3331d4b7"
        },
        "item": {
          "id": "898defc0-2cf2-4b3d-8a24-b33a5164e4e9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a39387c1-5343-472c-b8cd-345765299acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a195d8f4-1085-4f6f-a180-871e1592a393",
        "cursor": {
          "ref": "c7c15e07-7b28-409a-90f1-902129242b94",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "879da115-d0fa-4500-a886-aadf11174392"
        },
        "item": {
          "id": "a195d8f4-1085-4f6f-a180-871e1592a393",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4042fbd6-b124-4f06-925a-23db56bc62dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddff8077-26e2-461f-9de5-a5bb894bf019",
        "cursor": {
          "ref": "90268b81-44ba-4d3d-81fc-c7261e0195df",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "81d8809f-ab9c-4f19-aaaa-f66daaf88dca"
        },
        "item": {
          "id": "ddff8077-26e2-461f-9de5-a5bb894bf019",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c75901fb-1e96-495f-9645-c15a4890b369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3477030-8f13-4f25-9973-4b06b441c070",
        "cursor": {
          "ref": "53246e31-7af8-4970-acaf-970adea71ca6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9ac55eb5-f940-40b3-b0f0-039c59cd725e"
        },
        "item": {
          "id": "b3477030-8f13-4f25-9973-4b06b441c070",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "275d35a3-d8ad-4855-ac20-b1b374945756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d258b113-ba5e-4f2e-9bc7-b7e2f407f1f0",
        "cursor": {
          "ref": "3058cc62-08aa-4430-805a-67c5964c9541",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "95c098d9-0b12-4323-8832-62b11e443535"
        },
        "item": {
          "id": "d258b113-ba5e-4f2e-9bc7-b7e2f407f1f0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "286a7e7f-e92a-4426-a101-0d90bbb9fec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd06a9f6-a395-4757-a5ce-053b6aee1ede",
        "cursor": {
          "ref": "b0b5bb3b-46e7-4b25-b522-0d66a4753d2b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c4888925-dde2-42ef-b7eb-d8ef68289a66"
        },
        "item": {
          "id": "dd06a9f6-a395-4757-a5ce-053b6aee1ede",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "764abab8-0f98-4c11-80c9-62328d7650ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a22455-0228-404a-a517-b855ab26da2f",
        "cursor": {
          "ref": "932660bc-1cc3-46ad-b727-fb4d3616003e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "11efbb8d-6cef-4705-8393-752360200e1e"
        },
        "item": {
          "id": "c1a22455-0228-404a-a517-b855ab26da2f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6f597a3f-e834-4930-a31e-45469b8b1fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6774b884-be76-42b4-9b01-e08fd2b0c5e1",
        "cursor": {
          "ref": "62818cb8-2dac-45f5-87db-feea5e0ccccc",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "60794980-28db-430c-b585-6f5362f99fba"
        },
        "item": {
          "id": "6774b884-be76-42b4-9b01-e08fd2b0c5e1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "28741915-af56-4d89-9537-0b78fc05d6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a054bfeb-5187-44e7-b092-bd5b1848a247",
        "cursor": {
          "ref": "adfbef14-f338-4104-af6c-e88171f09465",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "07c377f2-d7ad-4a28-bdc2-e357f5abf656"
        },
        "item": {
          "id": "a054bfeb-5187-44e7-b092-bd5b1848a247",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "64154578-344e-49e7-84b9-e718b077fc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc649bd-9d1a-4d8c-af0c-164d979944c0",
        "cursor": {
          "ref": "56d93013-5a62-45fd-87ce-19ca908bd750",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ded2462b-cb15-403e-826b-316215d9bfa0"
        },
        "item": {
          "id": "8dc649bd-9d1a-4d8c-af0c-164d979944c0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c1ee7396-21f8-4879-9aca-7496bdd5db09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf70e0f1-641f-4d32-a6a4-85366dc983f9",
        "cursor": {
          "ref": "3b35b1de-fb0d-407c-9877-3650f5fb87ee",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "76f520c5-682c-4b6d-b412-cdd7de9f91f6"
        },
        "item": {
          "id": "bf70e0f1-641f-4d32-a6a4-85366dc983f9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9220321d-a9d6-428e-ab40-0afe84a0f4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f93241-ce8a-42ff-91f1-e345e53f9bcb",
        "cursor": {
          "ref": "0e54a0d0-d522-4c3e-9b2b-1a005184df07",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fa0f08ca-ccca-4219-a06f-3c32256c755e"
        },
        "item": {
          "id": "53f93241-ce8a-42ff-91f1-e345e53f9bcb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5a4b3561-6d06-4971-a480-80662ca45769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb927575-00e8-4b33-9807-612b3e54e842",
        "cursor": {
          "ref": "2b3e82eb-d521-43b0-958a-08e6b95cebe3",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "98125e9a-c588-4474-9ceb-ffc5cf742c2d"
        },
        "item": {
          "id": "cb927575-00e8-4b33-9807-612b3e54e842",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d0b4bad1-5491-4122-acb5-8b0cfbb2c1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dd1828-c2c7-4c28-81ba-d4c9024ffe3e",
        "cursor": {
          "ref": "5613ff5d-a461-4d5b-8844-8e25c885bf76",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "835f51ff-b948-40a6-ac76-7585379823f8"
        },
        "item": {
          "id": "59dd1828-c2c7-4c28-81ba-d4c9024ffe3e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fab74b4d-de87-4226-a5f9-15eaca89151d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ef0810-620f-4ba1-947f-9c1cc670e1f4",
        "cursor": {
          "ref": "320ead88-8ced-49ff-a69e-24dfc6389aec",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9a6623cc-54fb-4cec-ab11-a18ef6699460"
        },
        "item": {
          "id": "45ef0810-620f-4ba1-947f-9c1cc670e1f4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a61465a2-d162-4a97-bd97-8d0bff633758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e8b95f-91e9-4871-8382-d076e67a19e3",
        "cursor": {
          "ref": "f2da947a-05a3-4159-bda3-7ab94c4abbbf",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8cedcf3e-19df-4288-a832-64a377d9b982"
        },
        "item": {
          "id": "82e8b95f-91e9-4871-8382-d076e67a19e3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e6679645-f9b2-4b9f-b138-3e494a250bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb70a74-bff4-408b-bbc9-5b6268c3b30a",
        "cursor": {
          "ref": "ad1915fe-3d74-4775-a91f-73c3e51e30c3",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "99600633-0cb9-4c29-ac7d-4692442c0298"
        },
        "item": {
          "id": "bcb70a74-bff4-408b-bbc9-5b6268c3b30a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c2b46781-2cd8-4d5c-9224-7de140c5b0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bb1b3f-3708-442c-88d0-d8b7a98387b7",
        "cursor": {
          "ref": "ef8945e1-1646-4dff-b3bf-707db15af363",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c891ee48-9d60-46f9-b486-d500a8a84821"
        },
        "item": {
          "id": "38bb1b3f-3708-442c-88d0-d8b7a98387b7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d95aead3-ffeb-4ccc-b28a-16d33b02f2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b20ce6-1a1a-40da-b3de-9b1df288a3d0",
        "cursor": {
          "ref": "92de5ce5-e8d2-497c-b0d8-335a9af61ffe",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9b836e54-7c68-40d7-ada7-6463961e2821"
        },
        "item": {
          "id": "e8b20ce6-1a1a-40da-b3de-9b1df288a3d0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "563d8ca5-031f-41c5-9343-26900739b655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7136e3a3-17ea-4e48-b7fe-c54be90daa64",
        "cursor": {
          "ref": "eaf4f296-a006-4e72-9c91-09b6a67f18b0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0cef710d-b5b8-41a9-997d-6908f2104046"
        },
        "item": {
          "id": "7136e3a3-17ea-4e48-b7fe-c54be90daa64",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "89b105d9-2695-42f8-a946-e83c00c39274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb043ec-33b2-4440-8a9b-e40c80fa0090",
        "cursor": {
          "ref": "1638c526-58de-45a2-bd33-f352efd6d558",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "81bede80-e7be-4147-9ab8-1b61e5772602"
        },
        "item": {
          "id": "0eb043ec-33b2-4440-8a9b-e40c80fa0090",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "23192464-e668-48fd-8b01-ba91badfdfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8022bb34-3c9a-4f24-b534-43ae829c4c5c",
        "cursor": {
          "ref": "7caa2f43-09da-40ef-a167-9b87f154da98",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "19776a91-7687-441f-8e14-0b32ff1c7c09"
        },
        "item": {
          "id": "8022bb34-3c9a-4f24-b534-43ae829c4c5c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8c6fc3ff-99fd-4000-831a-635edb78ad62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c294c325-1929-4b6f-87de-7c7fe1a19c99",
        "cursor": {
          "ref": "96ae3638-26b5-4b92-ae88-78760e6ae72a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f471965f-cbb0-40cf-b8cd-3913d4237c69"
        },
        "item": {
          "id": "c294c325-1929-4b6f-87de-7c7fe1a19c99",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "33eb6507-3e13-404c-a179-6b4b4138edc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d790dd57-5b89-48de-a6fa-ea40003146c9",
        "cursor": {
          "ref": "0955a469-fc33-4d9f-9059-65bc5d0a1132",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3283256e-5bd0-4ecd-83e8-56d237dfd769"
        },
        "item": {
          "id": "d790dd57-5b89-48de-a6fa-ea40003146c9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d8f876d7-c8f6-4f6f-9a34-dcfe6ed685e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf695ed-840d-4c5e-9e80-7ec7cb1cc0b8",
        "cursor": {
          "ref": "74a5c198-f2d1-4de5-baf2-28eccd9cca92",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "01886158-b3bf-45a8-a1ed-79f2da7b6d14"
        },
        "item": {
          "id": "abf695ed-840d-4c5e-9e80-7ec7cb1cc0b8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "91e4fa77-1467-4372-af17-092e643755a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7192f278-891f-493f-adbb-b4efe166034c",
        "cursor": {
          "ref": "3d8a8426-8140-409c-8f5d-26bcd5769209",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eeaf8f19-2a0d-48cb-ad82-38e3a134bc81"
        },
        "item": {
          "id": "7192f278-891f-493f-adbb-b4efe166034c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "46798135-2b5d-4921-88cf-acd9b7bf760f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee1e6c4-3f4c-4cdc-97d4-d74e0185f072",
        "cursor": {
          "ref": "eba6edc9-e34c-4064-ae47-ca27209e61ea",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "02e359a3-71d6-4984-b325-b8cef1738d0b"
        },
        "item": {
          "id": "0ee1e6c4-3f4c-4cdc-97d4-d74e0185f072",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0c8c45c3-a0a1-448f-b337-a9d066063da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95e059d-6543-4f4a-bfd3-99d677917c40",
        "cursor": {
          "ref": "59c8b45e-4b00-440a-babc-f03396bb5ef2",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d641d8dd-b85d-4fbb-b3e1-80278069350d"
        },
        "item": {
          "id": "c95e059d-6543-4f4a-bfd3-99d677917c40",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bc83328f-db98-4e49-bc1e-e69fab62602c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685f7d85-96a5-4c97-bcda-3f006066cd88",
        "cursor": {
          "ref": "ab2816fe-cc4f-4c48-b0df-cc983658d7a6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "da153191-4efe-4c01-89ab-4d311fa05fd2"
        },
        "item": {
          "id": "685f7d85-96a5-4c97-bcda-3f006066cd88",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "00a47ab0-0c5c-49f4-ab4e-02634b96781b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e561872-0bc8-49e3-aaf9-10a9c14a61ed",
        "cursor": {
          "ref": "a2ba09f5-34b4-4a39-b6ca-5547cadf503c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c8679545-7590-4d2d-a219-d74578c52988"
        },
        "item": {
          "id": "8e561872-0bc8-49e3-aaf9-10a9c14a61ed",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1dd3e497-4a7f-43db-9ff0-bb7ebc7b95fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfd7df4-cd6a-4c9b-8b55-b572653bcf3e",
        "cursor": {
          "ref": "335929a4-ab9b-4add-b864-3d5b414b9936",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1d67af3c-f45f-46ed-840e-1049514b64ef"
        },
        "item": {
          "id": "7cfd7df4-cd6a-4c9b-8b55-b572653bcf3e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ca4829be-5154-48b4-ab39-07e8b3726cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6426afb1-8b09-4967-86a5-c3c107f16d4f",
        "cursor": {
          "ref": "19f6bd14-e1ce-4254-a4f2-27cbfbfb18ca",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2600fb86-e8fa-4af7-8e0b-13fa2f98a911"
        },
        "item": {
          "id": "6426afb1-8b09-4967-86a5-c3c107f16d4f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "709fbb8f-930f-467f-8f5c-3138f460ffa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656bbe30-cc82-4424-a01a-a05c03ce0bf4",
        "cursor": {
          "ref": "9e46becb-7acf-4593-a046-d9091265fce5",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f8767160-0c48-45d3-b880-adcc2bd78aee"
        },
        "item": {
          "id": "656bbe30-cc82-4424-a01a-a05c03ce0bf4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c8e846ac-ca75-4fc2-8a79-d42dee451bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2890fabe-25a5-4406-a820-40c3eadde266",
        "cursor": {
          "ref": "0fbe8c19-d6d5-4cdc-9194-8553489ff61a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7d766e05-6183-4e01-8208-adbab52eebe8"
        },
        "item": {
          "id": "2890fabe-25a5-4406-a820-40c3eadde266",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0865ed0c-a2c4-4c58-bc0a-6c89d59f0007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb41c6f-92da-447e-9d26-0a31e64d8df6",
        "cursor": {
          "ref": "5b7a3e12-8291-4b24-a7aa-db35f67f8a07",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "caf8fd37-aa57-4c30-996d-2f89d4037807"
        },
        "item": {
          "id": "0eb41c6f-92da-447e-9d26-0a31e64d8df6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "30403c31-175f-4e08-93d9-7dbf6169c235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1e088e-24f4-4df4-9330-bb0a697fc258",
        "cursor": {
          "ref": "3e490cad-68da-493d-ab64-190fc57891c3",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2b7dd89b-0fd8-45cf-9329-a9238f56c5f9"
        },
        "item": {
          "id": "ac1e088e-24f4-4df4-9330-bb0a697fc258",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bf8cf13f-c45f-44ec-9ce9-0b6e9e07c0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fd0d19-7ff8-4af3-8929-3def836b3ff7",
        "cursor": {
          "ref": "ad437765-6f1e-417f-b4a7-9df37fd77114",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "78e35031-263b-46f6-9919-8b0556ec68e5"
        },
        "item": {
          "id": "87fd0d19-7ff8-4af3-8929-3def836b3ff7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6466185f-5c78-4e6b-a5f7-821681bb6943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce69b14-4188-4793-b91c-e105725af9cc",
        "cursor": {
          "ref": "427e396f-140a-4f0e-91ba-50f7e0395c5e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f6039d3b-605b-4fa6-a154-aee886dee25b"
        },
        "item": {
          "id": "0ce69b14-4188-4793-b91c-e105725af9cc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c64e3ae1-8194-4351-9824-62f412abb166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2f2ca1-ccef-44b8-923a-4e99c250c345",
        "cursor": {
          "ref": "d39ad632-8d36-4001-8f2c-447696abc572",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2b14ef22-7231-465f-9415-718e0398e0d4"
        },
        "item": {
          "id": "6d2f2ca1-ccef-44b8-923a-4e99c250c345",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "de04f2c3-7407-494a-963e-71dbd6ae05ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1aa7b05-0f12-4610-a44a-14f476aca022",
        "cursor": {
          "ref": "3e0a3327-8c71-4a14-947a-2fd3d8d3e984",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cd8a85a3-d866-4662-a434-15dcfb470500"
        },
        "item": {
          "id": "a1aa7b05-0f12-4610-a44a-14f476aca022",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "82f2b7f0-cac2-41c2-b732-80be39f21645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32d9318-e7f1-45d0-8bf9-d8c9965eab33",
        "cursor": {
          "ref": "27e17a33-a7ce-4b0d-b2da-467ab8ee1bf6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "552b80d4-8f18-4401-aa48-7650572c7220"
        },
        "item": {
          "id": "e32d9318-e7f1-45d0-8bf9-d8c9965eab33",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3ccf27f8-2f8d-486f-9f84-a325a40e5f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839957e9-cb96-4ab6-81e5-853ab294fe63",
        "cursor": {
          "ref": "a06a1b34-7682-4507-aebf-8ef5416b1d24",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "28b06eee-677b-4fe5-a53b-60744b82de17"
        },
        "item": {
          "id": "839957e9-cb96-4ab6-81e5-853ab294fe63",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d06a0311-dc2f-4220-9259-6395e0ebd721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cca347-fc5c-47f0-9a88-351d1e3ccd59",
        "cursor": {
          "ref": "b6ffd327-b907-4b47-bfd8-c7dce40231b2",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6d69a733-9228-44a8-8895-4bb345bbe929"
        },
        "item": {
          "id": "07cca347-fc5c-47f0-9a88-351d1e3ccd59",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a5a27ace-2c93-4813-8c51-8bca8de0f73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c5a823-ac21-46f7-9505-c55f7d154c1c",
        "cursor": {
          "ref": "b96e6144-e314-4126-9293-d73ac236b845",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8007b6da-d6da-48ba-a809-7093bba08570"
        },
        "item": {
          "id": "01c5a823-ac21-46f7-9505-c55f7d154c1c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "79b5e726-a897-4d90-a09f-37d2d164e953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5743b311-2ee8-4d14-a116-c187f776fa10",
        "cursor": {
          "ref": "19d1ac6a-020b-4cfc-9c59-a64d5bbb5f78",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4a8d54df-57de-4e6f-89b4-120934f1a5c0"
        },
        "item": {
          "id": "5743b311-2ee8-4d14-a116-c187f776fa10",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b90e3090-9414-4f3f-9d79-02c2a735c18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566ea6d6-4484-431f-bf85-8cf569cc5f4b",
        "cursor": {
          "ref": "0149686b-e422-45b4-beb0-322464146ff0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bc022297-e28c-4f48-8775-37688b81b7c0"
        },
        "item": {
          "id": "566ea6d6-4484-431f-bf85-8cf569cc5f4b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6450212d-0c0f-4d98-a306-dbe3fed9292a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad538eaa-db8f-4c6f-8588-3a2947130435",
        "cursor": {
          "ref": "8f55c6a9-109e-432e-a463-5dc85ad31048",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a9bc9283-8bfd-4d94-8e5c-1ac2deb48fda"
        },
        "item": {
          "id": "ad538eaa-db8f-4c6f-8588-3a2947130435",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d0d5e031-534a-415a-bf56-72b4ce57f41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3623cc6c-bebb-4aff-abbe-36b3ff19e0f6",
        "cursor": {
          "ref": "30c388d0-01e4-428a-84c1-69d38211681d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c6b5fee0-02f2-47d7-8a50-fd9104b23ec1"
        },
        "item": {
          "id": "3623cc6c-bebb-4aff-abbe-36b3ff19e0f6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5c5461f4-e797-4a08-8094-0cb873c8e780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd1ef92-48aa-4b49-b78f-23243f0f82ad",
        "cursor": {
          "ref": "7a4c5e38-7d15-484b-92a7-4a49e0006c09",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "248d5c39-9063-4391-a7e1-72375221cae9"
        },
        "item": {
          "id": "1bd1ef92-48aa-4b49-b78f-23243f0f82ad",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "40411530-a1e3-404e-9b18-1902014df6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddad2abf-825a-42ca-8079-d99ba99cf4bd",
        "cursor": {
          "ref": "10fc7399-32a9-4613-a28c-3d1a833aba66",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7c958099-8ff4-4b3c-b44b-14f3268845ba"
        },
        "item": {
          "id": "ddad2abf-825a-42ca-8079-d99ba99cf4bd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0a1454f1-5178-41a7-8fa8-fa231089f947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581bde3c-d59d-45b5-997b-5d42f3ba2e5e",
        "cursor": {
          "ref": "fca9864e-b7c0-42b8-822e-84d2e4bb111e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b534d6b0-40a8-49c3-bcf7-1f9c24a5221b"
        },
        "item": {
          "id": "581bde3c-d59d-45b5-997b-5d42f3ba2e5e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e7cfd1b8-2936-4384-8569-283433898c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c724677c-b0ad-469e-8bbb-154b22b122eb",
        "cursor": {
          "ref": "34c419da-eced-405e-95f2-5bef0c766b13",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3f4fb2c8-83d1-4849-82f9-48d6a0a913ba"
        },
        "item": {
          "id": "c724677c-b0ad-469e-8bbb-154b22b122eb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "20b39aab-20fe-4d9f-a8b9-1de56ac6d904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea9bfc8-5315-47a3-a0f8-434028b9e811",
        "cursor": {
          "ref": "9fca20b5-377f-499f-9a1b-1a77eee85c96",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "da3c45a3-1a8f-4856-b716-352aa9f81335"
        },
        "item": {
          "id": "4ea9bfc8-5315-47a3-a0f8-434028b9e811",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "aefb5a32-68c5-473d-a7e3-31e362ec9d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf670aa-d8e7-40e1-82ca-4d9d5d701302",
        "cursor": {
          "ref": "a29b9c43-05ac-4272-8943-db01d0c47dab",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d1dcda38-313c-4f60-a55a-1ff42c37e523"
        },
        "item": {
          "id": "bbf670aa-d8e7-40e1-82ca-4d9d5d701302",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6c12de38-d8f4-41ec-ac7a-527baf646ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0392ba6-4e9b-454c-b0eb-2e4b343db0e0",
        "cursor": {
          "ref": "4e67e1f3-ae05-42f4-a9e3-13ed4acc1695",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e59219b3-fa6b-416e-b6ad-7af4caa1bca1"
        },
        "item": {
          "id": "e0392ba6-4e9b-454c-b0eb-2e4b343db0e0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "55272bc2-ecc6-425d-a5e4-2a260281385b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f824ae65-bd16-4e02-bc08-69ba914976d9",
        "cursor": {
          "ref": "df6badb2-0ad0-4ce3-933f-e0cd5094df6d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "092596d1-e5a7-444e-be80-b26edd1e599d"
        },
        "item": {
          "id": "f824ae65-bd16-4e02-bc08-69ba914976d9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "81a3de1f-2f0f-4ea5-a7d3-ae7e00a35bb3",
          "status": "OK",
          "code": 200,
          "responseTime": 2227,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c74df1-692c-4c8c-babc-29ba7f775fc8",
        "cursor": {
          "ref": "ba877ef8-c84e-4c02-a927-b0accb3a12a7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "22857a27-641b-4c3b-8301-d52911eda993"
        },
        "item": {
          "id": "57c74df1-692c-4c8c-babc-29ba7f775fc8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "22a18d19-03e6-43d6-8225-c78ae402c2c7",
          "status": "OK",
          "code": 200,
          "responseTime": 3342,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e356834-2f81-469a-83b8-29d10af88bbc",
        "cursor": {
          "ref": "6d20214b-6695-4ee8-b5c3-046b80aab121",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "77d25983-eca0-4c0b-98dd-28edebeb8ffa"
        },
        "item": {
          "id": "8e356834-2f81-469a-83b8-29d10af88bbc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ba48101f-4316-4130-8cd1-fa85839ec7c3",
          "status": "OK",
          "code": 200,
          "responseTime": 3070,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ce2972-2ca4-491f-9fe7-696fcc123367",
        "cursor": {
          "ref": "aef99169-8c4b-4788-a5ed-b70f462bad92",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "64701320-c9fc-4bf1-a8c1-26bcd3673fc1"
        },
        "item": {
          "id": "12ce2972-2ca4-491f-9fe7-696fcc123367",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "547c9d49-e138-47bc-812e-b63d7f232716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ce2972-2ca4-491f-9fe7-696fcc123367",
        "cursor": {
          "ref": "aef99169-8c4b-4788-a5ed-b70f462bad92",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "64701320-c9fc-4bf1-a8c1-26bcd3673fc1"
        },
        "item": {
          "id": "12ce2972-2ca4-491f-9fe7-696fcc123367",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "547c9d49-e138-47bc-812e-b63d7f232716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d3eb30-33d8-42f6-bb91-1f1669bfa9be",
        "cursor": {
          "ref": "4cb50da3-1934-4dc2-8e48-e2129ead7658",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "80acd16e-6f4c-4264-bb56-cec4b79a533c"
        },
        "item": {
          "id": "03d3eb30-33d8-42f6-bb91-1f1669bfa9be",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5ba17d31-ea29-479d-9176-538b88adc1d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb16ba6-837e-4e11-bbea-9c9cc360c69f",
        "cursor": {
          "ref": "cf79793d-8627-4862-bfca-1d9876adcb14",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "11d502f7-e912-480d-9ab7-7322ec4cc083"
        },
        "item": {
          "id": "4fb16ba6-837e-4e11-bbea-9c9cc360c69f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "86c88df9-3d38-4e33-91e9-c4e925e55e6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}