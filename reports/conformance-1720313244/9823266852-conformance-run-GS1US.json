{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "567b7ce8-9468-4d90-b29c-d03767239657",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b3f3f489-df83-4107-a991-17edda505eb4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c5af5419-15a9-49c0-9e7f-cdcf30dee4a4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d03bab9e-2cd3-4d1a-bb78-581332721ecd"
                }
              }
            ]
          },
          {
            "id": "17f81ba1-68e8-4d1a-b5f8-cd6125cd10d4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f21502ac-bb07-47ab-af22-7160212a89e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "887907cf-ca53-4836-bf4a-ae17bf5493a9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f2eb7b6c-9720-4a6b-92b4-93cf6fba1527",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3a743fd5-8a7a-4760-a311-db54e86b1807",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d9cf8bf-7d63-4d8f-989d-110a23657f6d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "768ec185-5902-4b2b-a50c-1d7b461ee4ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cde664d-7f67-47c8-98b7-111ab74019cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21735de5-55d5-489e-8e39-8bbd44902cdb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4e4c2ea-4007-452b-a4e0-bbd1fcb5fd95"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02176c41-2c84-400b-8ac3-64736811c243",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7565afb2-f42c-4081-9d01-a44fa5951ea8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3612729-51dc-4d84-ac3d-0e3841920274",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "85a0ac99-ff0e-495a-b11c-e14b7df160b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fff5db00-fa40-460c-86fb-fbbef5b23085",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a59d992d-2a62-487a-8194-8a591d44e686"
            }
          }
        ]
      },
      {
        "id": "6f9106b4-317f-49a5-ab17-844e59b5d08a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1f86e430-39a4-4cb4-8568-ebc34339edc6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbf368b0-71f2-48bb-811c-f9f59ffdff28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce94371f-c83b-47cc-b408-05f5f3d3d840",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c83093-42dd-46f1-9174-3554330e8cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dce49c53-e228-436b-8e57-2907c0b2d0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba2ecaf-c638-44d1-82a2-ddb70b977756",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffa1a26-6848-45b9-990c-96ccc1d38551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68579df6-eb86-48ae-884c-d4a93a944cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167c13ac-2a68-4f81-9b25-be8461fba34d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02c2742-ed96-4ce8-8099-808651c8a359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c34a31a-14d0-4440-a368-7eff1d56b0bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6acd1da-8ade-4394-ab12-16b83a1e1e09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a93bb8f0-6dc6-4e50-ba72-1e9066c651f9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46aac9f0-8fa4-49e0-a955-17b75c6c3598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c629c1ec-60b5-4158-9f60-0a3406805c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96654f43-312e-459c-bc9b-42254e56b085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8a413f-d7a1-4149-b2ec-5832f66aaac3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3797d8b6-bc1a-430d-96ef-d2a5b15d78c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b39fe3f-828f-4883-9a72-689cbe495da5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab13df37-e120-4711-b2e4-45d14e9c6a3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c8a31594-0e97-44cf-9b45-113223ef83a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd2a93b0-99d6-404d-8a40-f0104d77a3c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "273a9903-5290-4678-b241-b326de2e54c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "773df2e5-bf9f-43f3-b6bc-2597588149b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d84219c3-a902-437a-b990-adde7345fbfa"
            }
          }
        ]
      },
      {
        "id": "f9501f5f-8aad-4d0f-9adc-8e996285df77",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d4e69119-11ff-4e84-8372-cf4d43b849e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e685cdf8-3545-421c-9538-95b8e8d2e1a0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d693640f-2dad-4496-a019-79877db756a8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f310e859-8c66-43c3-8efd-168a151cdfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcb2325-03d1-4fe3-959e-b1297d19db00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93804f6d-5c0f-4253-9de3-eb6f805f66bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "366bb20f-6c82-4f3c-8ff8-cc174d074824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1579ace2-4cd7-4b80-94c0-d0063bfe2f71",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab3aa6a-92bb-4869-bc6d-95cff2ac57e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f27088-97ac-469f-91c2-16f03b3bf9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fac897-0ef9-4dec-af11-82765299f58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf0b749a-47ac-45b1-bf4d-6aa20aa2cbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2546ccf1-2346-4ebd-85da-549572fea9b2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17139aaf-6669-4489-a4b7-c21ced9737cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0aef834-1920-4c12-812c-7d3c6e4c1583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01d0601-0916-4d47-9b6c-745e6eecef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1589901a-4e42-4901-9b22-5f4c733e7d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c62cfe4-eb61-405e-9b17-e26af2beaf17",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5a4508-c5b7-4281-a9fd-0100d6339ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063c6a67-47a0-41b7-aca7-7bb5ac6c8151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5c8b75-5f95-4629-95bf-4deda377b842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbbbabfa-0ef3-40c0-8ae8-b011c980c10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5cf7e4-2ecf-42bb-ab8c-0f67f17898e2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7973dd94-4dd8-44d8-8067-32d04bd69810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfd82b5-6748-48d1-942b-c541a292c159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e502951-94d4-4a82-8831-ade7a5fc7e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29a91cf7-cbb6-40ae-b71b-7791c56ff632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3bff17-236d-4ad2-8e79-858443c19885",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1a0bd6-4104-4596-ac70-ca3f388437b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069232c3-4e00-4e09-a502-1b9ae1eb30aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c44a68-f1d2-42cd-bed0-b1565a456490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "305d3161-7d72-4c07-bc9a-a12b53d68ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bbb28a-dfe8-40a8-91be-51c3a174a2fe",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3605938f-80d6-4bf2-80eb-7fe0a7e7569b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d8ed5c-a2b8-4ee2-85b4-d3a336de86f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378d13e7-0bf3-4f99-9f3d-729be65d0fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6832c8f6-6338-4196-a956-723e5f6decc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83584e9c-40d7-499e-98c1-5c8027795c18",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6e00d3-35bb-4f4b-98c5-898365ee24a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f7f85c-0988-4ec1-ac3c-f1aefd0df947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e1a7f5-c2e2-4de9-8a9a-ed03a2a469cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7367289-2f60-4b47-b8f3-6e086d5c4a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60627e22-99e3-41e1-a685-b36904a0e0e4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730857d8-4ffb-49b1-b00f-305fa17ac307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaa09fa-aa0b-414e-87fa-0a6cb747e661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd736892-91c2-4afa-a156-97030f7bdb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95199e77-3bd5-45c3-909a-8444dcd8271e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3696f5-0d1f-45ca-a50b-70fa4cf36fc5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a36ca2-4732-4de1-9d15-e63f4a6259fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee7f58d-5789-46cd-821f-593c7dae26c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d427ff3-e075-4b63-ada1-c7009b06a972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35ee5358-91c0-422c-9c9a-65807dd904fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20cd08e-902c-455d-904f-13e90b063f5e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2570d82-9d8a-43f1-a3cc-43d952aedf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f587a8c2-c3d7-4ae7-83a6-08d2e5f0dc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538e002f-b803-4894-9308-6e363f1375d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5250536b-a1c1-4b87-8e80-1d26d87645d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01f9f25-3f50-40c2-8e98-2ea27426fb5b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0108dd-da91-4532-afc6-e4279ffcb861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0e30c1-42e2-447b-8730-4de038660276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d88157-dfcb-471d-961c-d1f6968e54a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5401cc11-87ac-4188-8580-d2dd82456023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc1dd73-d39c-46a1-9f39-e353d01aeb27",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a2c593-2499-4f7e-8127-ca59871d3319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ed8799-1963-4b2f-95fe-44bc44c57643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d199f781-c00a-4652-950a-bc076c7a389c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42a3b356-6e1d-4689-89b9-4a6cd12e8f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff844dcc-7e25-4232-b2aa-f8308d88da90",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1634d2e-843f-4f74-b461-15e0bc5e95f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b417ae37-21a3-4817-a8fb-0234784afaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19001f8a-4f4b-4f92-ae0b-fa39c1480525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e939b3a-fcbf-4118-8fdc-02b510ad0453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fbdd1d-4bf9-4369-80bf-f0762e3dfaad",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdebc4b3-9251-4adc-8f26-552235bd6114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdf6618-b7d1-4b13-891b-080ca86beac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff47981-6951-456e-8878-87da3b3bffe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88efc0aa-d49a-455b-8912-89329f7d12bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1471c182-fc1d-45c1-b990-7c17f222b436",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3d2b21-09eb-4464-8ef0-4835faabf8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f2d436-b310-4814-bfcc-46cd159ff464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035a1ecd-9f17-42ac-ba99-33c73249705d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d59005f0-d057-4e6e-8349-037566834a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033c28e8-87f6-42c0-8801-0d2a6887ca08",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab85ef2a-4d87-44a0-a61b-dc2113e695d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79efa88d-307a-40f7-b112-739515010577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb1c329-7c09-41fb-981b-c0997a95b9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86ac4a74-4e6c-429e-a7ad-89bc3913a411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c27cb2-0a4b-4f04-966d-c71e8a7afd84",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d151bda8-5f94-464f-93c6-f2d9b4ecb191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1989cb02-aeb2-4e75-a560-e8d16a6b2b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e34372-0fa4-4065-8708-525ef7232561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "09531f93-05a4-4e18-8a8c-699d522081cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccebf7f0-6b46-4326-a47d-3d4671cdf0f5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1aa63d-b0a3-410e-8549-0a957e50f882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02ba20a-cb56-45a1-b960-03c73a0a1df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775e4fae-e3d0-4a0c-9a5b-764c4bd0dfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccc1bbe-d462-4d78-9970-108e5a62c2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76972c39-45aa-4fa9-89f5-df31e9d455b7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d9b190-ea88-41a9-bcce-79a0c0bfc0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc3b78e-8c01-453d-aaff-a5d9cd912037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ebcefe-6b55-48ca-92df-d6efd808f09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "733b56ae-651f-47a7-81ec-7c80743614be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ac912b-ddff-41b3-8945-aeab48ff9c73",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd06d00-fb0f-49a1-b9f9-2dc89eb81e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7fc579-b2eb-4e09-bf9e-12320d8534f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a75b0e6-a814-40f6-9ea2-a73ecd6ead3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0756139-efc8-4670-9044-7f1e3017156f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9918848-cf4d-4cd9-8d92-73ca6578baf6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ce18d4-c267-4c8f-bb72-175fbca82f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2019cba6-18e5-4454-a3e5-123af478c6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e310cd01-321a-42fa-8fb9-ba379c088c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efa6d0f7-55ae-493b-afe5-5a272ad824b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b99cc7-8794-4cfb-a045-954b51fb0df4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5f3be8-c0a8-4d34-8bce-6b9987523e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75d0766-1b2e-470d-b92d-24030cc404a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b35898-53d4-4c4d-929f-f8ef4c2209e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b090b7-1126-47aa-b407-0bcce46def52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd51858-a8ed-4189-9328-1d041be21904",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252656f3-f9ce-4e53-822e-a4b0e40f58ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd4aaac-7029-41b4-be28-1fd6d8ff71ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf33c58-72e4-48e8-9c33-6a72949acc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "70fc3705-f515-4f10-8c8c-09bdf1069f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df89668-a640-499e-870e-0df09c82d615",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48478c3d-ea39-4ea0-9321-dfc3821e2db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42adffd-5b9e-45c3-98d6-3b0bc5933972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ce5c59-7d2f-431a-942d-8b7b394d2960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21f02683-ad75-4d7e-a01b-eaa23b8f9cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe9a582-d48e-41f2-8583-c315651c0b03",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f73f5ee-89a2-48f6-9cbe-7c0dd2a239ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadcb0fe-5d3b-44c8-b005-143784f9a4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee3ff1e-aada-4d6f-82c6-0c4105ab2367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38aee7b1-f378-41fa-a071-248bb4e91de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409c47a9-f1de-4fc5-8037-6908a21da71b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b1ecb8-88a7-47e9-ae2f-903c7bf3d284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe78f9d-375c-49d4-91c0-7590fc03e4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2087b21d-8607-46bc-af32-5ea4fbf6ff83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a190df78-a1cf-4e75-9bde-986cccfd7891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b73feac-078a-475a-b32f-721763071312",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4679513f-b56f-48eb-b5fc-f5a3b02d6a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3669aec5-bb32-41c2-b947-8381920cbe0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c4314b-e911-415f-8b87-af641b5fd4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9c4bea-57fb-4a8e-a653-668f83897370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b361ea0-7cfd-4fd0-a474-03527cd62ff8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe43ed72-9531-4460-919f-449d2de5f663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741ee477-52be-413d-ac59-4cdfed04c050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530760e0-1a5d-442d-b657-2c17937e0692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9403cdd-f9c7-4bf6-89d9-c46563699f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f5c615-cd2b-4b8a-8d82-ccef76fd2c9a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ad6b91-c1c4-4829-b380-34cab9af1fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876c108c-d17f-4514-8f52-aff483629a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c94b948-72ce-43d9-b41b-d6a7e0d1fc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f437a59-2914-49f2-afeb-007e8d3f79ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76f3328-a035-4cc0-9b94-c1656da41f43",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dece33-6b29-41fe-82eb-a8cb0e3c9cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187e9f04-c04c-4da5-84ea-492d923c8d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f5fddf-e60d-4c94-b3a0-a5094b5dda06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "042d0e5f-17c4-48fc-bc38-c1249f1ae9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a47e441-9f1f-4996-97e2-296e33d93cb9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a7ad3f-6767-4363-87eb-a4dc1abb634b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36940994-ddd1-494d-a9b6-21b80cdb308b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d37b6a-d133-4844-88a3-3f2401a00905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36a0d6f1-54bc-468d-ac3d-465987d33df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebdbe6a-388c-44d5-911f-8cfada6326d7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb60869c-cafe-4f14-a490-89a9705d9e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f70b5cb-0e48-40ac-a3f7-cba3580043b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2aef105-e39a-4d2e-91d5-22c1b597aea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93bc69b1-3285-4430-a3a5-5f9eb168cfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b53f0aa-4b89-4c3a-ac5e-34e18c1c8492",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedf36e8-4eb5-477d-a1dd-6a11a997580d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44818164-1805-4097-aedb-2263f3e2f123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d0ab59-92f9-42d4-8616-7a723a385550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5133893f-03fd-45d3-a88a-ecec98522094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef230ed-9f1b-4fb8-8d30-cd4679a5162b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d059865e-3c72-46a7-a2a9-b5011da8d9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae0dd55-465d-47c9-bd06-5c817014e1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4272a59-42e0-4fa2-9b6b-12935442c93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "55a9cc5c-31f7-46c0-a655-c0efd77e8ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d76545-45ba-489c-9fa6-067f9b5772aa",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8e9f85-0ea9-439f-aaeb-50611d9a150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "532fb9b0-3814-499c-9e9c-3040d6475197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f1d07d-d8e9-4c4b-933d-b3b7f51e0607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0ae183-16e8-4294-84f7-3011eb87c1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127fcb9d-c8e8-4380-8d61-a3ff6f5ef455",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b20e84f-8160-4d73-9d11-97751f8c4554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5018806-9d9b-4740-ae10-3c9f1a421300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad51bfe-5ef1-404e-892d-6575c03e7a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09207255-26bd-43ed-a73a-2cdea1f81120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2813d8-1a75-4c0e-9b74-9e8cc5705bc0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed28ab4b-e28f-4e6a-8ead-7691616ea715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b256dd2-6cfa-439b-a0be-803cae11230e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a67354-9525-4048-845d-145d56883d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "71410b74-13bc-47c5-964c-f7dc3ad2aa6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609648ac-887d-49e4-adba-297d9f5f0e50",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffa0fb2-c7a4-4d3a-8e23-c7fca5f65ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e33b50e-c210-4801-ae9b-7bf1e47442ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6c7409-72d6-4215-8284-08495acf7b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "35d65b73-3a26-4901-becd-8d8bd73c6e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa063ebe-f73f-4db9-abd9-fdbdbebcee7e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46dd4ec-3470-4380-8ae1-78c8902f1aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b4c366-b485-4bc4-a17d-7d551248f995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99f9b4b-2125-4ebb-9289-3a275105883d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "79c660d6-3a85-4c70-927e-91fc3c462744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc362b32-64c4-42ef-b664-31167664d9d3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd88392-7fcc-4f2e-aa88-3fb1777ffae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab868be-7980-4ad6-bd78-1ba5aed4d98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e82f1ba-5d51-484e-8454-6fc334dd1e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d851eaf-6601-4f75-952b-09c3fc56f598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6f2fb2-4d80-4a42-9e4e-a03346f89103",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2a8d51-8e62-4172-ab3d-508f5e979999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec03d24-3a53-40c3-ad84-58db1de07910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157b2cbc-709d-43d7-9bc6-dbf89e9a6416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a844ba01-2997-4dac-a889-362e31f3f410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c7017f-2ca0-4220-a34c-f39e6e74effa",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949436e3-18f4-4c04-9d86-349bbb5c9d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12ad6a5-514c-4493-846d-17d1b16c91ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b652154b-140d-4e67-bace-127c690a43b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd5a1a2-d529-43c2-9d33-dc5c5013b91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df97ddb2-4986-491a-8a9f-0dfd09f02278",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fd0529-1d1b-439c-bb64-8a05d48031a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36b36f7-0270-46ac-b09d-bb7a6bf2502b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3fe13f-496a-42be-85ae-7d62c27717ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc01e21-0dc1-446a-ba22-76250fc7e5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf2a82d-0578-41d7-9895-2dbd54e7d960",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031d6694-4c3f-4281-9d6d-d5b706e0f0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5593168c-48f6-47f4-a409-3e227c344cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b008d2-d75d-470c-915a-817a5efcb2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5621ce-5511-4a92-8b90-e8637d4917cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a715725-5438-44a0-a70e-f2dd6940fcba",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91085325-dde1-46b4-b276-e1e4e6bda327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6509389-c2d5-4db5-8ba7-bbc5d1bc00ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed043d87-a4d5-4409-a5c3-dc196d855dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2825309a-735f-4ae6-8183-4cf738e46b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d777b3-d8d8-42d4-ac06-ba289748f135",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6a5f4b-0de1-4575-af75-23dbcd652951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dc31c0-b46e-491a-85db-ab4ffae5ab06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9450dfda-ce75-4f70-aff0-e315a1e9860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b37b21e2-a4de-43f5-8bef-43bf821a13b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c4846a-4139-422c-ab85-ef1058b954fe",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755b696a-cd0b-4aa0-ba64-38825f146b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b0572b-7bb0-487b-b348-71f8cdb33a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7759cc9-c981-4def-a0ce-7bac8e58d253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bda58ef-c003-4523-9428-fc6fd04dc721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585d18dc-15a6-4cbb-bd16-ae4c1100e76e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feffa6c4-1f88-480a-8ce1-cf88f04b5948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd36088-5b1f-4a62-a72f-a1bb3491dd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfa5990-bd98-4fa1-a097-71e74c4e3d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16068204-4596-42c4-a783-5ea28ce25662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a1b5aa-a765-4ac0-b2ad-50af9b77f13a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9069a15-e273-4475-b51c-9d12fb8ab372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9158f19e-5cb6-4474-b279-cbeebeb22855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a41e017-40dc-4a2d-b8df-8d34785a5b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45c43363-c466-4afd-afd1-e58c38b88b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7692e5d7-3f34-4287-9a1e-88b5fc27539c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4498aca4-b9fd-4133-870c-5b7ec573dc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "820b6d7e-3613-4909-b209-e6471143aea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669a2dd9-62e9-4780-9fac-61d2ec655a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf355116-9407-4181-83ce-1c2cff1c743f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b3a784-2389-437c-a27d-8eab4238bcc5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886557a1-50ac-43c4-8ff5-330580df087e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e1a03c-1416-421f-b22c-5cacc8b54afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa29167-6fe3-4712-92d6-682eb8360c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "828d4f9e-bf78-4782-967f-40c3ca1d9bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508ddf0a-383d-4cc2-be56-afd1280bb7ec",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2796c29-6877-4215-8f05-c854f367f0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613e9e8f-c07e-49c0-be10-86706c97d595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24bbcda-25d5-44d7-8378-f72199ce2355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7bf546-389d-4d9c-9f49-57e0fbfda37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebaab00-70b7-4f53-84eb-20c601c4cdc2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e33c724-3304-4757-9ba7-152da02a8d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75d1f5b-bf23-4b31-bb58-6510e252a027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0e6862-ad79-40df-8747-d59d93edffa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d2e39e-a717-4ac7-91b2-0f18c1ff10e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744a5d7f-a27c-4223-82eb-f01c7a255538",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec72c4a-ecaa-4f7e-9196-41d788d9444e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b6e44c-eefe-4531-8eb9-5a1ebfcb575d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d262be5-d045-4324-8b24-a34162232f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a0a9c7-c96d-4fd8-b4da-e0d30640fe04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b66898f-1e2d-4d29-891d-4c752729a570",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4a7f85-ab05-4ab9-a139-acef10192f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bb2668-b3ef-4681-a3be-48bf2a0e3b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe0a171-664c-4800-8f1c-d5fad5de193a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "865efb34-c55e-4f2f-917a-093bf0023964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84524520-01d9-4bf8-b575-9e79c9db6219",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2878a6-8543-4d8b-a9f3-d019158c4d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57475c20-f6e9-4584-a072-8385e0c3dd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a86aed6-6552-4d67-9eff-c0922b493c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7861c2c0-1671-4281-9774-dca99e01c56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a260fc08-8d18-467b-a781-3b96d34b5012",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daec7b3e-4d7b-468d-b1bd-19350eebd6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11f6f02-a320-4efb-b7e6-108fd55956d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fc0936-a606-4574-88c4-d64fcf4e5a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca42aae4-3b78-4e48-9617-2d6f7fc7ca95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b780b530-0056-48de-86cc-9680f6963ef3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8492272f-c45a-41b8-9dac-1067f966a85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9d0d75-ab27-4b17-9fdb-913bcf6309a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0144562-8e28-4818-a793-3148eb6f340d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "871181a8-5909-4e3f-85d3-b53b34d2ca0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195dea1a-ca96-47a9-910e-21fd5eec7d1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11cd3f4-52b3-47c0-b096-d9235cd93668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2aa8a9-1950-4d5f-ba30-3560e4d12055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c927dd7c-4a46-4978-807f-cc04d831beeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e43aae1-1f11-46bc-89a5-ba15a7ad8488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355899a6-0a67-44a6-a987-db8dd763b65c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2de575-9645-4c04-8000-b70043467568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe76c003-b533-4019-b5eb-1cf04c2d8d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758c85bb-5a50-4e98-9daa-5d3e8e3f46b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "550ed229-ff01-4af3-b959-0d8e98f7a327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9718d610-faf5-456b-af7f-a7ac7384b632",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeb77b2-a259-412d-b865-aa382120b2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9bd411-de69-42e3-9e46-9372c292971c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74648535-c2bf-4026-857f-ae218eefd704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "953973d3-e769-43d0-9fca-2182f1d0243b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d53946-2cb6-43cd-bdaa-0458608fde6a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40590ba1-18b5-4f97-ba0b-18d37d3cd8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61aa2090-5588-46a4-a371-ccf5c5a74d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c6aba5-ab58-4c3d-8f42-12812604b380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbff4b8-47e4-41d7-adee-a6fd8e386ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d784d4b-0469-40ed-bf4c-6a1b8e0c8d01",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6a1e4d-c250-4765-8f5b-db6fb094a59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f970d6bb-b78b-4ae6-9cc5-b277523cc74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3771aa-03bc-47a4-bdd6-c3696c8ae3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad44636-d14f-4104-9dff-c9af257e2169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e896e1d0-4a8d-4a94-9a07-15ed5d722d8b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc1da29-916d-45b4-b10f-b576744f4aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a63d7b-cae8-4af3-bb26-72379d282070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d74ada-abbb-47ec-8622-1dbcc44d385e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba39e9d5-1d9c-42f0-bcdb-cdb3ea447d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d07521-c7c5-48ec-97ea-754d1d5d5965",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3549cc-869c-4a3c-b67c-13742d1963c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e29266-ad2b-4553-a8b0-86d1f9f10295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff353bb-02ab-4701-ac2f-a38be3cf0826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "259e624d-fdf7-4e5a-ba17-913381d9f69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9765d62c-3494-4703-9e9d-76ac1e8694a9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2516f4-6346-4726-89c8-57a358f9019c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce72e599-8793-4bbd-9123-7e9cfbb9a798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f282a5-79c5-46b9-807c-7d30f1e5389c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8db6118-3e85-4fb7-bceb-b42ecff2fc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dccd55-4a63-4af4-834b-ab077738ce9a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced7ac17-a34e-4c90-b5de-e5054d8abfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca5baf3-59ae-406f-90de-d83703e47610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924e3749-b69e-41f4-8ca9-bf1602054ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "55852ad1-81fd-4dfd-aa7f-ce5a7f3e3bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed12a62-e63f-4cca-bcc8-0e2c6e835fcc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c248c9e9-2d6f-4fc9-8def-ee4197881fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba94e90f-1e76-4650-ad02-08bc11bf9848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407c7081-6f4d-45d2-b593-c1109bdbfa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4e5695-b606-44ed-80e3-7090be5b4a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ad386b-496f-45d5-9ffe-d5626d58e5d0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fac45b-3ebf-4101-94b0-b443bc27ee60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a6c88d-da5e-4784-a5dc-8a900e871f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dc8a59-08aa-42df-b668-009aefda82aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4672fb28-a182-43c9-8733-11deb3654af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c166ddbc-c087-45f4-9bbc-f4367ddbbb18",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa906a89-8dec-488a-a2d6-09eca7f19865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e12923-b2ce-4bed-b730-a73adcf98974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06695808-6717-4d7b-b216-386b717e2c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5eb4af-0eb7-41c3-862f-5a8f454d4e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931fa686-3f88-49aa-b848-596996e1e45a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8643728-f6ef-434b-994d-3bf4c2b91c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10134cf4-c570-4a35-9da2-8af2c0f96de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175f5ce9-6973-4504-b581-0ab17bdf8cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cff18f-5aa9-4f42-ae76-3d5934ec7786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6455a628-d024-4264-86b5-166e87eaf131",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d9330c-bacd-43ed-bc12-f661c4b8a142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d00a345-17d5-4192-9a2c-324dc3f0cbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335136a1-b070-4ecc-b377-49613001ade4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4df283a1-00d5-4f9f-8176-cb4d69012534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7e618a-c4c8-422c-93a0-186c1292065e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3faa85c-76e7-4f9b-952b-3c82d9d261cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fd1167-c73b-46f6-bddd-ef5d4abffdf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906c6e3b-51d0-4552-8480-28823ec17771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbb7ed3-fc33-4fc3-bc15-b2360d6a2ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3416fa65-d690-4536-a7a7-109af7fd5363",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7b6714-0d5b-40c9-ab60-8ed1cad6d618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1555db2a-51cf-4918-b955-140d0370788e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62abc368-285e-45ee-b891-3171bf8b541e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62fab349-5e83-49ac-877e-08bcd3b5c589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5319b91-b91f-4124-9350-7bcba534559f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04eca037-3e01-4ddf-9ac6-f861be5010ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feeca765-5e73-4e25-9058-4f76b2c11841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b956f6-6482-4018-974a-0d0cb6e10b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c56d0f-d483-4acc-a722-3c24500fda3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76333f4-b024-4028-a919-7b9a6e796ad3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e8a8e3-4080-4ea6-8c62-597ad3ad0da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f2382f-7413-4e9d-9f00-71e258341fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9db4016-29fa-4f58-afc7-f7431d11f25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f35db3de-774a-4685-8f5b-b3c06812c90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb5331e-1588-4746-95ac-226281dbc8d6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37b40d6-abb3-40d8-95e3-aeda68908e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8933b89-56a7-4322-91a9-79c5210174d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cae92b-ff3e-45d8-a76d-6c6e91a196ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c885fb-4d70-4a9b-8908-7624cc5ec6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20ae446-4da6-4ad6-9abf-86800807728d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36c6171-b53f-4d3b-a521-293ab76c52a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f81c09-095b-404f-9f2a-c004ede70cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0466c5-6377-40b1-9cc1-ed2ee9b6f951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1053a3f5-52d5-4fa9-a0c6-ff7ac424a158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eaaa69-d3cf-4ae4-8e7a-5a726395c890",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f2ffd2-4021-4f51-82ec-01b655646327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faca1ffd-a8fd-495e-83f0-beaffacc77ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442ad0c3-9d59-4eaa-b059-55d94997002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6da68f9b-1ea8-4396-80fa-537c632138e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804c8d6f-e614-4d5a-afa2-7ac0dcba6d8a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f28d03-08c3-4115-8d38-9b1d45c52b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289935f3-2528-4f31-8c48-12b24a38946a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193eb778-5f26-4d26-b2a2-eb7b351e83d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99e5fbd3-04da-4289-bd30-35222e16aeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acdf68c-c635-4cd1-a837-2b9677334084",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4cb4d4-345b-4815-8d90-b906374a0ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307a23c4-5999-4bf7-ade4-20af4089096c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f03c532-b59e-4a66-a2d8-2f1f623e3f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb98a38-fdaf-4427-b8bc-fd3b493e09cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cca5ec-c457-47fe-aee9-ab7343a1067f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37daa0b9-6111-450f-a862-9906723c340c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8453eb-7a28-48bc-986a-053e33c9284d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e509850-2c6e-47f2-aace-faa65ae3717c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d12d4af0-a692-43b7-99a8-1be91224e4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fd47dd-4499-40ad-8c69-cd6f8535ac29",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcd7c77-74fe-4e65-b9a4-978a5266d264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9863f5fb-b6f6-4f76-8b58-0a2fe747762e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f372d703-2a1a-4597-b4ac-41509104e578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5b77bf-b231-4247-b340-9120262f9a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714fe6f8-9e6c-451c-82e0-b9e74e488c3c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ae6b52-b7d5-4148-b440-c0e6209b464e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119a4f0f-6c1e-4e3d-a72b-78d17042fd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b498c95-e155-40e3-a565-e48b8d4f2550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de8ca38d-dc80-4cd3-87c9-ec7f3ed1c90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ed1684-d8bb-465a-9cf4-d42b63d8fc9a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8303811d-0d3a-49ba-910b-e1eb03ecd71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98defa66-6259-46da-a288-978447b5350a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e13ca6a-abd6-4a30-a6ef-4e02167440c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31d6df21-ce2f-446e-a518-16d9c432f94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cc2c3b-6f57-48e5-b3f3-b5afc1102d02",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac034a5-ae4f-4a6b-b2cb-070831a46eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d90b21-6676-4d93-b5f3-be047f52fd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8520e3e-edd5-493f-b142-687ddf24d098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e110355e-170e-4d9b-9bc6-ad9d7ad91d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02c0dce-5db5-482b-b633-f40b4e16080f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2f6e54-655f-4336-bbbb-4cb1fb4e97e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac70416-f799-4793-8c44-b744700673ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9ce5cf-e6f4-4535-a835-67917bf8a157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "85ade566-8375-4e09-889a-a4332e6b332e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1544c9-f9b9-4c66-b4d4-506c1396e158",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f78ab40-b193-47a7-b8a9-12ed3843a3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd29be0-f334-4ba3-9a96-2c8544d0d4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eafe65-9d85-45b0-843c-c860eb36b952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "110a2f26-f99d-4119-aa9e-558f10742f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a9ade8-f161-4192-bec4-e65ded2a5996",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e421b67a-4765-47c3-bfba-e766dada13b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7663de2-a971-4690-a1a8-1f2f7ee4ad82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8164687-a40f-475f-8a66-414dd6f56131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c319cdf0-32e5-4965-8805-df6e90fa507f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d0e75a-87b5-4103-8db5-b74a1fd82b12",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff33de0f-1de1-4dad-8509-264ddf531ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8b6780-0e9a-47c2-b773-1496b7e34389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec71a478-ec6d-4873-9a39-1b866df66bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae789fe0-91af-4306-9280-56e129536e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100f64bc-6aa9-42d7-b332-034dea9c8023",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01931e17-5133-4271-a14f-f7234490ba5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "649b1ddf-9207-449f-a391-35916a5160e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0deac2-e3ae-484e-b376-aebbc15fd369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b00c3a-39b3-4d9d-b4a4-efd979dc8596"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bdbe983a-33df-422c-b92e-7a26403c27eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "641a404c-2692-458d-8d30-45ad3bbf6016",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfd2ea5-e2d0-435d-8ce3-89f8e9b0ad62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3225e81f-c5d0-4bfc-951a-780199a11c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e591b376-b4c6-4901-8355-df670d10baaa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30c4c54c-5ba8-402e-bb34-a1b0cb2f26e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db3cda3e-46eb-449a-bb96-ae8691d704a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e29cfe15-4652-4c55-9001-df35b98300d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3449f67b-b336-4d1c-9193-1e9779b47dd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7064150-636b-41d8-b47c-f308976b929c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03209804-7f32-4b2c-acb9-8db04a6f972a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42ddda6d-5789-47fa-ba5e-98322966ad9c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ed6cd4e-7a91-4716-9fe0-871cc76dc0b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b7c552f-874a-42da-8eb3-9db36a2df374"
                }
              }
            ]
          },
          {
            "id": "5ba14191-b813-439f-a5de-c8e8a3e7f642",
            "name": "Positive Testing",
            "item": [
              {
                "id": "584b2be6-436b-4679-8ff5-127d9ae3cf1e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b768000c-0283-4dc1-bdbf-c6cf8c1bfeac",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc081394-623d-4252-965c-338d581e2442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2bb76891-6337-4167-8004-988eb4c4d48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850670ad-9dcb-4abe-b6fb-f2a35c6bf67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227c3cc2-6592-432c-b879-483574860c53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d4c5daf-ab25-40fb-9b7a-f736f4811e83",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a754fc69-030f-4e7c-be53-8eab628daf31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db0eff62-dc2f-413a-82a6-0a89388e9498"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1b8a7fd-c03d-4fe8-b521-50bc30749cb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14759335-4d1a-4fb1-b620-45e483449c69"
                    }
                  }
                ]
              },
              {
                "id": "7a0e4f8c-b58d-454a-8cf4-3d386256c259",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba267452-c990-4be7-b134-6bb3f30d98c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "baa87640-854e-4e3a-9d58-7334680aa3c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a16b695f-94fb-4c8a-8a08-433dd4f0d6d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea7afce5-a24f-46ec-a030-dc3117fc461a"
                    }
                  }
                ]
              },
              {
                "id": "7cff5683-b345-4df7-ac4f-820fd5a39fea",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08df6a43-2894-4af0-9e64-807e814cac0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4338616-eabc-4056-9135-d24d7eed7878"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1934cb37-d2ea-4fc1-80d3-71ac55ac86f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c76e147-5b2f-40db-8e0c-84a058bc32a8"
                    }
                  }
                ]
              },
              {
                "id": "be08cbe7-c342-4d9e-9c06-fc5d00291b2a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ced0eba8-3387-4e9b-980c-a4ce3522fb2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab04f704-5e5a-4aa4-9744-bc7ba13168f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f182bcd0-26bd-4533-8689-48ae1a1c307c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1e664b69-7b4c-4b81-8de0-c755b62b0e1c"
                    }
                  }
                ]
              },
              {
                "id": "f7fd5af5-eca7-4812-9c6b-a55f1cab48f5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "183f163b-f1b5-4a39-b8d2-8f5c8537c9ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "840ac417-2b24-4a3c-9feb-b91c28e91379"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0111c322-1578-49f4-a13b-a78a723b07fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fc6f717f-404c-4929-835e-d4e6cee4d0e8"
                    }
                  }
                ]
              },
              {
                "id": "8d61741a-9ba2-44e6-bc95-d95d26a22d25",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d868534-38c8-4c63-9b5e-f033783fa80b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0abaab2d-00ff-4987-9e4b-d57f6372d095"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf237cbe-2c37-457a-831e-f42c2b0a5fb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e9b834e-a167-4ff2-ba4e-fbc58619945d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cd6add2-a5b8-45be-8393-e1c75747e364",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b911b85f-165c-4773-8dd0-76fccc217e8e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ff8080ac-4b76-42c7-bc05-08da419014be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43bd5ab2-0f40-4b5a-b3b5-bd4c04e37061"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe65838b-0b68-42e6-8489-58955a1d43a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6d0e0152-449f-4d34-b7d3-235904dd31f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79ed226d-a757-480a-a114-c25b5c4d2907",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc45dd2b-cb62-483e-bb86-58a5551f1d3f"
            }
          }
        ]
      },
      {
        "id": "85d8dd4d-8d11-4b8c-bcd6-7f6a5f3e83d3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8051ad28-f11c-4497-a8c3-8b96cad4a766",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4c2c4483-0d18-4913-95f7-019193bfc2b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2dbea047-46b0-4b59-8d98-89b5631ccb7a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e029a08-0361-471a-a057-b62b9e1a61f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4c70d7-6a7c-4d69-9118-f146007e059a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045eb82c-d0b6-4f02-a3d7-a01589290c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1a2e3d-e0c6-4779-991c-c01d6ea72908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68dceeaa-5fbb-44fe-8dac-15905ab72ea0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d83a5d-402f-4bff-981d-874b19980aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8538b86-5863-4da3-9530-f2a4c3e6218a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ebdc59-138d-4c4f-859b-d5c1f03a1a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "534d93eb-978a-4e1a-a9d4-36e717c23df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fc1281-fdf5-492c-a0d6-bcbee11e028b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f1b7b5-a672-4c65-9724-9d2ed4e83d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1834df3-fb96-4827-8024-5843686c1632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dd0d52-538c-46d9-a0c9-12e1e4c03446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb9bf2f-060d-430f-afaf-7cdee7dfdb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f29a9a-da56-4c6b-8367-71e51ae6abd5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a991ea-d485-4a0c-9dbb-9be972636553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d9cf15-3dfa-4683-b54b-36a23d12bf60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2a1f81-6c15-46e4-9652-54716147da12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56153b71-72a0-4967-807a-e8e2e43bcc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cdee0b-cc5f-45b6-8871-fca96951251c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf4be30-a4cf-4a1a-8181-4d629150a842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be0ecb5-7488-48f7-ace0-3eb84f998a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee5d526-075b-4a4a-9c42-277a4ed5413c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e35ff84b-1577-46b2-9239-675b899abd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090547a2-26b5-480b-b5f7-7953f497c44b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84acd42e-e647-4e24-bad7-ac959a58f5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c7e6d2-0161-4b86-a49e-5de57ad94b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9847e9-7944-4cc7-a65d-c4a02428a43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85cb8ea0-399b-4aeb-87a4-17b290c8dfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38cac22-18df-4140-9d6e-47e38d4875b0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1469cb5-67c5-478d-8fce-475fd544ff46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649efab2-9b8b-4b2d-a592-353e48db9de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3da3b1-4d3a-49ba-8d78-dad9535f37b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fddc6749-39de-4352-8188-fad48e4b3739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71efb1c-5023-4320-86ea-b90f0ca7106a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf0cc56-7628-406e-bfa6-36c79c5ea26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2faed08a-ffda-4826-b9b1-2840af8d1697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31c98fd-fb30-4426-ad00-e30eca043db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4f870e-e6f5-48cb-82a5-46d1e489e0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a2fd25-028b-45d9-be4b-8e25bcedc0b4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd02f67a-f6ba-43de-9bfa-d9c37ed3af6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4133cf-6dee-4948-b429-b323021cf748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877f76bd-0027-4ddb-9400-abc04f4a8894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc32ee28-ea77-4f36-8cb6-381fcd319d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dd596c-e8f5-4268-b28d-19c2f8610f46",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3731e6f1-38c5-4c36-9655-7f1b781c23c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82b2220-2bc1-4f0b-8ec6-3baccbdb8096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bc6f3b-539b-44be-bc68-9354226dfc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eccf35cf-0c8d-4b15-b803-03e9947f5e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348c5ff2-0e6c-474c-abea-4195bca1aeb7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091bf944-eecd-4552-b088-9be1185419ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfc2869-97e9-429a-9336-f59cce1a2f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efde1601-ec53-4389-bdf0-8fd44af627b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8a86dd-9017-4ba7-a512-fbafdf23afec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a46bc4-9449-4323-8de6-2a00ce770475",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ca2e8d-ad38-493f-8e69-ad5c6f08464f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0868b83-fe57-4cef-a88e-2b9c7b4425e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15b97f6-b547-484d-8178-a2c8fc23fdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d433872-ed88-40d6-9d15-4135b9fd0512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec05cb1b-fc20-4665-bcda-408f107157f3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83036106-2073-4dbc-bb63-c03ae6d0d7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088c6346-3506-4013-8e92-2662e5f00965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbcaf88-e85a-4973-9c6a-87e05b49a0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "779be1c0-9567-41eb-b103-30c2ebcd9690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71565cca-75cc-4933-ac73-ee8adc160aa6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de393d2a-f5a6-4c23-8a37-27c9d4a295cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42debdd0-1b82-4982-a435-e9af6b0d81d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220eb464-dfd9-4bce-adb7-defd9dee881e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92a56f2-11c0-497d-a48e-eb6545d087fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6b9326-7262-48fa-9301-5f4d2be1bd57",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ed4138-391b-4462-bb7a-14c3aa080c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91333294-1b4a-4b82-872a-6757a4c4a44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1d16aa-0273-4363-8181-dbe2539cbd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "16fa157f-fe7e-458e-93e4-5dcb2330dabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b398ed8-5f8b-4227-8f1f-5dfd60afd17f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e0814b-5858-4cbf-933a-29d11c3a3004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860a8e6d-b8a4-4278-9a37-ffe209cfb892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab07712-8f7a-4721-83f5-c3a15b976403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa012e62-e536-4896-8c4b-3d4c5a7e7ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c3ab20-a152-4a8d-81fa-31c2f9fb7d2f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138ad3fb-2d6b-4a95-91d5-57c03474b536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edf57aa-1113-4bdc-bfce-30ba45668410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7071aff-94c3-4ac3-9d11-61ecb1d41531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b8b846-e603-4e29-a195-2024821b643d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc852eb0-1479-4c39-aca4-48001a8bdbda",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa101f5-075f-4144-bb92-b66bd7897354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6182ade9-a433-46dc-a721-900819c94cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0475225b-a8c2-4649-919c-f1c0f67c98f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "867a8870-3ab1-45c4-8ede-85e83245859d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcef4d60-0dd7-4592-84f2-a9fcb229c461",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18883df3-03ec-4f23-8a4e-a5be68ef5509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4369a7b6-b00f-45bb-a401-4df833757dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f9315e-859f-4138-90a8-7b03c09d7081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11913e11-c106-431b-932a-f1e18f097170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31aa6951-010f-4e2c-bc56-7e52fb6919a0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcbc27e-bde3-4198-845e-2fdd149825b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d028ada-3f9c-4dc5-82fd-d68a05f1d180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d23f9d2-1626-42c8-ad2b-74765270a6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb864b0c-c041-410e-8d6b-c93847a95a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd7d1e6-e382-4bc1-a41c-022e76fba659",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3905634c-329b-4412-a86c-c753bb2a667e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f520dd8e-df95-4607-abe5-3eb27a2a7a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5291df17-46ec-4b5d-82f8-1c6b84b0c707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "368d13f2-bceb-46a5-8695-33a94ffd2dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98869b4-985f-4d3f-9122-7522afb347f3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2b60d4-d4e5-4425-912b-d6c2044c48ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc00a6e4-d0f5-4d28-b9d4-fc4e523b6eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d517e4-83c9-4c3a-b8ba-731479939220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16303222-af6a-47d1-a766-e3b5b9574951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e286fdba-a032-4460-8afc-2abbd6a86def",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fe610e-1fe7-4532-a0c0-43456c7f0a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c21329-7cad-48c4-92f7-ee21d9ffc21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe0d639-1dc6-43d5-ad41-2b27914ec76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5677cfc-04d8-48eb-b6a5-5d1225000d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e300c8ec-70a3-4989-901f-355b11c8d1e9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd9f690-4181-4a79-9d76-7e71c8eaa9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eceea04-7a33-46de-bdaa-5d6596747d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7be3264-748b-4d9a-bc78-f103f7a0b3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f31ba9-31da-48e9-9a02-1fa210fbcff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db978898-7911-4832-bcd8-b5e76594fb42",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d7d7f2-a3ce-44ad-80d1-4db360f62950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef64e2d-88dd-4122-973f-dcf28e7a0763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914dda73-b7a3-4320-8e27-155b286383d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78f2819c-8a1c-4a6f-bb47-129827ff0b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695b919b-a934-4b9a-8e3f-f10cf43062cd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372748d6-c535-4cbe-b218-c0896a06fe38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ac1430-796b-40cc-8399-fd53a716e9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5848fc1-9e9c-43a9-aa8f-22e3eb254517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf59b15-3f3b-4e31-848b-8e44e10829c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a88dfa5-73f5-4f8f-96b3-7d484b2812be",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f4f4c8-593d-48f5-8d2d-b038497bf268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4f7869-99c1-40f2-97c6-0d7913d3c840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee7f350-ce65-4b79-b2af-a7c0f23e09d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56bce36d-1ab1-4b02-81eb-45548d5213bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288b84d9-5052-4cce-9a3e-264a17f219aa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba29af64-99c2-4b7b-a648-e3249a275ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9417139f-7465-4e2a-a364-b2d0903f2ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877ef4e6-4e03-4aba-b53e-ca9a0cf023cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d758c2-e05b-4c46-911d-e48030a9fba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3937af64-f6af-4f04-a558-c259fb4b1466",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e56150-af69-4bb6-95e6-d5cf0a63723c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8090137c-3f6d-40d6-92a3-b351afa06dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57acf424-0af4-4472-93f4-8fffb1d1fb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d808257f-18e8-420f-9b3f-2f87cf0eebff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da79619-a368-40ce-9a96-a9092b679687",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78c0c4b-3014-4f5e-8de6-72e93e4a6dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df3594e-ad15-4184-8aab-8200e683e249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2009c338-d367-4906-9f8c-a71297ee7738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19ba600-366b-4f70-9831-8712b32bf7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15c21ce-39d2-472b-91a0-5b558c02ae93",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ce9557-cf4a-4089-bd68-93138e435e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d57d30c-c17a-4450-b758-d1b546a1ca47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41b69df-317f-4a9a-81d0-61f890a4d48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b642377d-6c73-4283-b81e-a2d179895c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568fc83d-e273-4583-99e7-a435431d4faa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd54efbd-15b3-4b3f-a2cd-b66cf644f7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81693734-9ace-46fa-ad26-ffc9e1041136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a624be-5557-4827-a407-5d0e602ed807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7e237a-6b56-4041-8bc5-ed791ad5fcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba5fb44-e582-4430-b2fb-03b0a58fac99",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d499e6a-e90a-4ac6-98ba-62502286ae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addae730-59c3-4bac-a40a-0afe5bb6e9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df7b80f-c6ef-465f-a769-1aceead64afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6907ca-0911-476f-b663-31fc25d07cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a89a42-6426-491d-9785-bf2ed4a1a807",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209df535-1808-4ce1-b2a0-1c4ccaf3d061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef43334-82a0-43d4-91b2-ea957ae9ecc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ba6bf4-37e5-452f-830f-eb73c127070d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d76ba196-a810-49ad-ad52-aa7a9a7537a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da61e9a-d43d-4ecd-88e8-069aeb9b2a51",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25711c6-428a-4474-ba91-6123cd477b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f59066-7063-42b7-8213-b5e99873e1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fca928a-f9c3-421e-a2b5-c57d79f17b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b27f21-cb03-4993-b08d-4e6261641f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d3e4b1-0360-4129-a786-2b29ecd7be10",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1317dbe3-4195-446c-a458-8f75e7446128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8d6bf4-c3a0-4e86-8c29-ffe295fffef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb34c752-dfc7-4357-89e7-1f5907a4fd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f51f064-cdae-4263-b646-a9d0638551c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a89ff6-4f71-4d1f-b014-9cced570b0ed",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aac612a-704f-4c4c-afe7-8ca769c95c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b4c2d2-dd5b-4724-8f0d-85f4202c7597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c858a722-b1b4-4419-8d78-521371410183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0924ef45-f5a5-4a89-a9f6-12c96e1bc9aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba8e4a43-92f7-47ad-8398-2b13035839a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f86b5416-6f57-45a0-b756-3cee298209d2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ccd7cd-4d64-4b1f-aa10-b1cd91508878",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a78e5b32-e944-49f4-a64e-e1dddc47cdd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa34e92-32b1-4d20-97c2-dc2ce1ee518d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f781ca34-d4ae-4fa8-b1ba-670b6ad4aa88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53692ae0-c6d3-4567-ae29-f213db9245ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86dea362-b97b-4e21-9f4a-452e10cddbed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ea1f483-ba29-4ccd-887b-4accfcec8cc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59d13b84-d76d-4b7c-a74d-0ccffff0f7f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f6ccdf6-ad25-44cc-8c07-814e13b8d0f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7852211c-a356-4d66-9bdf-eed7fca14bce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f297cae-8491-4f2c-be25-948c22741076",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad143385-6d2e-441b-82b2-c74137acafc4"
            }
          }
        ]
      },
      {
        "id": "8054e386-54e1-45ac-93d0-ba01c7d30f55",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "47c72911-6cc5-47a1-a58a-dea3c5243248",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8fda9fe-f32c-4096-aa01-cbac28fe2aaa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88fc4523-122f-4e19-9fc8-372897fe13e8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac80f366-857b-493a-93e5-86ab670cdd2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff559e9-08c5-47e9-9238-ab2fa951ef4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a592ba-2364-4dda-9b2c-c50724ebc61d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1459fc-02aa-4d2e-a6ed-34c82e5b6574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ec969d-4059-451a-9fb2-c37d8b6c2ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5069bb-a175-4c69-b49f-a885e5ac9f92",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3b00ee-6645-4834-abc2-823916e4c8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f61c40e-1a69-411f-b9a2-773b9f029d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdc0eb2-7530-4d95-9102-e67f90200ed9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ea3833-5611-44c7-98d8-bc4a33be5253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfc08d0-f3a7-486e-a518-cacb927003ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655b1350-34e8-42c6-8dd2-5dcd4ab6fa68",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e50634-0154-483d-9696-241b923f2bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a428110b-9854-4dfb-b3e7-457b00be0e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef022a1-4ef0-4cbb-a378-76abcdd1499d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371e74bd-1ca7-4e9b-a62c-21c447d139dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9291c31-1c76-456b-9098-b63c35868b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef58d56d-2eba-4cb2-8d33-705579efb167",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c98c9a-30b3-49ce-92e8-11770adbc86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b17e1a-fcab-4ba3-8f63-44d76308cc8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfecf29a-f4fa-472d-b77d-564991f8d46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d46b17-477f-426e-b935-d19e613eaa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db258f23-93e8-4c04-8506-8348667c752c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848fdc5b-9a68-4a09-8dbe-b71cb29cb184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eae5761-e3ad-4c91-a75b-289fa92bdfdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d56dbc8-0735-47b3-a740-56d28c374c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b697dc-e399-49e1-92f5-711b4a1cc2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7975b65-faf5-4dbc-a0e0-faebb392f29d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd681f8-9da2-4732-a8b3-a041c6de5159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ffea4f-f40b-4844-8d43-a1bbd320b4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdde81d-cec4-4752-8180-0a5714f5b9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73a1ff7-94a2-4229-a310-e74c107f4186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b6460d-25b4-467b-920a-55094d544ef3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f50368-ab4c-4bdd-b345-42f2f9063c20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ef3165-475d-4c13-8829-1dde95983edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5f91bb-4ead-4570-a8a5-78d3443b670f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d98e27-ca8a-4c9c-a346-345f3d2d1974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33b27af-28d4-4e38-90b4-465f56218097",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a267f3-c3bc-4e01-a02b-6052236d96dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54657dae-fa2f-4120-99cd-d08b41277e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d84b89-b603-4b6d-b356-a0fc152ca055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895461c3-55ee-4cca-9af4-8112869ead40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c14a9d-54ae-47c1-a91d-6c593bb8640f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281ec86c-3a66-4b00-9f2b-b7648a7c7a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbb2cd5-c0f4-4a1c-a83b-07bf72fb87e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a66882-5696-4804-90b8-f073e6fd9a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edefe55d-2a0d-4370-9781-63d6c9a7057b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8fa37c-5e14-4a01-afbf-fac174914db8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e4fa08-84ce-4efd-ae2b-6936cd342f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1569306-fc4e-469f-a9e4-12b168028f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5d8ce5-b531-4d92-b071-e94085ec7127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f8f441-76c6-447c-8600-e5f9780311d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6054d1ba-0355-4011-a989-0ad9c5d7b1b1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50f5ff0-bfc4-41ad-82a7-0c09749c8cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96d2b509-a1f2-455a-8ea4-42bff2612b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a756d24-5f0c-4e73-9811-6e821be3265e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd085169-36f8-461e-a183-1308b99b67b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edba514-e749-4e48-b7c8-82170b691601",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a875cb-60bd-4d4e-87e6-1cd59140670a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfb18b77-8187-40ce-a1fd-1e417d514aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92f1784-1362-4bb2-a2eb-a29c696ec703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0b62e3-115e-4a0b-b993-2172c475f1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c36b3f-8a2c-47df-9a0f-f4579d772780",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ceda3de-93a1-4772-aaee-109a77affea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "275c4b82-f68b-4001-bbfa-aa66508964bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97eb5c2-53f8-4aa1-b4c0-84c4aa21b9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998a7b6b-8c22-4df9-a5a1-5dd592e77547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5121e5c9-348d-45c8-aa57-5fa6ee1be6d1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ac08e4-7d33-4c3d-8834-e807cd118d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1a1f82-8d0e-4fbc-97f3-e1dd988aace8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb3e27b-6d74-4753-9e3f-8ab3c8c3bb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5ca2f1-92e9-4573-bee0-8886b572e43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d25826e-0c02-40bf-aca0-36e4c83f7917",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1821bb-ecfb-4906-b8c1-860a861ba0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21790a4c-a32e-471c-8334-28290c93f93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb236904-ff17-4e00-be04-2aa953521ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257f921f-c238-4988-bd91-1bfe7b44361a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9c4a1d-3b76-4e34-9f43-715f4ede3dfb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a9760d-f7e0-4c05-b933-6e81f2b4266f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d33658-2c47-4b49-8682-694963d6725c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec466ffa-3e3f-4a93-9eba-f093b47e7f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a6d38f-08f5-4e42-b51a-f2f533b5f216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4455dad-d9d0-4311-b49a-7da8d3e744db",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a55d69-d263-41c5-9ad6-db012e1028d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff9d019-6460-41ea-ad45-9a1629a9fbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9029be60-260e-448d-bf05-ec4c6b2ee32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09900e25-039e-4215-b7a0-5a92598a1459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e72ac5-19dc-4567-8d29-df12ec717e89",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48c66a5-9903-46af-bdea-a1a30c1718a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb52df5e-4c34-494f-9412-1eee5574bbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a841e4-2f14-4f3d-94b5-f320b6e2d9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364aa877-abca-4457-a2ab-c19573c39f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf984038-17fd-4db0-a066-ebef3904b4c4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0418e073-b13d-44ea-ad29-142c8ecb443a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0102f9-0872-42a0-afb7-6a3896f975ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08433aa-9356-4889-8ccb-ce5e7159cfbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627a43ea-9217-48de-987d-7ec73ac019e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3d6506-0409-46d2-93b8-dea8b816e929",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67a3733-fcbb-4e57-a3a8-ddff467adb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02064a55-e308-4a9f-892b-f6178da1494b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd069ff-d66a-474b-b5e3-c772e5369166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afae06fb-61fb-4519-bfa5-17eb445d8400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d963997-732c-42e7-b4ef-8fb10559c83f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba4ba40-5ade-4b30-aee6-78f9496e2c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05bc640b-9129-4888-9c91-c036e3447cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3346a8c-9e16-463a-a7a0-f65ec536b421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1281a7b-a12e-492f-80ab-dfa7a85359ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b39bde-830a-4b55-84f7-54e0e84c25e2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f81bce-218a-4344-9c8b-5eb9e1d5e2be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9cee694-35eb-4f71-9835-08d2f214796c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2164b5e8-23ac-4309-aeed-721e84a7cae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95dd9d98-95ba-4a50-b2e4-a90b7e885678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd88ddd0-2c78-4e95-815f-d96c182cf969",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272ea68d-d012-4504-b5c3-2897f511fa12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f58907-fe04-49fb-8cce-add0d9af543c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6ad6b0-dee4-4918-ad90-2355fd5cf76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb343e77-4510-40e6-9a01-5fb10650bc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409d00d2-8e5f-475b-a57d-721624e7a8f2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce723c59-33c0-4fce-951f-c4be86181e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc5e90af-3180-4035-941a-4732d6b9b47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94218c61-7dd0-4231-b5c3-bc6f7964788f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40db9d3-28ca-48ee-8d92-928d05bb3c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed2aca8-2ec0-42b1-9b7e-53cefbe38bf1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fd846a-7540-4274-8522-240a876b67cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56298cf-5479-48e9-acc0-b19eff49de1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b2331e-54db-4368-9756-13623b9eca02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b20a02-cc87-4cfe-a1fd-2f6eadc372e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d5541e-ab4a-4948-99d9-f1767210f24e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fcf71c-9017-4fb0-b9ce-1d7f9eb56876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1885950-4518-4032-8b79-0996f61ac4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6b580a-83d2-4f41-9cb0-e9c1afaed8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d3de84-8322-4c0e-8515-e7bff2a41ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cd613f-8d88-42ae-9ac3-095dfc5d216c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725ebbbf-892b-4c64-a262-6df39c413d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c9aca13-37ca-4ddc-b6b0-ab2cd2efab69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea35681-a21b-4371-ac20-e73d8f1db58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9b618b-522a-46c8-b20b-6dae4a7045eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7903b42f-06b3-47a7-82be-c4e13f182deb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3208f9-7529-4abf-83f5-5d0bfd8cc9d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e09a7dd-5b4f-4a1c-9e4c-487efb72d093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f3991e-55a6-47de-9585-e54bf72a2d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87cc91d3-d1fc-4675-a013-4a50f17c2c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d583ae1-7e44-490b-a848-4dcb3144f854",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8722dd02-66ba-42d3-91b4-a2d784e0462b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18bbc0d6-143d-4953-a033-7d0df3554f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4ef128-f06e-4466-a4b2-a2ee3e465b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1522d0-d374-4954-bcc7-850396bb0331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80f6ac1-bad1-457e-be60-d3febcd48343",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e562b7d-6ebe-43df-9ae9-9cb85b67b086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f781d6-7a6c-440c-b8a7-43c080cc5108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8e8a8d-ded6-479d-a753-828f99946314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bee2d3-f19d-4f71-a010-b4b5630d80dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56fe921-a0e5-41dd-a193-59597ded0c2e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb7ba48-444f-49a6-b31b-ff8db3ae3293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41b62fb8-2837-4259-8368-d1fb3534c3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f6ec2f-8b20-441c-aeae-0737263bea82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf8419e-0fe8-49f9-858e-1a48569e87dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6551bf-1637-4ebf-a54c-7316944793bc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33e8a75-4f2f-485b-9103-54df66aed6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8490a45-e4bc-4894-a811-94dbc4ff3852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9d6650-63d7-4c4b-82e0-3b7dfe3a593e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627841d9-3999-4b52-8b38-551bf776cca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acd4b43-3807-4c53-81bc-baf586490afd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5445f64b-891e-4c4c-ba5b-9fd03384634d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c7ea1a-b8fc-4667-bb28-53d55f719c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6399ab2b-7c01-446e-9ed9-8b949c4c34ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73de73ca-8c7e-4713-a834-b978858c17e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62e8e9b-133a-4ec5-8ad8-8a01c06bd40b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066a3fcb-b5ef-488e-a269-40266425deaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4ab7e9-eb89-45e7-90cf-1067917e4c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41468e5b-b1dc-4605-89bb-be17d3078330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1b234e-bd13-44a6-b9b4-68bffa2edfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c013bdd8-ec9b-4e81-a12e-fbab0ec74dd3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d3803f-043c-4a3b-88c3-e2fd7660ab62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb8f8ae-25a5-424f-bb96-515b91786024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a9f01d-b40b-488b-8fd5-8e3e5f9a9ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddeec3bc-8f5b-4ba9-89e7-637f4c958f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0b75c8-5edf-4484-bfb6-4d65bb56e7a3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab02a7d-5788-49f8-8a84-f428e1ede008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ede9e63-ec22-4b6f-b766-644e975343c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116206dd-1ba0-4a52-9474-3746cc1d7059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0eb5dda-dbfc-49e4-af66-f1febcc5ee01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5f2501-16aa-4c62-a424-d2d69cde7729",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdaed54-81b7-425c-b307-8a55d5c8e120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc25c27-000b-4de8-b7cc-47e5e3d0a975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c5fda8-6330-4034-be03-b85b44bb1ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d126625-ffb0-4d9e-8ddd-a47b5092dc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462ca40a-0a15-48e2-aebf-39852e975893",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233459ba-d618-4409-8218-f54373094d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6454c0-d632-4b08-8a0e-df79758b455b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa82a881-5dfd-4762-b07a-2c068edd321b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ef8fbb-3248-4658-933b-b0d0281e17ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60705435-5293-4f24-8b78-d822b2dbb875",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c49c73a-4701-4ab3-926a-43c2c60e7841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22eb71ce-261c-4c65-b4d0-9a2375702f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b304d8d-e889-43f5-a680-2751fdba0539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f649118e-e6ef-4f08-b6c9-365c217d66be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b492f944-bb3f-4346-a4c2-1288a174379e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655fe642-d122-4f8d-b92d-9dd437ced632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706914c5-6414-4113-b3e3-1d60d55183b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea44631-5fe5-433d-ab8d-a03b9a120be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5ee78b-eba9-4d34-a4ee-98558e3a9bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53c7fb8-924f-4720-ad8d-c87619f7150e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ebc06d-665f-4c0e-9b2f-08ac1d327fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d390e515-6b48-4378-938f-56ca743487b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900b671e-7820-469b-90be-c3368f771997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c98da4-ec94-4fdd-8b6e-eee307fb810a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a049f6-0e18-4252-83c0-82674176f543",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7044813e-387a-4509-9697-805cfecc0d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47cb4d60-9c9f-4a62-8ccb-1ed3df929cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5845c5c8-c49f-4ca5-9ac0-acd6755f2e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb63294-65bf-4ad7-821a-a54a48a5aff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0478f9-f7cf-4495-a820-3ad3a27c7527",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096cc8a1-ecd7-435c-84cf-31c5988fbfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c658c6-14a1-4d6e-a81d-b98291a76281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62c3513-a249-40f3-b8a0-126b811f1214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e330ed5-654b-4917-92c4-f9ae92c6c44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8af9667-74b5-408f-877c-d23a50375349",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b782ed3-90f8-4161-8509-2e691c5459b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e10a28e-708d-45e9-9ecd-eee2d2fe27e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8682c598-ebcc-4aa9-ac20-c2b62536bcc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73de9ef-a1e1-4b51-a16c-a198f22dbbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81eff60-c23d-45e1-a29f-52241b9e0644",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5894709a-f3d1-45f8-a052-bb33ee52a4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45199de0-f223-4dc8-bf42-cf48bdcf797c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dbe340-292f-4c27-9ba9-bc6bd488cf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bfe94f-8ab4-49d0-85cc-5ee66a501939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc065219-5199-4964-a2fd-6dfd9e442430",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2a7e8c-294f-453d-aed3-08b1cf0a62a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c2dc25-a048-48cd-b58d-62d24cbc77c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf85e496-112d-46cb-b6f7-95dd75b93511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acef592e-0eb8-4216-9239-a57fd6c1aabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea21423-b359-440e-bba8-2898518f04d3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574d875f-6299-446b-af5e-22dc34e09cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14f1fbb-f306-4763-9fb8-e255304be796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bd5cb4-3134-4e5b-a319-34a9da70c7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa4c69a-080b-4aab-9501-feeaa2ac929d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6eb3fb-9563-40b5-8c79-f21ba01edfaf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100c8691-9d21-46b3-9ce5-4e1c5a0ea044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1aba7e7-4fa7-4a8b-91ee-41e0a03a3e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b316938e-532d-4ca6-aeaa-6bdde0685513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa47d9e-6451-432c-8399-aa6ce5b6bc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715b9b47-73e2-40e0-97cc-ee174fab3623",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68af6537-a779-41f0-9477-fe56451ae937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4780d88a-62c3-4100-b3c1-40e74ab657d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c92cae2-f918-48d7-bd35-54c9b4a70d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfc514b-41ba-40cd-b23e-988bbae2b5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88abbdd5-b7c9-490c-9e76-84cb1de181f4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc79c60c-fc36-4937-9fae-d418eae4590b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cf1c41-d133-4c33-8007-6e0a015d7a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ff9e59-d041-47e5-ba0d-457da3f2173a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746a889f-4fc6-4c5c-b252-8844e6ce3a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dc1ea5-a424-4093-8d87-02ab1575ff8c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10619cb3-68d6-49bf-8b84-539a447d2657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e535f3-95e3-4ec9-b110-84125b4583f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f0d342-7639-4470-a276-b99327d481f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbe3af6-49ba-4d0e-8758-6a134ecab7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952e3ac1-af63-458c-9a36-2a86c4c54ca9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7bf8bd-6ca9-471d-b1ed-430bb0623aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b17a03f-18ed-4b71-a130-cbc2f217ef77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d434eb-c8dd-4829-b686-08fd69ea5042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea33604-5f12-49c8-abf4-a8068eaff3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8147bfcf-ce14-4e25-8e0c-1f8569fce13d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae630058-1f3c-4487-84a1-ee0676a8339a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195c3bd3-bc13-43a1-ae26-1419f0e68c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865c8f09-4347-471a-9425-7ff9b8cc7e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21454fd-e157-4f93-8400-2d70caa3ebd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecc70dd-fbaa-45dc-a3bf-23a2c8f8f04f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b881e4c-40a4-4a1b-a649-9139e228620d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a693ee41-d5ce-4f3f-b799-d27ffe81747c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e883974b-eae6-47a3-a2fd-1b6264f63ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ca8342-bd9b-474c-a8df-d5a5d539c70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e04947b-0012-4144-ae14-7c61519c62c9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a41623-3ade-4eb1-8622-1dd74e176b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fd6afd-afa3-4a93-9def-191de1ede95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161e8d90-6314-47bd-9aca-f9bed36bdc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c98a83d-2da5-46d1-bd4f-9de3d95d058d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856e36ea-d418-42db-b2eb-f508557d6e61",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c52a5a-1be9-4642-958b-b2abdd9dfde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d6bcb1-2b27-4497-90f3-429291fb4f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4356592-4943-476c-9690-c2c41901c8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31bcc1d-2e0d-4085-aae4-feea5c8e7c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43fafb3-4712-48c7-8c86-cd02737666b9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3399a94-cae0-4384-a126-1a26146afaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88aa2e6-cedc-474b-86c6-c35da618b3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f277993-5e74-408f-b536-ed921f214b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18db21af-2c68-40b6-9fa2-d0afe1b48b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed65dd2-109e-4421-8a5a-8cf8c3f0925f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141799bc-82b6-444f-9c70-4d11539562d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a727150-6d35-48b0-97ae-c290f8fcf197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e00037-ef0f-48ee-b07b-d0be09409afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552f3c36-d2e5-47da-98fb-e9904d946270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a3eac6-3b44-4866-87f0-c41c9796d8d4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa62d62-5b91-4331-9b4e-018e777552ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fbb803-c90d-4ed7-8346-a8e5c164b460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9435e52b-0cb7-4534-8bf8-10556a420231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4350ab-2090-4b3a-a6dc-22cc82ab2f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42afdd74-7eeb-4dbe-b3a2-e23d7e462192",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8de02b-d31f-4230-aae8-3c9e134a8668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88692899-4a31-441c-96d7-3c24466aec75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5750bfd7-94ee-49c3-bfcc-bd5331ac9c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013351c9-c780-483c-a607-1ea8519b31bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341ac24e-9c0f-4c5d-bfc7-8ea5815fac62",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f1a709-f23f-41f8-89ff-9f0c6de15011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ff7a56a-f990-441c-8dd6-904df0c52856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22e8ef6-4155-4a3c-85a0-6ca5aa589e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a354bc4-e75f-4bed-a7b5-084f7e3a4678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26668c39-a4c2-4401-9bc8-12853e0bb920",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5bf889-a6e3-4017-a0f0-ca56a58cd481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7031d561-ac47-45b1-97c2-0e903227db64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddefccb-2449-428f-8409-1abdeb000400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11baabd1-20fa-43d1-8ff7-6af5039512f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e176014-6eb3-498e-9fb5-8746e3036026",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0df4959-e6ba-4a2f-b3c3-d848a0e793f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ddd502-02e1-41d4-a338-509abfd0bfbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9aef05-0d15-4552-ad00-0f5475a6caa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723556fe-820e-4fd3-91ae-3cc02c6bd812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feea4cb0-c80a-427b-bada-ef6f51fce720",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99da79d6-2c9f-496d-b764-8fa075ce3aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5922ea3d-9f65-4fec-8c42-bf6bff9e6def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528b1433-2c1e-49c0-b943-574c3fe9dd7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b751da03-1101-48e9-99b2-7513e427b410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95c6c6f-8a1f-4e4b-ae76-b5b2bc621668",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df021ae4-59eb-4a96-a4f3-2a67c35b6ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6a88f7-7131-4244-ad0f-ae0f1f5d23c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eabc5f3-8c84-4939-9960-439b30ff2e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470b0934-81ef-4ab3-bb38-852a51a2dbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a20e100-b72b-456d-bf0c-fef2d44cdf47",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382f6898-0ae7-4386-9b69-23c8a17e5289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f904e230-aafb-4c91-af2b-559f163ad91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0368cc74-d4cf-4882-b89a-e1d447a9b198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecad59e-138f-45ff-8ce1-fe9d9d1c969a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c18178-0c7f-4991-9c9f-2446796f6191",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25b0881-0f1a-4e3a-bc9d-cc0fba03a5ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc26f0de-3d6d-462d-90a6-7846ff9b5cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e74c51-13fc-406a-ac86-012d4bb2fff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4049da77-942f-474f-b610-b3615d8e3ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f1441e-df00-44a2-9650-b84fc45de707",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e446607-a32f-4720-851c-8d81149d1d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d18ad6f1-a8f5-41f6-a83d-4843ff51d29f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee15364f-21be-41b9-8286-7b23a51aa32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2b20fe-94fa-4143-9fca-b7521d1defa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f98613f-aaab-4e0e-924d-2461882cb70c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d718a73-c8a0-4adb-88f0-4d78e7946783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2f25da-9c61-4c8d-b7ea-3806f7b2a13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809b7b39-a803-491a-b4a5-9ec3a4eef424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef06411-09fb-4d7c-8473-8b7cf9e8cf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cf43fe-86ae-4093-a230-f1330374807f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12308b34-b478-423e-8df6-9815475b3d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f9746b-91c7-48a7-87e1-74ec1791627a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da80ae83-f521-4de7-8d3b-384060e2b739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da79dcd8-5690-406f-a4db-6ee0d7702950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c14f7b-b6c8-4ec2-95b3-cca4b986c2a8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3714dd-2336-451f-ae7a-27987e4de7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9fd0aaf-a5ea-460c-93e9-42c5c8446243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33be6e7-dd2d-483e-8c2b-522b61dcc862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b143d2f7-9905-4640-ba69-a298888bda93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dd2b68-377f-4028-b809-db0d90179c23",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b238a19c-f219-4518-8741-40093e9b16aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6aabebb-cc15-49aa-8f70-410d7500d3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2a3035-b0df-407b-851e-5ffe6ee3110a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ea6dd7-d243-415d-882f-e36c5526970f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b191b666-cf65-4056-96aa-62fc70758d71",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42608b73-0180-4a3f-8e2e-30c6ef70675f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7023a00-1e26-40ff-b96d-e80c826cff4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94551b10-fe70-4030-bdd3-0f4dc1e58d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5498ada8-c078-42f3-a77c-305332adfe89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ca6f99-d2fa-4120-9b77-2b31167b066f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fa61f4-c535-40ee-8224-30b048c0f2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080c889c-17fd-4aed-b851-23b669b72286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab48c1b-68ca-4f22-acf8-3515bdd9bb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c95742c-4ae2-4454-acdd-b6fa288df5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4a9a04-3017-4e73-b3e0-c2be045f21c0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be52bfad-aa00-49ed-a48e-b5c3884223a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "226064e6-4a84-4757-9639-0d9af2fd2046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c48130-2969-441e-bed5-bdf5c35008cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a8e250-b291-43d3-836f-48728d301bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653613dd-31aa-4abb-b1bc-64d8a837ae93",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d99df5-4e04-48ac-940b-182700323872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab18d75b-bd10-4537-89b9-98c0cabaeb34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29cffc2-09ae-40d1-b29e-ee2e8f956da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee326675-73d3-4ab6-b22b-15a1fc00e9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd18b0e-500e-4b18-b1ec-7742430af829",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29731b04-ca64-4024-93cb-2a96f86ab324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3abac430-052a-4bc3-b3ce-fc14ee93a329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b85df9-f528-4f5f-aa2b-ae4bc6307d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5e84fd-1cc7-48fd-8038-3957e0cca992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d439aa-8a7c-44e7-b319-06485ea031fe",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde83641-8b5b-47ef-b86e-bb8c26f3bdea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f7ee61f-da17-43f2-89ca-eabc0c473a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03fe54b-2f94-438f-b8fa-e131e3797ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352edaa4-46d7-40d0-942c-32e19afdcdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca85cd9e-5c43-4eef-abdf-b51494d2a9c6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20494014-040d-41aa-8ecb-82150decb80f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2986055c-a91f-48b0-a1d7-a978ef5c3788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90f8f0b-b7d2-4a89-a8be-eef0fcd464c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316f4f39-a5fe-430b-bfbe-448906b837fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f82be79-e144-468e-adb8-83aa91287b12",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a86e6a8-6d78-4320-a80d-c1096536a321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b0ad90-8b59-4af8-8571-28e4c244ca22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde5e375-0bc9-4863-8806-086ee6334553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df8ec8f-9de4-484b-8d4b-07372130e4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb9b068-fba8-4515-b47f-1009dc907968",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59388cff-8bcb-4c16-b300-6e9bb127b423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e48d3fd0-9e62-4908-ac2e-8fad6adb2f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000010bc-7102-4d3b-bfe3-ee7c5f498233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae70fad-8fcd-445e-8de8-899556751b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61c71cc-46d0-4daf-8267-bead7e6d2c27",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7f5deb-dae1-4194-a168-f4e0f7cd1858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b943abb1-0a97-4dee-837a-7647ba1b89f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51939e98-aaa6-4c8e-95aa-7bf6bd2666c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6bd9ce-a666-47b2-ac06-ed61d9e44e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0175b1-661d-4b0a-9f5c-c5c79d0c5525",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fee8677-fb81-4448-8cee-10a54169a882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de4cb48-3dd7-40f8-9402-bef66445aeef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f1acf2-13de-4bfa-aa34-4ce08f339869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d1bece-6f32-40a4-9cd6-d3f662ccdf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1877597-137f-4d9b-973b-f3cc6b9d7867",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148ef39a-4e28-4f8f-bed4-20a04e0b0302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd599f8-8eb9-4eba-9636-0d10014517b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b902f93f-1549-41d0-a673-90dbd97de1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402c761b-8163-46d4-9cdd-95ffbfee9751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b277db-d33b-4936-847a-2c9a71c8b7c9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9ce5c6-3f81-4312-9bc6-a84733069d51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e987c873-4e4e-42bf-8a99-810f935cac65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d0d72f-f1b9-43fa-81ec-a0aeadebb3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a6864e-3a0a-428b-81bf-ecb8892332ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caca035-5e45-4b54-8f3b-3ce0d08b49dd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ac4c52-03bb-47ab-8c38-2e1e82bcd56b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ecf0f42-0dc5-4701-856f-75dd2309230f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9bac58-ed56-4a63-8d05-04431133944c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b43849-929f-4d0e-b50e-83d01c778e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575a8cea-c89e-4c2a-aa6f-e37dc25940a9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e1ba7d-7edc-4841-8277-769706a76f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8892dcb4-b702-4e4f-9c47-d70c8445ff95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d50fc7-084f-4b65-b2f8-a72988ecdb60",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14e33ff-03f8-4ef2-8da1-4cfc6d30cdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308c17e7-42a3-4bb2-8658-29866ca98654",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88356a07-6f10-4835-a1da-c8250e17893d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc16881e-6a95-4769-8e52-350f25e72b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac6cd8f-8d0b-430b-bbb2-5540a5f3f889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16efe55-921f-426d-877e-338af7bdc5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1652e0a0-043a-42d3-9aec-4bf63def7dfc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d39bef-8ab9-44d6-b851-11214f829d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ee76197-2bd8-4d89-b460-531ec5b06ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943ed953-56da-4fa7-a2e8-5d7af000a20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dab602-36f9-4a69-9178-39533f4994f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1253e2-e088-4d35-9bb5-ecbaa44ac241",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6747b2dd-c767-4262-a262-fe8568e03cf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9bda8a6-4b12-4d31-8570-5f1c28b8dbe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c16624-9b36-43e4-90c4-fe9e61d69f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27462b2-3582-41b7-951e-4bf4430e2680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b98e8a-72f4-4cbd-be13-696cc8dbe4e2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba21af4-0402-4bce-921c-f7768e2fa97d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7757b7-81a2-4abc-abe0-e64db556de61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14c2e4e-058e-4ea2-b2f8-2946c7fea378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971b956e-e00c-4170-8cff-45cab0d7ebe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1935868d-af6d-42b6-a5f3-16868b9e16a3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b60168-8a43-4114-ac46-46ef4e2c52ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8166952-af95-4037-8175-4d7f6d3292ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e55d5d-2c03-4b95-8b22-2270e04e605d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6eaf36-f95a-4c2c-9ef5-fc3a2236d895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc37791-052d-4269-9ea0-9f20c61bf83f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95741af-25e7-4878-9f74-94f0e5a96026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3fb34b4-4ea1-4c65-8697-3752726025bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcbe936-18a3-45a5-bdc4-b7c15a84b0bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b35b7f9-7d32-4f2d-88c8-57ad4786b97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5a8de8-4137-44f5-a24a-a44a424f7d96",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5049304d-cd18-41b0-816e-4cbd82a4afe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c751e6-8dcb-4d26-97e8-eef68f17a24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43ad8f6-2d16-4279-aad9-1ba585511bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e870e2b8-a3a9-4a03-be0f-3987e9efb03a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2a936e5-2482-4c75-86cd-8fb49cf974ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdfacd09-c4f2-4fa6-9ac2-26b719f8f6ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24fbd4e6-0943-46de-a11f-e55786f82e23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b946d5b-3652-4e83-be25-2a1828ce6d90"
                    }
                  }
                ]
              },
              {
                "id": "a8ae41b6-04f1-44a9-a5c2-f5084e285f36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f5f4aac-dae6-4f15-aef3-2c504c2c51b8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0021c1bb-6cf9-44e2-91cb-c5845c9adff2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "46b60eda-ac20-4718-958c-a0116a5337d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed4fd9c-7eb3-4978-8cc2-79d214321ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "940d2184-9f7c-4052-bcbd-582234b20814"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c15d3ce-37c7-4efd-ba1c-974e7b45b286",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09c50189-7be6-48a9-89c5-f5d8e275c287"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85b6ec61-b05b-4171-9ffe-17499e6f5f79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b36c00d-7efe-459a-a2e5-450fd251cb93"
                    }
                  }
                ]
              },
              {
                "id": "da2c5a78-acb5-4f79-92e0-cb65a2d29b13",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e57308f2-fa8f-412d-b441-f66a0f327f6f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a64aa6-6881-47e9-b76c-79db495f78c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e6ee5741-3197-404a-ba4d-e4584df68200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b7cdae-283f-42b6-b880-d29aef8f3558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d1794c-3a03-4547-ba43-f51dce6ccd96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ecf37162-22d7-419d-99ef-a1277b592cef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76ee7f32-389b-4a7f-9b39-46494ea51974",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36daf87a-1d7b-4fdb-8327-0b5445166a5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3854969c-6d31-4177-b3b4-c2fbbfb95fc8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "753841ae-4198-4130-96f2-f20ac453448a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "715e8063-b017-4e02-9d56-d1062ed91a83"
                    }
                  }
                ]
              },
              {
                "id": "1fc19a0b-a8c8-40ac-baf4-2db95af18083",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08b2c76c-d612-4428-be68-910504472011",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "71e232de-c83a-4ff1-87b8-a2ab8b2c9686"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c4f1284-0849-430a-9093-f9a4f77b7f19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00f8583b-40fb-46af-a138-4ce67fdd614d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44a65ad7-93c3-44ef-994c-4212e75b085a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "22d473b3-9fd2-4c81-bad8-7c193fa32fb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "933466b3-09d4-49fd-87b8-e9defa857221",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d010981-ed5c-4e8a-b240-3c802f061d92"
            }
          }
        ]
      },
      {
        "id": "133a3c2b-8fc6-4e55-b2c9-eca89142d206",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "696902c2-00bf-4a6d-8fe9-169167a9fa6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cc3d190-4486-4d7f-a130-11378174261a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56309f97-f569-43bd-a92b-3e9211557e0f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d23533b-321a-476c-b2dc-ffa020bcd18f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "af767a18-5f9f-4d23-8d62-f98ba341447c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ea3253-5739-4b0e-bb95-220827817ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb04cd08-bc82-4b69-8415-5eb164b94426"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85ef5dd7-94d1-4fde-9b3b-507d0887a5e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62377a07-d079-4019-b4a6-92c7968f3be5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88c331e9-f27c-4768-8609-26ce7aadff3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fea61d94-6ae3-4fb0-951e-91bddd1dba4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20d3f5a1-737a-43f2-b34b-bac890824c31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6d110023-e1b5-409f-bf69-2b6af13469b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42b63ed4-e135-47a8-aa99-c485454364b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3404efd-6eae-4234-b9db-e7146e80eea0"
            }
          }
        ]
      },
      {
        "id": "77a5d6c8-e9db-461f-bc32-d3bf859e3c73",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "31f21638-afa5-4967-a419-4e6beab58ffe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9438c384-da21-49c7-9f7f-1066a6835cdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a50874a1-e740-455f-b6d5-9f338220deee",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb47afc-1085-4ad3-bb1c-9acab2664aaf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a272493-2892-4d71-8016-19cdae00ab91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfe7625-d786-4f44-b8f9-2d9e75ea3b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f86a914e-8065-4266-8f05-db2b7054fefd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "161c2d46-bba4-46b1-b9b6-898d36dd4894",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daaa374a-07bf-4bf8-90c0-da1b0a6e7b8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b583b2f5-2314-450a-9902-0d41f9e8f53e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f460e72b-09ab-4d11-ac94-99a3fc2433ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f785623c-b048-4736-aa0f-1cc9a884d0a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14fd1598-1a72-43b5-88ea-c0222d27f1cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94898ac1-19fc-49f4-aa30-e2c432307a9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ead64df1-1f16-4dc9-9ad2-a7b7560e728f"
            }
          }
        ]
      },
      {
        "id": "5f085610-211e-4b53-9583-fbb64854bc1e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5981ef8a-6a8c-4109-9159-a22c8ee689c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2aa82290-85fb-4599-8d83-81c740641125",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f818c6f-09bd-497d-a2bb-92e141524685",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3577968d-2f02-437c-8ca7-7b898ca3e673",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "760a0707-bcc7-4000-bd86-4e82f142d692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa25e96-76d0-4f8d-8870-3b6182a6bc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "830cdb0f-31f2-4f02-941a-09be6e49f5b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1997a0b4-9c14-4812-8847-ea9afbd9a3f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d4ac5df-f60d-4d1f-b6c4-8ecf888ee9e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "330eb5a6-3719-4864-80fb-72a7049dd88d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76b10ed6-07b8-4b57-8f0a-acacbf3f443e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ded57465-a980-4cd7-89b9-425dbf82232e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6e78c88e-1406-4861-90eb-83b8b0a33686"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b652c47-6e1c-42d7-b6a7-810e5bac3968",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adaf8a7d-f799-4be9-8eee-417c3bd0984b"
            }
          }
        ]
      },
      {
        "id": "e527ca21-fcfc-40f9-9156-acf7678c5423",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d01c609a-8f1d-40d4-a6f7-c34251f77dcd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e80e5a0e-3897-47d0-a26b-6d45b91188ea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7c93d3c6-3baa-48e3-aea0-7fa583225703",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6580b12-dd39-4707-8d04-a41355d3adf2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4678e6a-a950-4a04-8f11-507fffc0bd08",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 149.12698412698407,
      "responseMin": 22,
      "responseMax": 11564,
      "responseSd": 761.1686710445946,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720312967975,
      "completed": 1720313013901
    },
    "executions": [
      {
        "id": "b3f3f489-df83-4107-a991-17edda505eb4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c625664b-5296-4f60-9e90-cb71204d98cd",
          "httpRequestId": "45601337-fddb-41fc-9fd4-de4da785f54d"
        },
        "item": {
          "id": "b3f3f489-df83-4107-a991-17edda505eb4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "454870b8-d295-447d-a994-0db49aefff33",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 0
        }
      },
      {
        "id": "17f81ba1-68e8-4d1a-b5f8-cd6125cd10d4",
        "cursor": {
          "ref": "480ee1a7-b31e-40ca-b581-74c9c864afa1",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9cf34a1d-d62a-4398-8fc3-3bffdf64afa8"
        },
        "item": {
          "id": "17f81ba1-68e8-4d1a-b5f8-cd6125cd10d4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c2aa9644-41f3-437f-a9ea-c83b1a7df378",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "6d9cf8bf-7d63-4d8f-989d-110a23657f6d",
        "cursor": {
          "ref": "49e1fe0a-1b7f-41bd-b35f-2e9927e9cf14",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ccaa1096-f806-4d0b-8aa7-801e8f2c34ed"
        },
        "item": {
          "id": "6d9cf8bf-7d63-4d8f-989d-110a23657f6d",
          "name": "did_json"
        },
        "response": {
          "id": "46210654-dccf-43c9-99ad-ad5fc598c821",
          "status": "OK",
          "code": 200,
          "responseTime": 468,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce94371f-c83b-47cc-b408-05f5f3d3d840",
        "cursor": {
          "ref": "4ad17446-fb29-4c52-8edd-33c56bdcb33d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b72b8672-d7aa-46d9-996e-449f20f6460f"
        },
        "item": {
          "id": "ce94371f-c83b-47cc-b408-05f5f3d3d840",
          "name": "did:invalid"
        },
        "response": {
          "id": "8d7925d0-224f-4c8f-be35-527a17849046",
          "status": "Not Found",
          "code": 404,
          "responseTime": 402,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce94371f-c83b-47cc-b408-05f5f3d3d840",
        "cursor": {
          "ref": "4ad17446-fb29-4c52-8edd-33c56bdcb33d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b72b8672-d7aa-46d9-996e-449f20f6460f"
        },
        "item": {
          "id": "ce94371f-c83b-47cc-b408-05f5f3d3d840",
          "name": "did:invalid"
        },
        "response": {
          "id": "8d7925d0-224f-4c8f-be35-527a17849046",
          "status": "Not Found",
          "code": 404,
          "responseTime": 402,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba2ecaf-c638-44d1-82a2-ddb70b977756",
        "cursor": {
          "ref": "86b2def5-95b5-4963-b2d0-fc19c981a581",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6aa3d1b5-4ee8-4a13-9ccb-41ac1d19a5ec"
        },
        "item": {
          "id": "1ba2ecaf-c638-44d1-82a2-ddb70b977756",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bb242b75-56ac-4ed9-ac55-8e08ff8d9e0c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167c13ac-2a68-4f81-9b25-be8461fba34d",
        "cursor": {
          "ref": "662d854c-3f60-496c-bfae-811a6d3d0ee5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a9f6e09e-7920-494c-b607-56adcb7b9d49"
        },
        "item": {
          "id": "167c13ac-2a68-4f81-9b25-be8461fba34d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "54c9b9a4-dfd8-4d30-b332-3dc6a00833e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93bb8f0-6dc6-4e50-ba72-1e9066c651f9",
        "cursor": {
          "ref": "ef2356da-6925-49f2-8d24-da3b9358cd2d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8c2a7505-c906-45ce-989e-168f2fc8cd40"
        },
        "item": {
          "id": "a93bb8f0-6dc6-4e50-ba72-1e9066c651f9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "68104d51-6124-4554-a7e4-6501e51ec8df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 135,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b39fe3f-828f-4883-9a72-689cbe495da5",
        "cursor": {
          "ref": "31b92619-6487-47c0-8f7c-1b85116ec5da",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "350c28f4-6ce1-495c-b99d-21d30f857775"
        },
        "item": {
          "id": "9b39fe3f-828f-4883-9a72-689cbe495da5",
          "name": "identifiers"
        },
        "response": {
          "id": "cf17df53-3f8c-4a07-a2ae-af4f5efbef50",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d693640f-2dad-4496-a019-79877db756a8",
        "cursor": {
          "ref": "4b1ea18d-2b1e-4ec1-b1ea-ddbc3e012ba8",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8f6b2d86-c108-43cf-aa87-44a66f8fbfe4"
        },
        "item": {
          "id": "d693640f-2dad-4496-a019-79877db756a8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a6217abc-481a-4fa9-8b21-97d516e855e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1579ace2-4cd7-4b80-94c0-d0063bfe2f71",
        "cursor": {
          "ref": "2fbf8541-4401-48de-854f-eab186e94aac",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6522dbf5-ebde-4c7e-b029-75d22cca08b7"
        },
        "item": {
          "id": "1579ace2-4cd7-4b80-94c0-d0063bfe2f71",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "88923a21-1b59-4ba0-99fd-127fcb1a7548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2546ccf1-2346-4ebd-85da-549572fea9b2",
        "cursor": {
          "ref": "fe7d9742-a1a1-43ec-8e0d-1a5ffb8e872c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cc320e48-bd22-44ea-b226-310c0ee488ac"
        },
        "item": {
          "id": "2546ccf1-2346-4ebd-85da-549572fea9b2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "42181657-cbe7-49b3-a082-955acde71af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c62cfe4-eb61-405e-9b17-e26af2beaf17",
        "cursor": {
          "ref": "777e4504-6e72-4607-963d-7a521098c855",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d1ed88ca-3b39-4352-946a-957f907c1f84"
        },
        "item": {
          "id": "4c62cfe4-eb61-405e-9b17-e26af2beaf17",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "61d54604-6cf2-4d49-b4a5-622a5006cc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5cf7e4-2ecf-42bb-ab8c-0f67f17898e2",
        "cursor": {
          "ref": "7b87749f-f189-468b-8f4e-73c82e5bfb98",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "92ac06e2-fce6-4225-94b1-94713e93ff23"
        },
        "item": {
          "id": "cb5cf7e4-2ecf-42bb-ab8c-0f67f17898e2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d4649b1d-09dd-4e83-b627-ca45f09d457a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3bff17-236d-4ad2-8e79-858443c19885",
        "cursor": {
          "ref": "0ec7b91f-efc0-4cbc-b9c0-f8cc73d79f36",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7e3ff4eb-865e-4ed8-b302-e636f8021597"
        },
        "item": {
          "id": "1f3bff17-236d-4ad2-8e79-858443c19885",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "48d5da1b-7e47-4184-aaf0-34d832416463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bbb28a-dfe8-40a8-91be-51c3a174a2fe",
        "cursor": {
          "ref": "c3d3d04c-f69a-4135-877a-6ab50424b861",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f5f0f752-b750-4f09-a3d1-9b1a89d337ad"
        },
        "item": {
          "id": "c8bbb28a-dfe8-40a8-91be-51c3a174a2fe",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "aeb15f6e-fc85-421c-8b18-b328cd367bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83584e9c-40d7-499e-98c1-5c8027795c18",
        "cursor": {
          "ref": "e9caa95e-d0d5-4523-8d30-4f3b96b726a7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "26d47d6b-880b-4c2b-92ec-7f3f84db25ad"
        },
        "item": {
          "id": "83584e9c-40d7-499e-98c1-5c8027795c18",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b8382fa3-3fbb-449a-8209-7cc8fc75e196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60627e22-99e3-41e1-a685-b36904a0e0e4",
        "cursor": {
          "ref": "23074069-e78e-49c2-80d2-22a1eacd32e0",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "57267335-3490-4803-b517-b5a54ac60933"
        },
        "item": {
          "id": "60627e22-99e3-41e1-a685-b36904a0e0e4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c5e11d65-7afe-41dd-a532-72398ca6dee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3696f5-0d1f-45ca-a50b-70fa4cf36fc5",
        "cursor": {
          "ref": "6106b87b-69ed-43bf-a1c4-831adde8adb7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7d7b74da-e195-4967-bcc1-b3f698801449"
        },
        "item": {
          "id": "ac3696f5-0d1f-45ca-a50b-70fa4cf36fc5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4d2da86a-65ee-4022-80d9-6a15f733f6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20cd08e-902c-455d-904f-13e90b063f5e",
        "cursor": {
          "ref": "340465c9-2e9c-435f-9d68-b9ae1d1c5a9d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "28067e8a-261b-4bba-8999-87fd36bbe4ad"
        },
        "item": {
          "id": "c20cd08e-902c-455d-904f-13e90b063f5e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "caa39032-c1a1-4445-b59c-565f20650eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01f9f25-3f50-40c2-8e98-2ea27426fb5b",
        "cursor": {
          "ref": "2e07d408-b10b-409e-92b5-3a029fe6051f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "66532041-31c4-48ad-8ec4-8c0c58677ce2"
        },
        "item": {
          "id": "e01f9f25-3f50-40c2-8e98-2ea27426fb5b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2b6656fe-2856-4ab2-a165-d52a733fb999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc1dd73-d39c-46a1-9f39-e353d01aeb27",
        "cursor": {
          "ref": "7f102915-9df0-46da-936f-c3e8f160c3f1",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "aae11d6c-1543-45f5-bf39-82528673716e"
        },
        "item": {
          "id": "9fc1dd73-d39c-46a1-9f39-e353d01aeb27",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "28a2dd5a-0e95-4b1e-9ca9-4a6f5ce8ceec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff844dcc-7e25-4232-b2aa-f8308d88da90",
        "cursor": {
          "ref": "d567495f-9442-43be-b6fc-5ca51a40ccaf",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e7526081-0eb2-4020-a276-8f4ab3ca1075"
        },
        "item": {
          "id": "ff844dcc-7e25-4232-b2aa-f8308d88da90",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1f1f7d4a-b2c2-4df5-99f6-4735f9f79b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fbdd1d-4bf9-4369-80bf-f0762e3dfaad",
        "cursor": {
          "ref": "12bbb952-0b46-4af4-9b7d-90019f50408f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "62784b60-7821-4c68-8fac-286a1a5458a3"
        },
        "item": {
          "id": "a4fbdd1d-4bf9-4369-80bf-f0762e3dfaad",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2c1ae99d-e8af-4b3f-97de-bc4e3de88dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1471c182-fc1d-45c1-b990-7c17f222b436",
        "cursor": {
          "ref": "59c767cf-41be-4169-a566-ae0afba58776",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f0e6247c-9518-4f60-b7bf-fcae6e4e468c"
        },
        "item": {
          "id": "1471c182-fc1d-45c1-b990-7c17f222b436",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c1b2b909-7519-44b5-8d62-38c2a28b1d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033c28e8-87f6-42c0-8801-0d2a6887ca08",
        "cursor": {
          "ref": "bdb644df-1965-4017-bac4-aee4cf9ac187",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3caa2007-e75c-4fef-a882-bbc3a3001b73"
        },
        "item": {
          "id": "033c28e8-87f6-42c0-8801-0d2a6887ca08",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a14d3598-df04-4c14-9d3c-26a82dd294ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c27cb2-0a4b-4f04-966d-c71e8a7afd84",
        "cursor": {
          "ref": "10ce6ac3-8c94-48df-bf87-b9401377efb7",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "76899ceb-0d8f-4730-9c79-b723187846d9"
        },
        "item": {
          "id": "c8c27cb2-0a4b-4f04-966d-c71e8a7afd84",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "79f52781-185b-4efe-ac8c-34d51d9c6a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccebf7f0-6b46-4326-a47d-3d4671cdf0f5",
        "cursor": {
          "ref": "5b880ca2-f5f9-44f7-b8ca-2ead9f96ce2a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d66080ad-de51-4144-aa80-fc03266c2c93"
        },
        "item": {
          "id": "ccebf7f0-6b46-4326-a47d-3d4671cdf0f5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5a9dc5ea-c94c-4a4c-ac1d-9acca03aa92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76972c39-45aa-4fa9-89f5-df31e9d455b7",
        "cursor": {
          "ref": "34f49df5-9c83-4b2a-a3d2-acf0a8356c06",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "19a295a6-0a23-4294-8689-d6454e9d135e"
        },
        "item": {
          "id": "76972c39-45aa-4fa9-89f5-df31e9d455b7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cd369647-850e-43db-9949-c123eace920b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ac912b-ddff-41b3-8945-aeab48ff9c73",
        "cursor": {
          "ref": "7441a66d-7560-49d9-8446-468c59c4a81a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ff83dbe8-4912-4c37-a525-9c006b43f768"
        },
        "item": {
          "id": "16ac912b-ddff-41b3-8945-aeab48ff9c73",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dc6b6529-8d8d-4d87-9843-1357a1054484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9918848-cf4d-4cd9-8d92-73ca6578baf6",
        "cursor": {
          "ref": "c7a6f51c-7fdd-4f83-af9b-7516afac3e60",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "61da00c1-a8e4-4c22-a017-a85ba1683b54"
        },
        "item": {
          "id": "b9918848-cf4d-4cd9-8d92-73ca6578baf6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d4ed320f-1f7a-44c9-a18c-05b65c211979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b99cc7-8794-4cfb-a045-954b51fb0df4",
        "cursor": {
          "ref": "69c4115d-e637-459b-bd42-9c916fb58045",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ded513d9-0808-419e-bf61-33716ca59d2c"
        },
        "item": {
          "id": "e8b99cc7-8794-4cfb-a045-954b51fb0df4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3355041b-23bb-47b3-8626-3a6482dfa19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd51858-a8ed-4189-9328-1d041be21904",
        "cursor": {
          "ref": "935fac10-88a8-4f12-8118-1f08c4dde962",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d9255bcb-ec2c-4275-a124-c3f49c9267aa"
        },
        "item": {
          "id": "2dd51858-a8ed-4189-9328-1d041be21904",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2dbb320d-3501-4de7-8e57-98c42f80499d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df89668-a640-499e-870e-0df09c82d615",
        "cursor": {
          "ref": "66d88640-ab91-403c-803b-fad556e8ff14",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "498af1bd-7645-4e19-9bfa-e88138a96ce1"
        },
        "item": {
          "id": "4df89668-a640-499e-870e-0df09c82d615",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0d94d7d3-898f-4b78-a40e-79761a5aa700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe9a582-d48e-41f2-8583-c315651c0b03",
        "cursor": {
          "ref": "f34367b9-7ad4-451c-998c-a687f6779da9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "afa876b5-68a1-432a-893f-4a6e0904a5a6"
        },
        "item": {
          "id": "afe9a582-d48e-41f2-8583-c315651c0b03",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "76264170-5a4d-4b1b-b687-b68eb261750b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409c47a9-f1de-4fc5-8037-6908a21da71b",
        "cursor": {
          "ref": "9e66d1a1-37cd-457e-9102-ddfdf1c24aef",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e882ea97-695d-4ec2-abe7-465ebc52cbd2"
        },
        "item": {
          "id": "409c47a9-f1de-4fc5-8037-6908a21da71b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f46f8838-c821-4c19-9591-d1efc364d05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b73feac-078a-475a-b32f-721763071312",
        "cursor": {
          "ref": "55885905-3802-4e2a-bcc9-bf9bd860a19c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8429822c-6bb6-43fd-b167-4c9bfc6fcf84"
        },
        "item": {
          "id": "2b73feac-078a-475a-b32f-721763071312",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a23c1c7e-8bec-4edd-978b-624e7690eddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b361ea0-7cfd-4fd0-a474-03527cd62ff8",
        "cursor": {
          "ref": "7c6f943e-17d9-4234-aba5-04aa07548176",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cb82f9de-216a-49dc-bff4-4fdd2ef8eb9c"
        },
        "item": {
          "id": "4b361ea0-7cfd-4fd0-a474-03527cd62ff8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "27d61c29-71a1-4783-8043-973316f9e1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f5c615-cd2b-4b8a-8d82-ccef76fd2c9a",
        "cursor": {
          "ref": "873576a9-37c8-41d0-94d8-80587c25683a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d22f28e5-9ca6-41b9-b561-d17987ba1b0c"
        },
        "item": {
          "id": "86f5c615-cd2b-4b8a-8d82-ccef76fd2c9a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "387c2380-1fdf-4196-b743-016142c5c35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76f3328-a035-4cc0-9b94-c1656da41f43",
        "cursor": {
          "ref": "78e5f45d-3417-463a-9718-fbaef1085c31",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "05a24f05-0c0c-4851-85d2-8dbd2b912eee"
        },
        "item": {
          "id": "f76f3328-a035-4cc0-9b94-c1656da41f43",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6a6ececd-17e3-46c8-89a5-3f8175e57ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a47e441-9f1f-4996-97e2-296e33d93cb9",
        "cursor": {
          "ref": "ce317aee-b1cd-4f64-9d02-88fefc7abb13",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "979cd31a-cf42-4eac-81ac-779fa02693dd"
        },
        "item": {
          "id": "5a47e441-9f1f-4996-97e2-296e33d93cb9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "37c69f1e-dd39-4203-ac1a-75182b18ac3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebdbe6a-388c-44d5-911f-8cfada6326d7",
        "cursor": {
          "ref": "2cbaf49b-6fed-47f4-9bc4-ef92275158c3",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "763f7849-6f5e-477f-afdc-88fb9a55da4f"
        },
        "item": {
          "id": "5ebdbe6a-388c-44d5-911f-8cfada6326d7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9edafd59-e293-4cc2-94a3-a66374d23934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b53f0aa-4b89-4c3a-ac5e-34e18c1c8492",
        "cursor": {
          "ref": "6772aa8f-a4f1-4f65-899e-c647670f3fc4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fae747d1-cff6-4680-8fed-059c534a3ccb"
        },
        "item": {
          "id": "5b53f0aa-4b89-4c3a-ac5e-34e18c1c8492",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9fb33ac6-40b2-4b6b-8290-ae754d62138c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef230ed-9f1b-4fb8-8d30-cd4679a5162b",
        "cursor": {
          "ref": "39afb01b-2228-4f19-90f2-f2d90d4b1447",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "35f6f13b-c8ed-4b80-8922-78d2639e3acc"
        },
        "item": {
          "id": "2ef230ed-9f1b-4fb8-8d30-cd4679a5162b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a5769916-5488-4a20-ba94-2f9ceb39f849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d76545-45ba-489c-9fa6-067f9b5772aa",
        "cursor": {
          "ref": "5a2a5f5d-404c-465f-b0bc-e1dead5bb99f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "08ec6afe-9670-48bb-bd18-d2e9d607e13b"
        },
        "item": {
          "id": "49d76545-45ba-489c-9fa6-067f9b5772aa",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "33e18269-b948-452e-8724-f5c4633dcbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127fcb9d-c8e8-4380-8d61-a3ff6f5ef455",
        "cursor": {
          "ref": "d26d0bb2-0c83-4de5-94e4-f43b8062c6d8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e5231fc9-0f0d-411b-91ae-d57371952b4f"
        },
        "item": {
          "id": "127fcb9d-c8e8-4380-8d61-a3ff6f5ef455",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "44306174-61aa-47b5-8d4d-c9c9074f754a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2813d8-1a75-4c0e-9b74-9e8cc5705bc0",
        "cursor": {
          "ref": "1573b078-c721-41ac-814d-b3448c56fdf0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cac36fad-a86e-4e66-b8f0-c69b53a9dd04"
        },
        "item": {
          "id": "3a2813d8-1a75-4c0e-9b74-9e8cc5705bc0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "698c4056-2f51-405f-a426-6f0d9134deb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609648ac-887d-49e4-adba-297d9f5f0e50",
        "cursor": {
          "ref": "4f5682ed-26a0-418d-b9d2-3e91505d7367",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9732b21a-c4e9-4283-a717-8a8ea9aca3bf"
        },
        "item": {
          "id": "609648ac-887d-49e4-adba-297d9f5f0e50",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4ad607d3-89d2-417c-b154-ac673a013ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa063ebe-f73f-4db9-abd9-fdbdbebcee7e",
        "cursor": {
          "ref": "d8e46dab-70fb-4b94-a5c1-7faebd6b03c3",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a408c5f0-bf4d-4174-b760-b27b2c587475"
        },
        "item": {
          "id": "aa063ebe-f73f-4db9-abd9-fdbdbebcee7e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "07f48bd4-36ba-46a9-8bd9-d69c0fe0f25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc362b32-64c4-42ef-b664-31167664d9d3",
        "cursor": {
          "ref": "23c8768d-c956-4824-9ab7-346e54a5b37d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "428a0107-b80f-4568-b673-7363de766330"
        },
        "item": {
          "id": "fc362b32-64c4-42ef-b664-31167664d9d3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a1e7cc7c-dc6a-46b6-8dae-a06f465dc016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6f2fb2-4d80-4a42-9e4e-a03346f89103",
        "cursor": {
          "ref": "c5b93402-ded9-4902-8159-58bd604d579e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d6d0be7c-0d92-490e-9f16-61af03b9615a"
        },
        "item": {
          "id": "ea6f2fb2-4d80-4a42-9e4e-a03346f89103",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4fea98be-ece3-4b93-98fb-3766c1fb16e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c7017f-2ca0-4220-a34c-f39e6e74effa",
        "cursor": {
          "ref": "74b5de7e-efaf-4152-98e4-0664743578e4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ed495470-57ea-4a9f-9f5c-8f2e6f341b38"
        },
        "item": {
          "id": "a4c7017f-2ca0-4220-a34c-f39e6e74effa",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "50a55ff6-4a1e-4788-b8fc-0aa24a288df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df97ddb2-4986-491a-8a9f-0dfd09f02278",
        "cursor": {
          "ref": "3dd6eaa2-c901-46a5-9a3c-33f95096746a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ba755d14-fc77-4b35-8d4e-ecf987ad5e66"
        },
        "item": {
          "id": "df97ddb2-4986-491a-8a9f-0dfd09f02278",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "431a3877-eaf0-4b67-b896-7ffd33f1f0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf2a82d-0578-41d7-9895-2dbd54e7d960",
        "cursor": {
          "ref": "c53981a3-17e3-48e5-8540-9bea71bf409d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "295ca93c-3a59-4add-a58b-d48ba2157253"
        },
        "item": {
          "id": "cdf2a82d-0578-41d7-9895-2dbd54e7d960",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0f8f77bb-5e4b-466e-b9e6-3a22fecff5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a715725-5438-44a0-a70e-f2dd6940fcba",
        "cursor": {
          "ref": "23e39cda-dc62-4ee5-85d6-6b92beaad712",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "06a5483a-fea1-4c43-81c4-98f098ba0c0d"
        },
        "item": {
          "id": "1a715725-5438-44a0-a70e-f2dd6940fcba",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "314aa369-6109-4bdc-8215-e1e6b41f3583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d777b3-d8d8-42d4-ac06-ba289748f135",
        "cursor": {
          "ref": "74ea7141-89a2-49f7-9aab-894270848470",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "38722035-c77e-4f13-b9ad-daf186e02b17"
        },
        "item": {
          "id": "24d777b3-d8d8-42d4-ac06-ba289748f135",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ea2e7e28-645d-4d6e-b239-58d432c3fc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c4846a-4139-422c-ab85-ef1058b954fe",
        "cursor": {
          "ref": "f67a4483-1f27-449e-a29f-6595a9871afd",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ba667a32-e46c-4d98-8928-619d16039711"
        },
        "item": {
          "id": "06c4846a-4139-422c-ab85-ef1058b954fe",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4584b1b8-6cf1-4a0e-9085-e7df3c9a1981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585d18dc-15a6-4cbb-bd16-ae4c1100e76e",
        "cursor": {
          "ref": "fb59478b-b45c-4801-8a12-99742b72c0d1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d4e4bdeb-d80b-412d-a35f-9d30ba7c92eb"
        },
        "item": {
          "id": "585d18dc-15a6-4cbb-bd16-ae4c1100e76e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "30095002-db22-4ed0-a6c8-4fc076a8fb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a1b5aa-a765-4ac0-b2ad-50af9b77f13a",
        "cursor": {
          "ref": "dc9a7f2c-922d-47b8-ade3-0807459ee839",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "89bcb730-a2a1-4719-b791-c16503c9b06e"
        },
        "item": {
          "id": "59a1b5aa-a765-4ac0-b2ad-50af9b77f13a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2ba7773c-028c-422f-bad8-0a0ceb9dd6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7692e5d7-3f34-4287-9a1e-88b5fc27539c",
        "cursor": {
          "ref": "c5010688-98f0-4c93-b108-71bca209c62c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2b1d3d6c-91ab-48ff-ac19-c0bb940a2bcd"
        },
        "item": {
          "id": "7692e5d7-3f34-4287-9a1e-88b5fc27539c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ba369fc6-6bac-4157-b7fd-d23982672944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b3a784-2389-437c-a27d-8eab4238bcc5",
        "cursor": {
          "ref": "a971081a-a98c-4b68-92ef-93445c0724b0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "04d402b0-a735-486f-8cc0-871703d128bb"
        },
        "item": {
          "id": "82b3a784-2389-437c-a27d-8eab4238bcc5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6f438868-2368-4709-9422-fe10accfff69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508ddf0a-383d-4cc2-be56-afd1280bb7ec",
        "cursor": {
          "ref": "15db6462-6945-460e-918d-31fbbc137c99",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b360a82d-7c3b-46ac-a7f3-01fa692e265b"
        },
        "item": {
          "id": "508ddf0a-383d-4cc2-be56-afd1280bb7ec",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5bd27f52-227c-46c3-86cb-6c7b7c3e83b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebaab00-70b7-4f53-84eb-20c601c4cdc2",
        "cursor": {
          "ref": "f2332afe-7afb-43cc-9433-57d01525eb10",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5be2c7bb-21f8-4aa4-a27b-6a0fad0205c7"
        },
        "item": {
          "id": "aebaab00-70b7-4f53-84eb-20c601c4cdc2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e49f1754-ee73-4428-87c2-1b9820f4ff06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744a5d7f-a27c-4223-82eb-f01c7a255538",
        "cursor": {
          "ref": "549e6519-09d2-4ba9-ade2-d4eaed4c68d8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e2212828-95eb-4975-a099-24808d5c9fff"
        },
        "item": {
          "id": "744a5d7f-a27c-4223-82eb-f01c7a255538",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1170ecfa-98ec-4bc0-9468-c4e67cc605a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b66898f-1e2d-4d29-891d-4c752729a570",
        "cursor": {
          "ref": "1e7928d1-6ff0-4486-8fa1-d1e119c5081b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0a845e9c-b28d-4728-b2e7-7f0ef5f789ce"
        },
        "item": {
          "id": "2b66898f-1e2d-4d29-891d-4c752729a570",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3490588e-94ab-423d-9bc2-589fb45573e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84524520-01d9-4bf8-b575-9e79c9db6219",
        "cursor": {
          "ref": "885ed86e-f9c9-4001-8767-8d72e2d9fb55",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f90ebab4-01e0-40d7-b4bc-4e89f6a55d27"
        },
        "item": {
          "id": "84524520-01d9-4bf8-b575-9e79c9db6219",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ef8b4600-32b0-458a-9ddb-c41c74b5d57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a260fc08-8d18-467b-a781-3b96d34b5012",
        "cursor": {
          "ref": "d21470d6-80d0-46aa-85af-720696c4777f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3bc81c9c-4d18-498e-9ae3-602f964f32ce"
        },
        "item": {
          "id": "a260fc08-8d18-467b-a781-3b96d34b5012",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7a46dbde-e0dc-496f-bb88-f0f2ae705ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b780b530-0056-48de-86cc-9680f6963ef3",
        "cursor": {
          "ref": "b09b9d2e-33dc-420c-aa83-9c5543ccecce",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bd99099e-afbd-41ee-95ef-e41e8f47e54b"
        },
        "item": {
          "id": "b780b530-0056-48de-86cc-9680f6963ef3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4c1c6b52-1ae3-4add-a80c-cb83b529f29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195dea1a-ca96-47a9-910e-21fd5eec7d1a",
        "cursor": {
          "ref": "15fc62c5-b9c9-4e74-9bab-fec0e2ef8d95",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8d8ae488-b187-462f-a149-67b33ed9798e"
        },
        "item": {
          "id": "195dea1a-ca96-47a9-910e-21fd5eec7d1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4ac1ff35-5b98-4f89-a678-43091d9a1428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355899a6-0a67-44a6-a987-db8dd763b65c",
        "cursor": {
          "ref": "3feba898-0467-4543-9f99-1e8dfe45297e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d9963147-d14f-49d9-965a-8ae7ad8416c3"
        },
        "item": {
          "id": "355899a6-0a67-44a6-a987-db8dd763b65c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "185a183c-6324-42ac-84b7-784c1be95471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9718d610-faf5-456b-af7f-a7ac7384b632",
        "cursor": {
          "ref": "b3d8e77e-1046-40b5-8b11-cd8cf1df6cca",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "073ee385-4295-4484-af46-b7c3239619b1"
        },
        "item": {
          "id": "9718d610-faf5-456b-af7f-a7ac7384b632",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8b26f770-e4a2-44c3-ab4e-1b1e03aa4cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d53946-2cb6-43cd-bdaa-0458608fde6a",
        "cursor": {
          "ref": "0128f222-3b84-45f4-8738-ea2b08ae5ce1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3f7239a9-6541-40a2-95b7-33da8e1f874c"
        },
        "item": {
          "id": "75d53946-2cb6-43cd-bdaa-0458608fde6a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8b7541fd-3349-467f-b366-4d9a7d13a5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d784d4b-0469-40ed-bf4c-6a1b8e0c8d01",
        "cursor": {
          "ref": "e81aa01b-8662-47d5-bb9f-8fc927cb26ea",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "71f3b589-87af-424b-af54-d27299b2f1b0"
        },
        "item": {
          "id": "6d784d4b-0469-40ed-bf4c-6a1b8e0c8d01",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7e050373-864a-4e95-8d98-e21538b7730c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e896e1d0-4a8d-4a94-9a07-15ed5d722d8b",
        "cursor": {
          "ref": "2a5851c2-6694-46d6-880a-4cf52f014e94",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7b1bae27-8b97-4759-94d7-02a37157ebba"
        },
        "item": {
          "id": "e896e1d0-4a8d-4a94-9a07-15ed5d722d8b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a195fe08-da17-44a9-9da0-fc10456bcb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d07521-c7c5-48ec-97ea-754d1d5d5965",
        "cursor": {
          "ref": "99927e22-d003-4619-97f8-28ec2cb17105",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ae694062-97f0-4040-b73b-2e13a4145bea"
        },
        "item": {
          "id": "03d07521-c7c5-48ec-97ea-754d1d5d5965",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9df456a8-e9fc-4dd6-adf5-05aef12752ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9765d62c-3494-4703-9e9d-76ac1e8694a9",
        "cursor": {
          "ref": "21ac665a-b24f-48c4-a41a-79700f830f6a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8fdf27e2-257a-4260-ba33-bd747780346b"
        },
        "item": {
          "id": "9765d62c-3494-4703-9e9d-76ac1e8694a9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8bb61d50-f9cf-4abb-a7c4-7dfb204bb23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dccd55-4a63-4af4-834b-ab077738ce9a",
        "cursor": {
          "ref": "658dd93f-19e0-4cfa-b5f6-b1eaa78d6386",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d5df8e14-59ed-4b18-afe1-9f7121d737b9"
        },
        "item": {
          "id": "71dccd55-4a63-4af4-834b-ab077738ce9a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9e741e9d-d9f0-4539-bae1-415a01922232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed12a62-e63f-4cca-bcc8-0e2c6e835fcc",
        "cursor": {
          "ref": "11d325eb-a973-4b88-b608-8ed50dcfc1e7",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5c970f25-eef9-4486-852f-57a0f2bd9274"
        },
        "item": {
          "id": "eed12a62-e63f-4cca-bcc8-0e2c6e835fcc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "913b6be6-93ee-4ad0-8da8-9b3e47cd0aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ad386b-496f-45d5-9ffe-d5626d58e5d0",
        "cursor": {
          "ref": "0775ac83-4010-4b13-80f9-e2c8a5699507",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2b70f746-ca3f-4393-bd56-4bedd56cd996"
        },
        "item": {
          "id": "f2ad386b-496f-45d5-9ffe-d5626d58e5d0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8b9c5297-c034-4d6a-a992-5e3b83bc018a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c166ddbc-c087-45f4-9bbc-f4367ddbbb18",
        "cursor": {
          "ref": "f4c1f373-964c-4488-84ec-c7fb62025dc7",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dbbd687b-dfc6-4c1c-bd92-b8f0b8efe717"
        },
        "item": {
          "id": "c166ddbc-c087-45f4-9bbc-f4367ddbbb18",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8156bdda-c6d0-46b4-a4c5-c248bec14494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931fa686-3f88-49aa-b848-596996e1e45a",
        "cursor": {
          "ref": "8ed17de4-fb85-4817-9411-1a7358119a84",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4e9e52b4-671b-4465-b312-35e3942a9400"
        },
        "item": {
          "id": "931fa686-3f88-49aa-b848-596996e1e45a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1ade1bf2-d8a4-439b-840f-2047df976da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6455a628-d024-4264-86b5-166e87eaf131",
        "cursor": {
          "ref": "1cfc7f9c-b1c3-41c5-8b9e-570ea6839ba0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "110a2234-6ce1-4b64-86dc-28625ef14fb2"
        },
        "item": {
          "id": "6455a628-d024-4264-86b5-166e87eaf131",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "86a2088e-fda7-4f7e-8ba4-bbfc17e446f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7e618a-c4c8-422c-93a0-186c1292065e",
        "cursor": {
          "ref": "110cdb2c-d202-4f8f-953a-d26c551f2c81",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0dfac8d1-bdb7-495e-8701-277a39a7866d"
        },
        "item": {
          "id": "ce7e618a-c4c8-422c-93a0-186c1292065e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "14a22805-b21f-4c38-b99a-65b06498099a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3416fa65-d690-4536-a7a7-109af7fd5363",
        "cursor": {
          "ref": "326f83d7-3315-4699-a1cd-fcd216ac7f25",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7fcacbb5-1ae5-4409-9c91-14dcb9c55d45"
        },
        "item": {
          "id": "3416fa65-d690-4536-a7a7-109af7fd5363",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2babcfe4-67d8-4ce8-889f-f40307366f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5319b91-b91f-4124-9350-7bcba534559f",
        "cursor": {
          "ref": "fe63d712-6f7d-4bf8-8884-910531a91450",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b33de6c6-da57-4bb9-81b0-3074fdd8327d"
        },
        "item": {
          "id": "c5319b91-b91f-4124-9350-7bcba534559f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dc3437cc-d488-4b3d-b107-5423cfda4fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76333f4-b024-4028-a919-7b9a6e796ad3",
        "cursor": {
          "ref": "270b17f2-e831-49cf-9bfd-9a901b1334c5",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1277df24-3091-4653-80fc-7e33ead7f7f9"
        },
        "item": {
          "id": "e76333f4-b024-4028-a919-7b9a6e796ad3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4597be3b-e40d-43df-bcd5-710163e6bbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb5331e-1588-4746-95ac-226281dbc8d6",
        "cursor": {
          "ref": "1e8af8ad-a76d-4885-a928-fa91d148f118",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e18256ec-d1ab-4655-b2de-b4ca4868aa99"
        },
        "item": {
          "id": "2cb5331e-1588-4746-95ac-226281dbc8d6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ebbe6a20-afff-4592-abc6-2318accec294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20ae446-4da6-4ad6-9abf-86800807728d",
        "cursor": {
          "ref": "134d97ec-35fd-4d50-ae21-f01651039b7f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1da3024f-41ea-459a-b63c-856065cb5bd7"
        },
        "item": {
          "id": "d20ae446-4da6-4ad6-9abf-86800807728d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b4985576-c74d-43c8-abcd-33d1603bf0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eaaa69-d3cf-4ae4-8e7a-5a726395c890",
        "cursor": {
          "ref": "7e16c1f2-a323-4e97-b9f5-d4036d769f62",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8e413bba-2b77-4b65-a52b-bdbb50384bd0"
        },
        "item": {
          "id": "30eaaa69-d3cf-4ae4-8e7a-5a726395c890",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4eb51419-3904-45d1-b8a3-6d5eb395f2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804c8d6f-e614-4d5a-afa2-7ac0dcba6d8a",
        "cursor": {
          "ref": "e27a95c7-f306-4942-b1bc-715371079525",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9a6953c9-353f-4548-adc2-d220878ff70c"
        },
        "item": {
          "id": "804c8d6f-e614-4d5a-afa2-7ac0dcba6d8a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "74855de7-7b24-4237-a5ca-31712ff4e37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acdf68c-c635-4cd1-a837-2b9677334084",
        "cursor": {
          "ref": "b9ffecf6-2121-464e-9ee5-a13824e74435",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6189226d-3b8d-4d7d-8345-91ffc60c0fb7"
        },
        "item": {
          "id": "9acdf68c-c635-4cd1-a837-2b9677334084",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "18d12a71-0939-4133-ae28-524a5f5eb647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cca5ec-c457-47fe-aee9-ab7343a1067f",
        "cursor": {
          "ref": "2a5f74a5-92de-4ab5-b479-62ff7cdb4e2a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7428f565-fac5-4173-b597-1ad0ce348360"
        },
        "item": {
          "id": "37cca5ec-c457-47fe-aee9-ab7343a1067f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "82d36403-c446-4b44-a4b4-aa73d27585ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fd47dd-4499-40ad-8c69-cd6f8535ac29",
        "cursor": {
          "ref": "0f596031-a228-4208-9453-0decd3c9ec71",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "da4ae5a0-928a-417d-9714-1333e46a0b3c"
        },
        "item": {
          "id": "a2fd47dd-4499-40ad-8c69-cd6f8535ac29",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8e3e829e-c806-407f-990a-2335f1178ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714fe6f8-9e6c-451c-82e0-b9e74e488c3c",
        "cursor": {
          "ref": "59e446d3-9fbd-47da-80e5-ce967ab97f91",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9aad1271-2433-4ba8-919e-70880487fe28"
        },
        "item": {
          "id": "714fe6f8-9e6c-451c-82e0-b9e74e488c3c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f13c7850-2f28-416c-90f2-4a502bba5a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ed1684-d8bb-465a-9cf4-d42b63d8fc9a",
        "cursor": {
          "ref": "bc3862c1-42cf-4ac1-b81a-43f24d4386c7",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "57fa095a-4389-4d2e-b007-449ac20d8681"
        },
        "item": {
          "id": "28ed1684-d8bb-465a-9cf4-d42b63d8fc9a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3fd0be56-c451-4675-aee8-e0e78c72d22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cc2c3b-6f57-48e5-b3f3-b5afc1102d02",
        "cursor": {
          "ref": "c96c184a-d255-430f-b29e-fb75cad6f336",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "817edad7-f91c-4f67-827d-b73bec428d62"
        },
        "item": {
          "id": "02cc2c3b-6f57-48e5-b3f3-b5afc1102d02",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "19ccb0d5-644c-4cc2-bc98-040174483368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02c0dce-5db5-482b-b633-f40b4e16080f",
        "cursor": {
          "ref": "51df928c-f2fc-4d06-8c8b-28cff52ccb3a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dbcd518d-d429-4933-a81c-001e8d392281"
        },
        "item": {
          "id": "d02c0dce-5db5-482b-b633-f40b4e16080f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b9c041f3-7d67-492d-aea6-bfb2a6a46837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1544c9-f9b9-4c66-b4d4-506c1396e158",
        "cursor": {
          "ref": "5f1b3ca1-5d22-4063-995b-69a1350824d4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "634bd924-00dc-4be1-bd19-a056f9bf6866"
        },
        "item": {
          "id": "cd1544c9-f9b9-4c66-b4d4-506c1396e158",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2ca4e2d3-d00f-4e10-bc6e-536f499aa8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a9ade8-f161-4192-bec4-e65ded2a5996",
        "cursor": {
          "ref": "db46db17-053e-4c67-9883-63411d9c6dab",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "047cf34e-4108-4617-bf08-0c843129f967"
        },
        "item": {
          "id": "56a9ade8-f161-4192-bec4-e65ded2a5996",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0c06b282-5627-4d4f-b385-40a6eb0f48d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d0e75a-87b5-4103-8db5-b74a1fd82b12",
        "cursor": {
          "ref": "f5522fe0-9ec1-4622-ae58-1076aecf2a7c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "20fe25cf-a085-423c-8ed5-6a77bfad0c92"
        },
        "item": {
          "id": "85d0e75a-87b5-4103-8db5-b74a1fd82b12",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6723a888-fc96-432c-b472-5290cb428c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100f64bc-6aa9-42d7-b332-034dea9c8023",
        "cursor": {
          "ref": "2fe42e26-921d-43f0-a901-8f84baa517ff",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2a40bf1d-092f-4512-9018-9687d0508dec"
        },
        "item": {
          "id": "100f64bc-6aa9-42d7-b332-034dea9c8023",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cf984dae-5b22-4db0-8def-d8585cae91aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a404c-2692-458d-8d30-45ad3bbf6016",
        "cursor": {
          "ref": "02dd1432-706a-4975-85ed-8185872ed238",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "415aedcd-def3-4193-9d6a-e986ffd8a96c"
        },
        "item": {
          "id": "641a404c-2692-458d-8d30-45ad3bbf6016",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "273949bf-7709-4254-9155-a9e00fc7b814",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b768000c-0283-4dc1-bdbf-c6cf8c1bfeac",
        "cursor": {
          "ref": "00a49143-d14e-443b-85a8-3fa55529e66c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "51d18486-d02e-4d4e-9e4c-47ee4ef78454"
        },
        "item": {
          "id": "b768000c-0283-4dc1-bdbf-c6cf8c1bfeac",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3ef4ce91-840b-4cde-8ca7-20a59b6bd8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9d4c5daf-ab25-40fb-9b7a-f736f4811e83",
        "cursor": {
          "ref": "428b1182-ac00-44b6-9748-ae7f9f6370da",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3d82d390-0a9b-49a8-988e-54ddbb8429ec"
        },
        "item": {
          "id": "9d4c5daf-ab25-40fb-9b7a-f736f4811e83",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1b949abe-9dca-4a88-b5ec-22e0a1acbcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7a0e4f8c-b58d-454a-8cf4-3d386256c259",
        "cursor": {
          "ref": "56c2cb4e-9f02-48ab-8a0c-42acb360f424",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "639b0a47-48f2-4ee0-b8ce-909276fd5382"
        },
        "item": {
          "id": "7a0e4f8c-b58d-454a-8cf4-3d386256c259",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d907ed35-b1d4-4648-9255-31734b46e2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7cff5683-b345-4df7-ac4f-820fd5a39fea",
        "cursor": {
          "ref": "66fb5e72-623f-42a6-9ccc-ad6a145bba7c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9d01152e-535a-40a1-85f4-2ea7c421e9c6"
        },
        "item": {
          "id": "7cff5683-b345-4df7-ac4f-820fd5a39fea",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b94c2180-a489-460b-a237-ba88b3cc1da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "be08cbe7-c342-4d9e-9c06-fc5d00291b2a",
        "cursor": {
          "ref": "3c268df1-a8f6-4d28-89b9-f40b39002bc9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4b0ef6ea-b5ca-4759-8feb-06e81d38c1a3"
        },
        "item": {
          "id": "be08cbe7-c342-4d9e-9c06-fc5d00291b2a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "eca296cb-5032-46c3-9a07-892f5e7b87bc",
          "status": "Created",
          "code": 201,
          "responseTime": 11564,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fd5af5-eca7-4812-9c6b-a55f1cab48f5",
        "cursor": {
          "ref": "aac97f96-d1b5-461d-9cde-2a4b331afee1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "618e27c1-6fd1-4cf7-9e7d-46c6bda61a94"
        },
        "item": {
          "id": "f7fd5af5-eca7-4812-9c6b-a55f1cab48f5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b6cbb46d-e85b-4317-8fa0-27ee8938fd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8d61741a-9ba2-44e6-bc95-d95d26a22d25",
        "cursor": {
          "ref": "f2ca7343-587e-47fa-9f71-296661eaddb9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "49c327fd-cd31-401e-a963-0b8dc2ce797e"
        },
        "item": {
          "id": "8d61741a-9ba2-44e6-bc95-d95d26a22d25",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5ab72ed2-a549-49ee-b697-9ac35676ff17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2dbea047-46b0-4b59-8d98-89b5631ccb7a",
        "cursor": {
          "ref": "a9fbfeb2-e2b3-431e-9943-56e8eea82e75",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0e82283f-bd70-46a2-a3c0-1ed2b652bc07"
        },
        "item": {
          "id": "2dbea047-46b0-4b59-8d98-89b5631ccb7a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "48d3555c-5445-4625-9ce3-0a0e83e3a366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68dceeaa-5fbb-44fe-8dac-15905ab72ea0",
        "cursor": {
          "ref": "14ab0e72-6ed6-4a62-9d51-9cab859ab43f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cf9dbc5d-f681-4dac-bff2-71314ddc2ada"
        },
        "item": {
          "id": "68dceeaa-5fbb-44fe-8dac-15905ab72ea0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "64e3d110-81b8-4e75-8a10-8972e53d6b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fc1281-fdf5-492c-a0d6-bcbee11e028b",
        "cursor": {
          "ref": "b7b0d729-75e4-490b-b73c-708f9756e268",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "27b50726-153b-4e75-b22c-c1ff7e3e249b"
        },
        "item": {
          "id": "00fc1281-fdf5-492c-a0d6-bcbee11e028b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "41efb8d7-6176-44b4-8861-b9353e935e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f29a9a-da56-4c6b-8367-71e51ae6abd5",
        "cursor": {
          "ref": "eadcfcca-02e6-45be-b799-b648d4f308a7",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ca56e958-2dc7-48da-abef-de7254f42b17"
        },
        "item": {
          "id": "85f29a9a-da56-4c6b-8367-71e51ae6abd5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2f10c9fd-e49e-4b97-abc6-aa71bc212dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cdee0b-cc5f-45b6-8871-fca96951251c",
        "cursor": {
          "ref": "5ca6afdc-9c9b-40b2-bf84-d6486f166cb8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b6b909ed-cc45-48c2-8910-f12e4c251db4"
        },
        "item": {
          "id": "53cdee0b-cc5f-45b6-8871-fca96951251c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c892ea1d-abdf-4fa8-934b-1c3796487dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090547a2-26b5-480b-b5f7-7953f497c44b",
        "cursor": {
          "ref": "7cff03af-96b6-4eb9-983c-53df2a23afbd",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "76c518b7-11b0-4b42-aca3-9ad060615bf2"
        },
        "item": {
          "id": "090547a2-26b5-480b-b5f7-7953f497c44b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5f92b1ff-c3dd-4f4d-893d-3d358b8ab424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38cac22-18df-4140-9d6e-47e38d4875b0",
        "cursor": {
          "ref": "292d2677-4480-4757-9259-d182038a987e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5a528b09-c244-44c7-a9c9-58ab36553d74"
        },
        "item": {
          "id": "e38cac22-18df-4140-9d6e-47e38d4875b0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1c69a7e4-ede2-4599-b03a-052b386481d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71efb1c-5023-4320-86ea-b90f0ca7106a",
        "cursor": {
          "ref": "997bd391-f444-4135-9db3-07de40dd54ef",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "24f86afd-51de-43f1-9a46-34d31d4a0d4f"
        },
        "item": {
          "id": "a71efb1c-5023-4320-86ea-b90f0ca7106a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "70b9da5d-84ed-4599-8a51-ca5960a49c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a2fd25-028b-45d9-be4b-8e25bcedc0b4",
        "cursor": {
          "ref": "00e23de3-4a3c-429c-a1a5-4fd31ab061bd",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "075c33df-f970-443b-9467-592145209e5e"
        },
        "item": {
          "id": "75a2fd25-028b-45d9-be4b-8e25bcedc0b4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bb7ed519-8d90-4650-a6d7-8c21b54b1134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dd596c-e8f5-4268-b28d-19c2f8610f46",
        "cursor": {
          "ref": "ede82c24-47c6-41cc-b06a-0e1436962991",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2c52d4d6-c1d1-4012-bf54-143d9d9a17db"
        },
        "item": {
          "id": "78dd596c-e8f5-4268-b28d-19c2f8610f46",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "22468de6-89a4-440a-b140-d959613dec23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348c5ff2-0e6c-474c-abea-4195bca1aeb7",
        "cursor": {
          "ref": "86b6d9b7-3dd7-439d-8c81-152917d96194",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bf2e374e-80cd-4573-b843-c93977045309"
        },
        "item": {
          "id": "348c5ff2-0e6c-474c-abea-4195bca1aeb7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "80fff39c-7635-4cd8-b5fb-76bfcc5f875a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a46bc4-9449-4323-8de6-2a00ce770475",
        "cursor": {
          "ref": "e30eef1c-d364-4c66-af37-1e97725dce03",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f68446d1-b31b-4744-a536-681fed5d411c"
        },
        "item": {
          "id": "17a46bc4-9449-4323-8de6-2a00ce770475",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c29272b8-f18b-43df-af40-96b5b1e8fe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec05cb1b-fc20-4665-bcda-408f107157f3",
        "cursor": {
          "ref": "3d759586-1b1b-4055-aa65-d537070ccf96",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "87dfacaa-b066-4cd4-9890-75d2b2066f44"
        },
        "item": {
          "id": "ec05cb1b-fc20-4665-bcda-408f107157f3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d3ababea-8ff4-4e99-97c9-1c310e5890b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71565cca-75cc-4933-ac73-ee8adc160aa6",
        "cursor": {
          "ref": "a3286141-6577-4e20-b4ac-b061539d5e55",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "90a33c83-6761-4d1e-9ebc-47e59677cb30"
        },
        "item": {
          "id": "71565cca-75cc-4933-ac73-ee8adc160aa6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e4ebf4fa-62ba-427e-84ad-a4cc96593eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6b9326-7262-48fa-9301-5f4d2be1bd57",
        "cursor": {
          "ref": "21d05330-7584-406f-8d7c-6eb1e9097b15",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "756069e8-0aa3-4893-950f-39b74a15d7f9"
        },
        "item": {
          "id": "5e6b9326-7262-48fa-9301-5f4d2be1bd57",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c9f11d08-e14a-4fd2-971e-7abed87d5b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b398ed8-5f8b-4227-8f1f-5dfd60afd17f",
        "cursor": {
          "ref": "6aa46063-dfb8-4805-9c8a-ed0e4d493ecc",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cc6f3d17-95bc-4a8f-bfa3-57afd3932a76"
        },
        "item": {
          "id": "4b398ed8-5f8b-4227-8f1f-5dfd60afd17f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "81f658b8-8195-41f4-84e2-d1502fa99064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c3ab20-a152-4a8d-81fa-31c2f9fb7d2f",
        "cursor": {
          "ref": "cdb4be68-9ec4-4a9f-8d33-43a1cbe008d8",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0c640055-6c88-4253-ae47-a909b9a6d64b"
        },
        "item": {
          "id": "b0c3ab20-a152-4a8d-81fa-31c2f9fb7d2f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a66553c9-6569-4e23-9b89-3487e805726c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "dc852eb0-1479-4c39-aca4-48001a8bdbda",
        "cursor": {
          "ref": "965a8176-7285-4f36-b11a-631f73839f99",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b7ecc1fc-774f-461a-882f-bfd0d79fbacd"
        },
        "item": {
          "id": "dc852eb0-1479-4c39-aca4-48001a8bdbda",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a311da8f-b3f0-40fe-9f67-f3eb61e500b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcef4d60-0dd7-4592-84f2-a9fcb229c461",
        "cursor": {
          "ref": "36e1b305-6921-429a-968a-228b240e2605",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9f8a0824-d99e-445d-8a58-e8dfe2d2019e"
        },
        "item": {
          "id": "bcef4d60-0dd7-4592-84f2-a9fcb229c461",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2e7ed250-6a27-40ef-92a5-bee10627c305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31aa6951-010f-4e2c-bc56-7e52fb6919a0",
        "cursor": {
          "ref": "4a90c3d2-2191-435f-9bf2-63410d17b486",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4b9c88c2-63de-49c2-b8eb-b5bcbf2780a6"
        },
        "item": {
          "id": "31aa6951-010f-4e2c-bc56-7e52fb6919a0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2d0de86d-5150-4a4c-b33a-1002232b1c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd7d1e6-e382-4bc1-a41c-022e76fba659",
        "cursor": {
          "ref": "ef005729-d08c-4a21-9c63-f864915332b5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0d9e2f81-5d66-48f4-bfb1-d6e3c46c9149"
        },
        "item": {
          "id": "cbd7d1e6-e382-4bc1-a41c-022e76fba659",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "75877105-8bc3-4a89-9d45-4d6da859d3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98869b4-985f-4d3f-9122-7522afb347f3",
        "cursor": {
          "ref": "fe137816-a2f8-4370-8747-8256a0806126",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c8db69f5-5365-4241-a450-c1fcef28ffca"
        },
        "item": {
          "id": "c98869b4-985f-4d3f-9122-7522afb347f3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "48c5e8c1-0236-4c69-8db6-f4aa63530751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e286fdba-a032-4460-8afc-2abbd6a86def",
        "cursor": {
          "ref": "46fa2f32-d499-422c-a8b2-c770c7731530",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9997e749-f743-4a85-98a8-c7c3ab14a5b1"
        },
        "item": {
          "id": "e286fdba-a032-4460-8afc-2abbd6a86def",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "65d094ec-2501-492a-993a-60cb2a6a81ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e300c8ec-70a3-4989-901f-355b11c8d1e9",
        "cursor": {
          "ref": "06030ecf-2b34-40f7-ac08-fbb64b812569",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dcde5de5-e0b7-4c81-889e-818dcccba9ad"
        },
        "item": {
          "id": "e300c8ec-70a3-4989-901f-355b11c8d1e9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "332b1831-60a2-435e-b8fa-3d7c7cee858a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db978898-7911-4832-bcd8-b5e76594fb42",
        "cursor": {
          "ref": "f0c88479-b99e-45af-81f5-5c07f94dd93d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d0f3981b-6c31-47d0-9199-ca58a7d8183b"
        },
        "item": {
          "id": "db978898-7911-4832-bcd8-b5e76594fb42",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ce94be1e-8bf9-456e-a279-7bdcd61a7bac",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "695b919b-a934-4b9a-8e3f-f10cf43062cd",
        "cursor": {
          "ref": "50db8ccf-5080-4a23-abea-52b3bab471d1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2054259b-68cb-43b4-b5bc-33edc49278f7"
        },
        "item": {
          "id": "695b919b-a934-4b9a-8e3f-f10cf43062cd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "16e06c6b-6d4b-4bbf-a981-87df31204613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a88dfa5-73f5-4f8f-96b3-7d484b2812be",
        "cursor": {
          "ref": "3524b6ff-c0f1-4143-9f90-7da4647fb11f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5a7dd12c-9fe1-40d3-9a43-f57839a6a9b1"
        },
        "item": {
          "id": "3a88dfa5-73f5-4f8f-96b3-7d484b2812be",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5d9b4835-e6c2-4e95-be8c-93c6b6937521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288b84d9-5052-4cce-9a3e-264a17f219aa",
        "cursor": {
          "ref": "f3577c56-32f5-40da-8d5a-d048affce8df",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0693178c-d870-4b5a-9199-e1fb4db214f4"
        },
        "item": {
          "id": "288b84d9-5052-4cce-9a3e-264a17f219aa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5f576460-4882-4ad2-a190-0b20f1f37337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3937af64-f6af-4f04-a558-c259fb4b1466",
        "cursor": {
          "ref": "02dae7fe-37ab-4dc2-bb5e-b842b12e22d6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3f71616c-9fb5-4e20-8330-dd2b51126967"
        },
        "item": {
          "id": "3937af64-f6af-4f04-a558-c259fb4b1466",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "95c3840d-701a-4503-8a61-7704a049056b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da79619-a368-40ce-9a96-a9092b679687",
        "cursor": {
          "ref": "ff88d694-8fd4-47e6-9adb-55f10b05d8fa",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cca40e8a-b19a-4d47-89b0-445e905b7ebf"
        },
        "item": {
          "id": "9da79619-a368-40ce-9a96-a9092b679687",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d653fc91-76e1-47be-aa60-77cc2f2fd733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15c21ce-39d2-472b-91a0-5b558c02ae93",
        "cursor": {
          "ref": "bf2157fe-49db-4504-aa03-48d739b7a4bb",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9db473e5-2e93-4cd5-b1c0-b804a7caf89c"
        },
        "item": {
          "id": "b15c21ce-39d2-472b-91a0-5b558c02ae93",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d9895e9-d6ed-4ca8-9f0a-1349c4cf6e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568fc83d-e273-4583-99e7-a435431d4faa",
        "cursor": {
          "ref": "9ae8d6a1-9f9b-44ee-a96a-60e4a6114619",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "869d5de3-4c65-46d2-9ba4-f49571adf73e"
        },
        "item": {
          "id": "568fc83d-e273-4583-99e7-a435431d4faa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e44bce75-e430-4202-95ba-960eb48f19d2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "cba5fb44-e582-4430-b2fb-03b0a58fac99",
        "cursor": {
          "ref": "ae6105c9-5983-45ad-b60a-be45ee55ac30",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f09d4745-c4ef-4912-857b-466830d80942"
        },
        "item": {
          "id": "cba5fb44-e582-4430-b2fb-03b0a58fac99",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "137851c7-91ed-4ba0-a1df-c21136df24b4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "75a89a42-6426-491d-9785-bf2ed4a1a807",
        "cursor": {
          "ref": "6e8c17cd-49b4-415c-aa42-10148dc845af",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b39d8fe7-d514-4cff-89c4-77666847b78c"
        },
        "item": {
          "id": "75a89a42-6426-491d-9785-bf2ed4a1a807",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1b0e0d0e-db73-4d96-9b86-48455d81242c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "3da61e9a-d43d-4ecd-88e8-069aeb9b2a51",
        "cursor": {
          "ref": "6bc88d8e-4bbb-476f-bfb5-3f303734a3a8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8b6041b7-a78e-4abf-94f2-fac2650a57cd"
        },
        "item": {
          "id": "3da61e9a-d43d-4ecd-88e8-069aeb9b2a51",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5e5e2bbb-6cbb-43ea-8746-3d331db588a0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "85d3e4b1-0360-4129-a786-2b29ecd7be10",
        "cursor": {
          "ref": "0d1c339f-221d-4945-91a7-232cb9d24b2c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a5817c8a-6c7b-42ad-8990-cfe7c02b2836"
        },
        "item": {
          "id": "85d3e4b1-0360-4129-a786-2b29ecd7be10",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "298091f4-22fe-4f38-b20b-273971ecc9d5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "26a89ff6-4f71-4d1f-b014-9cced570b0ed",
        "cursor": {
          "ref": "e92a5ed3-25bb-4b9e-8ea6-f0d0653cf6b0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "08f20b79-90d3-4761-a603-bdb5955966c0"
        },
        "item": {
          "id": "26a89ff6-4f71-4d1f-b014-9cced570b0ed",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "01050e34-29da-467b-a957-1831ee436670",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f86b5416-6f57-45a0-b756-3cee298209d2",
        "cursor": {
          "ref": "e0ed9d58-1d21-42d3-ae9d-a805d8896154",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6a7276e9-61ab-4829-bfc7-cf5155c91e3e"
        },
        "item": {
          "id": "f86b5416-6f57-45a0-b756-3cee298209d2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "08e39dac-8470-4dbe-9fa8-c6182ea947a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fc4523-122f-4e19-9fc8-372897fe13e8",
        "cursor": {
          "ref": "6b527c5a-f5ef-4613-8ca9-bec8e2a0898b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dec97c74-8de1-47fb-bfbb-f2a5263a15f3"
        },
        "item": {
          "id": "88fc4523-122f-4e19-9fc8-372897fe13e8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fc74b347-7c09-44a5-af73-65e5e4ec6c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a592ba-2364-4dda-9b2c-c50724ebc61d",
        "cursor": {
          "ref": "72cfdca0-0647-4d1f-b72f-e5d583cb135a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1399f7f3-8524-4847-a20c-68c349ff85b1"
        },
        "item": {
          "id": "b2a592ba-2364-4dda-9b2c-c50724ebc61d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1697e00f-7b1d-4b72-bb53-034f65f46aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5069bb-a175-4c69-b49f-a885e5ac9f92",
        "cursor": {
          "ref": "fd3fd6b3-7ba5-499e-80b0-dad93691145e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cd00da5f-e1b9-47a8-bc4c-2754481a8b90"
        },
        "item": {
          "id": "2b5069bb-a175-4c69-b49f-a885e5ac9f92",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2fe09605-5a6d-4e13-98c4-c6175003b1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdc0eb2-7530-4d95-9102-e67f90200ed9",
        "cursor": {
          "ref": "0820e35b-3a31-45ed-a564-c677294b0c94",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "57e460b3-e13a-41a4-8e1f-db78e321e53e"
        },
        "item": {
          "id": "ccdc0eb2-7530-4d95-9102-e67f90200ed9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2574f558-8d70-4365-bea0-f268836a23ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655b1350-34e8-42c6-8dd2-5dcd4ab6fa68",
        "cursor": {
          "ref": "c42c9155-f751-4ee1-a978-2ab840067d9f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5683c6bd-b2ef-4c4a-ab74-004838e56fdb"
        },
        "item": {
          "id": "655b1350-34e8-42c6-8dd2-5dcd4ab6fa68",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9c6c14d4-dd58-4673-ab27-0a9319423783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef022a1-4ef0-4cbb-a378-76abcdd1499d",
        "cursor": {
          "ref": "ccaf5b5e-7f35-481a-bce4-7eaad158b7cf",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b1c9857c-4ac5-4f80-9ad3-ac925a7975ad"
        },
        "item": {
          "id": "0ef022a1-4ef0-4cbb-a378-76abcdd1499d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5f4bd00c-f7db-4b78-99ec-0c8858c21c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef58d56d-2eba-4cb2-8d33-705579efb167",
        "cursor": {
          "ref": "4f6e059a-37aa-42a1-aab2-64b0d2ab04b3",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1334a68a-0ff4-4fc8-9316-f8f6dc9505d8"
        },
        "item": {
          "id": "ef58d56d-2eba-4cb2-8d33-705579efb167",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "604500ed-90aa-44e3-8086-0a372638f8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db258f23-93e8-4c04-8506-8348667c752c",
        "cursor": {
          "ref": "a698b12e-004a-472c-85e1-0c466652fedd",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7bdaf17c-82b7-4da8-87eb-3faefb34bb3b"
        },
        "item": {
          "id": "db258f23-93e8-4c04-8506-8348667c752c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1b5504d6-22cf-4c4e-bb64-d5a06b584391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7975b65-faf5-4dbc-a0e0-faebb392f29d",
        "cursor": {
          "ref": "081160f5-dc69-43f6-b113-5c741485eec3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "96659fa2-22fe-472c-84c6-a953e47eb047"
        },
        "item": {
          "id": "d7975b65-faf5-4dbc-a0e0-faebb392f29d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e42e4591-822c-4973-b4c6-483f2d394477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b6460d-25b4-467b-920a-55094d544ef3",
        "cursor": {
          "ref": "9bc4112d-e9b6-4d41-a6cb-1c6c2a6e28ba",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "386fc206-df5e-49d3-815a-15de3ba852b8"
        },
        "item": {
          "id": "67b6460d-25b4-467b-920a-55094d544ef3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3409e0ef-ad5e-4f61-a7c4-62ca1fbc9854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33b27af-28d4-4e38-90b4-465f56218097",
        "cursor": {
          "ref": "711651e5-1d2e-4e09-b889-c5789dbb82d2",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6deebb1c-3f60-4fee-b716-9e5378002542"
        },
        "item": {
          "id": "b33b27af-28d4-4e38-90b4-465f56218097",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e3481cc9-3005-419f-9707-9cde43bf38d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c14a9d-54ae-47c1-a91d-6c593bb8640f",
        "cursor": {
          "ref": "1fa65d33-3526-4511-94aa-9e8bef5e73e0",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ac251be6-e3f7-40af-8898-69ad66fbaccf"
        },
        "item": {
          "id": "a6c14a9d-54ae-47c1-a91d-6c593bb8640f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9cc4ef7b-ec72-43bf-a2f4-af7a3051b870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8fa37c-5e14-4a01-afbf-fac174914db8",
        "cursor": {
          "ref": "67b543fc-1beb-40d7-9d83-174d5b4ed2cf",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c8f2d536-7b1f-406b-80f1-d12afe763150"
        },
        "item": {
          "id": "1e8fa37c-5e14-4a01-afbf-fac174914db8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "75f6489b-34b8-4eac-a4db-e65e64ddfd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6054d1ba-0355-4011-a989-0ad9c5d7b1b1",
        "cursor": {
          "ref": "09e455c4-54e4-41dc-97a5-f1d486f1bb58",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c59c60cb-25d9-4c08-a229-3b755bbabfec"
        },
        "item": {
          "id": "6054d1ba-0355-4011-a989-0ad9c5d7b1b1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b6fa69aa-3397-4c23-a004-f64cb929cf0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edba514-e749-4e48-b7c8-82170b691601",
        "cursor": {
          "ref": "c0695f74-bac9-4be4-83d3-e586e2919c71",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f6ab362f-9a46-44da-99f3-e12c2af5588c"
        },
        "item": {
          "id": "3edba514-e749-4e48-b7c8-82170b691601",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b31f2a0e-2353-4783-b98e-decb322d8c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c36b3f-8a2c-47df-9a0f-f4579d772780",
        "cursor": {
          "ref": "b1cd5be0-f6e4-4cca-9491-c06a93b3113c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f1f92f15-2898-4727-b95a-e5f338a8f9f0"
        },
        "item": {
          "id": "f8c36b3f-8a2c-47df-9a0f-f4579d772780",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9d4ddc4b-3ee8-47d0-8ebc-a21c56a27506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5121e5c9-348d-45c8-aa57-5fa6ee1be6d1",
        "cursor": {
          "ref": "5135299a-5aa1-46c0-95ee-4858f7874fa4",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3b619492-663a-4565-8cf9-b089a3b87480"
        },
        "item": {
          "id": "5121e5c9-348d-45c8-aa57-5fa6ee1be6d1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bce065b8-05ee-4bc7-b710-f664e9692f12",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "6d25826e-0c02-40bf-aca0-36e4c83f7917",
        "cursor": {
          "ref": "7e2b4931-470d-4ad1-a518-d141aa84d85a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fb1681f2-2343-408e-94ff-b688d49e5595"
        },
        "item": {
          "id": "6d25826e-0c02-40bf-aca0-36e4c83f7917",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "38cea770-5f31-48b3-950f-2384143da9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9c4a1d-3b76-4e34-9f43-715f4ede3dfb",
        "cursor": {
          "ref": "9df84053-45de-48a3-94f3-5bd3c60573db",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2dddf2ae-aadf-4fa0-a6b2-a4d0b1f2f2de"
        },
        "item": {
          "id": "4a9c4a1d-3b76-4e34-9f43-715f4ede3dfb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "70a1963c-a594-4749-a866-fcbfd2b7fbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4455dad-d9d0-4311-b49a-7da8d3e744db",
        "cursor": {
          "ref": "625a9217-e901-4b6e-a697-a46589e69e19",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fe3e8b9f-ae62-43b1-911b-23237b66a3a4"
        },
        "item": {
          "id": "b4455dad-d9d0-4311-b49a-7da8d3e744db",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d8437c0f-bbc6-499f-9828-08d98f7f0be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e72ac5-19dc-4567-8d29-df12ec717e89",
        "cursor": {
          "ref": "d8d3381e-c925-4a8f-869c-31ed28975077",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a154f06f-6ca7-452b-b398-c13ba23ed0dd"
        },
        "item": {
          "id": "78e72ac5-19dc-4567-8d29-df12ec717e89",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6b3fa04f-810b-40dc-ad4b-56095e2bf86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf984038-17fd-4db0-a066-ebef3904b4c4",
        "cursor": {
          "ref": "10db8473-29c1-48ec-91da-f1979c28aa0f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ef49a6c1-f872-4442-a129-9fff1d475300"
        },
        "item": {
          "id": "bf984038-17fd-4db0-a066-ebef3904b4c4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f9adaa0e-1cf0-45ce-87e4-41478a99b005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3d6506-0409-46d2-93b8-dea8b816e929",
        "cursor": {
          "ref": "3032e781-a5a0-45ed-bdc3-34d0cf5e9d88",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9dffd519-ce1d-48c1-a46f-a36c14343bb4"
        },
        "item": {
          "id": "bf3d6506-0409-46d2-93b8-dea8b816e929",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "826a8c08-2415-4c21-a676-d675fba943bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d963997-732c-42e7-b4ef-8fb10559c83f",
        "cursor": {
          "ref": "eda1ff43-8bec-497a-9fd0-2b5052b09ffc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2d7aaf7f-11cf-45d2-8366-454de61bffda"
        },
        "item": {
          "id": "5d963997-732c-42e7-b4ef-8fb10559c83f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "250a0180-6afa-4aa0-9170-3c3a42dabefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b39bde-830a-4b55-84f7-54e0e84c25e2",
        "cursor": {
          "ref": "e2fb6b1b-102b-439a-a355-c7190e507f8f",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9e2f1781-872e-4e8f-8d28-c37af4b77125"
        },
        "item": {
          "id": "61b39bde-830a-4b55-84f7-54e0e84c25e2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "837f6e54-989d-4c61-aa30-ffc8ba15c49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd88ddd0-2c78-4e95-815f-d96c182cf969",
        "cursor": {
          "ref": "3f6d5415-9846-4ece-9a2b-80aa92242cc3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3001e379-3e85-4b39-820a-cfed38ded709"
        },
        "item": {
          "id": "fd88ddd0-2c78-4e95-815f-d96c182cf969",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ce3e9d3a-47ed-44c4-8996-c72d416e12e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409d00d2-8e5f-475b-a57d-721624e7a8f2",
        "cursor": {
          "ref": "7e6e4de8-beb3-421d-a545-c8225708b053",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "599984ff-05dd-4c98-897a-a1886607423b"
        },
        "item": {
          "id": "409d00d2-8e5f-475b-a57d-721624e7a8f2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "45849bd3-d209-4e13-b6a9-9db982b02a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed2aca8-2ec0-42b1-9b7e-53cefbe38bf1",
        "cursor": {
          "ref": "2a71d884-5f9a-4b90-ad2b-f87ae1a177b8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8c0cb57e-61e4-4b22-b427-f4753b1e6c44"
        },
        "item": {
          "id": "2ed2aca8-2ec0-42b1-9b7e-53cefbe38bf1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ce3be1db-ccf6-4a25-afd2-64a5ff168373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d5541e-ab4a-4948-99d9-f1767210f24e",
        "cursor": {
          "ref": "9720ec85-1773-49d6-9d2e-60a312f35b29",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "10bd54a3-b917-4307-bff3-c039fdd17e8e"
        },
        "item": {
          "id": "c4d5541e-ab4a-4948-99d9-f1767210f24e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1c0442c8-0dd4-4151-8919-f6c37c81fe30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cd613f-8d88-42ae-9ac3-095dfc5d216c",
        "cursor": {
          "ref": "f22d4fc9-68b8-4a74-8a4b-1d010ccba230",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f7f907e3-26e6-4760-a4c6-a796c77999a4"
        },
        "item": {
          "id": "c9cd613f-8d88-42ae-9ac3-095dfc5d216c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1d61bc7d-4bb0-4124-96c2-88029e1a81cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7903b42f-06b3-47a7-82be-c4e13f182deb",
        "cursor": {
          "ref": "d227b2ef-6177-49da-a58a-9e9a8a69e2f0",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9051920d-1d48-4207-8a31-f26d429a8c5a"
        },
        "item": {
          "id": "7903b42f-06b3-47a7-82be-c4e13f182deb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cb0de4dd-6b36-4520-8e19-001004c5d4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d583ae1-7e44-490b-a848-4dcb3144f854",
        "cursor": {
          "ref": "9d5e28db-d6df-4766-a96c-f0968d9dadb5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "43feeb37-7640-4b7e-acbd-49b2c92b7a11"
        },
        "item": {
          "id": "1d583ae1-7e44-490b-a848-4dcb3144f854",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "629f06eb-3893-412d-a076-80118fd9ac3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80f6ac1-bad1-457e-be60-d3febcd48343",
        "cursor": {
          "ref": "e6c4cd19-7c64-4116-a775-4741462ff3c7",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b33a31c1-bed9-4c26-a373-3fa9c266ba0c"
        },
        "item": {
          "id": "f80f6ac1-bad1-457e-be60-d3febcd48343",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b3f87cee-179b-4599-9366-63f9fe4a5dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56fe921-a0e5-41dd-a193-59597ded0c2e",
        "cursor": {
          "ref": "d2efab79-ee5d-4d6a-82b2-3b273d822a38",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4554d2fd-2799-4a89-a2e8-a31d9b468ac4"
        },
        "item": {
          "id": "f56fe921-a0e5-41dd-a193-59597ded0c2e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6b7d7c53-87c7-4f0d-a7d5-5a24c9b9d2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6551bf-1637-4ebf-a54c-7316944793bc",
        "cursor": {
          "ref": "e60de6ba-c903-454c-8c8b-f176b12ac47c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "023adf15-97a9-4723-9be0-f97a299ee22d"
        },
        "item": {
          "id": "ba6551bf-1637-4ebf-a54c-7316944793bc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b8dc5003-f4e1-4828-8960-5793f8ed8ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acd4b43-3807-4c53-81bc-baf586490afd",
        "cursor": {
          "ref": "3de9dd62-c2e9-4c84-91d4-561097508012",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "788bae96-a60f-49a6-a287-7f12e12c6cfd"
        },
        "item": {
          "id": "9acd4b43-3807-4c53-81bc-baf586490afd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b6c6b28a-8d6c-4f48-bb2d-c36317928466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62e8e9b-133a-4ec5-8ad8-8a01c06bd40b",
        "cursor": {
          "ref": "d8db1bd1-d7d6-4dc9-8474-f53e3bd26b9e",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "27006aaf-b6a3-42dc-9ae8-2ceed6293d37"
        },
        "item": {
          "id": "f62e8e9b-133a-4ec5-8ad8-8a01c06bd40b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cc0d3e5a-277a-43e3-b77d-4e429e0bceb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c013bdd8-ec9b-4e81-a12e-fbab0ec74dd3",
        "cursor": {
          "ref": "85c71f50-11b4-46ff-813f-6ca9fa110d7f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "26e0f063-eb93-4e02-aac1-1c084e3c8463"
        },
        "item": {
          "id": "c013bdd8-ec9b-4e81-a12e-fbab0ec74dd3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "084e2868-6639-4dd6-99de-d60ee27e1122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0b75c8-5edf-4484-bfb6-4d65bb56e7a3",
        "cursor": {
          "ref": "66419eac-566a-46d7-8122-eb91f630e0a7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bf9ff6a2-1a63-45ea-a682-82a7f6df1490"
        },
        "item": {
          "id": "8b0b75c8-5edf-4484-bfb6-4d65bb56e7a3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f64a7347-2372-4533-ba94-7aea7233df8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5f2501-16aa-4c62-a424-d2d69cde7729",
        "cursor": {
          "ref": "a8727b39-6ed8-4156-bb1a-f80de96b9e13",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f17547ca-2841-499b-9f60-ac4bb4e37ccb"
        },
        "item": {
          "id": "8e5f2501-16aa-4c62-a424-d2d69cde7729",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ca733ba5-a4a1-4fbb-b398-f5978d9ffcb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462ca40a-0a15-48e2-aebf-39852e975893",
        "cursor": {
          "ref": "116c6c5a-8485-4893-ae63-6daf13aaad82",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "321a27a7-bfd0-43de-8448-4b7a9693e901"
        },
        "item": {
          "id": "462ca40a-0a15-48e2-aebf-39852e975893",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "da70243c-0533-4fa6-8681-c8b4afe216b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60705435-5293-4f24-8b78-d822b2dbb875",
        "cursor": {
          "ref": "e145ef92-9f3a-4f40-a79b-85a363596868",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8119d8b5-c7c1-4363-b5d1-170e69cf3999"
        },
        "item": {
          "id": "60705435-5293-4f24-8b78-d822b2dbb875",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9cd30ad3-1240-4609-a1f5-046f1e03f6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b492f944-bb3f-4346-a4c2-1288a174379e",
        "cursor": {
          "ref": "62bd4e68-1082-4b77-8194-d7fd308abb88",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "536477d8-3dba-41d1-bde3-fe158b29abd7"
        },
        "item": {
          "id": "b492f944-bb3f-4346-a4c2-1288a174379e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a4bcefb9-c203-473f-838d-c74926b8a23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53c7fb8-924f-4720-ad8d-c87619f7150e",
        "cursor": {
          "ref": "f6b77c97-03f1-4368-a423-1fcdcecb3b7a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e69c5f0d-7163-48b8-ac88-207aeef3ae54"
        },
        "item": {
          "id": "a53c7fb8-924f-4720-ad8d-c87619f7150e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cc106ccc-b5d7-41c0-a09f-39265027f746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a049f6-0e18-4252-83c0-82674176f543",
        "cursor": {
          "ref": "b9696111-d4c1-482c-9c21-8f8a8b212652",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "209b2b88-b6f3-453d-9244-11c23eeec7a8"
        },
        "item": {
          "id": "e3a049f6-0e18-4252-83c0-82674176f543",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1badf916-9517-4e46-9cae-76bc1b439c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0478f9-f7cf-4495-a820-3ad3a27c7527",
        "cursor": {
          "ref": "4d4bc9a3-e7b8-431c-a6a1-cc56e64b8877",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1d834fcb-c23f-4040-9759-b45784b3014d"
        },
        "item": {
          "id": "ce0478f9-f7cf-4495-a820-3ad3a27c7527",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "45197a9f-f053-486f-afbd-9732fbe87e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8af9667-74b5-408f-877c-d23a50375349",
        "cursor": {
          "ref": "7ed960b0-b73f-4993-86ea-b571441a9bf7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "779c2bce-2b1a-4bf4-8a18-4bdcf2067e45"
        },
        "item": {
          "id": "e8af9667-74b5-408f-877c-d23a50375349",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "711860c4-8443-4877-8dea-4606a2d5b1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81eff60-c23d-45e1-a29f-52241b9e0644",
        "cursor": {
          "ref": "9934a12a-f529-4e7e-b5e7-29fbd91b5194",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2d291f03-ad89-45b7-9f55-02e5879cff65"
        },
        "item": {
          "id": "c81eff60-c23d-45e1-a29f-52241b9e0644",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "71306caa-e8ab-43cc-9421-2576f7ed20ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc065219-5199-4964-a2fd-6dfd9e442430",
        "cursor": {
          "ref": "af5bad5e-afd4-430c-aa75-45905d591313",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0278cb63-232a-4dd9-a594-6cbe3552180a"
        },
        "item": {
          "id": "cc065219-5199-4964-a2fd-6dfd9e442430",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "13513b0c-ccea-4dc1-927c-c69e9f7557dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea21423-b359-440e-bba8-2898518f04d3",
        "cursor": {
          "ref": "c3cb7862-c08e-4320-aa81-d595acfd22d8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "24e03dd9-4644-40a5-9e1b-47056943aab2"
        },
        "item": {
          "id": "6ea21423-b359-440e-bba8-2898518f04d3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ee9d6df9-7aa5-4765-96c8-c59b92db19c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6eb3fb-9563-40b5-8c79-f21ba01edfaf",
        "cursor": {
          "ref": "0daafd16-0fe3-43bc-8e92-e2d825c290c4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a0f7334a-bf47-4883-88f9-6ef58084d0f4"
        },
        "item": {
          "id": "1a6eb3fb-9563-40b5-8c79-f21ba01edfaf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "51a01fef-e3c3-42ee-95c1-cf38ee0f5f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715b9b47-73e2-40e0-97cc-ee174fab3623",
        "cursor": {
          "ref": "c6ae022f-d4b3-420b-9cc9-44c7b824c6bb",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "96aeac75-0066-48af-a89f-5f87beeabfdf"
        },
        "item": {
          "id": "715b9b47-73e2-40e0-97cc-ee174fab3623",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "252c4078-5159-4b58-8140-bbdaabb24c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88abbdd5-b7c9-490c-9e76-84cb1de181f4",
        "cursor": {
          "ref": "4f4dfb3d-5ce5-4fca-aab7-c0c9ff922614",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9fd56184-f59d-4b04-bd8f-fad35d23e8b8"
        },
        "item": {
          "id": "88abbdd5-b7c9-490c-9e76-84cb1de181f4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d4b0fe59-533d-47f9-8ea4-80e705c6287a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dc1ea5-a424-4093-8d87-02ab1575ff8c",
        "cursor": {
          "ref": "0c58b729-67f1-48d1-a437-91384f4378c3",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "765bcef9-824f-400f-a089-cdd5fbd50770"
        },
        "item": {
          "id": "e3dc1ea5-a424-4093-8d87-02ab1575ff8c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "85430931-bf77-41f9-b5dd-d72997c4d7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952e3ac1-af63-458c-9a36-2a86c4c54ca9",
        "cursor": {
          "ref": "adf6d5c6-35a4-4703-b242-e5e5073c3985",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c5460674-d12e-48b8-8473-676fb519cc93"
        },
        "item": {
          "id": "952e3ac1-af63-458c-9a36-2a86c4c54ca9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5bbb653f-abc4-4237-ba46-790f707a542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8147bfcf-ce14-4e25-8e0c-1f8569fce13d",
        "cursor": {
          "ref": "ec8f1f06-24fa-48dd-b19c-bdcfc33bfdbc",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "52ec2cbb-547b-45f2-8647-79d50c254e0d"
        },
        "item": {
          "id": "8147bfcf-ce14-4e25-8e0c-1f8569fce13d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "384fddb3-9bb6-4c6f-9a78-a76173519fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecc70dd-fbaa-45dc-a3bf-23a2c8f8f04f",
        "cursor": {
          "ref": "cc763059-b247-4ac9-9202-93424b58edb8",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "677bf1d1-c09d-43c6-9825-23a71605dab3"
        },
        "item": {
          "id": "eecc70dd-fbaa-45dc-a3bf-23a2c8f8f04f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "15ae8ad3-f343-4156-8f9b-aa87ae7d9cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e04947b-0012-4144-ae14-7c61519c62c9",
        "cursor": {
          "ref": "56f91ddf-e752-44df-a256-d56474148710",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4d599497-75d8-4e7b-9574-0d444665bd35"
        },
        "item": {
          "id": "2e04947b-0012-4144-ae14-7c61519c62c9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b7258011-3d0c-4046-a369-b876fbd29a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856e36ea-d418-42db-b2eb-f508557d6e61",
        "cursor": {
          "ref": "42b0b08e-16d6-466d-9d9f-a2264441fd03",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "56241992-fe5e-4513-a79c-0707a6c3ad37"
        },
        "item": {
          "id": "856e36ea-d418-42db-b2eb-f508557d6e61",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3e0e4c98-9e4f-4018-922c-0b420f07913a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43fafb3-4712-48c7-8c86-cd02737666b9",
        "cursor": {
          "ref": "ec80e048-9055-499d-b7bd-fd8277342b21",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4b0ddade-3bc4-48a2-9769-63fb7dbdb0d0"
        },
        "item": {
          "id": "b43fafb3-4712-48c7-8c86-cd02737666b9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0fc62c85-391e-41a0-880b-85dc65b86f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed65dd2-109e-4421-8a5a-8cf8c3f0925f",
        "cursor": {
          "ref": "e2cd10cd-fefb-4614-9fc0-4f6aea405db5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e59f0b99-8644-41f4-8eae-8157e08c1a32"
        },
        "item": {
          "id": "bed65dd2-109e-4421-8a5a-8cf8c3f0925f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d5fce741-c774-4657-b586-e0dde5c2e30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a3eac6-3b44-4866-87f0-c41c9796d8d4",
        "cursor": {
          "ref": "f568a814-653c-4538-b216-c5b45e3b6543",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "37ebe762-3b51-43ee-a5bf-3dd9f6b4da49"
        },
        "item": {
          "id": "f6a3eac6-3b44-4866-87f0-c41c9796d8d4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "96d6635c-ef67-4aee-98d8-c7d8d02dc9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42afdd74-7eeb-4dbe-b3a2-e23d7e462192",
        "cursor": {
          "ref": "093e8995-7bca-4332-a287-e0d980930ffe",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6ead340c-933f-48fc-88a5-c4d9299b3dbd"
        },
        "item": {
          "id": "42afdd74-7eeb-4dbe-b3a2-e23d7e462192",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f82932f0-1382-4521-9810-17bccbc8b24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341ac24e-9c0f-4c5d-bfc7-8ea5815fac62",
        "cursor": {
          "ref": "f6cd0201-b6dc-464b-a5e5-05e971144788",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5cdb73c9-5464-488f-b068-735ff28b6b15"
        },
        "item": {
          "id": "341ac24e-9c0f-4c5d-bfc7-8ea5815fac62",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "69a62caf-a845-4095-af73-1e2c2f004324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26668c39-a4c2-4401-9bc8-12853e0bb920",
        "cursor": {
          "ref": "08114b23-cec2-4657-9be8-ec0c363ec7fe",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a7269c6e-1f6a-419e-bdca-b7b636717a25"
        },
        "item": {
          "id": "26668c39-a4c2-4401-9bc8-12853e0bb920",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "29240289-d243-46c4-aa13-82bbfa4f076c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e176014-6eb3-498e-9fb5-8746e3036026",
        "cursor": {
          "ref": "794d7542-8786-4764-8ab7-554b4a1fd366",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1a3f5c34-7240-4bb2-a237-1c63a5ead05e"
        },
        "item": {
          "id": "6e176014-6eb3-498e-9fb5-8746e3036026",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "251f0247-98f3-411f-b599-8598e35b00e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feea4cb0-c80a-427b-bada-ef6f51fce720",
        "cursor": {
          "ref": "6446af60-7619-4ffe-8595-feff815f770c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b759ea26-6c26-455b-846f-805020a1cbc3"
        },
        "item": {
          "id": "feea4cb0-c80a-427b-bada-ef6f51fce720",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "96252340-723a-4267-842f-d781d51d52f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95c6c6f-8a1f-4e4b-ae76-b5b2bc621668",
        "cursor": {
          "ref": "46c223f7-4fd4-4b58-84d8-367e6becfc47",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ec9c3bea-3745-4444-8cf0-3d9c4e6e3e40"
        },
        "item": {
          "id": "b95c6c6f-8a1f-4e4b-ae76-b5b2bc621668",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "082c4d12-7715-4994-b0be-35d0928e9be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a20e100-b72b-456d-bf0c-fef2d44cdf47",
        "cursor": {
          "ref": "d7b7da6a-21c2-45cf-bfd3-ac947074412d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d6689793-77bb-4d97-9b96-1a227766aa37"
        },
        "item": {
          "id": "6a20e100-b72b-456d-bf0c-fef2d44cdf47",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "60203522-7ddc-414e-8523-a31608618490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c18178-0c7f-4991-9c9f-2446796f6191",
        "cursor": {
          "ref": "a96ba765-0902-40a9-b8e3-117c54e6e8f7",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a0f1467e-8226-4887-88f2-4af755713344"
        },
        "item": {
          "id": "a4c18178-0c7f-4991-9c9f-2446796f6191",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "256a282c-e780-4aeb-a023-181c1ce32a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f1441e-df00-44a2-9650-b84fc45de707",
        "cursor": {
          "ref": "a5560e89-5e55-4112-a231-330e070da463",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3f687038-d64c-4996-be7c-7689ed39a8e0"
        },
        "item": {
          "id": "07f1441e-df00-44a2-9650-b84fc45de707",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9b1b5123-2765-46e1-83be-b61c7583393b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f98613f-aaab-4e0e-924d-2461882cb70c",
        "cursor": {
          "ref": "d15f0c6c-9c73-408e-899d-446f3947ce3b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "621d9175-f8e0-4c29-878f-0a5db24ba56d"
        },
        "item": {
          "id": "1f98613f-aaab-4e0e-924d-2461882cb70c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d4580b33-908a-47b6-b409-5e5c402fcb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cf43fe-86ae-4093-a230-f1330374807f",
        "cursor": {
          "ref": "45d042d9-27f3-4d1d-9fcd-60a296989c6a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "88ab94da-5954-4976-8403-7b626d2fb74e"
        },
        "item": {
          "id": "32cf43fe-86ae-4093-a230-f1330374807f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1b74c2cd-b4e0-41d3-a3ed-f4c621a715a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c14f7b-b6c8-4ec2-95b3-cca4b986c2a8",
        "cursor": {
          "ref": "b187bfb1-d769-4be4-8a5a-57523310f3fd",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f7e2dc24-ff05-4cdc-8711-15d4fcfe8614"
        },
        "item": {
          "id": "d5c14f7b-b6c8-4ec2-95b3-cca4b986c2a8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a791a2f8-8937-4e3d-88b0-863b642c8154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dd2b68-377f-4028-b809-db0d90179c23",
        "cursor": {
          "ref": "49b1bffc-1a75-449b-8265-18bac05b27f9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5dcee59a-f9d6-4927-86ea-c7bd75fd8c42"
        },
        "item": {
          "id": "69dd2b68-377f-4028-b809-db0d90179c23",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "34a24fdb-1a3e-4492-99d3-5d4eeacd891a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b191b666-cf65-4056-96aa-62fc70758d71",
        "cursor": {
          "ref": "7a477dd8-be32-42fb-8bd1-e41ee5596fdb",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "65ee9ab5-cbb0-4010-a2a9-94315715f891"
        },
        "item": {
          "id": "b191b666-cf65-4056-96aa-62fc70758d71",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "69977e88-78bd-4efd-894c-95e54535f2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ca6f99-d2fa-4120-9b77-2b31167b066f",
        "cursor": {
          "ref": "37eb4607-5ad0-4165-8899-2c62f2f37274",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "52939d6a-a883-4f80-ac50-89dd731ea87e"
        },
        "item": {
          "id": "20ca6f99-d2fa-4120-9b77-2b31167b066f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0b57a932-f66c-44f7-9965-4bff5fa943ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4a9a04-3017-4e73-b3e0-c2be045f21c0",
        "cursor": {
          "ref": "0c9c9f51-cfaf-4284-b407-46f53a3c1b1b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "72ec299c-7cd4-4510-9c14-56c571013aee"
        },
        "item": {
          "id": "7c4a9a04-3017-4e73-b3e0-c2be045f21c0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2f3853f3-74dd-4b05-bc50-7379afa0cc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653613dd-31aa-4abb-b1bc-64d8a837ae93",
        "cursor": {
          "ref": "14861434-c6d4-4132-93bd-437052dd06ef",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "51f55aaf-a20e-4ec4-a7bc-0c98074a0cdd"
        },
        "item": {
          "id": "653613dd-31aa-4abb-b1bc-64d8a837ae93",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4d256a09-98c6-41da-8106-8e8c1b13b64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd18b0e-500e-4b18-b1ec-7742430af829",
        "cursor": {
          "ref": "0cb6abd3-0ad8-45a9-ba0f-401a54087b8c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bdf6a299-3557-4c31-9cd3-089fb39563b2"
        },
        "item": {
          "id": "5dd18b0e-500e-4b18-b1ec-7742430af829",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "189e4313-1fc9-432f-b7cd-6515fa104650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d439aa-8a7c-44e7-b319-06485ea031fe",
        "cursor": {
          "ref": "b74c5d5a-0fb3-4641-a03b-fbdfa157280e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2c7ace5e-7ef1-4fe6-b68a-f96cbe0305d7"
        },
        "item": {
          "id": "37d439aa-8a7c-44e7-b319-06485ea031fe",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "04e34bb1-9c14-4add-bae8-5406bbc2e2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca85cd9e-5c43-4eef-abdf-b51494d2a9c6",
        "cursor": {
          "ref": "20a31809-bae9-4c5c-bf21-8439f8f67e19",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5a801fca-f806-4463-a8d8-9d61c30c481d"
        },
        "item": {
          "id": "ca85cd9e-5c43-4eef-abdf-b51494d2a9c6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e899aae5-12d0-4294-80fb-14448e459918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f82be79-e144-468e-adb8-83aa91287b12",
        "cursor": {
          "ref": "33bb0419-1baa-4df7-8616-4b693338aba3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1d96326a-6a02-47f5-8cff-301c389ce8c8"
        },
        "item": {
          "id": "8f82be79-e144-468e-adb8-83aa91287b12",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e9c6aacf-b583-48c5-bfa0-ee3025177f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb9b068-fba8-4515-b47f-1009dc907968",
        "cursor": {
          "ref": "2cbe4588-ca75-44c6-9063-77a8ec5c0a1a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dbc2abc1-5a03-4558-ab09-1f49d2f58703"
        },
        "item": {
          "id": "1bb9b068-fba8-4515-b47f-1009dc907968",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "135f4466-26e4-41a0-8341-a804d6641b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61c71cc-46d0-4daf-8267-bead7e6d2c27",
        "cursor": {
          "ref": "00deb501-baf4-4811-8fc3-0293e2a35863",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "49ccfe07-fd93-4d70-b81a-cfea10627604"
        },
        "item": {
          "id": "b61c71cc-46d0-4daf-8267-bead7e6d2c27",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "71279b05-8b71-48d5-8e3e-3de5d64717ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0175b1-661d-4b0a-9f5c-c5c79d0c5525",
        "cursor": {
          "ref": "ad06fb2b-4649-4602-aca2-5299bba3c803",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "12c583c4-a8aa-45e5-84a4-791ae1cb67d9"
        },
        "item": {
          "id": "0e0175b1-661d-4b0a-9f5c-c5c79d0c5525",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "58b561b9-78f2-4f01-8150-7350c1994534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1877597-137f-4d9b-973b-f3cc6b9d7867",
        "cursor": {
          "ref": "3cb3b6ab-091f-4c8f-a10e-359eb0c491c2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "02ccee9d-614e-40ac-9454-ca328c1613d6"
        },
        "item": {
          "id": "b1877597-137f-4d9b-973b-f3cc6b9d7867",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d95abbd8-1af7-408c-ba27-3d46d46bcb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b277db-d33b-4936-847a-2c9a71c8b7c9",
        "cursor": {
          "ref": "6ac3b2e6-d320-41be-8e26-723a5737615f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e29a7ac2-23d1-45cd-8e2b-e5fb63cad8b3"
        },
        "item": {
          "id": "89b277db-d33b-4936-847a-2c9a71c8b7c9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5aa0d8da-751e-420d-b4b9-a443d9cc2ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caca035-5e45-4b54-8f3b-3ce0d08b49dd",
        "cursor": {
          "ref": "5caba8a0-a892-495a-b9fd-7acae88e8385",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1da0064a-68bb-44f5-8ade-85df44280f8c"
        },
        "item": {
          "id": "9caca035-5e45-4b54-8f3b-3ce0d08b49dd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "331b314b-eeff-4712-ab33-9b77772b1f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575a8cea-c89e-4c2a-aa6f-e37dc25940a9",
        "cursor": {
          "ref": "d7db06fa-436b-49ae-857c-72f2cc1997fb",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "87d8869c-01df-4a92-a347-8206bbfd3fd8"
        },
        "item": {
          "id": "575a8cea-c89e-4c2a-aa6f-e37dc25940a9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0b4983dd-824f-487e-be04-fb7a93d177c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308c17e7-42a3-4bb2-8658-29866ca98654",
        "cursor": {
          "ref": "87bfa713-86ec-47b2-b9b1-cd8c3f83f0bf",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c4eb7c73-52d2-4ab8-b3da-bda20b34748d"
        },
        "item": {
          "id": "308c17e7-42a3-4bb2-8658-29866ca98654",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9c6b0445-6fa0-4925-b233-2eda7e765b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1652e0a0-043a-42d3-9aec-4bf63def7dfc",
        "cursor": {
          "ref": "c06d366c-05a0-4c1e-a1fa-810fde4bf43d",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8ad3071a-bfa2-4634-8291-412bff5760cf"
        },
        "item": {
          "id": "1652e0a0-043a-42d3-9aec-4bf63def7dfc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d6d324db-1f9e-4c59-b3f4-172628b7c2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1253e2-e088-4d35-9bb5-ecbaa44ac241",
        "cursor": {
          "ref": "0af05a2c-f00d-46b9-b401-41bb8120eda1",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "12f085c1-0106-4536-9347-dcd8313e01c2"
        },
        "item": {
          "id": "2a1253e2-e088-4d35-9bb5-ecbaa44ac241",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9bfc2756-0bd9-4024-8682-2b1ad997b4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b98e8a-72f4-4cbd-be13-696cc8dbe4e2",
        "cursor": {
          "ref": "965941a8-21c3-4df6-9ad1-7d342aa1d27d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "eae9e58e-e188-4adb-88ac-269cbd2cd164"
        },
        "item": {
          "id": "b2b98e8a-72f4-4cbd-be13-696cc8dbe4e2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "65c372f6-777c-4d45-b899-5365a60f40d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1935868d-af6d-42b6-a5f3-16868b9e16a3",
        "cursor": {
          "ref": "baff09bb-ed15-4ecf-ab6d-4fcfb8bbec41",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bc51bc8e-13cd-49bd-b3ec-2cfec3f7c14b"
        },
        "item": {
          "id": "1935868d-af6d-42b6-a5f3-16868b9e16a3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7933a6c0-10e3-41bc-97dc-c8b55ea9fc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc37791-052d-4269-9ea0-9f20c61bf83f",
        "cursor": {
          "ref": "308b9c4d-f256-42a1-b73e-fb392d82daaa",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5a7c7cc1-5676-444f-b159-8b7a74017434"
        },
        "item": {
          "id": "8fc37791-052d-4269-9ea0-9f20c61bf83f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8f83b085-bd60-4f54-b182-ef0f0da2bad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5a8de8-4137-44f5-a24a-a44a424f7d96",
        "cursor": {
          "ref": "433e989a-34c2-4d1d-a55f-d2c7aa17308a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "01b878c5-c4ed-417e-8aac-a02be3bee0e1"
        },
        "item": {
          "id": "ac5a8de8-4137-44f5-a24a-a44a424f7d96",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9c2c990b-fa27-4251-82b5-d3f5e07127ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5f4aac-dae6-4f15-aef3-2c504c2c51b8",
        "cursor": {
          "ref": "2023fe5b-d200-4480-bc18-d49009754f78",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0a7751df-b670-4079-acfb-a8e52c982a1b"
        },
        "item": {
          "id": "2f5f4aac-dae6-4f15-aef3-2c504c2c51b8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ff649779-1df8-4474-8f5f-bb079795ace4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57308f2-fa8f-412d-b441-f66a0f327f6f",
        "cursor": {
          "ref": "15818ce1-e4d9-4fcb-a507-eeeebe70c6f8",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bc9255d5-d281-4ee1-91f7-ffcaae7e59b3"
        },
        "item": {
          "id": "e57308f2-fa8f-412d-b441-f66a0f327f6f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fcfc1c48-8783-4482-84dc-ae6e47cbd18c",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ee7f32-389b-4a7f-9b39-46494ea51974",
        "cursor": {
          "ref": "42d2c210-b2e1-4e3e-8adc-d887cd93f469",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0f7c1008-32a7-4478-9cd7-bda7b8e78631"
        },
        "item": {
          "id": "76ee7f32-389b-4a7f-9b39-46494ea51974",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6ea18f1a-ca6a-4a62-86ae-fec71d967a68",
          "status": "OK",
          "code": 200,
          "responseTime": 2143,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc19a0b-a8c8-40ac-baf4-2db95af18083",
        "cursor": {
          "ref": "13b23f82-0fff-4988-8188-eefe4503592a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "54b61ab4-e253-4bb0-a353-e83d6ddac44a"
        },
        "item": {
          "id": "1fc19a0b-a8c8-40ac-baf4-2db95af18083",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e4cd8d23-7647-4016-ac1b-1cf326fbf2ad",
          "status": "OK",
          "code": 200,
          "responseTime": 2977,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "56309f97-f569-43bd-a92b-3e9211557e0f",
        "cursor": {
          "ref": "8559a401-c4d7-44bd-9f2b-c9ae9c972b73",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1ddb26dc-7aab-41b6-add0-9efb09919943"
        },
        "item": {
          "id": "56309f97-f569-43bd-a92b-3e9211557e0f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8f684824-7389-4df1-aab4-45da701ccefc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56309f97-f569-43bd-a92b-3e9211557e0f",
        "cursor": {
          "ref": "8559a401-c4d7-44bd-9f2b-c9ae9c972b73",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1ddb26dc-7aab-41b6-add0-9efb09919943"
        },
        "item": {
          "id": "56309f97-f569-43bd-a92b-3e9211557e0f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8f684824-7389-4df1-aab4-45da701ccefc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50874a1-e740-455f-b6d5-9f338220deee",
        "cursor": {
          "ref": "1a215c36-4c04-4a24-b7bf-016b992535f7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "aacb64a8-cf8f-4784-a8de-e0b96caa9470"
        },
        "item": {
          "id": "a50874a1-e740-455f-b6d5-9f338220deee",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ab23ebba-6798-4401-b49d-a8a9751ca9ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f818c6f-09bd-497d-a2bb-92e141524685",
        "cursor": {
          "ref": "865f695b-267e-4a3c-ad53-a010546b7f8b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5ebbd5ff-b5c1-492b-9dbe-a0a1240c23c9"
        },
        "item": {
          "id": "4f818c6f-09bd-497d-a2bb-92e141524685",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1b6d5224-c5ce-4b02-a3c6-51fd70fefb40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}