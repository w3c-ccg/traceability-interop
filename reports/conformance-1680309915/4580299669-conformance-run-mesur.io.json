{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1be1f722-0e9c-4a4a-bb74-fd7f3359fc55",
        "name": "Clear Cache",
        "item": [
          {
            "id": "755604e0-e8fc-4ccf-9ba5-4a4258240cfe",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d99a6fd0-9c8f-427c-ab79-3343b7a69a56",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "474bc3a0-0496-432d-af0f-c12ec2ce6527"
                }
              }
            ]
          },
          {
            "id": "7f42412a-e43c-4d1b-b2e5-f9d35e906ee4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa076553-9216-43fe-8f5b-da1332a50a55",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb37317b-9ab1-4d48-a272-10c29517dc55"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "69d48030-16bd-46c2-85d7-9c6918113129",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9ede181c-cb63-46b8-ad66-2fa5ae088a8c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36635d6d-dda2-45e6-b062-c346a59c89ed",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e825aa12-8ed1-4210-a811-5461bcde6820",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4b081f0-2883-4a33-84a4-44f004148eed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04a36deb-5193-4676-ab75-170d084ff227",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f5e300e-cbcc-4271-b8b0-bf13728c269b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e109452a-1802-4265-9802-ff59dfa7d63d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b51b67e-488a-4930-9fa5-87cf86317ede"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e51a62ae-6c63-47ae-8b80-22d5390b9662",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a3902426-93e0-4e11-bd8a-91df928578e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e5de16a-77df-4be8-8979-a191924856ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3555f566-c9ae-49cd-9be4-14dcf9b3dae5"
            }
          }
        ]
      },
      {
        "id": "8f69bff1-4305-48e4-a2b7-ceea5191a459",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "902bb7cd-be05-4b38-9bb5-c1e3c24c0ce6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d61c681-b9b7-43ce-b08e-b5eb23e7ab1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40fd82ec-3515-4428-b21d-706260a1f6f8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf56229-00ad-4883-96e0-41a1570ef531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "100660ef-5267-4edf-8331-26b1f1723032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0705e2b8-3fa7-412b-9f57-8be44aa9e64f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4f52fd-dc19-426c-a9cf-2721de93f7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9959a8c2-78d3-45ae-b02f-74d39ad1661d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3920cf8d-2a33-44d8-b633-c44f105f4f90",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecc90e7-50b6-4a9d-abae-dc7c710781cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3145283-125f-47ec-8ba6-98626c5804f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f1c991e-3bc8-4e43-85d7-f630bc2ffb62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e622467b-f7bd-4043-81a0-81dec570ef24",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c42e31-eeb7-4361-ad05-aa8847e458aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3711209c-f149-4fb7-a1e6-c9c3487de6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a52f832-6c06-4000-8e92-51c1b415ffb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad8321e-5999-45d3-992d-a273b1fbf1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0000d77d-3c80-448e-8dc3-8fa7afd81910",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587865b3-9720-4fd5-9473-22a596a027c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0abc9207-2720-44f3-a4ca-3794998401ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001094de-aa51-4447-98cb-0461ca2d20dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3ca3b62f-48d1-4abc-8756-ebfd6c48b307"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "caf49862-a94d-4bfa-afd0-b28b95277402",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4231cd66-f175-4e35-9ed5-00a6eea79197",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "964e578f-de5b-477a-8e3d-474aa5bc3566",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "86dc413e-ba03-4d28-82c2-d3b8e6939ec7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bb91c96-930c-4cdf-921d-59b3bfc0c04e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "63649720-7a33-4b42-b708-21870c425596"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5880383-b365-43cd-8196-76bfb11d2c46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf2eaa46-9843-47b2-82af-452a97753f89"
            }
          }
        ]
      },
      {
        "id": "57d35fe2-af34-4af3-890f-bd8e692b7f5d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f569995a-ba91-42ea-b0fb-bef522041e04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7ccfb5b-49e7-4fa7-80ff-02a53419d2b1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e4f3122b-18a2-4d6c-9eb7-ec82ad0d248e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62c8ba3-f6c5-4512-b1b9-81e60d5dcc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc50295-d499-4cc2-b0c0-993f18f2a419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83571b57-c1b3-4c48-be36-d72e7491e16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5e3ea37-f58f-41af-b7a2-e5b66fec3d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd430d2-455a-4acc-a7f6-671e3223d93a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621b0fe6-4950-4592-8b44-e22b85e056ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6803f0f-df9a-4588-ad4d-a709cc8b2518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d69e4b-287a-4c0d-9e04-c6ef27354c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "984f78d1-258e-4403-994b-a77be32fea03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630a74f9-3089-4170-9e15-4ac4ccb6b422",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3debc29-87f4-432f-be14-3d075a9d0465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4da4fc-b1ab-41f8-a987-70c2ce98c4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d508e0-a426-46fc-bcdf-08de1bf1582e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "684423af-799d-46bd-9eb2-5019dff695f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0cc851-36a3-49c8-a0e7-52032f8fbcb0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7aa621-717f-424d-ba98-e8428eb767f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a87228-ffe8-4997-886a-d0e646163a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bc3de7-5a3c-43cd-be3e-8d860c21a4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "509e305e-f597-4ff4-a2ab-db825a06e292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84096c9-4ef4-4991-a18f-e0ed2a623caf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7766dcdb-b943-4a36-b8ce-78ea1712214c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc55659b-f9b3-4f60-906b-bbb851fa6cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b84692-5122-4028-a11d-0f11e9eb0e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73e38d6c-51ca-4e77-a695-5627cc8cfaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32d9821-4636-4803-8e40-1bc0b39be156",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29d97a0-e8bb-4bbb-a126-1afc6deb3b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e34f02-a149-4747-9a90-9f2cc9fa8321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dbd7be-b562-4281-8c0c-64670d8a13d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b762585-d9b6-42e8-bb48-7db418384b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef76df5-22b0-4981-8675-536d5fcb6a08",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2589b08-ca4c-41dc-b61d-ec28f0c56d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f054e6f-8ab7-41c0-b5b2-fd467a5f2e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd617ea8-7a48-48dd-97c4-e28ee30524d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "556f7305-b89b-43ff-8605-529a9995cfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731f257c-c9d3-40dd-b846-e1b0df7dc279",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1c9688-5582-4fb3-b5f8-1dbffe51395b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467245ba-a01e-4d70-bf30-7d983c5d53ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175f96b4-57fb-425d-acaf-3195c73b5655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "952590df-7f58-4890-b9b6-2ba8ac56b8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec849ec-fcc1-4b40-9af3-e5ceeeb9dab4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb50333-e275-415b-aac2-f00ae38f08e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacc5938-d254-4b22-8521-5d78b4b326ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89635f28-19a9-479b-8436-a974cc5609ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2729cdf-331f-4bad-9802-d085fb77b9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e99f69d-d511-45aa-aeb4-1bd05e2b7611",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548bae8e-6d03-4a00-acb8-a831aafe5466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8c9b9b-c5d1-47a8-9e87-ed9e00f5b071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be548b27-5d3f-4d67-83f3-ee42050356c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82d90341-c9ac-412d-8b33-2f513c1e0622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3f7f76-bbf4-4384-b598-b21d581e5f87",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a18fad-54f6-45c9-89f1-0386c169a7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384542f7-58f8-46b1-9056-1db2a9d98b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610578c9-5271-4e26-8394-4330c01259a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a084b95-33d7-443c-8e80-aa152884ee64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68aff78-dcab-4814-911a-4988760855f7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452ecb0f-6692-41ed-af55-6a97da80ade3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d502f8f6-6af2-4f75-9faa-8d9ac06711c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2459eb-21db-4253-aab4-de0452601725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2b1b2f3-8650-4e9e-bfc0-8ae341b8275a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b732b6-374f-4b14-b8c3-09690110203c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faed55bc-8f72-4c0c-8719-2b22553c44f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cfa9a7-2287-40ba-9f0d-f9d30970e579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0909a60e-b30d-488e-b73e-de98c21f583b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc6bd00a-ee9a-4cd1-8e26-612809d2436c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a464ef2-5c3c-4b2a-8c23-68ee72540e51",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde773c0-62a5-4c23-8f7d-13183da4f344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e96319-1481-4aac-8ce0-5727815cd2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e2c411-0520-48e3-be92-5360ca520ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45b93c31-0712-4057-aa54-5f7b559ba468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e41e211-59ae-4eb1-ba04-6e4debc3d6fa",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4b2156-3632-4972-af9d-c2f8fc33df60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afeed27-cfb6-4fcf-b5bc-07fbc30dad97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339c1242-b534-4356-853e-1e91f67a51fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41e9c558-4510-4a7b-ab10-eb02decbeaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d676547-0460-4010-bb42-c5bb9d583518",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9cbadc-5714-44e6-abff-4f906d273c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4843c8bd-a79c-4a6d-a985-0072b94558d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95856ba4-cdb7-4454-bf21-c27db2fe90fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2442da8e-f899-4fe8-a105-331bf6f95ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f892dca-eb61-4fb8-addd-ec9cd8cd1858",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8f76bd-d1a8-449d-9fd4-56d43386351a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0039e88f-7a41-4346-97f5-b0c7c45b9736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5d5618-5693-415a-802e-09ee90bad185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c21714a8-81a1-4563-a5c8-b5b1c4dce321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62657d74-9855-4d69-b91a-fd6b7a4dcf5a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3b41fc-f71d-493d-ac7e-3ce2486ea570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003f89dd-587e-42cb-a1f3-96f5307670f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1240a861-37e5-4072-bf4c-adb187cdb298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1169b2-7889-45b8-9de2-3f9d192050a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607fb09e-1297-4f00-9965-92f9598b8c34",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1700bfd-e6c1-4eb6-850a-28aeaccc12ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17663c0-4841-4f97-a863-582df7d3f4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f494ac-b6a7-4dc7-b4b5-4f8794e03971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddcec83-797d-430d-af8d-46227e6c3b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a8a676-9f7e-4d17-bb7b-5baab4e1e112",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3db400-b111-49fc-9a21-54f7d7b6bf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29c8afc-6b4d-4857-b3d7-0627f9a43431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9960362e-a661-4ba3-9924-2f7edbcd299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3854a7-543d-4f15-8eaa-37a0bee8b538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01483b5-315f-4566-9972-396d58e2cec3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad3b8ca-fa49-4050-8f4c-9df505ce6966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6855722c-65f0-4925-bb3d-1fdd4023683e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca89b8bb-c8ca-473f-99de-4b8e77199797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41b9553d-b86b-45c8-b70d-8a05d9e80be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b35b87-cca6-46cd-937a-2eb86a6805b7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d9ee03-43a3-451b-b308-c7466c7e1887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83de384c-d81d-458f-841a-67d80e8da0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7dc8f7-0511-46f5-bc1b-26fae6514800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6fd9a6f-31db-4348-af4c-30d4206561ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79109c17-3bae-457c-8e15-1f5735acb276",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4501e2d4-8ac8-4fe5-8686-3e199e632aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed076b5-3f03-4ab2-9f20-5a23d6248929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b359868a-95cf-4712-b781-4c64938f079d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "306f31da-90e7-4608-abd2-ffab241febf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a5e821-7eea-4c29-9f8a-0a45d5cc70b8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36e298c-7405-4e6d-8a4e-a3ad371adbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1002220c-f2b8-4a8c-a81e-8b4730c6c88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577cb72a-7caf-4d52-9952-ab3989f33c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "087b1a1b-1332-477b-b5be-ae0ba16e00a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca707a1-82b8-4e3c-b1dd-3c67837f4329",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e43f054-af7a-4dce-85fe-778a15a8560b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af009ba-f57a-4845-a572-97d290421f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7584485c-9182-40b9-b399-6edfec7e2401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04628dd4-0b78-415d-ace4-4c19bb39a33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c2b238-dd2c-4f68-8999-f288ce1b4794",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d632076-46a9-4189-8029-3edb12ed1e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1124f5-2d15-4093-b1cd-0466b5417802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4326e34-c455-48bf-a833-48ec220cfefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "989118dc-5cb0-4874-a56f-1d3aa5c02e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f855e91c-04e0-4f92-bf3d-9b7c05ec9cd5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07eebc00-b47a-42b1-8b09-0f4075333b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccba337c-e54d-4c77-b0ec-8f5a4235dc2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f74c461-8e05-4f63-adfe-541f7de9b32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee17014-475e-4bea-9193-cea96623593b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1dc828-cbfe-4d51-91d7-136e2d08a805",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388d6416-33c8-46de-877b-72e7dbdcf395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ab5865-f806-4887-9b5c-93aa1586fdc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cc3c39-d396-477d-bebb-cca227cd8481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b09fa8-0581-4965-ad2b-a0a2f040cddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ea9a4f-9641-48a0-a09e-80096b7a8df8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a2913f-af20-4a04-ae6a-b3e47e0add93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cec3b8-d491-4947-8b57-980a5273bab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0f287a-0693-408c-bacf-a9171bd32cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52bce1e0-e6ce-428f-ab87-462bdffb9e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffd91b8-bedd-4341-9abb-6605c28a388f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35f50a3-d250-4a96-8ffc-297b23242e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7256fdf-e9a0-45ae-ad25-a01587f002d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a28ffa-8386-439c-9a8c-00ccf618c7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "db8456cc-7f4b-41b2-9629-1350cf756b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c77b64-0146-45d3-8146-5154aae5716e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e24d55-4108-471b-bb39-8432763cd058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0048a040-6872-4bfc-a918-dd26662a3560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3040d4c8-f71a-43da-a214-76b6a73ad296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef93e68-f71b-4e9d-860d-11165e1121d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36094606-e1ed-456d-9d84-3098a3926795",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4097c6dd-a81a-41a5-8744-184621d97b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b84bbdf-3853-4d4e-a269-f1770b42a12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167ebe16-09bc-4e21-84cb-3fa531b9b876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "640bd734-a60f-4887-beeb-9f7659940ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fe4c13-fc9f-425b-af7c-107285a3a765",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d39a2a9-a3c1-4bae-a792-322786406928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa86c6d-c0db-40b9-b10f-1c1b66bb32e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf84dadd-9a2f-4e60-a40d-e6c81f36a3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0d4557-1f42-45ad-8cab-0de21e4ae6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2c6c9c-39cf-45d6-9585-398eceecbfc8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb204e73-a35e-4725-a087-e53d36f3883f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72ed62a-2e51-43e9-966c-25f302ac323c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd773e8a-fa46-4880-9571-6487307b16c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "452b4245-e719-4375-86a6-5db79284d12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155e75d6-632c-42ec-a276-4587727e4e9a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2d6d4f-07a1-4328-b738-8520b3af33e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7895fee9-83e1-46f7-92af-e7b89b3d2dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4e1d0c-8f1e-425d-bfa0-3e989a7b10dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9f156e-67da-4e22-9c2b-d33936733797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6177f9-d31a-47ae-86af-255cae385cd1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b225d63-0128-478d-b8eb-b980e69a29d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0884f0bc-97dc-49de-b951-2ca53a3ed061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de338f84-7c86-42c0-884a-6a45eeb55c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "142d01e5-81fc-441a-8108-7bf6648549c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6c28c4-0f9f-44f5-8106-9fc5a84269d4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be3aaaa-e829-4541-a48f-7de6d0780147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dc7f34-a363-4b6e-bd4d-b6a74a433773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb8e006-4d73-4958-b37a-dc0658263b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91ec1204-add1-4e99-b3f7-d832a88c1caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9715a1ba-2d1a-498c-ae53-fee01dbc24dd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e15c2a-765a-4c24-8563-4454e056fb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3e551e-2a93-4c3b-965d-afeba475a8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a11c15-7c05-48aa-a9eb-7426a9e66b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20d1a446-6de0-4a90-81f4-85cf65c12367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1e3569-ca94-4af2-ac61-121c183b6fb6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d686417-1d17-4168-88e1-e89361ce4dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d60862-659a-4dc3-a32a-59b08bf877a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9574466-c75e-4814-bc5e-7f966bbb651a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bed3d90f-2074-4491-a462-e412da1bacce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71ecf36-11ff-4003-8e44-21a9fc6a21a4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48ce436-9ca3-4f71-b8b6-97f95d963aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec92f90-d75d-4e9e-bb39-9c838b14df96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9ed9ad-46fd-4da6-b620-ab10603e3085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "916c17cc-4603-4534-ab67-bca8e79cc1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6da2ecc-0d70-434a-88be-8ae4b44df3a9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2043d40c-9d5a-485b-bf15-854d44ca8476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28dea2a8-874b-4b75-877a-d15ff52d5260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ec8bab-7dc0-41d2-aef4-c8adb0d9f2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6496b1-b43b-465b-ab72-a67d432f228f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d78e65-995a-478a-830c-65a298fe136d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb3e15e-dd04-4b60-bebc-a2e168350e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b9c32f-a98e-4223-b399-e7e963decae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4307bbc0-863c-4c77-8327-39292305db6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "08274c97-3c3e-4ec6-91b4-e147fb20501b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f5c723-7d4f-470f-ade7-d6e73f03e560",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91e671a-3d66-4b2b-9e9f-98f41a4510f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4e81b5-9a3b-43d9-a2f0-3c6b860e71cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc84e44a-a81f-4e2a-8c55-6b473ad0a542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5ce9c3-e809-4ccf-96a4-7a3461b42e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d853e43e-b620-400b-8c19-df074ae316e9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8166cf33-40a5-41c7-9f3a-36e8fce33d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70ca7a5-b242-44da-884f-5246629f56cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db995ce2-ad03-4fec-9433-f58ef436901c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc7dc88-8479-4411-9cce-0bc9d348709b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c44149-eba9-4d9e-98c9-1f34488f9635",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f54e42e-4f91-4185-82e2-4d1052b5f42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c944887-89dd-4458-b4d7-0a70722e28d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed268ecb-11a8-4553-9b84-3a66780b7e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0632e95-2a15-4d85-804f-1317ea650bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50d5c0a-3193-4ad7-a7d5-6bc8e9e0c760",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64d89c1-5066-4508-a54c-26a7139f6563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af285e76-a3b8-4926-8a36-686198206b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461d0065-100e-4c75-8b06-36fb953c2541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9189a0a-dac8-4512-8925-5c87bc83244c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f1c024-da15-408e-ba65-794be138c217",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848bf1dc-7aa1-4c86-a5d7-0e4cf2f20223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431bdfca-ff97-4194-bba2-a4c089d2aa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbfba87-ac9e-480f-b57d-4bfcccc4db58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "713fd622-4ffe-4b6a-8f9c-49ede267fe46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c51c1f-d041-443f-ad37-c35193542a91",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b3f9af-5340-4b27-a27f-01cf36bbaae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314f7c15-35b1-4ab0-9c3a-5e351af1ecd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792b3d1a-d3c4-4a25-9c20-401eb9245b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b950d36b-7d1f-4630-8a0c-b97112b5ab0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8c29ca-4e7d-4e03-b027-88adae0cdcba",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9267d330-f9f9-4f22-bde9-b3c53281bdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02ce105-850e-480b-8ae7-96465fbb95c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04454dc4-2dbb-4571-8de6-887312a0b4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae37f49-b394-43a8-be26-b1a6c63fec16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db5dd63-78ae-4547-a61b-91b1dea78127",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37e4bab-5436-4847-bacf-2d3c83dd4de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5554668-abe7-4001-bc5c-2eb3cde98de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50139b28-4892-4224-ab0d-6c0dd76f155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9349b89f-6e66-432e-8901-4d5c671b6058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fb564f-f9f2-4df9-aca4-9e75ee83231f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd475208-5df4-464e-b264-5a14f0932c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8b919d-8fe9-4ad5-8018-3cf91febb0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2097b0f2-c5c4-4717-8dc3-b4b384d17e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aeffd62-b74d-4411-9d89-8656c705b5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20125d73-cb04-4d9d-80e5-e5aadca8dd73",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b9091a-8e88-4d79-a8cc-6547539daeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4156ef28-6ff4-4487-bd5a-5309a96f4b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac09c9ad-9a77-4028-886a-672727227a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3753371f-46a1-44ea-b4b1-47663c4089dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7839fa-ddb2-445d-a09d-4253a4e87221",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc6d3b3-5815-4fc9-8f46-879f7aa2f2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ace4da-3f1b-4d64-99c0-e378eb4f915a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fa8200-ab6c-4f3d-a753-d46a6d998d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1af6f2ec-bf8a-4857-b609-5a135914fc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec081ad-e169-4838-95e1-40517756d32c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a55cc1-706d-4193-8db6-06d3aa538c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14af9b32-eb32-468a-8d6d-ecf49f3a97e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ede69dc-8ec4-4e0b-8247-77af96d3227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a9e61f-79ce-4f49-8978-b7f5c903ed28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd03e6d-19a6-4b98-8488-6aabb4bfda8d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a7fcd1-5da7-4b8c-9792-52663de7af50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe4a16c-3210-4265-8092-a2857b4b7dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701c4185-d8fb-4d8f-84ea-b12230ac28c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b196e8c-63f0-4506-8624-df451a2d099c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b93007-c34a-4b9f-a54b-624f3ff07e38",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad19d6cd-bd45-451b-bcbf-2db221f76c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbaa4469-bac4-4c2b-8569-3ef2145c4733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326038cb-a992-4722-b532-a4e82ea869d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "36740679-f163-4712-b7c7-b70b9d0db17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb38d1e-abdb-45e6-b87c-d29245dd106b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c5d059-cab6-46f1-9132-2cb83173706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65d9334-c1b0-46ce-88fa-0bed4bb09e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45262e5c-acce-4624-8f8f-ce1c401b0284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "86d016de-0911-416f-8f5c-b72f53d6c034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3170fcd2-754c-4436-8f24-86a4ff4425ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ed2a2b-c4aa-4b33-ad31-b6bdd9bde620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bea414d-b0ab-46fd-8760-150d3f1f727a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9504cf8-5188-447b-bdcd-86282414ac20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "633f8019-cd9e-4919-9390-64dbe1ca027c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d89b1ad-778e-4554-a1c5-6a8bd9073e55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94365bc-8b54-45c3-b169-2a61b25a0c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ae5c66-5299-421d-88fb-4249391483de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6acc8a-853a-4766-ad9f-eea5514bf215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "074cd530-d9fc-4f21-8dd7-6e3af5f43121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a817954-b44d-4c4f-bac0-0de3468cc292",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1f4e9a-e435-4480-8092-44d804be3a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a59c72-2bd7-4ccc-8d8b-dc2b89f701c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7883490a-eb28-42bc-9f5d-920f2a81c830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c5513f-6364-495a-8508-4c62726dd214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1c6896-2a12-432b-a129-154e6bbbde58",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87663b09-2d0b-4cea-accf-a99968cf2c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57eed5cb-09ac-4ab4-8878-6fab0400c441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e580f3c4-86d6-427d-8cd7-71c97ca461fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7f28d2-6669-496c-bc1f-76642908c5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad54da2-4211-44e9-b63a-0d2c48c339a3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5ba603-e697-49b6-8a1a-e1bb3f0c2a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f368a71f-e251-43b9-8bd9-62e173a86e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf7afbc-d572-4a1c-8b20-fec7441fc78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ea4c19-3d66-4ce9-aa1a-840df5243a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8aaba8-041b-4d28-8bad-fdae9265fc5f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471871d8-a278-4dd2-bf50-ed0d2c18a9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346c35f6-d4f0-4cd7-a4a1-9ce66bc91507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5e9d2e-d5a1-4e16-9a0b-eb05ddb8cdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "38eeba2e-9ce1-47a9-85b1-3d33a19a8399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855a5be4-6361-4149-81ae-40a89d845f9d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d49e848-6623-4e69-919b-b55348db1730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d71de0e-fe8a-45a9-ab02-15713c50f4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5feea1-8a97-4cbc-a3e3-2bf2b016ae7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "149820ad-d9de-466b-a41f-4d09c6eaa8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2412c55d-336b-49d8-84ed-30f6b89fab4d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755a7627-62c9-4eb8-b7e7-bbcb1438769a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ba8abf-2dfe-4871-961e-c8387433faad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571c6e2f-296b-4e02-ac9f-92650607acc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8346a754-762f-49de-b405-3eb427ed7a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95287cad-a247-4e58-a698-c91c32d45724",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a172da0d-ffc6-4ad4-a94d-75d58ffca1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6782bd-7802-4aa2-abe7-add6cfd6b85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6dace2-60b9-45f5-a135-32867d6235e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb60ad9c-1336-4ae3-a8ce-90467a802a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d503369e-4179-4a67-af95-8f1c58d18259",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465a35b3-2b8d-4e3a-b4e6-0d957b2cda1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fadb1a-4aff-43e1-8633-192c9412c6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc322f74-2980-4dec-a963-7cb94982d88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc69e309-1eb2-48a6-9861-626632d35e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100f0ff1-6905-446c-b477-a9a665f1b8b7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896e06ef-1059-4552-865e-3129118a15d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb0d428-211f-4b06-b655-690366ff77ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2635583-64ce-442f-a4ca-ce7d1f5f879a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "547c69e7-38c4-4391-9a4e-3d2fcfd36c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2855d6-ebbc-4e3e-9180-4c7dbd7f04c3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e1e37e-6f27-4351-9a4c-3cfc2b72d36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b64da9a-70a9-421a-8cc5-d4ded367caa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a69226-8054-460e-8594-3fe3adc28b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4912f152-710f-4d4d-9bd6-1ea559fbe96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d44d98-01fa-4295-bc7f-c17903a1ff4c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d142cd0-8a9a-46d2-8ec2-90aacf643ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f5adc9-73e2-4196-9b7f-223dd68efd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38b9a17-2337-4bbd-9d2b-09eaada27020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "533c1f3f-72e4-46ef-9a57-4315fe527735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da280710-d526-4175-9bfe-949308426086",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7a7924-397f-4e2e-878d-58f39eb04a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb91c380-217b-4072-a160-331eac39cfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6aa256a-0f81-4cf5-abe1-8df2c6aa8ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22e01569-7d1a-435f-830a-b441fca8d340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074d4066-e01d-4cfa-a628-2c54dcd7caaa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12026e0-2d26-4731-8ead-4dd40cff7fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6128c4cf-ea52-47af-be1f-fc2e633b5940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b81b52-bf5f-451f-8171-5daa93561e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbdb129-fee4-4b38-862a-d450b10ac04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75573e23-b0cf-4039-9305-ecfdf462522a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464bfb90-f973-4b7c-ac17-22943a93dc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781693b5-d4ea-4d63-bd85-fcf70a69a0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d2f024-c80e-4f3e-9e7b-f218a62af990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c757e7c-6860-4ece-9a33-74194da73f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66274c6e-388f-450d-b9ef-9dcfab053ebe",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71da079e-87f5-45ce-9583-bc29c26485dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2a7b85-7be4-408a-9f4c-19c4f1962712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf318254-3e43-4cce-b955-5ff40b632e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd37f34f-ebd2-4b7e-9e2f-f4ad4744f2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c1194c-2443-4406-88b6-44c323c0bc3a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e2c7e9-9e89-4470-9208-4e13cd99bfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616021f8-8473-4155-9075-92c88ff58b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17965015-a2ee-4096-9814-9639d38e7a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd89982-99e7-49f6-9cd6-1bce64a59401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de0622b-b45c-4cc5-b743-8ec6dcf6c614",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb93282b-c710-41d3-9062-19046691a5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534489cf-6814-4452-9bbb-984c16ad3d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f36e31-6e01-483b-9d3b-f29a0337ea6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcc2d98-56d2-45d3-91a9-b1fb78865dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d083af-cf70-4b99-856f-a168fce96be2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40568a4-e305-43c9-8741-c054d92e5eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4def3a9a-30ed-4793-bc22-2084c12f5de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfee87e-614d-4e05-bfcc-ac5fec9c34f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad221a63-ec52-4c4e-9f5f-50ec04bb1b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a96ef70-7a56-4528-9f93-933d15a1856e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1434072-148c-43c4-8d1f-03610e11f9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065478b1-4791-4b00-9505-ab62f16161bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9771f0-34c3-423d-bcca-05786ac85b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1238471-45b8-40db-a673-777986e11367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6424d0-a55f-46d5-97b5-2188fed37e14",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ebf864-d208-4e60-b950-bb0979984845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfabd0df-1e1f-40b3-a429-8f2efd1c3a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42637230-5eb3-4dc9-8fe7-0a3ebd6616bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ccf799-d6df-4d8d-8876-991a09d36f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb0964f-8842-420f-a0a1-181efcb539f4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460f1d04-f7b0-45ec-9ced-af3a5556fa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abdc63e-f1a3-4612-8f34-d5385f94d363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e0c2c4-ebed-4c49-a48a-130a5175446d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58994428-f836-4ccc-b46f-721da129a24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ba0009-de81-4e53-9dcc-08854832195d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea62c100-8186-4f91-b05d-0f5d48dabb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b326484f-3e7d-4d72-9c83-f9ab56b19d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c95db1f-c1fa-49d2-bd7f-1258258b8a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c95a687-361e-47d9-9a59-9d0be0a7e210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beead2fc-5062-4aa2-8dda-8fed0909fdc8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3e58dd-6cc6-4944-b37d-829b01d1c18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a90302-4002-426c-b6f0-7a91d7e04e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb1b625-6595-4774-84e3-ef6a47edb81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ed7fbb-6795-4c6e-a781-6a521fbb8c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962700db-6e57-4993-9172-e8b7985ef5ac",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b582fad-ff70-4828-83f2-2fa6df8f996c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7ade41-d4dc-4965-9be5-0756a565d3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84851585-e22d-45cf-9dc6-11c88be4494d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bbdd1e-e523-477f-af7c-a09ab4edcc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d82b8d-778a-41f0-8f79-18cca5dfbb6d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200eb6fb-8838-44af-8cce-4502697ead35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abd4257-0a35-44c5-99cc-e8855374ac67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9546250-c5f4-4b55-b20a-c5a18a1d5938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9c248a-4082-4ce8-8f86-db611a960fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43842ea-8237-4801-bbdb-b728749262c6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ba8cbf-128a-4b47-bd98-bac5a24eae22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca1e3ba-e48e-4701-8adc-e5da5325eba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9600d9-7357-44f4-8e75-2c21fc88b49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d49ff3eb-c0dd-46cd-8c2d-c2e1b6028be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c08bf6-e252-4d5b-819e-bd5d420f819d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0deb560-e977-4bef-a8cd-b28bb3133222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f636455-8e88-4c87-974e-4c45f2af312d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1dc0a1-f4e6-4cd9-a44f-66fd098e2433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e423c11-acb9-49f7-b219-9488b58d3f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf20c439-c89d-4c5b-9d98-60ceca10e271",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d03e7-2aa5-4c71-be57-862a1b45add6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fac4125-09ae-409c-bd5a-cf76d3b9debc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ebef6b-9438-45f4-8ce2-29771e61a1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef97f45c-f61e-442d-96ec-e7a54aa68765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d3f1c0-3911-4850-aab6-d65144856d32",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b97262-976a-4e46-9a0a-20a3f47c35c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f31a831-b792-407e-afa2-5490496ec9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfbf110-7689-4f25-9521-f0cef7d29edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a20c236f-aed5-4fea-9d4a-88ec7d676362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9e0acd-28b5-4ca3-9740-bdb88e808a41",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1f53c1-f2a9-41fd-884b-99177fb4d064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4c6eb4-fff2-45d3-b19b-8589f2c2d027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762581c7-2578-4664-bef7-56f92730b033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "305c4f1d-d0c2-4b4a-a3da-6958f9e43512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33360892-fa47-408d-9958-1a69fdafb233",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ff3e6e-84dc-41d3-846f-bc77615b506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a53b3ed-cf86-4b31-b05c-c3fce2eb4ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8af631e-3891-47c8-a754-a64cb49af2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "795b6f49-7c60-4cae-9a3d-524cfe753f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01f43af-25b3-44f7-9be8-08c661e69ada",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1117a4c6-2042-4bbb-88bd-9e8b8a7370e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6f5e42-8381-4320-9803-7b1eaad65ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70743aa3-cee5-4531-a21f-0cd537071ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6a0bc1-c6c2-4b4f-aec8-10ff805afc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a911a0e9-aaf8-4c17-8aa7-2e61034c521f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4782a6e9-034d-4ad3-84d0-822d95e5a518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "30ca2dde-ab9f-4472-baad-428e4a6f1fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4823bf8-1126-4668-8af4-0a409078089e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "aad282f3-056d-4d30-aa31-8a0425b0fa3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d233d533-17a2-4b2d-83af-9d77ffdf35b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cf06c52-58bc-4228-8fc0-057840ef2746",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274df3ac-d715-4684-ab2a-5ff58b66af9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d57334a3-0850-4f60-9506-bfedc4fede8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50478f1f-b5f0-4c9c-ae81-08d2392b2775",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a0831c8-1963-4057-b8ad-78931b80302c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0354a378-b142-41cc-b32a-fb99dbec3ff6",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56161b6d-e693-43c3-b093-bd206b961073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5db2080-b7a2-4188-a6c4-fc3108248169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb728f0-3195-4772-ada2-3ebc61d46219",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95ac034f-bb85-4d26-b519-33281d502526"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef884333-cf54-48e8-a93c-565cc24c486b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5251aaf5-b10a-4b00-babc-d312d95e4af6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f411eea-7806-4ab7-8b61-8b13763d1aa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88733999-b77a-4c1c-bec8-bd84da48e65d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "976ccddb-ee00-48f8-b9fb-346b5572caff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a573e960-3018-477d-a4de-4a17020118ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f4b23d98-8de5-4765-90aa-f2c662ea592a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aef523cd-151f-4edb-8850-49b7fc5a40e5"
                }
              }
            ]
          },
          {
            "id": "667f9276-d6e5-4b7c-970b-02bad90364e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ced78b6-009c-4889-9d83-68629943e583",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02c0d992-6ed2-4aff-8549-f5d0870b96f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b595841-0e90-4cd3-8b45-28cd18a3a036"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42267728-3b3f-4d73-ba73-cdf8225525ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a40745e7-55ee-49a0-878a-3d58b41c826a"
                    }
                  }
                ]
              },
              {
                "id": "94f83a4f-2cbc-45c6-a98d-b2bb3e0fba89",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41ef4086-7b4d-4c65-811a-333530648e71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbebd3ff-4027-4d24-a6bc-f4e90e1ea130"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad109d6e-cad5-4caf-99b8-797470d0a6bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7045de8c-1797-447d-94e5-3a01da14b16b"
                    }
                  }
                ]
              },
              {
                "id": "6555699e-e268-4378-8297-742c29cc0062",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53c3db34-c8be-4d43-a84f-d86b6d18527a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b04c559-82e2-4758-8d49-04895495348d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8d3ad5c-815f-421b-bdc2-4dc203ae24e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "006b00d9-c80e-4fba-b9f0-299a805e71b6"
                    }
                  }
                ]
              },
              {
                "id": "ee0bcc49-9dc9-4ea0-8d9c-a88631af9ac8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a825ca7-7c83-41f5-bb30-e5c1075e44d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e87a1231-fae9-42fb-ba2c-3bd5d87c4b6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d29a322b-4f21-43d4-aeb4-1c7cbc29074f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2de46b72-31da-40bf-b002-8dae9d1af165"
                    }
                  }
                ]
              },
              {
                "id": "2ba0f7f9-6297-4634-a76d-99ac3f7efff9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a38489ac-f46e-4cc1-96f0-4dd43cb527ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e49d2b8e-201c-47bd-b8a0-6aef68ae4eaf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2be76160-88ff-4916-bb86-7fee202eeb63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "79c24680-807e-4082-8aae-06427508fba0"
                    }
                  }
                ]
              },
              {
                "id": "e6f3c790-cafb-4f61-a0c9-fdcf85cdf637",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa2db7ec-930b-4dc4-a6ce-2613fa590293",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dddba7f4-d68d-4f16-a149-ea9e9058e9b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91315e2e-1420-41a4-8496-c9a806cf75b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a571e8bf-f8e0-4a9b-8ebc-ad51fd2277e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4e751e9-e82d-434a-ba1f-38392da74f7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab6bd397-0491-437e-b0e0-e2bb8608b985"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b563569-4cce-4a43-88e0-ec24034cef7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab3f46dc-c58e-4fa9-a2d7-b280519a93ec"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c2fad11-dd10-4494-a872-a2074aa9dd0e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4fd1b867-f39a-4001-9f80-b7076b536e3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12024744-760c-481a-8d3c-8dc04d05b35e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "347ed4a7-e6f0-4702-8871-c0181fb38094"
            }
          }
        ]
      },
      {
        "id": "03f04860-ce7a-49ef-928a-6eb587b2d123",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "aa707a2f-4407-46af-b1cf-36a770e7d884",
            "name": "Negative Testing",
            "item": [
              {
                "id": "205ba950-ffe6-4217-8ef9-63d7674afb61",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0b905aed-150a-4e75-a041-126a0a8d08eb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f27dffc-6c7e-4199-b9e1-4935eb89f7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de2ae9d-c063-4cdc-80d2-234091eb021d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87850739-890f-47c5-b1f0-e9b18ef45563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf223b8-b748-4021-b0b6-e8ee7d54405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9f7ba2-2383-4b68-af3a-5c3c061cede6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8362baf4-a86c-4ef1-98c3-b5cf739cac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8749ed-7907-4c7d-a62b-f1c2e123d630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365f562d-7620-45d0-9971-a351688b29a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ba3dc8-8d5b-4ec4-a110-c639a68085e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca57ca01-920c-45b6-8fd8-08b74fc78383",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d90ab0-8572-40e0-b8ff-c682cb99b7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33b5a81-24f6-4c01-af05-d83310e26c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e9bd5e-3ae9-4814-b432-538cca060b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "129fdb2f-ad91-4232-820c-6a335aba27da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096f2b67-b2c1-4ffa-8c13-2799f86ecd68",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4074ce8e-aebb-4e2f-9a53-a7de3c59d732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576f27dd-d9d9-41f6-b17b-dea57827d015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d87be0-44a0-475a-9ff5-4af8e3ff54c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "586bad30-0919-4a10-ad2f-5c3a30d1ddd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a660c6-e560-4dfa-b50f-07c1cd7ca609",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af53acc4-a12f-48a1-808f-63228a4192bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25c217c-9338-4e0a-ba97-d27bbbb7dd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b8d167-9c95-46ea-9694-59e470f8cf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28736193-5adb-423d-a978-6e7709576163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6423689-223d-4196-bdc1-12238d9588e7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9514ac-ea22-4486-9baa-8e788c52c488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce42b639-2c94-40a8-8e63-5cecaf8af30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1ddb58-453b-43d3-af30-f2aad0e9e144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "338bce37-2992-4aa8-9a80-08eb173de32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8303c74f-cad4-4f6a-a479-cc9697b49e94",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faffcce-91d4-4878-ae29-23028a1cb90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ec4875-1ac1-4d0e-8cad-bedc309673af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e93ceb-7ded-413d-b819-b83b72dad9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bbf103-8801-4b17-a3df-4eb84df277f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a6b94f-3bd9-48f1-94eb-219ac9c8ed9b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c57a60-42f0-4e84-b6b5-0e64ff409155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede6b608-aa7d-449e-9e8e-cb554035cbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2b9bf1-e03c-4cc7-bdc3-8152296c47b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0a63ba-c1ff-4238-8e2e-a84398836125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9466b790-fa0c-4126-86f9-7afbb58d76a3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09399c18-0836-41fe-8c57-07773285c5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c242d0f-b29c-4e37-bb55-7dffda129a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d51e8c0-b8ba-4c67-a173-39faf74e2206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeef9636-36aa-4fa4-a8e3-27449bc9bb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2402ec5f-8da2-4f4e-8402-8d8846e75efa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bd9761-b967-4891-bb50-4ca3318c099f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27ffadd-22ef-4658-9411-38c627f0b108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90429fba-bc7c-4b9e-b325-893effdadf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15284ffb-d51c-474a-b530-8c76d2369791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e543fcc9-1e2f-43ae-b034-e8039fa92c9e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4f2037-aac8-4cce-a372-dba557f6dca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97979029-1f60-4a58-abd3-a063d34cc6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af68ad79-4e8d-4838-868a-a1e01c66a79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4c41d9-6396-4df1-b620-01cd58eb623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0812f6be-66d9-4602-8062-12bbd2ff004b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f30478d-aaf4-4dd0-b72a-c0b18a40bd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1487f2a-72c3-43a9-8dd8-c5a9366e22f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c2e2f6-a38a-4290-8fd3-9e6afa8f9bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d310a90f-cdda-41a4-9da3-3825a2127123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76da5ed2-c33a-4842-8fa6-bdbb2fc76f50",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae36266e-5b47-4a70-8ee8-6376197ee2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8b1c41-2a6f-42f9-9037-171438caafe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3aab6b-b6d9-467e-9981-051a14c5fcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3e3068-7acd-475e-b6ef-c3df8d8cd602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed57ea79-60d1-488b-aca3-9eb98b32d230",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a92247f-6097-48ec-b84f-8d11307c91a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543e05a8-143d-413a-b1d6-52c52967237d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86fe0d7-fbe4-4fa8-8ac6-2bb006674df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "edfc4541-4f26-40ed-bed3-ce7e8d6d585d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6148b93-d7f0-4abc-8fb1-8f7c5e793092",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1766010b-ff59-4654-b694-8e62a3a6084c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8aba17e-c0c8-4ff6-97d5-703db0e085ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7267e1-6a9e-4711-963b-a158cd747583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc8d757-ea8e-4df5-b3d0-1b16e13bffd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e7d280-e737-44bf-98a9-5dcb7b01e207",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77750b2c-f78e-4777-b998-8ed1bf2246fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9795b3-24cb-4e83-8eaa-8228462d68a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd5741d-d32e-4fd8-89bb-3b614982052b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "210c8b5c-6a5a-499b-9e3a-4ab3649f9dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78176ce-fd18-403a-9220-2053beff8148",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c690232-2db2-4331-81e9-aaad00094d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a337928-e5ba-4ba1-b8de-ebc80da2aeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd5fa7c-a27b-409a-9152-67e3c4635c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b471254d-b787-4434-ac51-44642e10cca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd734b8-e4a8-4c3c-a443-f97b380ce582",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c39be6-bf07-4608-a549-bfb151a88db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6d1210-9e89-414e-a2a4-10df29476930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fd0e98-f16a-43a0-8bbe-850dc711d15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "689f502d-6b71-4348-8659-1516d44d499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7559a1f4-093b-4122-95dc-2a4c4da46eed",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07f73dd-3539-465b-a08c-286c77e5c8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0485250-0d8a-4c16-af3b-6944fb1d9c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34fdfbd-39b4-43ad-a047-12760aa730ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4379a2ef-1f92-4439-80b4-cd4a7ce2efbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbdcaf9-5027-4cf2-87c9-b807c157e37a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612bfe34-14dd-48b6-9e07-6c3839a45bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3a5b29-c378-40c8-acbb-ddf7e9e528d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0f2c31-3fb5-4ac2-88d5-8b45fb8f9af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4f8bcc-c989-43bf-8994-956070595b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4041fd-e7fe-4033-99a1-fba6a705350f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81e015e-df0a-4133-ab54-8e6b7d7c94a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d5c7ee-923f-4b12-bd8b-17ee6b363f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424cd2b9-d6ef-400a-a162-94cabe6d4485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "466c4556-13f1-46e7-bf49-f7be84fdd1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2306f720-b8f9-48a2-a24d-7eff9cd3adc6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca81608-e8ba-4946-9fb5-b08c5e9a8098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d45dc9-8480-4118-89fb-6b642118a873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b524ace-283a-4c31-8019-7779c9a1d2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30212289-b7d5-4a64-baba-b030a5450921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e506063-0a40-4a28-9cbd-688ab34bfc59",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b49e68-ae5d-4433-8ef7-2cb55ad40e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0984ed-09c6-458f-a6d2-489b244aacf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e9bd28-5696-466f-833f-8c0f661d9cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a814eefe-bf9f-4430-a7f4-94bc25a5172c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e61d97c-0da5-4bcc-8775-0b1985fc9b36",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815fdcad-1752-4b5f-87d8-3841969763f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fde137-419b-45f1-8ede-0b9422cacbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22859686-69f4-46e9-953a-48aab28dcd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced618f2-febb-4dfb-8cbe-5a3555588035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ee4c7d-b272-48bd-a6c1-054230959217",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6578de6c-1089-4e1e-88f8-e6edd0e89d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7327b17-e68d-4f88-af17-e2f107f1db98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f895f0-acf7-4f95-8580-4f6b3cc06e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be877369-a3a9-4ba6-aa50-ec75800c7324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28a609d-c825-41d3-a704-a66213190d0e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc4d16c-2e2e-41ad-ae48-e42b3ee6493a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af14bad-c58f-4134-8520-56cd397852b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef80c368-0bd9-485c-ad3d-d94ed789388a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf039bf1-00d3-4a27-9f0b-cfaba93a1bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d478f122-58c2-4c87-8ec1-d7a4b6ce5636",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4967fda2-2843-4648-9c0e-6e17aa556b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fd795e-639f-4056-812c-67842bd842ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956b516c-587e-4599-b421-9b197bc566d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8326571-b50d-40cd-aac3-692d3336590b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003e2ab8-f303-47fb-a30f-409bad4905ab",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a95820-618f-4339-9bcb-55364a8746e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54570dc9-7e53-465f-a7fc-52f984eb76e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3862a25b-9fb3-4932-9ae1-31a34ac6e70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "094339eb-a3d9-4bb0-bf33-d48c0e0f12ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1dff57-cbeb-4274-8ee0-eabe8d988ab4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b96a96-64ab-48db-acc9-d6f707636fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24359078-3819-4b4a-bcab-8fb01aeecca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9552d35a-b76e-44de-b690-bac8db73619e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddd34e1-ee20-4e21-becc-6e3a6b3b2cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e277e70-b6f5-46c9-81db-321422f1cf17",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1db203-9d7c-4a86-bf01-3625038bca79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae43b50-7e7e-4a8d-9819-1b994cadd1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d187ddaa-8df4-4d86-9e41-e95f0427bd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38811f26-d483-4e3b-b9aa-2ee16660e460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27da2ce7-d3ab-4583-9a6d-534a44a668f3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76ae9d4-dbed-4d6b-b8fa-7243cf50d7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d014e8-569f-4a52-a889-913d86455877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fd1337-8e10-46b6-b4bd-285b98fb1a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d73906ca-7d02-4ba5-947a-4153c5c10851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed943302-0a8c-40db-bd85-9e77dadc8e76",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0eee90-e5f1-4751-b120-12e42b43a4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ff2b88-ab5c-4b90-8da4-a870378a8028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195ee81f-d26f-47dd-afd2-4f3ee414f311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e85e0454-4d34-4ff5-a398-b519a2be95c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14d22e95-6500-49d3-bb15-24e167a1c8fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32c6512f-9fb6-4122-8883-8cf8dc9f267c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75286c82-f0be-45e6-a25a-0166b603161c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "426fd8e5-7ba6-4f20-b68c-82d4908eaf18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6177e3-bc6e-4aef-b8a7-aa37b4e71df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2059eb80-ad93-42af-846c-b86f55c83b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a672041b-8d97-49cc-8608-54ec4e410d20",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b476949-29ac-4650-8208-363a6d0acc55",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bc39bacd-5e4f-4617-a8ee-ade8ebb7b4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31503434-9f4b-4055-a91a-c98fa5fa4f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "032a2dcf-752a-4a91-b447-38b37dc0fa61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "387181e3-26d9-4371-91c9-f88472db2e4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3437e2c0-6db3-4a59-8ad7-1202a1ccde5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c069304-2433-4be8-af5e-2106782ecabe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51a79058-4a2a-4397-9483-443474b2af88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c513d9c1-ac37-43d1-9806-8dc0f891c731",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1fa80b84-2de0-4cb6-af4c-827614fa0029"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3a975db-f691-4d33-9483-4ff6a6dacaf5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e2c858f-8d6c-4e52-80fe-d0ad813de785"
            }
          }
        ]
      },
      {
        "id": "c894177f-4b43-493c-82fa-86a09463c7dc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2245f7f7-f41f-4706-bf71-68f8ab3f3b7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c27f2a1-72a5-4576-b7cd-2e735edf5398",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6584adb-c29e-4cc0-8f96-183903a823b6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165b1680-0285-4374-af32-ef1a28308494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff01d468-fafc-4405-95cb-01e8febaace2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e252e0cf-60fa-46c2-83ec-8a994001da19",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b839910-e380-4222-a113-96cf843336ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484b0e12-bdb8-4beb-a5e7-18324536c374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab0963e-6d9a-447d-9a73-3aebec551d03",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ef1147-d3ad-429f-891a-a75f3e6d82b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4091ee8a-7b38-48f7-8c17-b8c990f88f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516a27e4-f33d-4188-9c62-39f8bfe3daa1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7caa9a-60cc-4abd-a450-bd3153d953e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f64c06d-1143-4d49-8e1f-50e2875d6ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760308bf-14b0-4921-bd0a-9746ca838bce",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e883294-9033-4267-9472-23100e99c9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0782668-8e90-4769-947b-405381af81cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0007faf-4393-4f06-a541-1d1ae3be0422",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae615f0-e659-411d-a327-f3f159724541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8e6a01-a268-436a-8caf-1e0a2033ffe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff48e42-d7ad-4ddc-832a-205bbf4fdf67",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2651c78-88b0-4524-ac84-e1ea27e37c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b2834d-9aae-4749-ba3f-066828d76468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320085c6-627d-444e-958e-77c3cdad3709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043ab076-2499-4de1-b326-e546b05116aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2364326-6b4e-438d-9290-18788d8dbac1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386adcb8-1b6a-4b63-9aed-0a35119f3b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e08bfee6-023b-4379-931a-74f31ad55e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b2a8ac-8e1f-40f6-966a-b27f45665a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3706684-4a9a-4f03-81dc-e3337ce55aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5aea01-80d4-42f3-8758-71f3490f13c5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196eb6b0-293a-48f8-94c2-e68e33bc7230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69359b81-ae51-42fd-8ad8-cf6123ec778a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf2418d-68aa-4499-8935-e9547f4da81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a3771e-3443-414e-88f4-ca448fa1e8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca30d287-34dd-4321-901d-aca8d4d8937d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e030bd8c-615a-4778-85ca-3edb18f3f2af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e0dc9a-4ee7-499f-bcf6-62b1dbcbe084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4727f8e8-e8c1-4cd9-93a9-15e73c423d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9099db70-d220-410f-a992-e6d3bd8452a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bc397a-118b-484a-a286-34a58945fa76",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5077900-788c-4a6a-9c99-047aa0b0a0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c43c0a8-00ac-4299-9f45-24dd00447999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db89061e-69b4-40ef-b5d1-0aeae15cf42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f3c874-f3b1-4af9-94e7-aa2bdac81cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4636b6d7-9f54-4f1b-b4b3-7dc825929da3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f9f80e-3349-4bcb-948c-3ff42dfd563d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0225b8-85bb-4321-865a-f8795f1e5fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d244fea4-11c3-4fe3-bd56-2d301cfadac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050e1692-ed3b-498b-b2a6-e5a39dd3da9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b4144d-66c7-4c9a-8f5e-5e3128cdc793",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8a5eab-df30-4868-bd95-132bd6d3c542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f9f34ac-815e-47a9-a62c-e1da9de823c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dbeb18-be80-440c-9e43-a1ebd3686258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0b9012-3895-4113-a79c-914b7b6441f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552202b9-7733-4a8d-9a12-cd01fa613131",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12af0fd2-c90b-4568-9dca-8918d5db2f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d99aa8-15f4-447f-bd4d-be8c5d56b651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29b580c-51a8-4688-bc8a-45503e9d3b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd2f162-81fe-4900-a5d8-244fa3f5ef57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b27dd1c-1b8d-4c17-bcea-9db9f200906f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8418f92-9640-482a-9b50-c0c1d80f010b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1153b13b-cd2c-4531-ae18-adac365dd0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2eea62-32e8-42d3-a7ac-4e7ab89987b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4d3b68-a0d2-4b89-b021-5338acbcc8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf797fe-93e9-41e3-a39e-4b1291118546",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbe67a4-641b-4d65-8c6b-a7f0f9f775a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a685e1c-569c-4fa9-a294-f9f4d6449f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e53de1a-2aaf-4460-845a-790f6ce42d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9681b42-a415-4195-bde4-2134ec335066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92919289-5c40-48cf-9071-2ac6a93b1f44",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce71881a-5bac-48bd-b44c-22e4b6af47fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a243a0f-f3c5-4f97-9953-d827f20cfe41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e288a41-cc28-4d26-a5fb-c7d9d80a3bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efacf982-4afa-4c5b-a3df-61badc335cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7ef708-f08b-4d0b-8289-48ef1c9ba2f8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e198325a-55e0-4772-8241-913956f52d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de105f8-c1db-41ec-ac8f-12121a69653b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143818d5-c099-426b-acb1-f17ca51fc733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642210b6-89ac-4622-bb7d-d846958b793c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f810695c-7f8b-45b7-acbe-0dcd109fc74f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8211e5-ea9d-4fe4-b1c6-27054e957691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8eb1ca-7db4-4999-aefc-48a29777039b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c2e90c-79c8-4100-979f-54a2375ea78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826c4c7c-ae22-42ac-829c-eeeb6916c4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ffa041-d152-48a6-9234-2b89e0f851f6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35db0b7-e295-43c5-8e21-777147e8b57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb1c2b4-5bb0-4641-906f-39af7b53a566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed7529a-e6e3-4b7c-a1d0-726b67601410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f8c509-5786-44e0-95aa-ea1244028880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80d12e1-77fc-495d-be99-1ce4e1aa1665",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddd33c4-24f7-494d-96cc-3b82b78fca00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89595642-138f-43ab-a5f4-4699e6e057bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3465a90-dc61-43ff-aded-eb13b3ae0504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536b2905-9e5c-463e-b18e-8ed5cd92b40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8fb2f7-a234-4f42-abe3-fc9837e642a9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba19b14-4f80-4cd0-87ad-e3906af20ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64ac61e-b498-4910-87f7-c8088b81fdf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfd6b8b-e6f2-40af-a35c-da13d711cf31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8de8819-8670-4c91-b689-92eacf29c610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e8c75b-3011-463b-8c2b-bcac6c1a56e6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b8f965-3b78-4217-b4e4-375efdf601b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449410a2-036c-4a1e-9e4b-191ed2b9fb00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e898703b-ef1a-41cb-98a3-f53b23a98e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7381dc-6b11-4d0e-8ad2-993e10233b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0823fe30-6437-45df-a4e0-b2476f389b25",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0f0c5a-5bac-477d-88ff-6d5c8a820542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e0ce46-5e81-4c4f-b329-b35e178d6bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dbd01a-77aa-414d-b955-7c9bcade8673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fd0f58-4314-48fb-8f65-1f289605edd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f95c047-5345-4993-b212-c02b03abfbf8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6560be59-8094-49b4-af74-6919f4372be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efdb610b-4ecb-42f1-a040-54c3dea2b9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafc3ead-3628-4141-ab68-577dbf2dc52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6cbabce-2118-4f42-9778-e796f6ab2d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9782bd1-7f17-4f86-a2b0-bc2a0b67a733",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca12e1d-84af-4593-8954-91a7b5413818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bc86e0d-efe6-4b51-96e8-d72f38b2856a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbfc8d3-199f-464a-a6ee-315f7eb0df9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6c7a55-25c6-42d8-840f-ee3ade43a8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4916cb64-a0e5-4d57-9447-ee659daeb4a9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae272cbf-498f-464d-8053-ea8ad1bccff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c96497-6c15-4806-80bb-24d0020466eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5e8843-193e-4d22-8e23-a5689ba29af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d809c86-c11a-4bc2-a2dd-d5496bc9055d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c032640b-dea2-49e5-99d7-1f9ca12ab725",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f183a2-8ba4-4018-a065-bd2d6f960716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31388af6-9dae-45a4-80c3-c9e1dfdfb1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c88e5ed-87f2-48d6-9a6f-7f18bfe9b75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f90401-d75d-4306-a0f1-05895d55087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3172f2-2f90-427f-983d-8385e7137553",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4677df97-58d1-4b8e-84fe-7622d4a2cd72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1acdb0b8-d447-4eda-9c2b-e14316948945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f9f216-dc6c-48fb-bfe7-1dc911b8a958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20fb1ee-44db-4a26-bc37-bb17125dfc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b1aa48-7f71-4422-8316-d312578099ed",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c494fa2-13aa-4e6f-9d23-0f195b8b762a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fbed768-2db1-4cd5-95e6-8cc752b57d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43594a0-5e8a-4759-be57-9688927378e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14bc376-2612-4166-a819-8a5db4083d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bf7d29-a13e-4acd-8285-21d3694a12cc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbafcf58-8861-4366-8f7e-5b6f0a49dabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa297e8-0045-4a92-afad-f0a685459f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5bcf72-68f1-40ad-8ce9-2b25de2b4fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0e2209-8d22-4f0f-ad72-2e6723e68acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a2921c-c6bc-4894-9a6f-dd922ce40ec3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a948eab-c3e6-4d11-ae2d-26207b05185c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b9cd434-d1e1-45d0-8480-8f5539c902c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1edb7c-ba2f-4c30-99d1-f0962ab59eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3862d6d-33eb-405b-8814-48e1eea6fa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9c3b3a-e814-49c2-8e64-0888bb86ba19",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51482a20-a27b-4131-83c7-c7e9e33459ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67496465-7967-4fec-8477-36235614eadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38de38f1-cb18-41d9-8c55-ce15fd9e6efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7cc922-95fa-4474-b872-06515961b8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d406265b-fe72-42e1-bca9-cae8ff1f1f35",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78344eea-8490-463a-9f19-6c15250e0be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde734ca-674c-4587-a85d-ff9eec5c3bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b66d630-dc2c-490b-a753-7e4d139ea626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54227712-9e26-4c0b-b5b7-636c6d329e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3a80f1-19a1-4a9a-aebd-509c0d049dfb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36d5c09-7e8b-4241-bdde-ea9c16f34f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb578e85-50ca-4340-b54f-f83cc641d90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2107e5c-1c27-43df-9476-5687ffa37ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb14436-d46e-4211-8123-a06e263828cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8736b8f9-b1e3-4606-8eef-158e2e4ccd55",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d182b1-0ffe-48be-8285-bb98c5e9e8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73055d2-cc83-419c-89bd-e02af3f51096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1354b275-b046-4af1-9918-0b4b43daa96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0783fd28-1462-4c20-bf53-331735c47f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d7fe68-d54c-45a2-b709-ebc8e0a76e86",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a80c80-e122-4a4d-b213-95d82451926d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fd7c88-ceca-47a0-bb28-90862ff4dcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa23c7e5-06d2-4f3d-8e0f-2a41b4105ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ac588f-76f5-4344-9422-1bdeb9db4b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3799359-1df4-4552-908f-ea9c406173a3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8741607a-efb9-496a-b137-c22311cea3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a58c05-1cfc-4c97-b449-f331714753e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62de187e-301c-47f0-816b-c3bccad3579b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c318c0c-71ca-43e2-9f9b-381d54f0f737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07da894f-b206-4e2d-a5f3-0288e3742b72",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d7a949-53bd-48ae-88ec-4f2f0cd3cbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b991d56-75f0-4c3e-a843-ecef8904b805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d1d111-3846-427d-bf30-b59f61d65464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b892336-e956-4b1d-8f03-997f89cff4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3e8a09-ff27-4f81-bc39-91bf9f4d2605",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297b27ce-a87c-4782-af40-4293716226c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e070ef8-59c9-429d-8743-ceb526b61dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d923270-5519-40a4-a0cd-374c9744ca90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28484e4e-6d3b-43c0-bc47-264b5f1af6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5504a794-c2d1-4451-961b-166128620611",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708effad-ddab-4dd6-b7fb-e211dd4d1aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb5d615-9524-457f-8f7c-4e474c34255b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498d11ca-6e0b-4f87-9a93-1572f129cd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556102ae-0635-4034-a66a-e6c95bcf8216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f93b6be-fcb5-49ff-a9e8-b42e27f447f6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47efd63e-45ed-4dc1-b529-464a357c41d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798e08d9-97d5-4679-9aa1-a04d829b389f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e580ec-380b-42d1-ab4b-6094a28852af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12eca1b-8cb4-43b8-82bc-320d6a2beaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e34eb1-15cb-40e0-8a85-d5b84335d09b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fec4b1e-ee68-4c62-91af-68a7a460a59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be89e5f1-95ea-40ed-a225-8244e8eeff6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459f987c-2187-46bd-9ab6-6d22fb3f259a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca49051-6fad-4347-aad5-c8a93a7e8e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b139e82a-89df-41a0-8c8e-09e8e379d6b5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2db565-180e-4a9d-9b5e-32e07ffc7c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f54284-6a41-4515-b8fc-6acba1c98123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab04bf31-1cd4-4b7a-be7c-7f5f031ec9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54131385-c565-4563-9744-5c5bfe92e403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d2e24e-ada3-4fad-a987-85730fb9f7a4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46caacf-6fec-4fc7-835a-df8f7e06f599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514eebf4-2d6d-481d-99fa-bcacef6be0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af635f50-8d95-4e9d-b97b-81e8655c6acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817000ec-c57f-471b-8f21-a4fa0e65065d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2b61c2-3f98-44be-b53d-5b61dabda15d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298d8e0f-c973-4bfa-87d9-fa0e31b2a085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7135b1e7-6b71-402a-ac01-a04f21120f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c84aae-e68c-453a-a540-fabf175c94c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c359476-7f88-41cf-970a-95e1c1991aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a914d47d-5325-4382-87ec-07d66ea12668",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfa7b6a-cd33-4678-bda9-8981d4ec14cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d397eb72-3776-41b4-bccb-9173a1b6ef5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df78a611-9f2c-4972-ad54-1d6fd7c2fac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fe58a1-f30d-43e3-a024-41550c04f9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae9c637-1677-4647-954e-f74621b342e5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a722067-8f90-434a-8483-85bcb67c604c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5083ffd-32ad-4b81-b768-baa51b7058c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1004ea1c-4e33-4171-84b5-021e8476f744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad8d456-91a4-4810-b3f8-79f1c3066463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b205aba-4c19-49b7-9df8-d4eccfb939c0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bda2b2-0f44-473b-83b9-b12f1e6962b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d821db-282f-4c5f-a5c9-383283b3efd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9cb17e-4954-4268-8753-7f49b73d2663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1a6c81-8b97-4af9-828b-9ddd248b09f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb87594-a78a-4f0a-a7bf-0ef70e47e005",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38009c3-7ec7-4d04-bb42-3aa956369b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38503101-f5c0-4ba3-864c-f9d2f406e509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af886f5c-10cc-48ad-98a9-e2775a7dfb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5625a644-015b-4f51-b44b-c538ece04519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bb30de-e303-4d19-8a45-67bd97092860",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ab8e21-ce7b-4efd-b2fb-63d56da1a5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f501e90-baca-4070-8650-dbdc4a96e4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30b3a72-e369-4f5a-a839-5610c1ab5b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a580c545-ea82-40c9-a1cc-df1bf1b99165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cbd182-988b-4f12-91df-6321883cba69",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa08f9e-6f77-4cbf-ae24-20972f4fae94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a58579-518c-46b9-b2bf-37f532a29aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad2be45-5f2e-4b6a-9dc5-ed2d248219d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1aeb2fa-f72f-495b-b325-5d8e16b8e85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325d67cf-6a34-4c3e-bae2-5bc8c0548155",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be558272-a494-48fa-9920-8883e564ee49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9cc8a3c-62c1-4b8d-ba17-1e8612bb529c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbed7918-544b-4083-8edc-031e28db4d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bc0240-d547-43ac-8935-709a08eb95c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136b80c2-5a56-4c95-979c-8911c1fc053c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7877ee62-b908-4545-96e0-cd6ae78f49bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f164a8e-298c-45a9-80f5-ba59374d0306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f64130-4f72-4de7-8882-d8b98fecac53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce60bf8d-0a6b-497f-8f59-b29ac2317e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748e4ebb-612a-4bf3-a39f-ef21641e2e2d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca12cc85-b036-4425-8da6-9a44078f8b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb423001-9f5e-48e4-a57e-a5f390f181bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f493426-7eb8-4921-bf58-28c9cb214b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e543a3f8-1a41-4c4a-808f-2cbfe2ec74f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7846446b-8016-4603-95f1-d1c81a4cef72",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4055b5-1c29-4102-8dfb-9061ec25b297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6abbf4-089e-4e06-a0fd-fd10342f88ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763ed1b3-0773-4f60-99b0-8118a6c221fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e859927-d499-482f-8324-a2abc2c921fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49802792-2b3e-4ae1-98cf-046944c9b4e6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b1acc4-3950-462d-899c-4ee908575002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6886fdb3-0f67-4d12-9e96-eee7d63ff520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751078e3-349f-4ddc-9998-7120aebb2add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77503701-7d96-41ac-95df-1b7ae627cbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a509d7-e289-4680-9fda-80daab9feee9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcc8651-6643-4374-9612-f1b820968101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd2aa1d-d38b-475e-b423-c2f14cdaf9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31322bb4-7e3d-494a-80c8-4a79d9fa51a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52dbc33-72ef-4832-a052-5a1a82206135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be2d976-8507-4f2e-a4d0-36884839eb2a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abb1a11-daaa-4a54-8043-e4a71e2e931d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e27aef-e665-4b78-aa01-3049895cc32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658fe5a6-eb2d-4651-b006-b25aab06662d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edeafcad-4201-401a-a394-944076c6c24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed103dc-ffd6-4a0a-8948-f9a7fd2fe6c9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf07525c-718e-4efd-ae58-f36e06622f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48139092-c89a-444f-a2af-5e26593fada0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cb4332-d3eb-44ab-a13b-3720cf387af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a9f9da-59ae-40f9-9e35-107253493c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b3dc85-9cdb-44f4-a999-83dea5fe76e2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a8eb69-e04e-4341-8e15-e7bee361e3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accd4d15-b7ff-4439-ad2c-aed521001e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129d2f49-7067-48c6-af79-d8d799e91380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6af27a-0834-4f38-a6fa-c9927729f7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a0c98a-1fda-4252-bec9-a341775b596b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b305ae-6d11-46de-85a6-f6dceddea5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47ad015-e82c-45d3-9bdd-9d2e245d0ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddc3523-1e56-4833-a6c2-7c9850e5343e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7f204d-ea66-472b-8748-b96f5c697b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7722b9-c475-4401-b7f6-f36e56fed191",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2ec2e7-18a2-46c3-996d-5826f0d8b900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27b4d64-d651-464f-a28b-6a0c5fd4a3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026a7694-ce98-4701-a050-e14c22b827f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3818eb4-15ca-40aa-ab94-133561899e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becd46a1-aba9-4e36-9eaa-630f1698a210",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc62e653-a248-400a-ad3d-925c90b1a8e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce5b9d6e-7c45-4f4b-b94f-c5ee4eacf83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67378c7-c9d0-4f20-ac27-48f12f771a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026a4cc1-e3ae-408e-a1ea-a13c59e8c750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c5b4a5-c030-4bb5-bf12-38c0946e911c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19835d8-f173-40dc-9af4-34e06943a14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01dc2b45-2eb0-44c6-92ac-8ad7a55a2fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8a42c9-eb59-4d65-a47c-76777c454db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2e43ba-39a4-43b5-b911-402189afae06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8b85e0-e020-4531-ae89-405446e3fd9e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8741ce-4ee7-46dd-b8f2-41a6d504b28b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6ffcec-eea6-4c0c-a1f5-791b2ab1723a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e337bab-0b5a-466e-a076-1304e4d3f574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0834704a-5770-4c65-8954-39c5384b29af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950db292-34ae-4a55-9b9f-8a2da6243ee8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39884d2-b697-4b99-8840-d8ba0d893b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0609095-3a7e-46f3-97bc-8dcf9e4fa190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33129d8-0675-4625-995f-864125db8e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc98158-ba47-48f8-849f-4b6964f01006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f147e7-8d4f-4e62-af11-2fcd0a8504a6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadf9c41-23d6-4c15-a102-8ad8a0960044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db2aa32-af7f-4b65-8cce-dcc8ad547d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2862145b-d636-4030-8f9c-4b61b42f7ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842d1fc3-2ae8-4173-aee7-090b4e697ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b01fe3-cc11-4110-baae-fc3093818864",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b246168-c3e7-402d-aa01-07baaf4f6467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f66eb76-0a1f-4ba7-9c0b-4085a5abb756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e162eb9-1590-43d5-9a56-52f10628ec93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112b8607-7dee-4415-a040-ab7f58d6455a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a64806d-f794-4651-8edc-97306f68984e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d16ad6-d75b-4a71-955e-afb938a8943b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec242a3-edfb-4c53-83e8-c29291c83f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2963ba-917a-4f3b-8b62-78c195abefee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a688dab-c5e7-4e25-85cc-f2c73e7341f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a96d46-1bb2-4132-ac7a-d23f16475876",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6598877-a60f-4315-b2d3-1b009d6a030c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baee01c1-c880-4610-be2e-c95521c71c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213e649e-93bc-4fc0-a84b-ad2f2ca3f452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1268858a-0e3f-485d-9c80-9f217ff823a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfdeb35-7538-43a5-b1f0-4791206e7630",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746f5a01-ba94-49ec-9386-4852058a86eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a336b5f-6351-457d-a4f0-18f5fcc82fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6268c8-37e3-40ef-8c54-5fd119577610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c3a67c-658e-449d-9eae-4374406bb6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c9838e-eeb0-4691-a6c1-5a388e732503",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39db8e36-c385-4ca3-8199-c94185118532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46f5876a-75ed-48e8-ae14-dc96ea4d49d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7614015b-c16b-475a-af7d-929c28d56ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eabe3d-7a84-4cc6-8f5e-a4f3adfad667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089c2701-0987-49b2-bffe-f9a1953996c3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691eb11f-064b-4894-8de8-792ec50f2e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72e0e74a-7ab1-4d70-ad5a-993eaad60483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab12f7ce-e304-46d9-9537-746534f9ae0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7731a97-347b-4f83-bc9a-5018c53f4393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca526d16-f758-4783-af5c-2ce8209d24de",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecb88ff-4061-44a9-a0a9-3c933aa8ec6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4a1e33-440f-4825-9d1c-85210cec2ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7b09b9-3b6c-454b-832b-f3493ec2e452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6de0f93-12ac-4be6-a3ab-fa870cf85968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302adcd5-4343-4900-87c0-07c56ca3ff7c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459dc2b6-cafc-44d2-8449-76235d95083c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546560b0-7dbd-4cc1-acf8-d6abb65c89be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f660b17-ed85-4751-86ce-0d6c36d3bf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb28493-7016-4c5c-915a-15ca7be5c064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc15feb0-d093-4a98-9d91-3166b9d37a04",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad8cad1-8c51-4906-bfc6-1176e9c07265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a8d2964-8cb0-4cd8-89c2-cbad3d9068ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a333a86f-242c-4497-9377-206457483ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bda38a4-3fc8-4a26-904b-0b01e0aa5ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc418e61-6ef3-457b-90e0-3885858bb79f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f28e4f2-b6a1-4af1-9b92-f546113b9c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d29e61fa-d8d5-46e7-9f29-c1fc3a421d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f30b8b1-4ae8-409e-8893-935fd0961562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd75f512-44f1-4e3d-905f-27476193d698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c46b231-a7f9-4762-a682-381af4a4be45",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20361256-6d41-40b2-bc88-dceb41d64c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f9cd44c-32dd-4bc2-9139-7a70ac481532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9befe29c-4a26-41d8-a300-24dde4fc7b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3e2066-72c8-48ed-943d-c4f59f9f24fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5a6ba7-c84a-458a-ace1-1d1a6206128c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c0fbed-6e4b-45d4-8088-181e434076d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41fcb356-a7f4-409d-aa4d-72b8e575f4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81177692-4984-41ee-895b-354afb31940e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad7ee38-5e91-4b51-b93a-9d1c2637ea96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93aebc20-a606-4d57-84d8-67d27b9ee529",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a47a8b-5367-469e-9be5-8fc10a505c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21e5b632-e4f5-4e9d-8a14-fbf7bc3520c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c556535-c850-451f-a1a7-cfcdd3c48e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e26f76-4b45-455f-8ad5-aa2d9a627b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec12100-bfed-4028-b19b-269a1ee00098",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6db1ef-9452-4cdb-8861-6e631fcb2b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89464560-0d9a-44a6-b45a-708abe16d5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b744a6-58fc-409a-980c-e53a5c3b84f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe3f452-579c-478c-9ad5-3a32f3e39951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8630c907-09d8-478b-adde-9e3054f20dbd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53262ab4-a22d-4b4c-af89-40469ae427a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a15541-38ef-4aa1-bc97-9402886daad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c731fc5b-73af-4802-8ebb-0428e220aaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d80f70-1474-4a05-81c2-4aafae4ff0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da44175b-4698-4475-99f7-f97c955c8f1c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae0acf4-0cec-46a0-b818-0889a343b122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a32fda-ffaf-4ab7-b020-080c742e7365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900c3619-3765-4e04-976e-e9ea16e4cc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6193531c-5050-4327-bf3c-9aeb067a79c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a927a75c-e01e-408f-915d-b295f0bea03f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe49ba0c-75e6-4308-9d6e-a44abdc89417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa5e782-212f-4d79-a5f7-3b8e0b0ce14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d49266b-9c19-47fe-805f-2668192116c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5d98a1-1dea-4896-9ea3-ddebdf6c4e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7b5c84-4995-480b-a5d5-32c51737e0f8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef69e0c-08b3-4688-8701-060c61051730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad363e4c-a212-4328-8f5e-f81b00b28bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59131ae7-0683-436b-8efe-69c61a343382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e8d9bd-2a7b-4d0b-a1b1-04a6be63d7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f03236f-a484-4bc7-9bc4-3254dde262dd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d40a50-e10f-4593-a2d3-c03520a25977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e99212ef-985a-45a0-a522-0fbaff7291c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370bbe9f-94a6-4469-9a0f-a5b1f8d65390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6690e952-df1e-4693-8d4c-17435ab694a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec09ccb2-35dd-47df-af28-45ab7eb93481",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afbecde-92f5-4615-a8dd-a3236066ad35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6f5a20-7900-406b-b6d5-409112a28760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ca79e2-16d6-4232-bdec-05b103c7ff13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2428b2-027d-4717-9aa8-87603e0eaec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac96c76-1399-47b9-99c5-9280a6ee9c22",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5871a5f1-90bd-4156-a9dd-01f77d22adb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c04ace2-45cb-4525-9986-161769105f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82148e4f-ca9a-4056-8d04-a86f5c52eaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670b4b86-721b-4563-aebb-18f569051541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf721ba-5fa4-4b44-bcad-fcda3ee53ffc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8234d93-bf0e-4367-916a-55346a4c8c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13fa22f-ff30-43a3-94e5-f1eddb3f6354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c2d9ec-a314-4c9d-ae15-50a160933695",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810d79e6-ff59-4ec8-a205-3e5226072037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94b6bea-eb82-432d-ae72-e1d4f16b6d85",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6890c36-7062-4921-a4ef-9a586614cbfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3e01ae-ab65-4b9d-a86d-367000cbd93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb65866f-4d6f-4411-a809-1832f0233a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d6c79c-ef00-422d-97d9-972a554a96af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83264565-c32b-4b27-825a-340dc4f4701b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e4508d-2b2c-4560-820b-5ab5cbd215cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f84d08f-0680-422c-b415-a1033efd7586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd5b56f-2df3-4170-b0ea-3f76280c8e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46c6451-d98f-402d-94ab-c412c5bc1771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5e297e-2c0b-40c7-bb63-d87cd6693c00",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa44e77-767a-4c9a-9dbe-e4ad95ab6ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "241e6cfe-e187-4236-9c0d-177d2f86fb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2bdcd1-60d6-4cc0-a741-c6ab908bf466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e134ebc-e51b-42aa-a033-d18bbff510ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a50eb3d-64d4-4d74-bea6-9e83f1878b2e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21266c69-a320-424c-a41d-fadb689c164d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c86e94ee-d8d0-4ff6-8693-81c7fa1d728c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e898b54-722c-4648-a5b9-b61fbe0c92dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea93827f-0a5a-4d64-8f74-64f1bb00a4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4039573b-d062-45a9-b1d2-add6101ec553",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8ee5b9-131d-4bcc-85e8-2049ec225933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff848929-d556-46e3-abf8-b93b8edda2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8023209e-147a-44ee-baeb-8eb79b2fe35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695be6f8-9597-420f-9f10-62eead791c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f0c141-a8f2-408c-b5df-155388ced4b0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9383b43f-f2af-40bc-a1da-97d6d51c4e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e91b2d5-7cb2-4bb4-88a0-6ec01ddb0dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc3e26f-f80d-42a5-9ca8-a05fbe25838a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882e4f03-d035-495d-80e7-8389308d2f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1c652f-d24e-442b-8b00-bf8a44bf0947",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c5a774-068d-46ef-b71d-27d6fa8e0468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551fe419-eb66-42c5-a794-ed454b919b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efc977e-b7d9-4123-b7f7-d53e873a087b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e50617b-e19b-4b74-be43-4435215e852e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce09f739-934b-435b-8482-817f505edca1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "108cccb3-0ee4-4b00-86a3-fb7d0930c84d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5e25d96-fd58-4f63-afb6-d9999595b6a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e33eedd-e559-4b60-b85c-a63e2e38d802"
                    }
                  }
                ]
              },
              {
                "id": "3bff2102-3000-44fe-b206-6b165d0873f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c7a0fa2-9084-42bd-8472-16fb1c5e77d4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a245df-9472-4044-9cc7-fdade1607dc6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "805adc39-b1c6-4c5e-aa74-142d1dd51f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e72e7a9-3466-4555-8c13-df7f2bb34469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e31cbe6e-f3d3-4478-93ad-0abd8717eca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c75245-2ba7-4a8f-b937-fc2312f2564d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e198ca-1edb-4e6e-9ae2-97099127daf8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "90e7e132-38da-40e9-90ba-1bd567126f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea965fb-2cfd-4378-9a69-8bcf95e5e7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cc06b0d-148e-48fa-932f-d504f5a60e7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e87a3ec8-ebf4-4fd8-bf33-8eea69d72266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "745370bf-5675-43ac-890c-d10924bce008"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d366dbf0-50c2-477f-a2bd-c0a7acbd77a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1d99280-3cba-4b3a-87b7-fab205986b35"
                    }
                  }
                ]
              },
              {
                "id": "0dcbf164-f903-467d-9bef-d6f0ba2a8644",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5a0897e0-d562-439b-a85c-6b0df58028fc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bf6cca-3fe8-4e25-a656-d4ab63f1492b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b861e460-7a13-433c-90ce-b50e6cc36475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561c321d-06a0-442f-887a-c5ce922fd12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db127b40-c49d-4c3b-82a0-c73cfffcedb2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f6ee0586-a4cd-486e-aa2d-201233438cf6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ebec30a-04ba-4a27-ba21-3a62e411ae2e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6aee41b0-82b6-49dc-bb88-ae836cf7a14f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1aeb80f2-1485-4c32-a7ec-faccdb28d18c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5a8a9cf-85ff-4d14-8e50-de77f31cca3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c09c557-3181-4666-8701-70e772cf2258"
                    }
                  }
                ]
              },
              {
                "id": "58351c93-44c2-4eaa-be90-6eac408f4b65",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee739f1f-4651-4e8c-9fb8-dc634ffec63c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "70da0947-a7c1-4ba9-ac22-00c286a8027e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "672ec6ab-9a64-4c76-a186-227211ed1847",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5a7695f-e361-4218-8ae9-6f740313bbad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45e8443f-dbc8-4c0b-9c8a-aefb60ffe98d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3df23f82-42fe-4311-8558-1cfe9cc565bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "414c93d9-2403-4b12-930a-4201147936a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddc35cd7-f899-4315-af5d-8ba72adf7a1b"
            }
          }
        ]
      },
      {
        "id": "74448d01-6fe1-42c9-b4ba-ad815acfad5d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0ba0714a-422a-4f61-9a0e-f51df7e62be8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4daa35b5-9ec9-4d82-9380-9c6c46b30a47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7cfefa12-789e-4a0b-beb2-6dacdf070573",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e21a60-6f95-45e0-96dd-2a78e52d28b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "62069e66-52b2-42d5-ab79-73d2487eba8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f57a2c-736a-4b74-8a38-455bbff6feb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8d12b32-790c-4a67-b2bd-a9f62e142240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905a17ce-333c-4b71-b38a-02fa45b4e3a5",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1a9de6-05f5-4349-9411-f2e105e97446",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4ec886ed-16ff-4df7-a754-e616cf3e6810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b4f752-8e6a-41d9-bf59-a519d8ea5b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d22596c-20c8-4c30-9d5d-217553031d2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8c31a55-045f-4769-93d4-c1079f75d290",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "545d78c1-a402-45ce-b432-e73f60922391"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f7e8c29-7576-4b0d-8e5a-0a59ebdd9d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33fed435-46d3-43ff-938b-a948de5848ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bfacbc9-c1f0-4aa2-a515-fe9226efeec1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d006f1cc-56c2-4c9b-92ce-0fda849fe42e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a9e3a6d-924a-4c69-ae74-83d624af0b32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c9ea3a0-7f36-44ea-a875-9eb87583ffc1"
            }
          }
        ]
      },
      {
        "id": "e1316b8c-f37b-401c-981c-523e54852abd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0b01f101-e82b-4b9a-b512-d83314c362db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec28d529-ddbe-46f0-ae4f-5347230eb5d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0241b4a5-230c-43a8-a626-ec3539a7d04d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fc41a8-bb03-48f5-9fb5-b80101d8e4bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f0d4859-ecba-4776-8d9a-a1b831957419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659ce76a-c646-4320-a43f-12a790421ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30afee23-b371-477d-ba11-303f579c6a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b55717-e838-4457-8a98-67f46a39deff",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b007af9-595e-4e7a-9a74-f5b3e1bd5c9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a24d2044-8d66-4700-a8f9-78e8d6840ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6883c44-328f-44b3-9b7b-6700ad56f429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a3088af-362f-4b40-8015-e20349fcc37d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8255d8b5-27c9-4b25-a30d-5007a9b6958a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95250d7e-7608-4c01-bbf4-9b1565f92333"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2006db29-02d3-4584-98f4-77efcf257926",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5904180-3333-4f39-ae3f-452fcba7acec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da24faae-0ff5-4a24-bdd8-f39e82898f48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c68a140a-1baf-480f-937c-cdebf608ce11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d0ab42a-7480-440a-9cde-f45cb12c3ba5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "324b79b4-08ef-4e39-a60c-bd8d5533a2b0"
            }
          }
        ]
      },
      {
        "id": "873e8e2d-8d21-47bd-bd1a-b7506eadb369",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8e26c21a-44f0-49cf-8ce3-a8abdc430173",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6d5717d-8773-44c4-aa51-5705861aed0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "452aafe7-1c8a-4faa-84b2-92686cd23c89",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810db005-f966-4358-9900-62d2b2bee87b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba0c5bae-1ad8-451d-b766-c11a517d6cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b11f79-8313-432d-93d4-8108dd4f8716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ad4ca54-8c0c-4007-924c-c56fdfbeda3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c046660-3978-4677-af34-7cb30d9df08f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9721584-00b5-49dd-bcea-8bad2c075df5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1e8931-44a3-4f6d-936e-ffb017737cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9107b7a-28f7-4819-be67-8c9f96f8a4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c589d7c3-448c-4820-8349-07b2d48bc063"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3159cffd-5f55-4a81-a1ca-ea974bc5c1bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "220a1259-f619-4cd6-a8a1-6e3f616be59d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "918df1f2-f505-4b52-8f02-2e859ed5185c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "557293a2-1d60-463a-837e-2b1c01b31bf1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d4ad872-c093-4abd-918c-e0ae2c385e5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa083af5-38c2-4b39-b74b-8315a1a2b667"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a039433-01f6-4ad6-a2c0-2d67ee44c3c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f17d9e4-2cf2-4a78-8e9f-721835083b01"
            }
          }
        ]
      },
      {
        "id": "a6dbef0a-21ac-4443-91e2-e9b3bf0beefa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c945dbc-962c-4a34-94da-7efdf0622ff6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e97cd7c6-4f66-4249-a0f6-2f1e31777018",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9a0804c6-e4dd-466a-9e54-8e66a014ea68",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da53c360-b241-48c5-bb48-a4fce5e02d56",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e58cc180-b479-4bd0-8659-549e0e1f9275",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 39.53461538461537,
      "responseMin": 14,
      "responseMax": 317,
      "responseSd": 33.43436097913105,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680309499829,
      "completed": 1680309520531
    },
    "executions": [
      {
        "id": "755604e0-e8fc-4ccf-9ba5-4a4258240cfe",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b39239ec-2728-463c-85ad-8d3910a7a6f5",
          "httpRequestId": "614a6fe3-a6d2-4535-86d7-ef06f022f38a"
        },
        "item": {
          "id": "755604e0-e8fc-4ccf-9ba5-4a4258240cfe",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cb8a0099-7fd7-4666-97b1-587168b94628",
          "status": "OK",
          "code": 200,
          "responseTime": 163,
          "responseSize": 0
        }
      },
      {
        "id": "7f42412a-e43c-4d1b-b2e5-f9d35e906ee4",
        "cursor": {
          "ref": "0caa285f-3601-4c5c-aa16-9d139fcabbc8",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8f0c26cc-b5ca-4e17-899f-0951c7aa541e"
        },
        "item": {
          "id": "7f42412a-e43c-4d1b-b2e5-f9d35e906ee4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "88545592-b741-4329-98dc-9bb8f2c1f01e",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "36635d6d-dda2-45e6-b062-c346a59c89ed",
        "cursor": {
          "ref": "e5354742-b591-43c3-b8ab-f13e81602099",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d0f410fd-3767-4efb-8017-74cbf758826a"
        },
        "item": {
          "id": "36635d6d-dda2-45e6-b062-c346a59c89ed",
          "name": "did_json"
        },
        "response": {
          "id": "be57c4e2-940f-4874-9d06-e038b14d6713",
          "status": "OK",
          "code": 200,
          "responseTime": 145,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fd82ec-3515-4428-b21d-706260a1f6f8",
        "cursor": {
          "ref": "28d31ba0-5aa3-4156-84ff-e54b2f4469f4",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "30bd07bd-5b24-4085-bd8a-68250f06ca49"
        },
        "item": {
          "id": "40fd82ec-3515-4428-b21d-706260a1f6f8",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf10b691-b1af-4076-93b5-eb23093c316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fd82ec-3515-4428-b21d-706260a1f6f8",
        "cursor": {
          "ref": "28d31ba0-5aa3-4156-84ff-e54b2f4469f4",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "30bd07bd-5b24-4085-bd8a-68250f06ca49"
        },
        "item": {
          "id": "40fd82ec-3515-4428-b21d-706260a1f6f8",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf10b691-b1af-4076-93b5-eb23093c316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0705e2b8-3fa7-412b-9f57-8be44aa9e64f",
        "cursor": {
          "ref": "483a8a32-3d9b-4256-9f05-1fab33040a2a",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4fdc5f82-69e8-42db-be54-3d5f5183c77d"
        },
        "item": {
          "id": "0705e2b8-3fa7-412b-9f57-8be44aa9e64f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "80496c8f-b960-4bed-8d58-19289d8c9ee2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3920cf8d-2a33-44d8-b633-c44f105f4f90",
        "cursor": {
          "ref": "870a6190-782f-41a0-84cf-5e48574d6858",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "743b33a5-10cd-4120-9d9e-67e76a415bbe"
        },
        "item": {
          "id": "3920cf8d-2a33-44d8-b633-c44f105f4f90",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a1cdd9f4-3817-45c6-bdd6-815c1560960d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e622467b-f7bd-4043-81a0-81dec570ef24",
        "cursor": {
          "ref": "73f8bafe-3476-4659-a820-4a43da4dd56a",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d7714eb8-bc9e-4064-a3cc-4be34d2358a6"
        },
        "item": {
          "id": "e622467b-f7bd-4043-81a0-81dec570ef24",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "75c1cbcd-9242-4cc5-8bc9-bffb6fedb563",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0000d77d-3c80-448e-8dc3-8fa7afd81910",
        "cursor": {
          "ref": "aada1308-2877-4646-93c5-20a917195c1f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e597c214-2c2c-41ee-a621-e3cad5aadc6d"
        },
        "item": {
          "id": "0000d77d-3c80-448e-8dc3-8fa7afd81910",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "885a2b97-1745-4af2-9a72-aa026860d1e8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0000d77d-3c80-448e-8dc3-8fa7afd81910",
        "cursor": {
          "ref": "aada1308-2877-4646-93c5-20a917195c1f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e597c214-2c2c-41ee-a621-e3cad5aadc6d"
        },
        "item": {
          "id": "0000d77d-3c80-448e-8dc3-8fa7afd81910",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "885a2b97-1745-4af2-9a72-aa026860d1e8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4231cd66-f175-4e35-9ed5-00a6eea79197",
        "cursor": {
          "ref": "f06d8465-eca5-4885-b8b8-7d6724407180",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "425d51bf-f8e8-4071-966e-ff274e2f4162"
        },
        "item": {
          "id": "4231cd66-f175-4e35-9ed5-00a6eea79197",
          "name": "identifiers"
        },
        "response": {
          "id": "d4e19bee-50e0-4134-ad5d-508e94b176d5",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f3122b-18a2-4d6c-9eb7-ec82ad0d248e",
        "cursor": {
          "ref": "f7157ac7-9d59-4f4f-aa73-d6a5eb785830",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "12903ad6-a03e-4a90-a737-8ed08bf7eede"
        },
        "item": {
          "id": "e4f3122b-18a2-4d6c-9eb7-ec82ad0d248e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7fe74e97-46f4-40ce-adc4-12c4041227d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f3122b-18a2-4d6c-9eb7-ec82ad0d248e",
        "cursor": {
          "ref": "f7157ac7-9d59-4f4f-aa73-d6a5eb785830",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "12903ad6-a03e-4a90-a737-8ed08bf7eede"
        },
        "item": {
          "id": "e4f3122b-18a2-4d6c-9eb7-ec82ad0d248e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7fe74e97-46f4-40ce-adc4-12c4041227d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd430d2-455a-4acc-a7f6-671e3223d93a",
        "cursor": {
          "ref": "878a1ea4-7bf9-4ba4-a65f-7fb87c0749f9",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d6d86648-c557-49de-95e1-c8407080d37b"
        },
        "item": {
          "id": "1bd430d2-455a-4acc-a7f6-671e3223d93a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "549f5b5b-12cb-4926-b326-44ccd837da0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630a74f9-3089-4170-9e15-4ac4ccb6b422",
        "cursor": {
          "ref": "9dfa841c-7162-4db8-a726-225f1f4babd9",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "948009b1-b2bc-4869-b39c-4f2488734ee7"
        },
        "item": {
          "id": "630a74f9-3089-4170-9e15-4ac4ccb6b422",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e2875431-a3e3-415f-96c6-e5cbee90f71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0cc851-36a3-49c8-a0e7-52032f8fbcb0",
        "cursor": {
          "ref": "22e1037f-0271-4d9c-b875-352ff3b03c0c",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e671e9c8-8f13-4cc6-8791-d9ae52d3b560"
        },
        "item": {
          "id": "8c0cc851-36a3-49c8-a0e7-52032f8fbcb0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "79b5bf0f-9ce2-4dd2-8925-c8462fed09b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84096c9-4ef4-4991-a18f-e0ed2a623caf",
        "cursor": {
          "ref": "59e0a2f3-ce81-4059-be0c-230f888f8cb7",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f0c512f2-75a3-47f4-a9f5-472d13bef842"
        },
        "item": {
          "id": "f84096c9-4ef4-4991-a18f-e0ed2a623caf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "68607e34-f638-4882-8741-5718f4c71ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32d9821-4636-4803-8e40-1bc0b39be156",
        "cursor": {
          "ref": "c8c85ade-2280-4ced-beae-1ab8c0b46730",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4fef63c8-f740-4c23-8202-1968ddb62596"
        },
        "item": {
          "id": "d32d9821-4636-4803-8e40-1bc0b39be156",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "01b70023-762c-4527-a802-17f5c27242ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef76df5-22b0-4981-8675-536d5fcb6a08",
        "cursor": {
          "ref": "41d9f500-7a72-4c7d-bc7f-62d85c791255",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c5be97d1-a984-4801-8957-dc0f715153c9"
        },
        "item": {
          "id": "7ef76df5-22b0-4981-8675-536d5fcb6a08",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1de52f0f-4dc3-49fc-b6fa-158787466461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731f257c-c9d3-40dd-b846-e1b0df7dc279",
        "cursor": {
          "ref": "7838e84a-fef3-4443-98d1-cea791f1f56b",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cbcded96-d952-4561-aa72-b3f76e4b2c25"
        },
        "item": {
          "id": "731f257c-c9d3-40dd-b846-e1b0df7dc279",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "65303af8-825f-48d0-abd8-7322415773c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec849ec-fcc1-4b40-9af3-e5ceeeb9dab4",
        "cursor": {
          "ref": "0874f618-c0a9-4a51-8726-b93589387a58",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "984bcbde-e18a-44b3-934d-bc77f3259f19"
        },
        "item": {
          "id": "0ec849ec-fcc1-4b40-9af3-e5ceeeb9dab4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "06d94702-161a-4590-b3b1-bbea08e84ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e99f69d-d511-45aa-aeb4-1bd05e2b7611",
        "cursor": {
          "ref": "dfa637e1-cbc1-43e2-9ef3-85336b4a043b",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f9838255-efd2-4be7-bb3e-2d639c3184ce"
        },
        "item": {
          "id": "0e99f69d-d511-45aa-aeb4-1bd05e2b7611",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dad34961-481d-4806-87bc-b21c2318bbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3f7f76-bbf4-4384-b598-b21d581e5f87",
        "cursor": {
          "ref": "0ba3f5cd-7968-49da-b9d0-03f5cf8abf6f",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f18ec37b-5e0e-40ae-810c-614e4f5e43b6"
        },
        "item": {
          "id": "2b3f7f76-bbf4-4384-b598-b21d581e5f87",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d1af440e-adcf-4eb0-a63a-7947a3408a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68aff78-dcab-4814-911a-4988760855f7",
        "cursor": {
          "ref": "d84480a8-54e3-4e91-88f4-c36e77b7c16d",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dca254d2-a723-4c72-9775-44ce5669b277"
        },
        "item": {
          "id": "f68aff78-dcab-4814-911a-4988760855f7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ac5c5f5e-9ee0-40ba-95dd-185121314be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b732b6-374f-4b14-b8c3-09690110203c",
        "cursor": {
          "ref": "b2dda7b7-9055-480c-bfef-b73ee83a7ad7",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7b823d38-9e72-4fb5-9968-6b5428456c8b"
        },
        "item": {
          "id": "d8b732b6-374f-4b14-b8c3-09690110203c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a08b5c40-102a-4ddc-a312-44b3a3daf976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a464ef2-5c3c-4b2a-8c23-68ee72540e51",
        "cursor": {
          "ref": "0d569881-34ab-4bbb-855a-7c29457dc6a1",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fd872041-6bd6-4374-a1e1-1e4f77593566"
        },
        "item": {
          "id": "3a464ef2-5c3c-4b2a-8c23-68ee72540e51",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "be6713f9-3ea8-4642-bd89-b703f00ec482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e41e211-59ae-4eb1-ba04-6e4debc3d6fa",
        "cursor": {
          "ref": "458145fa-bf47-42b5-ba80-1d892631e3b6",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "45660e70-1ad2-4b74-b805-a28c1b42d23c"
        },
        "item": {
          "id": "0e41e211-59ae-4eb1-ba04-6e4debc3d6fa",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6cac527e-1149-4cef-98e1-8490b7af011e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d676547-0460-4010-bb42-c5bb9d583518",
        "cursor": {
          "ref": "ccbd63ee-0dcf-4e15-8a70-9ab301c4fc13",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "750f1b40-c1c4-444f-b391-5687c825f77a"
        },
        "item": {
          "id": "4d676547-0460-4010-bb42-c5bb9d583518",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "52e5d97a-8765-46c0-8cc3-15eddcc02d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f892dca-eb61-4fb8-addd-ec9cd8cd1858",
        "cursor": {
          "ref": "0e5f3790-ddfd-47fc-a1d7-3f8e91b31c91",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "51fafa54-e3b2-431f-ba7c-3ad11a900991"
        },
        "item": {
          "id": "5f892dca-eb61-4fb8-addd-ec9cd8cd1858",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4caf1eda-cea8-4558-b845-1865d2924283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62657d74-9855-4d69-b91a-fd6b7a4dcf5a",
        "cursor": {
          "ref": "870d4bd1-5ec9-41d8-94b9-42b77d647711",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7a411ee7-7790-4dbb-941b-b2e55a603dbf"
        },
        "item": {
          "id": "62657d74-9855-4d69-b91a-fd6b7a4dcf5a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "24be1593-2c5d-4a44-8877-b30c2e7f6a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607fb09e-1297-4f00-9965-92f9598b8c34",
        "cursor": {
          "ref": "6a580c6b-8373-41a6-ad24-5010a50d73f7",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "efd631a3-41be-4110-ba56-0f91b5cdb3cb"
        },
        "item": {
          "id": "607fb09e-1297-4f00-9965-92f9598b8c34",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ac41cba8-7e15-4a20-8d2c-70a43adc7a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a8a676-9f7e-4d17-bb7b-5baab4e1e112",
        "cursor": {
          "ref": "36d60659-1739-4cee-9909-3cc7fc82450b",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9e694829-d5be-4593-acfb-f56680090f92"
        },
        "item": {
          "id": "b5a8a676-9f7e-4d17-bb7b-5baab4e1e112",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "30717fd1-3ca4-4d50-9ef2-c449e8d4e83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01483b5-315f-4566-9972-396d58e2cec3",
        "cursor": {
          "ref": "3085544c-9af5-4873-9dc2-c2acb6c4330b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "577d11df-e765-42d0-9bcc-3e8f6c08e61e"
        },
        "item": {
          "id": "b01483b5-315f-4566-9972-396d58e2cec3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "023162d4-3a1b-4483-bc9b-c6be6d391b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b35b87-cca6-46cd-937a-2eb86a6805b7",
        "cursor": {
          "ref": "e7aa0c5c-a28a-408b-832f-a5ee57c15e44",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "47ccca93-6f74-4acd-ac0c-938d10d832f0"
        },
        "item": {
          "id": "39b35b87-cca6-46cd-937a-2eb86a6805b7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "31ff78b8-69f7-454e-8c78-0464e3a113e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79109c17-3bae-457c-8e15-1f5735acb276",
        "cursor": {
          "ref": "788520a5-6a25-4f8a-8b40-6742d8a35cdb",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1921433d-0ee4-42e9-970e-e238d303ee75"
        },
        "item": {
          "id": "79109c17-3bae-457c-8e15-1f5735acb276",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7cce46ef-fc0a-4f85-9113-f51885b13543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a5e821-7eea-4c29-9f8a-0a45d5cc70b8",
        "cursor": {
          "ref": "e9dcc135-e661-47ee-b438-03b06a9d2a49",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d7251525-f8f5-4536-a18f-af43cf62d4cc"
        },
        "item": {
          "id": "a0a5e821-7eea-4c29-9f8a-0a45d5cc70b8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "370e291e-db90-4c70-bd2e-eeb475553991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca707a1-82b8-4e3c-b1dd-3c67837f4329",
        "cursor": {
          "ref": "551eee36-718d-4d8c-8ef2-2d636434d95d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fa2495f7-37fb-45d1-8aba-51ae93d6f772"
        },
        "item": {
          "id": "6ca707a1-82b8-4e3c-b1dd-3c67837f4329",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "14f1f6db-d42d-4fba-8eea-e4e01261df00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c2b238-dd2c-4f68-8999-f288ce1b4794",
        "cursor": {
          "ref": "20fbba26-d4d7-4e0a-ad6d-a7c8f40358d1",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a5f91445-963d-40ff-a810-e74979c3b369"
        },
        "item": {
          "id": "79c2b238-dd2c-4f68-8999-f288ce1b4794",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1eb5ccae-aa38-4fe4-953b-3e1a870d26e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f855e91c-04e0-4f92-bf3d-9b7c05ec9cd5",
        "cursor": {
          "ref": "83e565ee-11a3-4765-bdde-add76a75cc85",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6a988163-cf73-4c9b-9637-ca189cb4c39d"
        },
        "item": {
          "id": "f855e91c-04e0-4f92-bf3d-9b7c05ec9cd5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "964779b4-1bb7-4a2a-92fa-dfb76f0aa3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1dc828-cbfe-4d51-91d7-136e2d08a805",
        "cursor": {
          "ref": "14e5271d-0e76-40d4-9cf3-1945e8a5d0de",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "84ebcef9-c6f4-45a0-8bd8-5335837de465"
        },
        "item": {
          "id": "9f1dc828-cbfe-4d51-91d7-136e2d08a805",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "13454a57-b5da-4c8e-8323-f9b02d979eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ea9a4f-9641-48a0-a09e-80096b7a8df8",
        "cursor": {
          "ref": "9e8d927f-abf7-42bf-941d-2480bbf22e60",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "62a74b2c-6975-4102-95ab-5bd8ccb97129"
        },
        "item": {
          "id": "33ea9a4f-9641-48a0-a09e-80096b7a8df8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7747dc79-f42e-4e7a-89c0-559ed0802903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffd91b8-bedd-4341-9abb-6605c28a388f",
        "cursor": {
          "ref": "f963158e-d3be-4bda-9ba6-668433878a63",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2e851c4e-fb51-4f9d-b26a-df1f698b45ea"
        },
        "item": {
          "id": "1ffd91b8-bedd-4341-9abb-6605c28a388f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e04bd953-0b42-4080-a6d9-6519142e0787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c77b64-0146-45d3-8146-5154aae5716e",
        "cursor": {
          "ref": "5b5ade8e-83d7-4509-acf1-ce89c287d9f0",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "12c80402-b2ac-4a14-82cd-ce97c88c5ddc"
        },
        "item": {
          "id": "c5c77b64-0146-45d3-8146-5154aae5716e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ec854693-86f0-47c2-884d-d126509fc541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36094606-e1ed-456d-9d84-3098a3926795",
        "cursor": {
          "ref": "5efe8ad7-383d-4984-9316-42d3d04ce169",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6ff6faea-4b19-4fef-b381-e43e4ac28ff7"
        },
        "item": {
          "id": "36094606-e1ed-456d-9d84-3098a3926795",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a64dd8e9-ba24-4634-947c-69e7118ef9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fe4c13-fc9f-425b-af7c-107285a3a765",
        "cursor": {
          "ref": "dde262bc-b801-4022-8e85-8f695592478b",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "36faa21f-023d-4f0c-b14b-f23579d9be00"
        },
        "item": {
          "id": "b1fe4c13-fc9f-425b-af7c-107285a3a765",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6c6052cc-b65b-45b0-b5cc-fdfb92743e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2c6c9c-39cf-45d6-9585-398eceecbfc8",
        "cursor": {
          "ref": "3162442e-987e-464b-874c-4916fc6b19e8",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f03ce9b4-8bb2-41e3-8556-5fe27d85453f"
        },
        "item": {
          "id": "ac2c6c9c-39cf-45d6-9585-398eceecbfc8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "81fc1f48-2ece-47e1-bb8d-39e00665a61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155e75d6-632c-42ec-a276-4587727e4e9a",
        "cursor": {
          "ref": "4aa997c7-6cd4-45f6-82b4-1338fc0b5313",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0b10ad6f-f0bd-4cad-81e3-e10e98092711"
        },
        "item": {
          "id": "155e75d6-632c-42ec-a276-4587727e4e9a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "943da9e6-b751-4d55-b3b6-5ac735253848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6177f9-d31a-47ae-86af-255cae385cd1",
        "cursor": {
          "ref": "04f7f1b4-edd6-4066-9c9b-039e98606c10",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a98f895d-c134-4454-8e33-1a0d980fc1f6"
        },
        "item": {
          "id": "ba6177f9-d31a-47ae-86af-255cae385cd1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4be2a40b-a716-493c-8e50-10c78341e130",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6c28c4-0f9f-44f5-8106-9fc5a84269d4",
        "cursor": {
          "ref": "b0e064a5-b26f-4ce6-a712-5e5a34ee9732",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3ca0f8e2-4ec1-4a80-943b-d22e56e77bec"
        },
        "item": {
          "id": "0a6c28c4-0f9f-44f5-8106-9fc5a84269d4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "28987077-8b17-4a11-ab8b-0ed0857c2ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9715a1ba-2d1a-498c-ae53-fee01dbc24dd",
        "cursor": {
          "ref": "1ad990cc-e397-4364-9a36-8dfbcf4953cd",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "22553124-6691-4735-a260-447c3fd181e8"
        },
        "item": {
          "id": "9715a1ba-2d1a-498c-ae53-fee01dbc24dd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "de81afd3-d78d-4d73-a92a-60d57c3b4f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1e3569-ca94-4af2-ac61-121c183b6fb6",
        "cursor": {
          "ref": "3bb88cd7-fb5a-47a2-8d02-7be545517020",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3f8267b7-0d02-4f38-8571-2b29fe52bea0"
        },
        "item": {
          "id": "ae1e3569-ca94-4af2-ac61-121c183b6fb6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d2d634d7-6404-4fa0-a274-55e9172031ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71ecf36-11ff-4003-8e44-21a9fc6a21a4",
        "cursor": {
          "ref": "d844139a-a3d9-4a22-94b3-467649e6ef94",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2d5a3c43-807b-4874-a2da-ff5d1a260652"
        },
        "item": {
          "id": "c71ecf36-11ff-4003-8e44-21a9fc6a21a4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "806b507e-1c66-4419-8be3-5797938616af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6da2ecc-0d70-434a-88be-8ae4b44df3a9",
        "cursor": {
          "ref": "4cc759a5-167c-4be3-adf0-2a77f256f686",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "928719b7-a205-4a55-9873-41926df563a2"
        },
        "item": {
          "id": "b6da2ecc-0d70-434a-88be-8ae4b44df3a9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "af3390bc-1f3a-4941-b8b5-92382dc43e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d78e65-995a-478a-830c-65a298fe136d",
        "cursor": {
          "ref": "34216816-7eef-4122-aab1-c2ead1323534",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "71e77470-8ba5-42f9-9175-06b5d16a8fb6"
        },
        "item": {
          "id": "20d78e65-995a-478a-830c-65a298fe136d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2ad77963-f6b6-4014-8091-2d5670548727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f5c723-7d4f-470f-ade7-d6e73f03e560",
        "cursor": {
          "ref": "b23645ec-93d1-4b7e-9aaa-51a1ba930f10",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e95fb717-6c21-4c79-9caf-63b68be254d4"
        },
        "item": {
          "id": "65f5c723-7d4f-470f-ade7-d6e73f03e560",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "50a7f0ac-bf60-412b-9964-b7fafdab7451",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d853e43e-b620-400b-8c19-df074ae316e9",
        "cursor": {
          "ref": "623b94fb-aa12-4ac8-83dc-b039693d703a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ba942dd9-03d9-4bba-a0ff-51c51854c899"
        },
        "item": {
          "id": "d853e43e-b620-400b-8c19-df074ae316e9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7c3a24d3-7df3-44fa-8d74-b2cf309afce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c44149-eba9-4d9e-98c9-1f34488f9635",
        "cursor": {
          "ref": "b0c15165-15c3-4ca7-b56d-b177ab64ee38",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0ef259ea-e441-45e9-9868-2ab11765cc96"
        },
        "item": {
          "id": "47c44149-eba9-4d9e-98c9-1f34488f9635",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a1a6b65a-9251-4d0e-8572-313c1f09b944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50d5c0a-3193-4ad7-a7d5-6bc8e9e0c760",
        "cursor": {
          "ref": "2549b1f0-a86c-43c8-af0d-a0f58e778352",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "beafa26e-59db-4d9a-8cc8-465a046143ba"
        },
        "item": {
          "id": "b50d5c0a-3193-4ad7-a7d5-6bc8e9e0c760",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e16c26df-1e0a-4025-bfe1-af4869529b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f1c024-da15-408e-ba65-794be138c217",
        "cursor": {
          "ref": "0c652c91-d14c-4919-a121-60a25e39779c",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ae7c6241-9166-455b-a553-7be9ffd06f99"
        },
        "item": {
          "id": "f6f1c024-da15-408e-ba65-794be138c217",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "07275f2d-c3f8-40c5-848c-422a4d7fe131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c51c1f-d041-443f-ad37-c35193542a91",
        "cursor": {
          "ref": "ccf5e2b1-4381-4405-8701-7de1d426cbde",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "01b9e671-5117-443f-ad25-bee083c6803a"
        },
        "item": {
          "id": "19c51c1f-d041-443f-ad37-c35193542a91",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "503ceb6b-5d3f-4a22-8ac8-e86ea48661cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8c29ca-4e7d-4e03-b027-88adae0cdcba",
        "cursor": {
          "ref": "3bac9425-cfee-46b8-b990-ec3f153f445f",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "58ca90d1-6580-4c38-9d81-3e82723eed31"
        },
        "item": {
          "id": "2c8c29ca-4e7d-4e03-b027-88adae0cdcba",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9da60919-6898-417f-822d-6363f5223dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db5dd63-78ae-4547-a61b-91b1dea78127",
        "cursor": {
          "ref": "6498a998-a541-467e-afe1-ebbf5fdc0a88",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bb955803-2594-49a3-8799-e0471d95b5b8"
        },
        "item": {
          "id": "4db5dd63-78ae-4547-a61b-91b1dea78127",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b2f7bed0-e5f5-4752-b575-dad405a094bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fb564f-f9f2-4df9-aca4-9e75ee83231f",
        "cursor": {
          "ref": "196b3594-47b1-4c18-ae7d-d06cec412da6",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4ca77113-8905-4369-998f-a316137d3017"
        },
        "item": {
          "id": "73fb564f-f9f2-4df9-aca4-9e75ee83231f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "680f44f8-4577-4825-9fca-0ecb08e11872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20125d73-cb04-4d9d-80e5-e5aadca8dd73",
        "cursor": {
          "ref": "f52b175f-e4a4-41f7-a01d-0fe2cafe6965",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "706421af-a075-466b-bda6-b1b21af4eb05"
        },
        "item": {
          "id": "20125d73-cb04-4d9d-80e5-e5aadca8dd73",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3e2c3ea9-155a-4319-813c-daadab83f27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7839fa-ddb2-445d-a09d-4253a4e87221",
        "cursor": {
          "ref": "f972e52c-a9aa-4a58-bc44-7f6302187995",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "01233da8-74a4-4943-9495-addcb807bdc7"
        },
        "item": {
          "id": "2f7839fa-ddb2-445d-a09d-4253a4e87221",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4098cbbe-5748-41b8-ad47-25edc39a6149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec081ad-e169-4838-95e1-40517756d32c",
        "cursor": {
          "ref": "9bf51217-123a-4b0e-95c0-9694a68ac193",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "76a764b8-abdf-48d0-8f3d-7501c704272b"
        },
        "item": {
          "id": "0ec081ad-e169-4838-95e1-40517756d32c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4545d8aa-eb18-430c-af02-23ba54dbe9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd03e6d-19a6-4b98-8488-6aabb4bfda8d",
        "cursor": {
          "ref": "2c24718b-0cf3-4c8e-8265-e99a8636989e",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fc7508b1-0a78-4796-b53d-c01e7fdd7568"
        },
        "item": {
          "id": "7cd03e6d-19a6-4b98-8488-6aabb4bfda8d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d5cf7d4b-3b2b-427d-bdf4-86f9b7055b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b93007-c34a-4b9f-a54b-624f3ff07e38",
        "cursor": {
          "ref": "36544f6c-ddfe-49c3-bbc3-5e3b45869ceb",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7464237c-159c-45e0-aa3f-2ef5976632a7"
        },
        "item": {
          "id": "62b93007-c34a-4b9f-a54b-624f3ff07e38",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "729d3cdb-8b1a-4ad7-9795-23a8e274339e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb38d1e-abdb-45e6-b87c-d29245dd106b",
        "cursor": {
          "ref": "1bf18872-8b47-4c1e-8f03-b5e21dfa6e7c",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "73a8cb2e-1c9f-42ae-b83d-d106daf5b881"
        },
        "item": {
          "id": "1cb38d1e-abdb-45e6-b87c-d29245dd106b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0ccc8ef6-0b81-4d73-9409-65961f8ed998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3170fcd2-754c-4436-8f24-86a4ff4425ba",
        "cursor": {
          "ref": "8b2d57ec-c370-4b58-8872-6645559f0ad2",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fda4664a-810d-4b56-bc3f-d99a810e372b"
        },
        "item": {
          "id": "3170fcd2-754c-4436-8f24-86a4ff4425ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e2cc3c0e-7cb7-45a8-bb2a-b1e464efeeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d89b1ad-778e-4554-a1c5-6a8bd9073e55",
        "cursor": {
          "ref": "06e50f62-53cf-48a1-951c-a14e2ba6a86a",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "658d2ed6-d115-442b-b9ec-913e34bb87d9"
        },
        "item": {
          "id": "1d89b1ad-778e-4554-a1c5-6a8bd9073e55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ba28412f-c214-474d-bf39-c2547da6cb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a817954-b44d-4c4f-bac0-0de3468cc292",
        "cursor": {
          "ref": "b88c084b-6f5e-4107-a796-0efcc6df5d3f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3c20a83a-5b0f-4d6d-8796-002ba0df39a7"
        },
        "item": {
          "id": "9a817954-b44d-4c4f-bac0-0de3468cc292",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0d8e03d0-96ec-44f7-95e3-e9761a2c93ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1c6896-2a12-432b-a129-154e6bbbde58",
        "cursor": {
          "ref": "5ceb55c1-d28c-451f-a77c-f09e4cfa0f52",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bfd1f67b-0f46-4b48-b5fd-f2f869a1d53d"
        },
        "item": {
          "id": "3e1c6896-2a12-432b-a129-154e6bbbde58",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9af54303-913e-4400-b114-b73e8d602a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad54da2-4211-44e9-b63a-0d2c48c339a3",
        "cursor": {
          "ref": "3f6aee44-6fcb-418b-9805-45db2041f0c8",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2ddf7381-e639-4f11-b4da-45381ceb3f46"
        },
        "item": {
          "id": "7ad54da2-4211-44e9-b63a-0d2c48c339a3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0a581024-5ab1-450f-a352-18e128080e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8aaba8-041b-4d28-8bad-fdae9265fc5f",
        "cursor": {
          "ref": "869021f5-0ff3-4545-9870-2eca34bc3bed",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7ca764f7-1bac-45e9-ba7e-b042d3cc923d"
        },
        "item": {
          "id": "3b8aaba8-041b-4d28-8bad-fdae9265fc5f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cfd1a332-fc6f-4d19-8e0c-a502c69b3f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855a5be4-6361-4149-81ae-40a89d845f9d",
        "cursor": {
          "ref": "5a289394-858c-411e-9d6c-39c3c50a9580",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3d88f794-907c-4023-b9f3-34408f4c7c8f"
        },
        "item": {
          "id": "855a5be4-6361-4149-81ae-40a89d845f9d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "410bc662-0700-4dff-b3a7-61428d15000e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2412c55d-336b-49d8-84ed-30f6b89fab4d",
        "cursor": {
          "ref": "131c6113-f1e6-4ff0-8db7-f6e9ea5d0485",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "49a15823-f3ab-4a37-85dc-fee3f873a430"
        },
        "item": {
          "id": "2412c55d-336b-49d8-84ed-30f6b89fab4d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6f7d90fd-3ae1-44da-8ac2-2784fa3d0190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95287cad-a247-4e58-a698-c91c32d45724",
        "cursor": {
          "ref": "d14f6d44-0c9a-4ea3-b009-c5a0855c503a",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "25fc9875-2b1c-43b7-b77a-d8aad1ce46bd"
        },
        "item": {
          "id": "95287cad-a247-4e58-a698-c91c32d45724",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "eadf4fca-b9a8-49b2-8ef7-a0573b0f9e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d503369e-4179-4a67-af95-8f1c58d18259",
        "cursor": {
          "ref": "2de18a28-b5bd-4146-b323-6f4fdd3271f9",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bd8250fe-93d0-4eb1-9d1d-6f30a375da51"
        },
        "item": {
          "id": "d503369e-4179-4a67-af95-8f1c58d18259",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bf744a34-95e1-41bc-a032-d2a3c3aa6ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100f0ff1-6905-446c-b477-a9a665f1b8b7",
        "cursor": {
          "ref": "11263a89-4e63-4c21-a4c2-9023d5f6d44c",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d9b2d546-d9e7-4ab9-b010-7c0c83b5da0b"
        },
        "item": {
          "id": "100f0ff1-6905-446c-b477-a9a665f1b8b7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2b6e1ddd-bc1c-40bf-8b16-b857716db1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2855d6-ebbc-4e3e-9180-4c7dbd7f04c3",
        "cursor": {
          "ref": "7632b938-fe3d-4ae1-ac92-9f474b1de7c5",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "422d4736-1da1-4ba9-94e9-293b5deee770"
        },
        "item": {
          "id": "ed2855d6-ebbc-4e3e-9180-4c7dbd7f04c3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "48622379-fab3-41c9-8b14-d0338898a693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d44d98-01fa-4295-bc7f-c17903a1ff4c",
        "cursor": {
          "ref": "b3f4a6e3-7758-4d04-92e8-8e6dade8a0e4",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2865bb02-de72-4b07-a684-f7e2e08f5c3d"
        },
        "item": {
          "id": "60d44d98-01fa-4295-bc7f-c17903a1ff4c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bc53e352-ed85-4914-9f44-6ad5a8b4ded3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da280710-d526-4175-9bfe-949308426086",
        "cursor": {
          "ref": "aac9536b-422a-4b94-bc7e-0ff6f3f01c9a",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ab2dca3d-30a7-4773-a718-1044cd314788"
        },
        "item": {
          "id": "da280710-d526-4175-9bfe-949308426086",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4ffff222-9047-4945-b315-54208fc9ce79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074d4066-e01d-4cfa-a628-2c54dcd7caaa",
        "cursor": {
          "ref": "6a30f60c-8fa4-4440-81f1-649a85b8dacb",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3fbab450-d7c5-4f30-9bb8-2a429e08ac0a"
        },
        "item": {
          "id": "074d4066-e01d-4cfa-a628-2c54dcd7caaa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c0a65443-012b-4ab0-8dc4-e0df5633e685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75573e23-b0cf-4039-9305-ecfdf462522a",
        "cursor": {
          "ref": "ea26c308-0844-4f30-b850-83fdbf53bed7",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ed1b36ef-a84f-447d-9e8a-c526cb4ba4a7"
        },
        "item": {
          "id": "75573e23-b0cf-4039-9305-ecfdf462522a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "08ce75af-c437-44ae-8127-f05f4144b0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66274c6e-388f-450d-b9ef-9dcfab053ebe",
        "cursor": {
          "ref": "65e86c7e-361e-479f-bdd6-c42316bea8b8",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "104c74b2-c658-4638-b210-3e99184a8b4d"
        },
        "item": {
          "id": "66274c6e-388f-450d-b9ef-9dcfab053ebe",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "835cbdba-1ba7-4d5d-b3d6-a2ff8f81fd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c1194c-2443-4406-88b6-44c323c0bc3a",
        "cursor": {
          "ref": "c4d49f6a-194e-4d17-93f1-82a85e50ba6c",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "23ae0c80-6acd-4d05-9f78-3356d19745b8"
        },
        "item": {
          "id": "a9c1194c-2443-4406-88b6-44c323c0bc3a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "42062d4a-4155-4fcf-8be3-cb4b718a9b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de0622b-b45c-4cc5-b743-8ec6dcf6c614",
        "cursor": {
          "ref": "12758941-92f8-4d8f-b5d2-0ae5620300d8",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6bf58dc7-0144-4242-b9c3-64a4eb4c9c71"
        },
        "item": {
          "id": "5de0622b-b45c-4cc5-b743-8ec6dcf6c614",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2f237090-ea30-4abe-9f77-73d9a5893a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d083af-cf70-4b99-856f-a168fce96be2",
        "cursor": {
          "ref": "af8fdc5f-7c3b-4a1a-ae11-3bcca0f8960e",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cfd70edf-769c-4d49-9fe6-b8633abf25c7"
        },
        "item": {
          "id": "b8d083af-cf70-4b99-856f-a168fce96be2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e3102189-a794-40fa-a3b0-c9f8c1396b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a96ef70-7a56-4528-9f93-933d15a1856e",
        "cursor": {
          "ref": "6475974b-af45-44b7-94a7-bf9a39faa39e",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "baf44a8b-2091-4d88-8322-faf4aa913a45"
        },
        "item": {
          "id": "4a96ef70-7a56-4528-9f93-933d15a1856e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "78d4c370-63f1-43ad-ae28-af6388c0f645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6424d0-a55f-46d5-97b5-2188fed37e14",
        "cursor": {
          "ref": "2f0eeb24-a906-4c70-95c7-f1124d564dfc",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b380b62d-62fc-4674-a65e-31806a543fa6"
        },
        "item": {
          "id": "ff6424d0-a55f-46d5-97b5-2188fed37e14",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e58fd98a-1f95-4815-8e7d-f17aaba5c7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb0964f-8842-420f-a0a1-181efcb539f4",
        "cursor": {
          "ref": "9c7e06d5-c2f1-4bc7-807c-f89def4a6b80",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b68a03a7-25e3-487b-9e5f-d1b88dce7c64"
        },
        "item": {
          "id": "4fb0964f-8842-420f-a0a1-181efcb539f4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "44dabb8b-638c-4cfa-b27a-37d534d8c0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ba0009-de81-4e53-9dcc-08854832195d",
        "cursor": {
          "ref": "e8814a9f-946e-433b-97ca-ddf0f4920ab2",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "889eedc4-5ef8-4531-9816-159df581cdb7"
        },
        "item": {
          "id": "30ba0009-de81-4e53-9dcc-08854832195d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dda0eb8c-fdcc-4b00-b07e-5001b480df6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beead2fc-5062-4aa2-8dda-8fed0909fdc8",
        "cursor": {
          "ref": "2c1e8026-c0fe-45ca-ba39-a912dd2a2060",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c657006b-1170-418c-b243-3b23c72b69aa"
        },
        "item": {
          "id": "beead2fc-5062-4aa2-8dda-8fed0909fdc8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b91c7bed-67f4-438f-81f5-527d25a3676c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962700db-6e57-4993-9172-e8b7985ef5ac",
        "cursor": {
          "ref": "d9c28532-632c-4c38-8089-aae6dcf7c0f2",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5f61b1cc-c3b9-41cc-b167-8531761905c5"
        },
        "item": {
          "id": "962700db-6e57-4993-9172-e8b7985ef5ac",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "38556d4d-a4d8-420a-be10-8559dcfbac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d82b8d-778a-41f0-8f79-18cca5dfbb6d",
        "cursor": {
          "ref": "1269053b-2399-4b23-aae9-44c019eec989",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b0972796-16e5-4ca6-81db-6a7eeb143c07"
        },
        "item": {
          "id": "64d82b8d-778a-41f0-8f79-18cca5dfbb6d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "85117ab1-be2b-46da-a451-3f42e1d1d451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43842ea-8237-4801-bbdb-b728749262c6",
        "cursor": {
          "ref": "2d1acfe6-ac8e-4dde-8474-4b97ea845660",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3f9de942-a23c-432a-8e11-7f91ef85962c"
        },
        "item": {
          "id": "c43842ea-8237-4801-bbdb-b728749262c6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b3bf2f58-96c2-4117-995a-d367b5d24f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c08bf6-e252-4d5b-819e-bd5d420f819d",
        "cursor": {
          "ref": "d9d991f4-58d0-4628-8b90-d1bd7fac43be",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9e1acb01-1148-46ae-8e6b-1332a5cd6c21"
        },
        "item": {
          "id": "e4c08bf6-e252-4d5b-819e-bd5d420f819d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1bb9559f-16d6-4bb3-a003-fb6db85098b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf20c439-c89d-4c5b-9d98-60ceca10e271",
        "cursor": {
          "ref": "cdf0a214-6eaf-4cb3-8e9c-30ab24f2bebe",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "45107c78-c88d-4485-a1a6-12d90ceb6173"
        },
        "item": {
          "id": "cf20c439-c89d-4c5b-9d98-60ceca10e271",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "09e945d8-97e2-4332-aaab-742f3489a852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d3f1c0-3911-4850-aab6-d65144856d32",
        "cursor": {
          "ref": "7ec92ef4-6a8b-405c-9e0f-4d1e887246a9",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d761f100-8f17-414a-a26e-806d834133c4"
        },
        "item": {
          "id": "b0d3f1c0-3911-4850-aab6-d65144856d32",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6709a986-cdf7-4b97-8f26-33883370e34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9e0acd-28b5-4ca3-9740-bdb88e808a41",
        "cursor": {
          "ref": "57745862-4658-41d0-aa2f-f13734942ebc",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7b4e2c72-407f-414c-b45a-7234d916c411"
        },
        "item": {
          "id": "3d9e0acd-28b5-4ca3-9740-bdb88e808a41",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2471d963-73b5-4348-a756-909dd18a9384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33360892-fa47-408d-9958-1a69fdafb233",
        "cursor": {
          "ref": "35a3f325-9561-4323-a7ba-f3ea3304c69d",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "692f140f-b912-44c2-909f-b02c615b882d"
        },
        "item": {
          "id": "33360892-fa47-408d-9958-1a69fdafb233",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e9e81766-836f-4540-8024-10935ad212d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01f43af-25b3-44f7-9be8-08c661e69ada",
        "cursor": {
          "ref": "845f8f4e-92ed-4168-943e-89dc6a690d5f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4ed9eacf-b503-43d3-908e-fd76716fa00b"
        },
        "item": {
          "id": "f01f43af-25b3-44f7-9be8-08c661e69ada",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5074824d-c81d-4423-a137-49d86e492dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a911a0e9-aaf8-4c17-8aa7-2e61034c521f",
        "cursor": {
          "ref": "098f0342-ce36-4609-a700-e8f160ff94a2",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "589bc2ee-3265-47cd-807c-85bae06954ae"
        },
        "item": {
          "id": "a911a0e9-aaf8-4c17-8aa7-2e61034c521f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b781e0b8-5dc1-4897-bffb-43c1492eaca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf06c52-58bc-4228-8fc0-057840ef2746",
        "cursor": {
          "ref": "9ccfbf4c-6e3f-4f0c-a662-6f3431819da5",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d4ed31aa-dc28-4621-a246-c339d9bc0df5"
        },
        "item": {
          "id": "2cf06c52-58bc-4228-8fc0-057840ef2746",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "212c270c-e1d3-4f94-908a-ebc84fed2eda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0354a378-b142-41cc-b32a-fb99dbec3ff6",
        "cursor": {
          "ref": "3a5314f8-8675-4cde-81c7-a211cf4d6ea3",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ab711c42-5cf1-4e76-9b2a-e0a1a4b33faa"
        },
        "item": {
          "id": "0354a378-b142-41cc-b32a-fb99dbec3ff6",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "253514e0-8549-4dca-a034-f06ef8dbc2a1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 160,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ced78b6-009c-4889-9d83-68629943e583",
        "cursor": {
          "ref": "30b63e94-8da4-44cd-a407-8a712864856c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "91664e2c-a3f6-4489-988c-57cce3cf4931"
        },
        "item": {
          "id": "5ced78b6-009c-4889-9d83-68629943e583",
          "name": "credentials_issue"
        },
        "response": {
          "id": "257b5449-42ce-4dc4-96c9-0ecdf983c55a",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f83a4f-2cbc-45c6-a98d-b2bb3e0fba89",
        "cursor": {
          "ref": "00d1f7df-6c79-476d-af29-0998ab75b19b",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5227fc2e-d0fb-4ddc-8539-9653d1d9a073"
        },
        "item": {
          "id": "94f83a4f-2cbc-45c6-a98d-b2bb3e0fba89",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f0e7bee0-6f03-4022-95e1-66c8bec877be",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6555699e-e268-4378-8297-742c29cc0062",
        "cursor": {
          "ref": "af0f9d27-9d8f-4c8b-a800-4fd029dcffaa",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1e2c2a65-bbb1-4805-b056-c74db3fc5a58"
        },
        "item": {
          "id": "6555699e-e268-4378-8297-742c29cc0062",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d30c0a48-ae05-41dd-b4a1-f75309ee0060",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0bcc49-9dc9-4ea0-8d9c-a88631af9ac8",
        "cursor": {
          "ref": "e3346ed7-6ef6-4b37-8e66-a48ea5d5ff2a",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "780d68d3-8aff-4529-a8ba-7ad044617611"
        },
        "item": {
          "id": "ee0bcc49-9dc9-4ea0-8d9c-a88631af9ac8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e8cb21cf-91ce-43c7-87ea-5b1defa69892",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba0f7f9-6297-4634-a76d-99ac3f7efff9",
        "cursor": {
          "ref": "b2d2c31d-292d-46c7-9987-412a5ea21029",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "da66d4aa-87b3-44fb-b7cf-9c2ce82b2ffa"
        },
        "item": {
          "id": "2ba0f7f9-6297-4634-a76d-99ac3f7efff9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5f8d8975-9267-4f86-a32c-8deed9ddacb0",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f3c790-cafb-4f61-a0c9-fdcf85cdf637",
        "cursor": {
          "ref": "cd621817-2d59-43ef-beae-d6e674c869bc",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "212491e7-70e3-4609-ae11-1d648f4e6340"
        },
        "item": {
          "id": "e6f3c790-cafb-4f61-a0c9-fdcf85cdf637",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ea1f08bf-be16-4b24-9af1-2cbbd1356df9",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b905aed-150a-4e75-a041-126a0a8d08eb",
        "cursor": {
          "ref": "447d80c2-598d-439c-9462-c3a3dd9ba356",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "834581a7-dfb5-463c-a2df-aa57c9462789"
        },
        "item": {
          "id": "0b905aed-150a-4e75-a041-126a0a8d08eb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "91b45ee1-bcb4-4261-8c2d-7852d8d63d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b905aed-150a-4e75-a041-126a0a8d08eb",
        "cursor": {
          "ref": "447d80c2-598d-439c-9462-c3a3dd9ba356",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "834581a7-dfb5-463c-a2df-aa57c9462789"
        },
        "item": {
          "id": "0b905aed-150a-4e75-a041-126a0a8d08eb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "91b45ee1-bcb4-4261-8c2d-7852d8d63d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9f7ba2-2383-4b68-af3a-5c3c061cede6",
        "cursor": {
          "ref": "b07abb54-ab4c-44d8-9ca9-46870673bedb",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5629244c-7815-4f78-a411-0e007501b25b"
        },
        "item": {
          "id": "3b9f7ba2-2383-4b68-af3a-5c3c061cede6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fad2d2bb-26ee-4a65-a79e-c395c5a6248a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca57ca01-920c-45b6-8fd8-08b74fc78383",
        "cursor": {
          "ref": "7b302233-65ae-41db-9b5b-1b07ca10e98a",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a25bfc98-586e-4062-a713-de024519c438"
        },
        "item": {
          "id": "ca57ca01-920c-45b6-8fd8-08b74fc78383",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "874b68f8-95bd-4516-a591-cd0713089c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096f2b67-b2c1-4ffa-8c13-2799f86ecd68",
        "cursor": {
          "ref": "172e9c30-f0bb-46ac-a990-e32d81114112",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "27d00720-f858-4fdc-82b5-959f37d627a3"
        },
        "item": {
          "id": "096f2b67-b2c1-4ffa-8c13-2799f86ecd68",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2a9e6368-4366-4666-857a-52a7f6b0833f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a660c6-e560-4dfa-b50f-07c1cd7ca609",
        "cursor": {
          "ref": "114ffc55-d2bc-45f5-bca3-b80414325c77",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "24e4f8bc-5cb1-4202-8444-fa25910ae296"
        },
        "item": {
          "id": "87a660c6-e560-4dfa-b50f-07c1cd7ca609",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bb572b1f-7b44-4608-88ef-8a040ab4f1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6423689-223d-4196-bdc1-12238d9588e7",
        "cursor": {
          "ref": "29bd512e-63ce-41a1-a9f8-fad128ccca0d",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "264fb133-5298-4682-ad53-10ff7b51122e"
        },
        "item": {
          "id": "f6423689-223d-4196-bdc1-12238d9588e7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6478a215-32c1-419a-9b6c-1bf8b16c8b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8303c74f-cad4-4f6a-a479-cc9697b49e94",
        "cursor": {
          "ref": "f0cf991f-ef68-440c-9c3e-4f9a61ee5cc6",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2ae59201-f08c-4d24-be13-1557cc373169"
        },
        "item": {
          "id": "8303c74f-cad4-4f6a-a479-cc9697b49e94",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da23ae4e-b5a1-4db1-8bb5-dd5344c2ecf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a6b94f-3bd9-48f1-94eb-219ac9c8ed9b",
        "cursor": {
          "ref": "80f8e163-5010-4388-8bc9-9e976f604d40",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d43573f4-31e1-436f-baad-cbcd0ed856a1"
        },
        "item": {
          "id": "f7a6b94f-3bd9-48f1-94eb-219ac9c8ed9b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "61940787-76e0-4641-aa80-932e28b5576a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9466b790-fa0c-4126-86f9-7afbb58d76a3",
        "cursor": {
          "ref": "f5138318-71b8-4bd9-855c-f1f0c55a7ee4",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7d93d9c5-298e-426d-a76a-f3ab778a2da9"
        },
        "item": {
          "id": "9466b790-fa0c-4126-86f9-7afbb58d76a3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fbeecaec-d019-4718-a490-f9e647ccd398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2402ec5f-8da2-4f4e-8402-8d8846e75efa",
        "cursor": {
          "ref": "6906e626-b614-406e-a475-c04781d71e98",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "32b2c1c9-fa85-44fe-a2f2-e5740998dd3e"
        },
        "item": {
          "id": "2402ec5f-8da2-4f4e-8402-8d8846e75efa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "73053656-cafb-457d-b0de-076c03dce785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e543fcc9-1e2f-43ae-b034-e8039fa92c9e",
        "cursor": {
          "ref": "9b8aec3c-4ef9-4077-bfb6-da1ca76c82b4",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "94ba3682-8663-46cc-9982-6a170984c0fb"
        },
        "item": {
          "id": "e543fcc9-1e2f-43ae-b034-e8039fa92c9e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "785b268a-7e1d-4137-83b4-f90ad8227dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0812f6be-66d9-4602-8062-12bbd2ff004b",
        "cursor": {
          "ref": "e4d1aac8-3b26-4a37-a0d6-9cb1abdef964",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7b35cefe-bbd4-4207-b6f4-88250390ff87"
        },
        "item": {
          "id": "0812f6be-66d9-4602-8062-12bbd2ff004b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f8d7b63c-bf23-46cd-81d1-2c2d7e72241d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76da5ed2-c33a-4842-8fa6-bdbb2fc76f50",
        "cursor": {
          "ref": "ef5db05c-c8c0-4848-b700-458aae5f7010",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b43ed6ad-27a0-4a0c-b6af-4ac139c33ce6"
        },
        "item": {
          "id": "76da5ed2-c33a-4842-8fa6-bdbb2fc76f50",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "291b44d4-f5b2-4407-aceb-2cfe83828f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed57ea79-60d1-488b-aca3-9eb98b32d230",
        "cursor": {
          "ref": "1f47fae4-c00a-4626-b494-483df5ecd48a",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "db3256a4-f25a-4d25-881f-15a0b36a5401"
        },
        "item": {
          "id": "ed57ea79-60d1-488b-aca3-9eb98b32d230",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1ebd7034-f874-4bea-b8f2-9e8d8020dd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6148b93-d7f0-4abc-8fb1-8f7c5e793092",
        "cursor": {
          "ref": "5c8a5b11-deef-41d0-adcd-446becd73403",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5a9530a2-4edb-49b6-9f1f-95d05e2d9307"
        },
        "item": {
          "id": "c6148b93-d7f0-4abc-8fb1-8f7c5e793092",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d5440b54-4a15-49e1-b124-56a26b62c929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e7d280-e737-44bf-98a9-5dcb7b01e207",
        "cursor": {
          "ref": "acb2fa92-e9a8-4f22-ae0b-98ab00e6e1e5",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f3471948-b965-4000-b922-86cdb7b036e9"
        },
        "item": {
          "id": "49e7d280-e737-44bf-98a9-5dcb7b01e207",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7c108079-694f-43af-95c3-ce4dbf2be708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78176ce-fd18-403a-9220-2053beff8148",
        "cursor": {
          "ref": "6d565460-09ba-42da-a586-b6915b085b4d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "69675b32-1a63-4d11-8cb0-5f2052dfe81d"
        },
        "item": {
          "id": "b78176ce-fd18-403a-9220-2053beff8148",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b52c085f-38d3-478c-9217-b559b8a51fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd734b8-e4a8-4c3c-a443-f97b380ce582",
        "cursor": {
          "ref": "664442a6-7301-476d-84c4-9939b7bdc6f6",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "32e1b76d-4c09-4b5a-bd4a-41847bdfb043"
        },
        "item": {
          "id": "0dd734b8-e4a8-4c3c-a443-f97b380ce582",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "21bb953c-08ce-43fd-8a7f-5f2923313ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7559a1f4-093b-4122-95dc-2a4c4da46eed",
        "cursor": {
          "ref": "7db1eb7a-a9f2-443f-bb73-edc1de88f798",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2de6b1d2-2c50-41c2-90c0-a68b52ddeac0"
        },
        "item": {
          "id": "7559a1f4-093b-4122-95dc-2a4c4da46eed",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a366d354-854b-4d5e-b3c6-557b30840565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbdcaf9-5027-4cf2-87c9-b807c157e37a",
        "cursor": {
          "ref": "78fb7439-cb7c-4bdd-b62a-be948563f3d5",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "df069886-a470-46bb-9c71-bc7277ad44d6"
        },
        "item": {
          "id": "6bbdcaf9-5027-4cf2-87c9-b807c157e37a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1c3d83ae-50d6-4906-8d18-82ad9a9871c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4041fd-e7fe-4033-99a1-fba6a705350f",
        "cursor": {
          "ref": "c47079b1-8226-4c5c-8f54-ee04407c6b0c",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e3da1c13-1f53-4ffe-9406-33f5e0f9ba26"
        },
        "item": {
          "id": "ee4041fd-e7fe-4033-99a1-fba6a705350f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7cf3bcb9-40e5-4fe3-9a15-521aee3d2e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2306f720-b8f9-48a2-a24d-7eff9cd3adc6",
        "cursor": {
          "ref": "987bad56-6097-4673-ace5-f28128b1dc46",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a096a2e5-d0e8-46fb-bc4c-b2e7c6b4b026"
        },
        "item": {
          "id": "2306f720-b8f9-48a2-a24d-7eff9cd3adc6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9637d44e-4ff4-401c-a560-ca30a2e79ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e506063-0a40-4a28-9cbd-688ab34bfc59",
        "cursor": {
          "ref": "9eb41d82-b8b7-4f5e-86d3-7a7b3d0bc319",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5d848890-7355-4b6b-8e26-883fe057e12f"
        },
        "item": {
          "id": "1e506063-0a40-4a28-9cbd-688ab34bfc59",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "565e7716-fc5a-45d3-bf1e-bc44394eb291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e61d97c-0da5-4bcc-8775-0b1985fc9b36",
        "cursor": {
          "ref": "514d7932-0abe-4d1e-a402-6132297d5f9a",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8f2ba353-ddec-49b3-90b3-105dc7fa6820"
        },
        "item": {
          "id": "7e61d97c-0da5-4bcc-8775-0b1985fc9b36",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "71b8005e-d597-496c-b1cf-4b65f6f4bc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ee4c7d-b272-48bd-a6c1-054230959217",
        "cursor": {
          "ref": "de0a24af-b1aa-4a5d-9898-6f3ae198eb7a",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4fd20fe1-5879-4293-803e-bbc707d4e540"
        },
        "item": {
          "id": "18ee4c7d-b272-48bd-a6c1-054230959217",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6c546726-96f7-4656-b3c7-02f5b820534a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28a609d-c825-41d3-a704-a66213190d0e",
        "cursor": {
          "ref": "09f4552a-c64b-44e6-ac27-cfdd6953bab4",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0a2ce68b-f611-484d-866d-b66e0c84a08f"
        },
        "item": {
          "id": "a28a609d-c825-41d3-a704-a66213190d0e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "caea498e-ed7c-4a2d-a495-c3cee735d67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d478f122-58c2-4c87-8ec1-d7a4b6ce5636",
        "cursor": {
          "ref": "f13b1637-0e2c-4740-b703-f54b3bb18388",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fba1abac-9aca-474f-8459-0a64be3c63a3"
        },
        "item": {
          "id": "d478f122-58c2-4c87-8ec1-d7a4b6ce5636",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6b10f2a9-7e85-402b-a03c-11e71f3c54ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003e2ab8-f303-47fb-a30f-409bad4905ab",
        "cursor": {
          "ref": "23ee9e3a-60b5-4336-bd81-e13169c454a6",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "20b39946-b1b0-4a60-8b0d-6acffeacd7be"
        },
        "item": {
          "id": "003e2ab8-f303-47fb-a30f-409bad4905ab",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2c2a0f52-1e36-447e-9796-b4f1d4258369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1dff57-cbeb-4274-8ee0-eabe8d988ab4",
        "cursor": {
          "ref": "ef46a94e-8d87-4f68-a739-738f0f39e642",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "20583162-dc5a-4cac-a855-b36c3f0f6703"
        },
        "item": {
          "id": "dd1dff57-cbeb-4274-8ee0-eabe8d988ab4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d7299b4a-8cf8-4d52-b634-4602f3d64a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e277e70-b6f5-46c9-81db-321422f1cf17",
        "cursor": {
          "ref": "e674355f-0de1-4391-a80e-db423566b2fe",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "38df1b6e-c178-45f8-9f0b-76999bc908e7"
        },
        "item": {
          "id": "4e277e70-b6f5-46c9-81db-321422f1cf17",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8e75e8d2-552b-47d6-8cf5-368792f5f40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27da2ce7-d3ab-4583-9a6d-534a44a668f3",
        "cursor": {
          "ref": "75ea72ce-f446-4b04-b80b-898e82da7037",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "42e305d2-f9d0-4dba-8aee-095f57f69d86"
        },
        "item": {
          "id": "27da2ce7-d3ab-4583-9a6d-534a44a668f3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "66cc7465-13cd-42ba-936b-bd0262619118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed943302-0a8c-40db-bd85-9e77dadc8e76",
        "cursor": {
          "ref": "32f410e2-1736-4284-ac0f-853f2c90ce09",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c3bc268e-bd3c-445f-8349-cd1a6868ee78"
        },
        "item": {
          "id": "ed943302-0a8c-40db-bd85-9e77dadc8e76",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "52744339-2da6-4f35-9eb8-0cbd17df9af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c6512f-9fb6-4122-8883-8cf8dc9f267c",
        "cursor": {
          "ref": "2b0f8e32-f26b-4d85-9c0e-7fb2bd2594ca",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5fbc9e43-b9d1-47d1-a25c-c7b4d7870f2f"
        },
        "item": {
          "id": "32c6512f-9fb6-4122-8883-8cf8dc9f267c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dddd5936-5fcd-4217-92f8-5743235ed29a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a672041b-8d97-49cc-8608-54ec4e410d20",
        "cursor": {
          "ref": "f0706665-7802-4cc8-8e63-bd94d11ace75",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "82308475-35d5-4a1e-b6a1-91a944f7a70b"
        },
        "item": {
          "id": "a672041b-8d97-49cc-8608-54ec4e410d20",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7e108463-219f-4a33-a55f-fb26885c7906",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6584adb-c29e-4cc0-8f96-183903a823b6",
        "cursor": {
          "ref": "071a5c52-e9ab-4e96-9d0b-046c36962699",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4bdb568d-1981-4e4e-8b2d-9ae827f80500"
        },
        "item": {
          "id": "d6584adb-c29e-4cc0-8f96-183903a823b6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7f1df40f-ba4a-400d-a37d-fa7e8d03cc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6584adb-c29e-4cc0-8f96-183903a823b6",
        "cursor": {
          "ref": "071a5c52-e9ab-4e96-9d0b-046c36962699",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4bdb568d-1981-4e4e-8b2d-9ae827f80500"
        },
        "item": {
          "id": "d6584adb-c29e-4cc0-8f96-183903a823b6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7f1df40f-ba4a-400d-a37d-fa7e8d03cc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e252e0cf-60fa-46c2-83ec-8a994001da19",
        "cursor": {
          "ref": "09b52eb5-5229-4805-a18d-ebfe1ba61738",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2036024b-d4ea-4d41-b692-952e3ac14158"
        },
        "item": {
          "id": "e252e0cf-60fa-46c2-83ec-8a994001da19",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "784f0b19-62d5-46b8-ba73-17bb92ecdb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab0963e-6d9a-447d-9a73-3aebec551d03",
        "cursor": {
          "ref": "417abbfd-158a-4f47-ba0c-f854cc738b87",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6ea32805-aecd-43c6-a334-f886253e2169"
        },
        "item": {
          "id": "3ab0963e-6d9a-447d-9a73-3aebec551d03",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b8a463a9-7782-4444-8331-ab241c0cc5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516a27e4-f33d-4188-9c62-39f8bfe3daa1",
        "cursor": {
          "ref": "0e17487f-30ec-4bbb-9a9d-23700b2ae64f",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5fcc6c3e-0001-4a99-a50f-1b2f15a691e9"
        },
        "item": {
          "id": "516a27e4-f33d-4188-9c62-39f8bfe3daa1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f6dcb705-e1dc-4a91-8768-25e668ea0f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760308bf-14b0-4921-bd0a-9746ca838bce",
        "cursor": {
          "ref": "dbe3db7c-c31b-411a-9c67-9c30c8376bc7",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a0f2dd10-9a58-4d3e-8572-87221ab31486"
        },
        "item": {
          "id": "760308bf-14b0-4921-bd0a-9746ca838bce",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "51d5cd80-7d1d-47f9-acc9-a47498bf22e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0007faf-4393-4f06-a541-1d1ae3be0422",
        "cursor": {
          "ref": "c0d6c53f-d817-4560-9c98-7f86b3d14015",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "481b9ee9-a3b5-4435-ad35-8f5ed92b09a5"
        },
        "item": {
          "id": "a0007faf-4393-4f06-a541-1d1ae3be0422",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b6f08c9b-daf1-4ea7-9e19-4c5524a441e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff48e42-d7ad-4ddc-832a-205bbf4fdf67",
        "cursor": {
          "ref": "83955a85-7b06-4069-8a6d-a02767399070",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "34a7458e-d4e3-428c-bb7d-6882a41fc561"
        },
        "item": {
          "id": "3ff48e42-d7ad-4ddc-832a-205bbf4fdf67",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4e44b0f4-3004-486b-84e4-49c9cbd17437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2364326-6b4e-438d-9290-18788d8dbac1",
        "cursor": {
          "ref": "56b47a18-387f-487c-adb5-a118c8bf7ca8",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2d14a72c-151e-4139-9b17-4376e7f96755"
        },
        "item": {
          "id": "b2364326-6b4e-438d-9290-18788d8dbac1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d6c01b69-5270-4cb4-b1b7-9f5f1c12f7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5aea01-80d4-42f3-8758-71f3490f13c5",
        "cursor": {
          "ref": "6c578e67-8e8b-4c00-9b4a-3a882d3ac597",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3e2e300f-9314-443c-9a62-b0c92e2f17d4"
        },
        "item": {
          "id": "fd5aea01-80d4-42f3-8758-71f3490f13c5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f94bc2b4-f6fc-480f-b639-9a50202ca5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca30d287-34dd-4321-901d-aca8d4d8937d",
        "cursor": {
          "ref": "90b71d11-1945-47d4-8644-e32cc6780761",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bc540591-b70b-45ac-8dd8-8e3a78f3b458"
        },
        "item": {
          "id": "ca30d287-34dd-4321-901d-aca8d4d8937d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7bf7d419-b94b-41bc-b63c-4f6d3932ca69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bc397a-118b-484a-a286-34a58945fa76",
        "cursor": {
          "ref": "1e60a826-c847-4f9e-97bc-845509eec67b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1096e6f0-d2e6-43af-a137-5cfd4f31d649"
        },
        "item": {
          "id": "e7bc397a-118b-484a-a286-34a58945fa76",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "965c8170-8387-41c0-b9fc-01564873a605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4636b6d7-9f54-4f1b-b4b3-7dc825929da3",
        "cursor": {
          "ref": "8a1dcd77-d796-4747-82ff-52ac95c22a27",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "728a2169-bf19-4e04-9695-0bc8b60765d3"
        },
        "item": {
          "id": "4636b6d7-9f54-4f1b-b4b3-7dc825929da3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b32ef65b-85b5-4823-aa2c-3cd7136d210e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b4144d-66c7-4c9a-8f5e-5e3128cdc793",
        "cursor": {
          "ref": "9de18627-a14a-4450-8edf-3e3f88eb1e3d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9ab0e89a-88b9-4136-b64c-80327e45ee4e"
        },
        "item": {
          "id": "d4b4144d-66c7-4c9a-8f5e-5e3128cdc793",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3e25fe2c-db71-4bb7-be8a-ea2dec5a3672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552202b9-7733-4a8d-9a12-cd01fa613131",
        "cursor": {
          "ref": "51ecaee3-9fd2-4ac2-a0ae-36afb6179bf2",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "040e862e-fa4c-45c5-8317-af1b542496a9"
        },
        "item": {
          "id": "552202b9-7733-4a8d-9a12-cd01fa613131",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "358c1ae8-2896-4338-8d44-a92c6792aa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b27dd1c-1b8d-4c17-bcea-9db9f200906f",
        "cursor": {
          "ref": "a62c6338-530c-4564-a509-4704b6e2b971",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "26c7f2d0-dc93-4889-ad8a-52cefc4b05bd"
        },
        "item": {
          "id": "9b27dd1c-1b8d-4c17-bcea-9db9f200906f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ac8e1374-b61f-43ec-a830-29b0751ac20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf797fe-93e9-41e3-a39e-4b1291118546",
        "cursor": {
          "ref": "3bf78d00-3bf2-474d-a38f-4de0d78818c6",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ef09728e-5d25-4141-8037-c703d77a141c"
        },
        "item": {
          "id": "dbf797fe-93e9-41e3-a39e-4b1291118546",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d19e78f3-cd34-45e2-bccf-ae454cfbddc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92919289-5c40-48cf-9071-2ac6a93b1f44",
        "cursor": {
          "ref": "1b0740f7-c20e-4a5d-ab6d-d782ed805c1b",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "311368fb-72b7-4e56-86dc-f16dc323b036"
        },
        "item": {
          "id": "92919289-5c40-48cf-9071-2ac6a93b1f44",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c8627f0c-5f82-471a-9c58-1ea2db20c4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7ef708-f08b-4d0b-8289-48ef1c9ba2f8",
        "cursor": {
          "ref": "05f2dbbd-7392-4b24-af67-9d3fc433943b",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "015085d3-2ba9-49ed-9c41-0adaa4f3bf81"
        },
        "item": {
          "id": "dd7ef708-f08b-4d0b-8289-48ef1c9ba2f8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "64ebfd83-f27a-4107-ab11-ec5cd1bd42d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f810695c-7f8b-45b7-acbe-0dcd109fc74f",
        "cursor": {
          "ref": "d369bdfe-8a27-4655-93a9-4c7dbca2b980",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "63f43204-78d1-4933-825f-c229583c46b4"
        },
        "item": {
          "id": "f810695c-7f8b-45b7-acbe-0dcd109fc74f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "71b21321-3237-494f-a4e1-ccfd75d8b853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ffa041-d152-48a6-9234-2b89e0f851f6",
        "cursor": {
          "ref": "f5e771b5-0d92-4322-b90a-77ce0acafd17",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7565df68-d62d-4f35-ad17-a077e97e8e87"
        },
        "item": {
          "id": "a4ffa041-d152-48a6-9234-2b89e0f851f6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "96edb41a-36f0-4dee-b847-881e09be82fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80d12e1-77fc-495d-be99-1ce4e1aa1665",
        "cursor": {
          "ref": "e9baecc4-2219-41f0-b8ef-25210212f65c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ba5ba0d9-bd89-4579-9031-91df9871fd33"
        },
        "item": {
          "id": "f80d12e1-77fc-495d-be99-1ce4e1aa1665",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6a13b1d6-7b48-4c70-9b49-016e2553462b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8fb2f7-a234-4f42-abe3-fc9837e642a9",
        "cursor": {
          "ref": "4e34c9f8-2739-47a2-aaf7-7c6ae8986444",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e7c61496-369d-47db-b80f-3caba28270b0"
        },
        "item": {
          "id": "8f8fb2f7-a234-4f42-abe3-fc9837e642a9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "16325b2b-3b86-4c7f-9b38-7abe6ab4055a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e8c75b-3011-463b-8c2b-bcac6c1a56e6",
        "cursor": {
          "ref": "664cd1b8-fa35-41f4-89a3-bf212414de2e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8d3d301a-1817-4a85-9f16-01d581bac68f"
        },
        "item": {
          "id": "a7e8c75b-3011-463b-8c2b-bcac6c1a56e6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f6f577ad-8ef5-4d3a-b643-92731b7883e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0823fe30-6437-45df-a4e0-b2476f389b25",
        "cursor": {
          "ref": "81488e61-4528-41d8-b2f0-fc8e58a46426",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e3240211-ca37-4bec-9585-adfcaaa26923"
        },
        "item": {
          "id": "0823fe30-6437-45df-a4e0-b2476f389b25",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "356f4dee-f409-402e-bd3c-e08ecd41c5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f95c047-5345-4993-b212-c02b03abfbf8",
        "cursor": {
          "ref": "3d218503-a0a4-4e9f-88b9-200ed98757a4",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eecb90bf-a0a3-4f1e-9343-20181d05b7ce"
        },
        "item": {
          "id": "1f95c047-5345-4993-b212-c02b03abfbf8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "92875e41-ac8f-4567-be39-004f1963cd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9782bd1-7f17-4f86-a2b0-bc2a0b67a733",
        "cursor": {
          "ref": "e5edb00c-685e-4410-b761-8ec5ca057e29",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a59969c6-fd2b-4ffd-b0d8-40b2bf034e6c"
        },
        "item": {
          "id": "e9782bd1-7f17-4f86-a2b0-bc2a0b67a733",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c5987a89-ea84-4efd-92b6-787bb785ac90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4916cb64-a0e5-4d57-9447-ee659daeb4a9",
        "cursor": {
          "ref": "33670c30-c81f-45ce-bea6-a11e12609227",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c161afae-1931-435e-9a40-ed5607bf042b"
        },
        "item": {
          "id": "4916cb64-a0e5-4d57-9447-ee659daeb4a9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d0929a2e-1678-4cce-9bf2-ab38126ed461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c032640b-dea2-49e5-99d7-1f9ca12ab725",
        "cursor": {
          "ref": "830f6d1b-e656-429d-8770-a52f19a43b4c",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d39666fa-b040-4b1e-af96-ba20ee0fe551"
        },
        "item": {
          "id": "c032640b-dea2-49e5-99d7-1f9ca12ab725",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ff532ed3-cfcd-48c4-9d31-cae5cfd3e6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3172f2-2f90-427f-983d-8385e7137553",
        "cursor": {
          "ref": "38cd0b0f-5b86-4443-8527-d544e6e15d51",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c01c205f-b3c2-4870-9508-8af8048faf5c"
        },
        "item": {
          "id": "2d3172f2-2f90-427f-983d-8385e7137553",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a1330ee4-4c59-439b-a4ac-44b746de7725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b1aa48-7f71-4422-8316-d312578099ed",
        "cursor": {
          "ref": "e3c97c8b-fe39-4c21-903c-a0b29bcabc55",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e4d455ba-7811-4c25-856c-721b676f4173"
        },
        "item": {
          "id": "31b1aa48-7f71-4422-8316-d312578099ed",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6e5cbb68-7699-45dd-9fd2-ab1b05192e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bf7d29-a13e-4acd-8285-21d3694a12cc",
        "cursor": {
          "ref": "abd4462c-7712-488e-9619-6729107570dc",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d2d04ef1-8f9e-4611-a59d-3e74bee77600"
        },
        "item": {
          "id": "55bf7d29-a13e-4acd-8285-21d3694a12cc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a95ea20f-5ad5-4f98-a95e-b06e4db22d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a2921c-c6bc-4894-9a6f-dd922ce40ec3",
        "cursor": {
          "ref": "5c8b1245-1ccd-4567-b27f-46eb4ddaec2f",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5d4ff576-ef78-4f63-8c79-65f9bc5d80e6"
        },
        "item": {
          "id": "64a2921c-c6bc-4894-9a6f-dd922ce40ec3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ea42b542-ab00-4bdb-af8c-a79334f5cca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9c3b3a-e814-49c2-8e64-0888bb86ba19",
        "cursor": {
          "ref": "b513e827-5266-474f-bd73-1cf10d8400ba",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f0f34c0f-1061-4b7e-89bc-6092fc2a6efa"
        },
        "item": {
          "id": "3b9c3b3a-e814-49c2-8e64-0888bb86ba19",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "de8a5cad-1178-4004-bab7-f713aec9fa2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d406265b-fe72-42e1-bca9-cae8ff1f1f35",
        "cursor": {
          "ref": "823f906e-a59c-4a86-bc2c-cf0414a781b4",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "502a2521-33e0-4df3-a7b9-705b397a482f"
        },
        "item": {
          "id": "d406265b-fe72-42e1-bca9-cae8ff1f1f35",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cfe84071-c33b-428b-8d9c-a37c68b33743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3a80f1-19a1-4a9a-aebd-509c0d049dfb",
        "cursor": {
          "ref": "dc2fa9cf-6f2c-44f8-9d06-4f0067533200",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3d140de1-57ee-4d14-b4b2-6fff8dd62fea"
        },
        "item": {
          "id": "ec3a80f1-19a1-4a9a-aebd-509c0d049dfb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "60fbea3c-288a-4081-99ac-8d255623ad83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8736b8f9-b1e3-4606-8eef-158e2e4ccd55",
        "cursor": {
          "ref": "8a5116ee-0dd4-440b-a9e4-88b53a655f9b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6c7f1d2a-fc48-45ac-92cf-eb3c8ef6ffee"
        },
        "item": {
          "id": "8736b8f9-b1e3-4606-8eef-158e2e4ccd55",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7d744e87-041d-4649-9d74-ea301021c123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d7fe68-d54c-45a2-b709-ebc8e0a76e86",
        "cursor": {
          "ref": "d4808e5e-5809-41e4-87d8-057ceaf9e78b",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "abd94180-8db5-4dc4-90f9-1afb9f59c3df"
        },
        "item": {
          "id": "46d7fe68-d54c-45a2-b709-ebc8e0a76e86",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "98e55c46-3b60-4c6e-8957-bc0288246a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3799359-1df4-4552-908f-ea9c406173a3",
        "cursor": {
          "ref": "7ee86b5e-5598-455f-84d4-3512ad979ada",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4ad1173f-5dc1-423d-a0bf-141980508da7"
        },
        "item": {
          "id": "c3799359-1df4-4552-908f-ea9c406173a3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "37b5fca0-fa42-4694-9969-5610f871d797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07da894f-b206-4e2d-a5f3-0288e3742b72",
        "cursor": {
          "ref": "dcc3799d-ff76-4cd4-9e1e-5043fb94bff2",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "db3b681f-9d87-4628-acb9-81a9d8ebf7d7"
        },
        "item": {
          "id": "07da894f-b206-4e2d-a5f3-0288e3742b72",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "895a8911-219c-4d70-9d4d-05e94dd558da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3e8a09-ff27-4f81-bc39-91bf9f4d2605",
        "cursor": {
          "ref": "e094a340-ab5e-49bd-b1fe-4d5becf923f1",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ebc841a1-6f51-4348-8a42-f596d6464fd0"
        },
        "item": {
          "id": "4e3e8a09-ff27-4f81-bc39-91bf9f4d2605",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4e2bd9f2-f315-493c-ac84-49f24281aa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5504a794-c2d1-4451-961b-166128620611",
        "cursor": {
          "ref": "d0e3a02a-3103-4467-8ad3-5f460f2c6396",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d87329ec-2907-4959-8590-33cba009b883"
        },
        "item": {
          "id": "5504a794-c2d1-4451-961b-166128620611",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b7963882-3f60-4cd5-a3aa-e8031132a6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f93b6be-fcb5-49ff-a9e8-b42e27f447f6",
        "cursor": {
          "ref": "b76c07f4-d067-408f-9b65-11a9e6b03d77",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ebfba3c4-0f36-4ae6-b239-0983879dc1b6"
        },
        "item": {
          "id": "1f93b6be-fcb5-49ff-a9e8-b42e27f447f6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2b240999-80cd-4f9a-9594-fd0128285367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e34eb1-15cb-40e0-8a85-d5b84335d09b",
        "cursor": {
          "ref": "fa7e7f19-1002-4fc5-a206-425ed19384da",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4e1ec70e-b95a-40ca-bf4e-ce25a63fe3fb"
        },
        "item": {
          "id": "86e34eb1-15cb-40e0-8a85-d5b84335d09b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b5394882-4ed9-4073-a158-7ada1d0882cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b139e82a-89df-41a0-8c8e-09e8e379d6b5",
        "cursor": {
          "ref": "3cf87c15-a2fc-4be3-92cc-5d39a7414ac0",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8929611e-1d06-452c-b434-4fe036538cc1"
        },
        "item": {
          "id": "b139e82a-89df-41a0-8c8e-09e8e379d6b5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6b11d951-d8ce-454f-b788-6162aaaf6ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d2e24e-ada3-4fad-a987-85730fb9f7a4",
        "cursor": {
          "ref": "496e6d56-4ef0-47fd-a504-01f401c0ccdb",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "54490bc4-57ae-4135-a98e-927e753e5177"
        },
        "item": {
          "id": "11d2e24e-ada3-4fad-a987-85730fb9f7a4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d28305d6-af5d-414e-a99f-bf6a303a9556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2b61c2-3f98-44be-b53d-5b61dabda15d",
        "cursor": {
          "ref": "614928ba-7a56-4c39-a5dc-7d39184a940b",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "376ca4d7-e641-494a-9dca-9dd610b7651c"
        },
        "item": {
          "id": "9b2b61c2-3f98-44be-b53d-5b61dabda15d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8ca340bb-42ca-43fc-8bf4-e9bfae8ea0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a914d47d-5325-4382-87ec-07d66ea12668",
        "cursor": {
          "ref": "2455afab-03b7-4016-97b9-1fbebaf718be",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dcd9fba5-fc07-4ad7-91a6-9706ce6cf803"
        },
        "item": {
          "id": "a914d47d-5325-4382-87ec-07d66ea12668",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "98acd74b-1ffe-4b65-831b-64a754628229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae9c637-1677-4647-954e-f74621b342e5",
        "cursor": {
          "ref": "cfaf18a2-e002-4381-920a-f17a55b1637e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2d9a0882-3fe1-4368-9985-13a83203954e"
        },
        "item": {
          "id": "6ae9c637-1677-4647-954e-f74621b342e5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "35eb23f6-16fb-48df-8008-abff5cffa1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b205aba-4c19-49b7-9df8-d4eccfb939c0",
        "cursor": {
          "ref": "b34ecabd-c15a-48df-986a-40fa3781524f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7763cc89-236b-499d-85f1-0b7265b5908e"
        },
        "item": {
          "id": "1b205aba-4c19-49b7-9df8-d4eccfb939c0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "88902967-be1d-40f7-9fe3-250887c747ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb87594-a78a-4f0a-a7bf-0ef70e47e005",
        "cursor": {
          "ref": "b3735d6a-a470-4f37-a47a-055493075aa3",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "94ae47ed-8abc-45a0-af9e-7603f9ea5dfd"
        },
        "item": {
          "id": "8fb87594-a78a-4f0a-a7bf-0ef70e47e005",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "59fe471c-eee4-40ca-ad60-e6c8e6029e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bb30de-e303-4d19-8a45-67bd97092860",
        "cursor": {
          "ref": "30f2f0ff-a0f3-4d8b-a2b9-2b524692fc36",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ee07f3cf-03fb-4b8b-a7f1-380403518dbb"
        },
        "item": {
          "id": "53bb30de-e303-4d19-8a45-67bd97092860",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f2c7f089-ac02-45b4-8b0a-445ea4b7ae3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cbd182-988b-4f12-91df-6321883cba69",
        "cursor": {
          "ref": "834621c7-2698-46e8-9890-1411f8ad6e5a",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c801d1ed-f1b7-49f5-8f32-817fb7cf1f17"
        },
        "item": {
          "id": "a1cbd182-988b-4f12-91df-6321883cba69",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6c7fe92e-21af-4b6c-ab3f-9317efa81acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325d67cf-6a34-4c3e-bae2-5bc8c0548155",
        "cursor": {
          "ref": "3b891e88-1502-4740-bd14-60a4da280ff9",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "997ca57e-06eb-4e19-ac58-09ce0f5e1d49"
        },
        "item": {
          "id": "325d67cf-6a34-4c3e-bae2-5bc8c0548155",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "316d0f25-7b4c-4819-bfb0-c6e9e64496a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136b80c2-5a56-4c95-979c-8911c1fc053c",
        "cursor": {
          "ref": "fd9d36fb-d3e6-4f4d-bde2-f44c976cb21f",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9160db48-6f7f-4b60-b4e6-a26c117298a5"
        },
        "item": {
          "id": "136b80c2-5a56-4c95-979c-8911c1fc053c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "97b6409c-f68c-4200-b04b-726dbb21f9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748e4ebb-612a-4bf3-a39f-ef21641e2e2d",
        "cursor": {
          "ref": "45589719-45ae-4b11-9892-4cc079117f3b",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "be42196b-ce0e-48ba-b509-e8ef1c86d5a4"
        },
        "item": {
          "id": "748e4ebb-612a-4bf3-a39f-ef21641e2e2d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5f1e919d-9c7e-4fff-a68b-cdbc686d4ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7846446b-8016-4603-95f1-d1c81a4cef72",
        "cursor": {
          "ref": "6dddc249-4fc8-49f0-9406-bfd6c213dc69",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0c753747-3032-40d6-82a3-a8482171d4ee"
        },
        "item": {
          "id": "7846446b-8016-4603-95f1-d1c81a4cef72",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "356598aa-8fb9-4e16-bf0f-5dbfaad9a60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49802792-2b3e-4ae1-98cf-046944c9b4e6",
        "cursor": {
          "ref": "51f258bc-42ea-486c-b9d0-cc6ba354edc8",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d81f2f86-e5bc-437e-a299-70af43f8f7f5"
        },
        "item": {
          "id": "49802792-2b3e-4ae1-98cf-046944c9b4e6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fc1957a4-c07c-4849-9b39-aa52383fc2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a509d7-e289-4680-9fda-80daab9feee9",
        "cursor": {
          "ref": "5b036275-c9e4-4275-b61c-937afd8065aa",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "16831d4a-36e0-4ee8-83c8-e1e0251a6344"
        },
        "item": {
          "id": "31a509d7-e289-4680-9fda-80daab9feee9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b180283c-864d-47b6-99f8-a21ddb392862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be2d976-8507-4f2e-a4d0-36884839eb2a",
        "cursor": {
          "ref": "f1071dc2-ca95-4f91-94c8-708cdc709247",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "124cb6dc-0b05-4194-bc40-c41f7ff09427"
        },
        "item": {
          "id": "8be2d976-8507-4f2e-a4d0-36884839eb2a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "820bfd91-8f71-478b-b70e-9334410034ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed103dc-ffd6-4a0a-8948-f9a7fd2fe6c9",
        "cursor": {
          "ref": "5d003630-9c2b-4d0d-8cf2-c49259ba7f78",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ded16adc-32bd-4d31-8fc2-52f2f0b9ee65"
        },
        "item": {
          "id": "6ed103dc-ffd6-4a0a-8948-f9a7fd2fe6c9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6aa336f8-0724-47ed-844d-96b06324722d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b3dc85-9cdb-44f4-a999-83dea5fe76e2",
        "cursor": {
          "ref": "1a9ff940-a633-4d3d-862c-9b29def3b644",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7705eb81-9774-4b7a-a3c0-82fbdfe32058"
        },
        "item": {
          "id": "20b3dc85-9cdb-44f4-a999-83dea5fe76e2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e1fa11be-30f2-4fe8-9ade-04b0e6615eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a0c98a-1fda-4252-bec9-a341775b596b",
        "cursor": {
          "ref": "e845ee88-7da6-46db-be0d-86521f8dc91d",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7b797731-cebf-4315-acfe-724af223dde5"
        },
        "item": {
          "id": "94a0c98a-1fda-4252-bec9-a341775b596b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a464abd1-ea56-4bf1-bdf8-a339883729e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7722b9-c475-4401-b7f6-f36e56fed191",
        "cursor": {
          "ref": "6e914a21-2345-4baa-a4ff-e3f4d381d022",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "92c0f06f-9448-4675-b7fa-5ad2ffa5d52d"
        },
        "item": {
          "id": "fc7722b9-c475-4401-b7f6-f36e56fed191",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b6d26303-d340-43a1-8db9-d36ff80097c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becd46a1-aba9-4e36-9eaa-630f1698a210",
        "cursor": {
          "ref": "fca44b4a-9092-4457-b50e-b02ffff3a428",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7ac4defc-37f0-4378-9155-b0360a9ee326"
        },
        "item": {
          "id": "becd46a1-aba9-4e36-9eaa-630f1698a210",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f4be54dd-8c18-4ed7-a345-f0727b10484a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c5b4a5-c030-4bb5-bf12-38c0946e911c",
        "cursor": {
          "ref": "8c3e7d51-a48b-42d8-9825-4195b1a65378",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ee86b9c9-1e62-4f93-b843-e9c9893e60bb"
        },
        "item": {
          "id": "05c5b4a5-c030-4bb5-bf12-38c0946e911c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "aff150ec-8985-49c0-968b-a365dbd776f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8b85e0-e020-4531-ae89-405446e3fd9e",
        "cursor": {
          "ref": "cae176b1-8f94-492a-bae4-5f0b6ed6849b",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "88e678a0-3d8e-4e0d-9ab4-2f4762e75db5"
        },
        "item": {
          "id": "0e8b85e0-e020-4531-ae89-405446e3fd9e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "496fb40a-0a78-43a3-86a4-15889671bb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950db292-34ae-4a55-9b9f-8a2da6243ee8",
        "cursor": {
          "ref": "16ab7683-998c-4377-8ee9-e4e76f144ee9",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d846521a-88f2-48d1-ac38-93965785d7ad"
        },
        "item": {
          "id": "950db292-34ae-4a55-9b9f-8a2da6243ee8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ccf010a0-de79-4fe4-95d3-2148694477e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f147e7-8d4f-4e62-af11-2fcd0a8504a6",
        "cursor": {
          "ref": "7dd2535b-0396-4c1c-a26d-8914f48c4037",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f9339940-794f-482c-a8ff-550887195fac"
        },
        "item": {
          "id": "f7f147e7-8d4f-4e62-af11-2fcd0a8504a6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "48eba45d-30d5-4e44-96a1-21ffee30e29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b01fe3-cc11-4110-baae-fc3093818864",
        "cursor": {
          "ref": "80c2e16f-50f3-4d96-85ed-7ba6280c3615",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c7020ee9-c377-47e6-8620-31f6803335d2"
        },
        "item": {
          "id": "56b01fe3-cc11-4110-baae-fc3093818864",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "28551df3-76e6-4293-8a5f-3279ff25a0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a64806d-f794-4651-8edc-97306f68984e",
        "cursor": {
          "ref": "9967aceb-ee3d-4a63-8f62-72bd2209eef6",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6a1bf46b-c1a2-4f04-b3a9-435a62032dee"
        },
        "item": {
          "id": "1a64806d-f794-4651-8edc-97306f68984e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "69b0bdd9-37ea-4ef0-b5ff-8c44aa03ffc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a96d46-1bb2-4132-ac7a-d23f16475876",
        "cursor": {
          "ref": "aa18351c-3d02-4216-83c7-e3c6f4f0bd04",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a8b1e76d-c42d-4c60-b68a-662ede3f2452"
        },
        "item": {
          "id": "13a96d46-1bb2-4132-ac7a-d23f16475876",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9eee0bf6-03f9-4cac-b252-8e7940d7fe24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfdeb35-7538-43a5-b1f0-4791206e7630",
        "cursor": {
          "ref": "200e2a44-764d-42e6-8ecb-c26072610298",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8be7cd0a-fe67-4576-97be-c006c54fc6bd"
        },
        "item": {
          "id": "ddfdeb35-7538-43a5-b1f0-4791206e7630",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "24f822a5-0e6f-4e51-aa55-1117ea933c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c9838e-eeb0-4691-a6c1-5a388e732503",
        "cursor": {
          "ref": "8d7c242b-c6c7-4814-afb3-07539cb0daea",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c90a424b-5929-44e9-a809-c7350e518b1d"
        },
        "item": {
          "id": "e4c9838e-eeb0-4691-a6c1-5a388e732503",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d5d30d82-0983-4157-b7e0-98fb790e7868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089c2701-0987-49b2-bffe-f9a1953996c3",
        "cursor": {
          "ref": "93e237a1-be93-46e3-b9bd-9618c6886d98",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "df7efc78-95dd-492e-9112-639f32163a8b"
        },
        "item": {
          "id": "089c2701-0987-49b2-bffe-f9a1953996c3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6f5705f3-b000-4af5-a9e3-b9fe2afd5af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca526d16-f758-4783-af5c-2ce8209d24de",
        "cursor": {
          "ref": "1e4d33ed-19d5-43cb-a602-c9214dec0127",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ba35deac-73e7-42c6-a185-81654dc99ece"
        },
        "item": {
          "id": "ca526d16-f758-4783-af5c-2ce8209d24de",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d990c854-2f5b-4198-9d9e-845926f8df2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302adcd5-4343-4900-87c0-07c56ca3ff7c",
        "cursor": {
          "ref": "705f1f33-37b0-4ae4-9660-949ae943e671",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e3e8efe7-fd80-4827-93e0-b56d87f7cf17"
        },
        "item": {
          "id": "302adcd5-4343-4900-87c0-07c56ca3ff7c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c4d8857a-6fd7-4791-968f-1ee1db25ec6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc15feb0-d093-4a98-9d91-3166b9d37a04",
        "cursor": {
          "ref": "3ac9f6d2-12d7-48a2-bf30-f882919c8506",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "67752c01-1c32-4907-8f6b-51db2f9aad15"
        },
        "item": {
          "id": "bc15feb0-d093-4a98-9d91-3166b9d37a04",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e4235c63-3d7e-416f-a357-9a5b4c5e8d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc418e61-6ef3-457b-90e0-3885858bb79f",
        "cursor": {
          "ref": "2d417113-0ead-4b69-98b4-5ccf738cd36e",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "34219062-2a1b-454f-8ab7-de97895be5a4"
        },
        "item": {
          "id": "cc418e61-6ef3-457b-90e0-3885858bb79f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "80449b02-d070-4c8b-9965-723647c91630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c46b231-a7f9-4762-a682-381af4a4be45",
        "cursor": {
          "ref": "c9129eca-0286-432a-8eee-5c7e133aa54e",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "60d0aad3-5430-448f-8ce4-c344168864ba"
        },
        "item": {
          "id": "1c46b231-a7f9-4762-a682-381af4a4be45",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "46acdc3a-7d90-4c0a-a03c-d95b9e3d6112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5a6ba7-c84a-458a-ace1-1d1a6206128c",
        "cursor": {
          "ref": "039cbea9-949d-499a-87cc-03a4f6f8e0f6",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ec919801-8bde-47d7-985d-4409e1ac0fe2"
        },
        "item": {
          "id": "2c5a6ba7-c84a-458a-ace1-1d1a6206128c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "77ba6f7f-5e2f-4521-b33c-8f5f079a947b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93aebc20-a606-4d57-84d8-67d27b9ee529",
        "cursor": {
          "ref": "92f22148-ff8f-4de7-8035-cd09ea1d71f5",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "521f4e0b-4996-428d-914a-a18d9b38cc19"
        },
        "item": {
          "id": "93aebc20-a606-4d57-84d8-67d27b9ee529",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5f441a2e-b7a0-4c44-8ddc-d9f6cb12a965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec12100-bfed-4028-b19b-269a1ee00098",
        "cursor": {
          "ref": "313a58f8-0328-45f1-94ff-8a9214539ec6",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fddfc14c-fe8c-4851-8215-1862731c43f2"
        },
        "item": {
          "id": "bec12100-bfed-4028-b19b-269a1ee00098",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dec09a8d-fd16-4ba7-b68a-a6f6c5a5abb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8630c907-09d8-478b-adde-9e3054f20dbd",
        "cursor": {
          "ref": "17dcaf43-7ad1-404a-84b6-5e508f126278",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "740d140f-e40d-4656-ac7c-e4b937516e59"
        },
        "item": {
          "id": "8630c907-09d8-478b-adde-9e3054f20dbd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c0b59868-fb47-4057-bb27-cd4138a3271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da44175b-4698-4475-99f7-f97c955c8f1c",
        "cursor": {
          "ref": "a4223db9-4e24-4ab3-b809-6852661808a6",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "aa4434a4-48f2-4b2a-b66f-65cb6738a064"
        },
        "item": {
          "id": "da44175b-4698-4475-99f7-f97c955c8f1c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3d03d7a1-7312-460b-a520-863ba711168d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a927a75c-e01e-408f-915d-b295f0bea03f",
        "cursor": {
          "ref": "673fd669-fa1f-4712-91bb-c6829ee810a3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a4e61d17-85d5-4a1c-a524-2cc64773c70e"
        },
        "item": {
          "id": "a927a75c-e01e-408f-915d-b295f0bea03f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ddcfbd7c-ae8d-4d09-94da-ab319be06c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7b5c84-4995-480b-a5d5-32c51737e0f8",
        "cursor": {
          "ref": "e0b0acd0-95e9-4dee-9b12-be0b731e2bd9",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e88d480e-581c-47f0-a1f6-88de9350f30d"
        },
        "item": {
          "id": "fc7b5c84-4995-480b-a5d5-32c51737e0f8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9defde50-26d0-4f64-bd8a-d3d2b8415c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f03236f-a484-4bc7-9bc4-3254dde262dd",
        "cursor": {
          "ref": "ac651729-81c4-4bdd-a4d3-022304893d65",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1fccf0d2-cc6c-48f9-b133-85694137c66d"
        },
        "item": {
          "id": "5f03236f-a484-4bc7-9bc4-3254dde262dd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eb594105-ab36-40ea-9c76-fd5120a40253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec09ccb2-35dd-47df-af28-45ab7eb93481",
        "cursor": {
          "ref": "e25334f7-23bb-4f17-89db-1c0aed90ad64",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6734b432-ffa0-42b2-b403-ba1c28d9be29"
        },
        "item": {
          "id": "ec09ccb2-35dd-47df-af28-45ab7eb93481",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "aec638de-dee2-4af3-9cdc-a12e0d79fd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac96c76-1399-47b9-99c5-9280a6ee9c22",
        "cursor": {
          "ref": "a61b0637-27ca-47aa-89f1-0cae38b6eadf",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "89c4abd1-1bb4-4869-b9b1-6afccf835ccb"
        },
        "item": {
          "id": "3ac96c76-1399-47b9-99c5-9280a6ee9c22",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0ddc1e11-6c29-4261-a43c-cb5412345367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf721ba-5fa4-4b44-bcad-fcda3ee53ffc",
        "cursor": {
          "ref": "f851cc13-e45b-4498-bf4c-045dc392dcf0",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0e764208-7ea5-49ba-ac3f-6a3c8d7c68b5"
        },
        "item": {
          "id": "adf721ba-5fa4-4b44-bcad-fcda3ee53ffc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "361c2952-b63e-4d40-b351-ec4fff7f7e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94b6bea-eb82-432d-ae72-e1d4f16b6d85",
        "cursor": {
          "ref": "a1b4b795-a780-4dd0-99b0-f87a875e2ba8",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "93a9ce32-d78b-413e-af5d-d02d102fabf2"
        },
        "item": {
          "id": "e94b6bea-eb82-432d-ae72-e1d4f16b6d85",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "829b972f-8571-46d1-9bb8-ab9e54f41ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83264565-c32b-4b27-825a-340dc4f4701b",
        "cursor": {
          "ref": "cd6f0f06-d0e0-43e3-89e2-fea2ed00bdc1",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "30256409-18dd-4922-8917-7af8b113b6d7"
        },
        "item": {
          "id": "83264565-c32b-4b27-825a-340dc4f4701b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3666cf20-426d-4189-aa1d-e6a108f26ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5e297e-2c0b-40c7-bb63-d87cd6693c00",
        "cursor": {
          "ref": "d979cb36-93c4-4ea5-a1b2-efd981e72458",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "952287a8-fb8d-4d74-bb64-39c5145a4794"
        },
        "item": {
          "id": "0e5e297e-2c0b-40c7-bb63-d87cd6693c00",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "108a9b7b-dab2-43ee-9835-4d19a0801c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a50eb3d-64d4-4d74-bea6-9e83f1878b2e",
        "cursor": {
          "ref": "45d69388-9f7e-42fb-8d16-e5a934e65022",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "60d76d68-1c58-40c0-b940-328634ae4bbf"
        },
        "item": {
          "id": "4a50eb3d-64d4-4d74-bea6-9e83f1878b2e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3c95e544-c799-483e-a0b1-5feff2ea9b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4039573b-d062-45a9-b1d2-add6101ec553",
        "cursor": {
          "ref": "78e91618-c20c-441d-b482-948f3d7b72ba",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b308dfc7-b0a3-43f9-8fa9-84a35b629bd4"
        },
        "item": {
          "id": "4039573b-d062-45a9-b1d2-add6101ec553",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c1f4b5a8-9eaa-4e0b-8154-39d921040490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f0c141-a8f2-408c-b5df-155388ced4b0",
        "cursor": {
          "ref": "ed9352d3-ebf5-4ad6-a22f-6ee87195cad4",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "90df27cc-2670-48cf-9c8d-b55997c0b348"
        },
        "item": {
          "id": "b9f0c141-a8f2-408c-b5df-155388ced4b0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "de9a5d3b-5835-46a3-8e98-c6debb984230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1c652f-d24e-442b-8b00-bf8a44bf0947",
        "cursor": {
          "ref": "ea3e6042-a6ab-43f7-a379-8e917f6a7e6d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d3a6972a-7cae-4b86-a647-b501c128de6a"
        },
        "item": {
          "id": "4f1c652f-d24e-442b-8b00-bf8a44bf0947",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "42d725cb-9003-49f9-8120-bc8000c69e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7a0fa2-9084-42bd-8472-16fb1c5e77d4",
        "cursor": {
          "ref": "e08f89d4-6b26-4cb7-bb48-7590ac53a84c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a528073f-c172-4300-b1a9-e846ebf383cc"
        },
        "item": {
          "id": "6c7a0fa2-9084-42bd-8472-16fb1c5e77d4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2c2e5832-0154-4ce0-8460-982e9bbe6c24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c75245-2ba7-4a8f-b937-fc2312f2564d",
        "cursor": {
          "ref": "9b7bb880-3b04-458c-83b4-600357f62b65",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0aa58d4e-2631-45d0-8d77-9ddbc2667afd"
        },
        "item": {
          "id": "88c75245-2ba7-4a8f-b937-fc2312f2564d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e8d7380f-9273-43d1-bf7f-1b73253a41a4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0897e0-d562-439b-a85c-6b0df58028fc",
        "cursor": {
          "ref": "f5354859-c19f-4fb7-bd00-dedba5faa107",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d7060452-179b-497e-b429-57f5ff90348b"
        },
        "item": {
          "id": "5a0897e0-d562-439b-a85c-6b0df58028fc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3d6e880d-f840-42f4-9073-f2134b44eac1",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebec30a-04ba-4a27-ba21-3a62e411ae2e",
        "cursor": {
          "ref": "7bdec7c0-f4b4-43ba-8f05-1284e10f5cbb",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bfcf2c6a-eb1f-486f-b698-63d119871683"
        },
        "item": {
          "id": "9ebec30a-04ba-4a27-ba21-3a62e411ae2e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c75456fe-2e5c-4a40-853a-63ebe4f7be44",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "58351c93-44c2-4eaa-be90-6eac408f4b65",
        "cursor": {
          "ref": "1be0c62c-03e5-44ec-bbfe-224fdc216f15",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e0ed04b4-0084-404d-b2ea-a6855f488d37"
        },
        "item": {
          "id": "58351c93-44c2-4eaa-be90-6eac408f4b65",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e5b1111d-17e1-4075-9812-e427f36a79fe",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfefa12-789e-4a0b-beb2-6dacdf070573",
        "cursor": {
          "ref": "08fc365f-277a-4882-a9b6-97b22c696598",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9394a26b-096b-4add-a3e7-68b5c9493075"
        },
        "item": {
          "id": "7cfefa12-789e-4a0b-beb2-6dacdf070573",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c7465936-5f09-434d-a104-8028fdc823e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfefa12-789e-4a0b-beb2-6dacdf070573",
        "cursor": {
          "ref": "08fc365f-277a-4882-a9b6-97b22c696598",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9394a26b-096b-4add-a3e7-68b5c9493075"
        },
        "item": {
          "id": "7cfefa12-789e-4a0b-beb2-6dacdf070573",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c7465936-5f09-434d-a104-8028fdc823e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfefa12-789e-4a0b-beb2-6dacdf070573",
        "cursor": {
          "ref": "08fc365f-277a-4882-a9b6-97b22c696598",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9394a26b-096b-4add-a3e7-68b5c9493075"
        },
        "item": {
          "id": "7cfefa12-789e-4a0b-beb2-6dacdf070573",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c7465936-5f09-434d-a104-8028fdc823e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905a17ce-333c-4b71-b38a-02fa45b4e3a5",
        "cursor": {
          "ref": "f97c6887-730e-4b07-b573-37c9272829e5",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9425aee4-92f3-4f70-8b88-8fe01fa18916"
        },
        "item": {
          "id": "905a17ce-333c-4b71-b38a-02fa45b4e3a5",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b2c09e64-2d53-4e94-bf3f-c80df65e5788",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0241b4a5-230c-43a8-a626-ec3539a7d04d",
        "cursor": {
          "ref": "a109475a-0ea8-4ac1-8a64-f3406a75a97e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "10c6741c-2298-4b9b-9fd5-c04d7fa7c048"
        },
        "item": {
          "id": "0241b4a5-230c-43a8-a626-ec3539a7d04d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "50aeb398-70d7-44e7-a340-82d7b8f4772c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0241b4a5-230c-43a8-a626-ec3539a7d04d",
        "cursor": {
          "ref": "a109475a-0ea8-4ac1-8a64-f3406a75a97e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "10c6741c-2298-4b9b-9fd5-c04d7fa7c048"
        },
        "item": {
          "id": "0241b4a5-230c-43a8-a626-ec3539a7d04d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "50aeb398-70d7-44e7-a340-82d7b8f4772c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b55717-e838-4457-8a98-67f46a39deff",
        "cursor": {
          "ref": "e2bec198-29c5-4d77-8607-a7770084cce1",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "555749f7-fe3c-4b7d-a0fc-191a26f87bd9"
        },
        "item": {
          "id": "e1b55717-e838-4457-8a98-67f46a39deff",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "bc4e0576-a2f4-4fef-b8e2-8ccb17e9d48b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452aafe7-1c8a-4faa-84b2-92686cd23c89",
        "cursor": {
          "ref": "dfefd614-9290-446a-b85d-3e0d3eebd2bf",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ad9efcba-ae6c-462b-9b51-eebd20c81bcf"
        },
        "item": {
          "id": "452aafe7-1c8a-4faa-84b2-92686cd23c89",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a1695b04-a31d-4c76-8cad-65b76485bbec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452aafe7-1c8a-4faa-84b2-92686cd23c89",
        "cursor": {
          "ref": "dfefd614-9290-446a-b85d-3e0d3eebd2bf",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ad9efcba-ae6c-462b-9b51-eebd20c81bcf"
        },
        "item": {
          "id": "452aafe7-1c8a-4faa-84b2-92686cd23c89",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a1695b04-a31d-4c76-8cad-65b76485bbec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c046660-3978-4677-af34-7cb30d9df08f",
        "cursor": {
          "ref": "9e1d7812-0fc7-4777-8bac-bb8ca672083e",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2c9c75c8-5afc-434e-bb2e-83e528d24655"
        },
        "item": {
          "id": "7c046660-3978-4677-af34-7cb30d9df08f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "10999b5f-c4a5-4a90-8636-548ca1f92f08",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}