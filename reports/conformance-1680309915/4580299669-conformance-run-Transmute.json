{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c41c40a6-bc3f-47e2-8c03-39b15a8d84a5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cffbcfc9-945d-454e-9e56-70bd038e6f72",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3f2fd1d-789f-4ef5-81f3-d37f12fccbc5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6acbde9d-36fe-414c-905a-8ad67b9cf177"
                }
              }
            ]
          },
          {
            "id": "35c33c4d-83d3-4d7b-924a-9655d030f131",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ee01c0c-7b58-480c-911f-5d6f3642a91a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ec47fb1d-5e01-44dc-9e84-7eeb18ed7f12"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b265b941-75b6-4212-9528-8440f6cda876",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "68c1c1d0-5400-4e6f-9590-ea1522f818a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8106d30e-65d2-4466-bc0c-ef5d2157d7e3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a180fc9-37d5-4e0f-b6ef-bafcdd8b3a59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9fe8418-d4af-460e-88dc-3cb956806547"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c4b03d0-ac91-4764-a322-f299f7a515ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "adf175f1-be37-49e1-bf40-1d86554084e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3be814d1-b5e4-4d48-ab9c-e2858a7371de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8876409-e87c-482b-9f75-01e943c467d1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5808c71c-ee2b-4c1d-be18-35e0c8e323ba",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "82e26398-c2f7-4b56-a5b5-6be5c335b035"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f5fd375-c5a2-42c8-b305-8a57a8c96fba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aaca29bf-320d-436b-9722-22b83e4e0564"
            }
          }
        ]
      },
      {
        "id": "6561747a-83b0-4326-b4a0-a5a1c523f0cb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "83ad1c5f-0094-4a30-b37c-89ac8b5b9268",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4df779e-86a9-446c-8801-b3f39094f59b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d285275-fe30-44ce-854f-8a51a7270258",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38e1b56-8e82-4396-b60d-83a6bf53f50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a1ed907-b6f5-458e-9d6d-4ecb618fb6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c815d0e-e4f8-4102-b5f2-946628447c13",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65c792b-3f1c-4165-ab70-010a82a5c3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7393c180-00ca-4207-b9eb-b13523893dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4836a8d2-2ca6-41c0-a362-5df3f5a6e698",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d90db3c-ba8f-4b79-8c87-b2fa39e38277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "474df431-db71-4692-8b00-b234cc44c16e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89975eab-433b-44b9-b47e-162b3946eadf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "568acdc7-379e-4652-9bfa-01ad1ceb442e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411ca418-3591-4e01-a606-ff9fb01d5260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f931fa3-d801-404d-882e-91505c98fa8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7185fde1-eb0b-418c-9fd4-25e7040e620c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871bb8aa-6835-46cd-8725-7fd1212c8f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022db34c-e00d-4464-b533-c6ce0f612633",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac1d0e4-16ab-449b-9434-8f8deebd2045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c829856-68e6-4c43-9fcd-25d4b235a592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d41054-7938-4b05-a0de-420e24bb888c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1f26f4db-cc47-4744-ae52-405561e9db4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "42a5b1c3-f62c-449f-9e52-67aeffaff588",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad41d553-12c2-424f-b701-4b37b782725f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb32c3b9-c137-48f4-acc3-19c3aa257ffa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9f9de441-be77-4654-b5ef-fb8b3abcee7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dad61007-21b8-49a0-b643-449abf40ad1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f301e078-0db3-4cf1-bb11-f2bd2922aa98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d46a7d56-9247-4fd4-99bc-43f7ddc5ccbf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "487b91dd-29cf-4bf2-b226-73382865573f"
            }
          }
        ]
      },
      {
        "id": "4d93063b-4806-4806-ac18-b43cd40281e6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3b1d10e5-6d84-498c-98b6-6883e3b2116d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a80d4817-2bb9-41b4-8c3d-9d750cda3537",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c9211b77-c9ae-40c3-a4bf-046cad711f15",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6f1e6-7781-49ee-a5e7-a1b458c91334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824d4651-7874-4afa-94b4-b31e35d967df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d968f584-6a66-4b51-92bf-d9f4449075b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "524b5e20-00d4-4671-93c9-6c861055f9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78639593-f9e2-4dae-81d8-104d87643a36",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedb4ce8-9df4-4ef7-9c54-3f5ab87eca47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b88c20f-567a-470c-814a-1c458743ce0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22b761d-3607-415f-91cd-c41d3a4e3e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1758539c-81b7-42f9-8c48-8c9ffe36bc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448be9d6-5c31-486b-9986-b157f5a67f93",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4437295-719d-4e00-8bea-ab3c92ff3a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf601069-697e-4909-b06e-3ad2e02d7457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff37b21-5f90-49d1-bf83-d98134178db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a296be47-cd55-441c-82f4-2ef41861e22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4db672-2e80-4406-b00f-eb7fbc013f23",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5824a323-0f34-4492-9b79-c7cf19881e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fa15e2-b413-457d-ab3d-1136435941de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3e0ccb-e355-4546-95de-e5806fc8cb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34b14d6a-2fc5-4999-aaa0-347335c34a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fda19af-2927-45a4-a73c-8c893ddbb91a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1632833f-b331-43e3-92ab-a50ca7b1baff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d137b9-54ad-430f-b1c8-1ecb473a94ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb75771-b319-4112-83e2-4b99b2892837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ab6bfde-6bd9-49cb-b008-8f1a23dd9af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dcaf7d-e023-40ba-bb98-87e6e3e73177",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bcbea9-7213-43fb-bf2f-5ec139dbbeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0309bf51-7dd3-4668-a1ac-f365353a27a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3a1cf7-e008-4320-911b-85b8923535c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3732eb66-b592-4153-82f7-c39bcea8cf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84644d5-668c-4075-910f-825e93d439a0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e045d70f-71f2-4e3b-a8e3-f829a49e2515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1cc2fd-19df-404e-ae14-7fd337fc26cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3a8939-7ec4-42de-abfc-ea790eb63fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd8b0835-24ba-4d2e-9d1e-627b9d2d47df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a775cc52-c58c-4845-909b-b3fce86aa8a9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117a97b5-3e4a-4f39-a14d-24076f9ad484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae7a788-7aff-4dcb-b7d7-46c54d56781e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabca826-4c9b-496b-b3f2-f95ba21defc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba45cc5c-f5ac-464a-bee4-b8eb6862febf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d778de40-06c6-4e11-ace3-3c6f515a049b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df2c47d-6aac-4a66-b5a4-25bb44612062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239a6692-84f0-4efc-b69b-bb8d7e630c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8c5028-202d-4bd6-9310-ee99a869889c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91ceeed6-a5a6-4477-b986-7cc3afd145df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da099fb1-d47b-4451-baaa-0d32a2d742b2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c16f121-8103-44ba-ab53-e2ddf5ab351f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361dcce8-ac26-4158-9c76-6ab4447ff4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f5d9c9-63a4-4200-a2de-bed3e45b2fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60bfe31a-27a1-42c9-b8b7-31cec4aefc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8798d06-c132-467f-b5cf-9eacbcb5074c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24eac09-1132-4f56-8a9e-4a0de0cad8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5b8f81-d212-41b9-8700-4c389f054b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71154bd1-8fe5-4896-8e16-509fab300924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7c4101b-c490-43d7-8934-e9df65084306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605d6397-8b96-4e88-a50b-1352ae9216ec",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ac3644-a15b-423e-933d-199da589af43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b823fa1-fb21-4230-815b-30b0cbad8b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43d9c39-bff1-4c3c-9300-cee8eadee71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "746ae3b5-7500-4ab7-803e-0cc161481c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877aee4c-a357-424a-89a1-76141121ab44",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dca08af-bbe7-472a-a47e-c0294da060b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad359641-fad1-4530-a9bc-a0ebd22d427b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19de7da-4a1c-4be7-9d13-17f175d4a9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19a5caee-6f16-4a20-bc42-25656e5d5517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb321ad-c19c-48c3-8b9f-788979f7b0b3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc090dfb-874f-40a5-9e85-9a4e86fdc84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7a3fde-21c6-4b4d-b776-ebbed3479caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0a1e25-473d-46d7-89a9-9d11fcd37ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c97869f-d4bb-4dbe-9f78-b7b718959a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cd0565-5d0f-426e-8de3-34ee5efcd184",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c312b91e-cb3b-4dac-99d3-1d633a54e547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9300461a-3eeb-4dee-bbd0-b2eb0d87bf64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7c763b-afb9-48ce-889c-abae615228de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f5f4e26-7627-4b3f-ac02-6dd24443930a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8207833-664a-41ad-b0f9-a8379c3f2ab6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac2c0fc-4e0f-4d4e-8c0d-9fbf930ea640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab8b4a7-93f0-48ec-b99c-f5d004374845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c766734c-d042-4c2e-909b-0dc68f603590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "203e5c4b-efce-4245-af5b-8cd2d59cad3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e329674-7fd7-478d-b107-3540ee475d2b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff3808a-53b7-4fe2-b78e-1dca7408264a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ea37d9-3e14-44cd-afc1-8bdf3b502623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c0d0ef-1738-451f-bee5-0590ecec8921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0ab315e-2a8f-4ffc-a13c-47e4e6f10174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6748f857-88c4-4629-a7ac-86b13369e3d4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dd97a0-dad4-4be9-9112-83a33e367027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0101cfb6-f676-4e44-9918-ddcd576febbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462b254f-3739-4c25-a4e7-addf9047b94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d41c3d-273f-43bd-b9e9-ec080a284262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c110bde-b1d9-439b-a84c-908a320e1701",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d9094c-7894-4796-92ab-d275aaf0b205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9370431f-411c-4499-8e3f-2ffa64279450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf48353-2dbd-400a-baba-16a2b89bf018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d336e8d-bc1b-44a7-bf6c-a57f71029f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bb336f-bdca-4828-bb1e-c4dff5731b72",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce78dde-c91d-46e1-a8f5-6510d2ea802e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bbb979-baa4-4ba6-893d-3786ba6bce2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3aead41-3c43-471f-be60-90f83c61cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6972908b-8852-4232-9ff1-36d7131489b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd8989c-4d35-4767-8a61-22f04c622a37",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74533ae6-7023-42d2-93e8-0254cb7035dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3661ba69-a503-4ee8-9472-ec9d238afd3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2392c2-35d0-4c99-b974-55dcffd31718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57e4ec0a-ca47-4c6a-8ac5-400ca92996c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d17878-1eb6-4423-a1bc-974bd2e4f4de",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76242671-d3e6-42dd-887d-34171c6d9277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefdfd81-2879-4af7-b11d-fe8b7be4645c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b15097f-4966-4e08-9f1c-d78866209ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8b9090-71c2-483c-a019-b8d1f464141e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2212743d-950f-471a-a381-fe2df51240c9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05123de-2662-49c7-bc13-21b65f94f020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a48aa8-4416-4e78-be1c-1f6374e1f2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3749224f-cbf7-4580-b1a6-a2486cc2705a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3dc8c0b-e384-4ea1-8ba7-849dc4dea335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1ae2f1-0d99-4d63-bc66-3934a113aa45",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929f9ae0-b638-4951-b42d-30c71f84dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cd65f8-e66c-4b5a-b808-fabd6cc907c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f7d9c8-bdea-4965-ab20-98cf7c9ed49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "584f6016-2c09-42bc-9a82-cc9f41955e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3c3a9b-b545-4351-a47d-aca89226188e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4f0b6b-0d55-4402-84a8-02ad0a01da6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3beeab-4075-48b6-86f5-622972447ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5659319d-c5ad-4d2e-b900-eb2927ddec76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2964ddac-24c3-482f-9c14-d8cdbde6f9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544c6451-39f1-4772-9a0a-1270ec182fbe",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ccca65-2e3e-45b5-b9ed-e21b773d67f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8a12e5-5a72-4ac7-8c38-b427921ecf3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4646ee-9b79-4f9f-b4aa-ab5dbeb899fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "103c5ff1-86e9-4a90-b2a3-56999011a5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78a9a1f-502b-48c4-87d8-05060c201788",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c7e607-00dc-4c83-84cf-df0facc71b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40e31f4-21b2-42be-9fd6-e3de05d015ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2d69ab-bf41-4b7a-9a02-ca691c0b11b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1118b452-0396-458b-8359-7b0abf9ececa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03b7266-8485-4f49-85d6-ed53f3807384",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8515eba4-c46a-44a4-af6b-591f15f96ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0469062-df7d-4053-9f5d-2c94d8978794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc65c04c-6536-4183-91df-c6be4a451683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f993e851-fc7a-4c83-9cf4-d4d8a7e65b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e80f784-13f3-46dc-af80-9c1432ff9bfc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e734d2b1-9616-4de9-ac39-e35057a0d73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d663aa-7dfb-4842-9065-efe0f4d19a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f855fe-87e7-4e04-a94b-b9e3404d70c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25c7d5bf-d567-4999-a50c-54c029116089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b91f4d4-2a44-4834-83f9-32a87036a799",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f536f35c-f7a5-471b-88ee-80dd9a2d7dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a5c967-ca75-4b3d-8a79-6823d220a907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89edb97-65fb-4674-857d-410a340baac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae4561e-36ee-4dd4-b192-504a5e14e701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af95515-8cd8-443e-be64-fd486c418c96",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60a51e6-133d-4bb2-936e-63dd18d14d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff2cfab-0a96-4e61-8f7a-602dcdf90d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e843b8-252c-47f7-8788-b5ea5bae38b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c464798c-8947-4d6e-b922-f8fe7beb6d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc2023f-a6ae-4097-abc8-5040a8af11b2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8d8d5f-0a68-4b42-8c20-7324d383baf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbf2b77-5bce-4115-a4ad-f0b7e61f5497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72890230-2e0c-4813-8f89-6e1475cac5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af9c02dd-ad5c-481e-a76b-a03e2a643cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbeb227-7e8c-4d77-86d6-8d4b80ce51bc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d393bc8-a5df-4276-a7aa-716e583d0321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2df43c0-87c0-410f-9f94-937e168addaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1133cc-a7d3-426e-b2e9-c7c0c99557da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29ad5200-772c-472f-93f3-fce4c48cb7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490bc91a-6184-4fa7-a32f-f816a8087273",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fda1f0d-7d0a-4d8f-bede-d9e21a22260e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c037d0-3e6c-4d5d-b793-570099a712d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3f7dca-b4f2-4a2d-99c7-0d9b756558dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db98314-dec5-404c-8769-9bcdc105ee0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539f9dac-fad6-4001-a32b-d48614e0fb2b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74747df-981c-4535-aed6-9b46ccc69e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86ed695-b693-423c-a015-ecde362a11a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65409510-e077-4371-b864-ece4c088acb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c33de79e-977f-490d-98bb-b97cc2496f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992c0534-3d13-427f-85fb-fdfc04694ba5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0523cd8-aa30-46fe-b021-87a066b8fd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "148203a0-e5fb-456f-a45d-e96f89b82a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7f487e-5efc-4c06-9651-44b5b9c93d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da4472a0-d963-45fd-9533-99ac4991f365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a7c4ba-8fc0-4005-bdd7-7e723d234521",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a75f0e-3802-4bdd-be4c-f33c1ca622e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4cc702-bd1c-41e2-885a-010fa7ed6486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde4e304-5b3a-4ca3-aa46-c4e4614c592a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adf40315-5595-4a65-a18f-f729d59f6bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0494a7-496c-4404-9f2b-b8e0848777a5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0778be4c-0268-4980-add4-ffac8da4efa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af084d1a-6c75-4e3a-8c90-5b86c33792dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f52d926-3436-4a31-9e95-7ed6d529f3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e198d1de-1626-4d52-baab-db5a43c93cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe011a79-7cfe-4b58-ba6f-c08b542ded7c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fc9ad1-b90f-4ada-9d98-99f75e9f058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce2ae1f-5559-45c7-9c5f-36ec9c0759bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9aecd21-d0c3-4def-81dc-ae5259c230f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f94c3aa7-e557-46d0-a726-f19106d65dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb21639-bd66-49b0-9ebd-e8f512ce1e97",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4d3eb5-5de7-46ae-80f5-2e46e42cf8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9d5860-ea31-428b-8e95-a69eadab8208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e59d2a-c8a5-4963-a22a-92173cb496eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5edb01-1bbe-4024-9989-e761956f119e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade7f96d-e746-4a08-82de-4d80dd451369",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cf1048-c93f-46e4-811a-638239385e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b8c24f-0c52-4f2b-b374-387092cc6ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a03a699-7cc6-4747-8225-853f2787faf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d443ef2-55c5-47c4-8dea-537bb5f4495b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adddf8b9-a01f-4db4-ab88-5f701e1fc349",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2037d11-26b3-420f-a6f0-720e027e046a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c1b001-dbd5-42d1-97a3-3405efeee336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8f8411-6ef2-443d-bf65-f7730e34c4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b745d8a1-5ad5-40bc-84a2-f7b28868ace4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3e3f31-95ea-4d73-8642-6b807396e6a8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9335043-b4fc-4005-98de-dd3ee55330ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ede0174-74e8-4c12-9678-279b0c0adba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f36b98b-20b0-4b8a-ae52-e3de9067115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9ee6f5-837b-4bec-b100-598e536d2a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ae1cad-4506-499d-ac81-5309d76cf93f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0681b96-7742-46f5-9805-6b2eaa3e6e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1b8861-d882-4685-a981-ba4f80d4fcf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae656b2b-2690-47b3-aae0-99c8d294faef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b3730b-8b96-4107-b9e7-d6de73572cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c52fa6-869a-41a0-9097-7af89670a423",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a91c70-89e6-44ea-9fa5-09a7b4278c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e35a352-8513-4651-90b6-5812d422298c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a52c25a-9bfb-44b4-8ae9-864eef10ca37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ade4889-97c4-41b9-a206-efe9fd2eebeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49edd6fc-ce6c-4a19-8d4d-1748c95f1d18",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d071deb-4352-492e-af52-ab65d050f807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4598baf-8aee-4696-95cb-29f92094c6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0d3016-4835-485d-8df8-87cd8cff0d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de2f4570-ebd9-4ddb-a6b0-bcbb11b90385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b66dd18-0add-4ed5-80eb-309416b80cd9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32da7fb-94b1-4932-ba7f-949eebe281dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769e0bfc-1b91-4a8b-8993-2bc972772cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fa9561-061b-4008-aabf-24a4d7f045f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "443eedda-21d0-484c-b093-0018b2e3c69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548ea0c3-5071-4247-85de-3db6b8f6ec63",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00d8cfa-dc2c-423d-9f07-d6b88b2b41e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1549ad-8aeb-400c-94e3-9aa1881f824f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e855139f-ef32-4457-9e3c-da9b52cbe6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b901a8d-2c19-4aea-ae12-20c588566942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54516b74-2573-4637-9cd7-83cec9b13bfd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c193d0-b66f-4a18-b8c9-ea78442bedaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe32e8e-4b7d-4af5-adc4-01ef83d202a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1319729-fb90-4d10-aae5-d068458a70d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c72a5493-636d-4173-8a58-235bca54a15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b0dbe7-ec39-484b-ae05-4576b4d4673c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398c5e2c-7197-46fe-9ebc-a9b3329e1f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e889aa27-b68f-4675-9c10-4c47cd9a132c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba92b9d8-4326-45ba-a449-927855d0fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a03b1730-4977-457b-ba0b-3b213b81b965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad7bf62-d992-4aa3-806e-b74a3707ec5b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7fb5bf-0811-411c-bc84-eeed92660f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57dd14c3-d733-40b8-ac9b-3f421a062ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69972063-3a08-402a-a386-8074c8ebd73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "764151c0-5b17-4dc6-ae28-6049df51f7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac9193a-49c4-4ba4-b61d-e0782e883662",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33dc252-0fdb-4cfc-b159-c8b1283f6a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea5a1ba-e986-4c0b-879d-1c118a584419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05997c4-86f1-498d-a625-e8803f82351f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "17cbf07f-ec82-4405-9f14-6d9d7de2e3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1920448-d84a-4964-8bb9-a9e76094a08f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176653c7-bb6b-40e5-9bdd-1400a4a8919e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbcb9dfd-7d30-4e78-9a37-8938f3a6f305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991d0845-ea62-4a3e-9a3c-b67d28c48ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caed70eb-8e5a-4214-94d3-2241980a8ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c74b0a9-f3a9-457f-ae3c-32d83525ff9e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93f3dfd-9186-42e2-99c7-3c38bdccb074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c9ea27-af33-42c7-9817-3fe298de0f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355d9f06-4b46-472d-abe1-36e7029d545a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc15307-8aba-481c-8598-5f52d1099983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd62b7b7-bf92-4fac-ae48-6b0170d7048a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07b2dc2-3cc1-41d2-b931-9ad6a1e20d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0512a2f-64c3-46d8-b5b1-2c7b7fe3adfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa87fb8e-58ff-404d-b61e-e99471e5c32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a9dfe9-f7a6-4ce7-aafd-65c4a35dfc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b9ea28-e523-4632-9ede-96a401e1b1d4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cc712d-8af4-4334-ae08-ad6e3a605734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ec4527-f78c-4fff-a422-c8a6c905befd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3154c23f-ccb0-4cd8-a5e0-e875fb1c32d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b084670a-8d58-462e-a64e-97bece8e6781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1438039-5eb8-4598-a0ea-12f19b61068d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32f5ee0-bc60-48a5-a4d3-55d9c78a7b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f924bb-13bb-43a6-b366-f8f9b0bb6d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ac3d74-6be3-49db-9063-740a2ff264c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "61ae1130-d85a-4239-92fa-3b26296222c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3413d1-6566-4b43-bd5a-67757255d96e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c18afe-7370-4543-9220-de7f65a85e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945f04ff-c930-4a89-ae4b-9176cd28b965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc07d98-a9c4-40c2-a393-77076dcf6546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e952f260-3a4f-455f-b2e2-583c57254f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f712bd32-4e41-40bf-bca7-be1ba34fd085",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b51b1e-c3e3-43c9-8a50-35863d1787c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216edfba-7699-46c6-89e0-f099e5fe231c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7569541-79ca-463d-8684-a32c190465cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdd3fb3-b94d-46df-8d7b-3f0cadcfe2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e8d8ed-7153-4197-a6f2-90109ef024fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c1700f-aff0-4483-b5d8-658a587e2d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51a40f4-47d4-4636-8434-6bc45457d9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc81f05-f019-4cc1-8e18-915d60d22ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b2b8a3-81b8-49b9-aa54-096842c8b573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df36718a-26d3-4b34-8779-b6b4db33925d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d38b53-4b1a-4d39-913b-dd13e7410dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8bbc4f-eee2-4a02-b0bc-3ef53b0bc743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd332859-e84c-4713-8f1c-c58a19a0e6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6129078f-dc1c-4cd3-a5ec-e67def00e21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f813303d-932a-4c77-bac9-279df944b381",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f4776b-622e-4390-88ef-38459fb9f71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbef85d4-7d52-4b81-86d8-713e893e9234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c0d243-c1e8-4abd-b68f-cd8ff3ce78d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "00a3cce9-ee20-4db1-b825-0775c67f4e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ae6fac-e03b-4452-82e4-c4c55ae4a23b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b1d2a4-e011-4f6c-9d2f-5415a66aa141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b75968e-c091-420a-a4e6-eaa064ba9bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33357fa8-91d5-4f56-832f-9c8895e3153a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "40129c77-acce-459c-9588-7cefa76e9ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5b8b1f-4b6c-4f57-9313-a35c3d52b4e8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e71f81-962d-481b-8650-4346ab3bb84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c62adc-f005-4a86-bd79-763cc0b3fc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba8f8c6-430d-40c3-b106-c45e750980af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b847aed2-eeb7-4674-8bb0-35f8c7f10f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6141004-e8a9-4f73-ae42-9536a77113d8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecd6b8b-0f39-4947-8380-80c447ca5750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bf0fd6-02c6-4f59-9c13-dcc330249981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3b5bc9-b481-4c00-9c94-dd41244b807f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8508f6-eae8-416a-97a5-a7d1bb96d2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788c10d2-f5c9-4782-9e9a-467aff749d4b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0379446-d0c5-4640-9609-907a2228f3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e57383f-a1d0-4997-b1d3-4f73312fcb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89030859-a27c-45e9-bfa9-2fd53271d8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25e43edc-c2d2-4c00-8be0-2459fccd0fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a19ef2c-ed22-4443-a189-d12a883a22a7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4411b75-19a2-4946-884e-c71980a19393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29f6b9e-0ce0-46dd-8ee2-08372faba9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6a679a-ad32-4c29-83f5-53245d81c5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd379744-b091-4f1e-9e06-16b67667c740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f70198-fb6f-4a71-9107-5751bd6f32b2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf276760-8637-4964-acc6-0a071a848d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac36d231-4497-4fb3-8ec4-cad6054dbe18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39eb7225-949e-4825-9f9c-bfafc00d390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "702c738c-8af9-4e59-a26b-ad51b01758db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c05844-0a78-4c78-af97-687b5e5776c5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51082f98-fcc1-48d2-b7b8-79303b7ed3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07de7a4-e8d8-434b-a627-e17163c6aff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ac406a-5ae9-4fed-a0ee-13375d1daea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "475167a4-2f6e-46c9-96c9-3ede7df0e313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625e5d33-eae7-4aef-ad59-498d3d0493b5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6971332c-84d9-470a-9c73-34b89e0b908c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9850961e-d754-4f01-964b-e2c27ec68ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e895e038-5ced-415a-976d-cb55f0dcdab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c03627-3d44-4135-8939-e23b00e46728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5aad54-3d72-454b-9664-edec85bd5b19",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5c49cb-6053-4620-9926-fae13e243a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517cc013-6479-466b-b26d-12e943869415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f7a792-89d8-4334-baf2-2ebb87f6a97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8ed948-ada5-4df6-bab7-c930b4101979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180af5f2-ca2a-47bd-85d8-7ecd420acd98",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1284bb-3053-4e4c-90c6-eeac2d572602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ec9f21-8c3c-4c27-a55c-a6101358eed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d357bfbd-3534-4c42-a8e5-ec4dd1469757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f686a76-fd40-4d03-a1fd-868ec6de8613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dcfb5b-5041-439e-9c11-4be0082635dd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60f9520-2fb9-4b89-83a2-161d07ab1f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed627ce-90b0-4bad-9f56-538609dad8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124d0835-578a-485d-b976-8ea5dbaa719e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "858e7986-9230-4ce1-aa1c-aca4e232c059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32569aff-8068-4377-ae38-b30d134b18f6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd06c8b-a543-4fa3-9b4b-3b93c6ef75ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fe4452-4be5-45a5-a864-a7e3760f8508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda557fb-330b-47db-a669-989a5fcc4c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75ca26e9-9a7f-4248-882f-0b1d58a7e113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b814a3-d5eb-44b2-8382-ed4e405d0913",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a2fce5-2728-4489-ac39-1dae7e89b8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7770a3bb-575d-48c6-9758-8a70496287fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b905c956-28be-4f1e-a180-faf60e3382ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff96d8a-a3be-42ea-ba8d-c1f21659a618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd5e986-d608-4798-ad80-84fe94698924",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d342a7cb-c390-469b-925e-ea016908590b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8561e192-ed62-440b-af01-b654513e9d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21641f20-14cd-449b-aa3f-4ed662e263a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e48da7e0-0374-4f2d-8036-9e11368c5b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9d7c72-838e-4945-b87a-e9d5ed4c5e56",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3fcd95-cf19-4198-a656-d9546bf59c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4816cd85-1426-41c9-9614-658acb08d13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa2fec7-ac6e-423d-8577-a35dbeec51d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "205154a0-a193-41a2-bf40-d6e0a014466c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b5777c-a126-4afd-8654-91100c80c914",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a6e288-e02a-473f-8681-78211ced94f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addae143-b024-46c5-9853-cafb6c419491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47345221-f839-45bb-9340-bc244d931cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2d0d42-7552-4d87-bed0-c9cade8f2591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fcea0c-e9e9-46c5-b80f-17cfa2703588",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a9f82a-8547-437c-aa44-afbb4797e12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a9db04-c493-4455-b0be-48e1d0d36f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebb5698-2c0b-4b82-b3ab-1c6bf083a3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d2b67c-1227-48d1-9b6e-2fe5b57c1cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f332e89-b378-4ebf-b5d3-9115914045eb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02603876-c28a-4ab8-a842-78e2ad1e1aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373d2895-460e-450b-b5bd-17e063e7441c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016df269-86df-49fe-88d3-27227aaf04cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83042b81-9529-4ddb-9b73-a7cac09863c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578b38a0-b5a5-4561-b3b3-fdb659b20a44",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b153000a-0e22-47c5-bd10-90184efad663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51a18d7-d5f7-45a9-8f07-d8765f87154e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aead5704-8fbb-427a-959d-725027e921cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "831262cf-1670-4e57-820d-ebaa61a1af4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64148b0-3d59-4115-84e9-acfa98042e8c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a92577-95bd-455c-b5dc-1a185b2668e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7d2a10-976a-4d9c-b35c-fd95a3cc0d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78f2efa-b932-41a4-a3e4-bed5932313a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6bd5b4e-9b0c-4e55-b352-381f7f4de5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b285c754-550d-44fc-a726-13006b4ccc9d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302b3f22-0a5b-4854-bf23-8dfef95ad5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d05e115-814f-452b-899e-29d3f75deeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64c5962-952b-4db4-ab85-4f398300286f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d7623f-4f50-4cf7-b50d-bd81c117644d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288f132c-bea9-4727-af55-fba88d380c2f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e2e306-6247-4cf2-aa68-f02c45cedbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfeb339-127f-4ad4-b5af-c8c2a516f929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6576e136-1ba9-4e4a-9132-8f62b8f44800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4acc7666-ed67-480d-84dc-01a002ee282f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b65df7a-eb39-479f-ba1c-3fa2603d8302",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9828e004-cb05-43c5-a680-8ece2afbfaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41199a0-52b6-4785-8eec-5e10bec854ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4e9d79-f50c-4e99-be5f-df20f415dfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77cea2a0-74c5-4dd8-8bb9-a30327fe666e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f917636f-6c21-4858-b31e-4ad9a3db4761",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834aa2f2-2af6-445f-a3f9-5fb4eb485e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84613f1e-24c1-4b48-ac87-b35f6ff05e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a2ece1-1399-40e0-bdd2-30185e0b5f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5038d7d2-a7ca-4054-97c4-6e5ca7920b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aaa6a9-4828-4c0d-b030-aeda513a43a5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09cd274-b88e-4fb4-bb81-cf6adaaf87b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8863cd62-05b7-44e6-b737-38b2ea73257a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97b7397-b1de-45d3-8fb7-5346da355e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1ecdb8-1365-44b4-b1af-2f8aaa6bc6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7c74d1-986e-4161-9864-4aed72de2606",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dd7136-e360-46eb-ac8f-4c48204e7337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b3e096-70f7-4917-ba1b-5b7f4ce88bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0e1b45-b65c-45e0-b6b0-416c33cfd02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "927366dd-50f5-4ae3-82d1-615475db69e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbb36dc-e7bb-468b-a32f-210b117f60b1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2505743d-9827-4012-97c4-6c556af94b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddadc849-df70-478e-8484-61613517eda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38d4d87-5f06-4783-aa54-982bef22ae71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7814fd9d-b270-4060-9fb5-f19f960636e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79819c8-bd55-4dca-bb62-ebe516e7bcc1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9c2cff-8e24-4b20-8195-385bbbc14562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7f8fb5-9439-4f1c-9a79-8bbcdc9a6a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c08b69a-11b1-4fae-bd09-3b36fce21c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "90be20c3-5fdf-4f2a-a9c2-cc3cf1c8102b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dd1be3-32c8-4eff-976a-58f5fd7a6a5c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01786462-4c36-4c5a-be5c-808c5ce51de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff932a7-02ba-43b3-9d6b-741e5b1dce30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1c1968-952a-44ec-b545-c92098eb03eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5747df6-4133-4a39-b6b9-7fa902b6c2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014028c9-5537-4df5-b913-18c4b9ccdf90",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4f5cf9-049e-454d-8619-54b99d47ac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2caf6fea-2482-4287-8c80-eed334e9abb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14dde55-915f-4e30-92ad-023ca23bb085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3539ad3-c7d5-41f5-b440-5de46aaff025"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "64c7fc1d-566e-4a09-8ca0-d85dafd9f054",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c1ce7a9-a7d2-4514-8b8f-a5f4cd601d64",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de51e06-7189-466d-8c74-ad35911c025b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97c5e0e4-6c62-4466-be3e-dca1d92164df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c57f3e7-5ae5-4d88-a65f-1c3a02127159",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "520a0a3c-feb4-4cad-993f-e14e2518b524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b11139a-67cb-4686-afd5-56531e0183ea",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c098a4bf-aa53-47f4-89d7-6117fe002a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16571a09-fa55-4213-9c55-f80e9d1b7606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32663976-59bd-4d0f-80a3-50439b99928c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b85b4eae-56d6-46e6-a8a3-ac134c806bbd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56d1c901-e7af-4fad-bc0b-8c041c206c6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22088310-d8d0-49c4-951b-aec31789bba5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d8fdbf6-f167-427d-856b-ad35fae3d34b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4ddbdc1-30ea-4d15-acea-e4d755c78e26"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d7c77d1-9d04-496e-b272-09f845f002af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef661ca1-9ad1-439c-bda5-6dd10d9b8228"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ae8be090-cb31-42e3-81f7-dcd96ab12605",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce8afc82-6229-44a5-9694-ba3dfdb50ab6"
                }
              }
            ]
          },
          {
            "id": "c4516f72-4ca5-4446-abea-80b5e4603e12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af857d54-64ae-4e1d-8297-53106f693076",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d1a11d2-cf92-4e48-8569-b4376eb884b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ac5af87-3742-40a9-91fd-f957bd3e26d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33c958c4-9a94-4776-b995-c46de37cf104",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d10bcd8-742f-41b5-9b11-2ce2468460cc"
                    }
                  }
                ]
              },
              {
                "id": "f3408398-b837-447b-beff-47b9cb012f2e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ffdae7c-974d-428f-b2a4-c479734f74b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99ea592a-d2c2-4718-bf68-4009adc6c1b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bff6679-bb52-41b3-9e24-f2c250e0f46b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f2831cf-0e05-45eb-b06d-30ee710a2e15"
                    }
                  }
                ]
              },
              {
                "id": "d4011471-9493-4c42-af1e-e31f77187a91",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "933b8d3d-b3cc-4285-9279-d906e55233fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bb8d352-7ca9-4dfc-a14c-62e686f7648a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d62872bf-5b4a-4322-b7eb-71011989ff58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7896f12-eba0-482d-9fb6-8c5cba1d7cf2"
                    }
                  }
                ]
              },
              {
                "id": "2af64828-a0d1-4cf4-a37e-8271e3eca04d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4771bf9a-0892-4b44-bad5-0ff7bdf5f456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "625c0531-7fbb-46b4-a993-bf92d8baf3a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b8343f9-e8bc-4664-9898-86d9376ade9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "667bf8ee-8f88-476b-a9b5-5a87b5b780cd"
                    }
                  }
                ]
              },
              {
                "id": "f3082a3b-02bb-437a-8a78-908df2934bb2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1687f02f-3c82-4a7f-b08a-f7ede6c6fecf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9418429-32ef-4448-a165-1ac6dc6ed82f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fe86de4-6448-43af-b805-2c1e83d53bd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9bfc15b5-35e5-4c52-a980-e1cba13d298d"
                    }
                  }
                ]
              },
              {
                "id": "55a9f006-0a60-44a3-9c17-41d4197e96f0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b99db66-a4a7-4d68-847e-495718a53805",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3d19948-3129-4add-9118-45c17b003154"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2caa09a-c402-47b9-9310-68b3f8a87bd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c45fb0a3-506f-4933-a15b-7b23ea9d1977"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0fb7a80c-efc3-44a3-af56-97e5c1cbe596",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc469f1b-4c0b-41da-a3c6-63b9f51e919c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a708435d-1b35-4c62-888d-9b5640023e68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9d021e5-cd3b-45f2-9beb-88da2f7890e0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa07288d-8157-4c9e-87d8-909d6684187c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "511e1658-2d84-4665-909b-5e3b77175c3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b27a46d-3d74-42df-8c05-253319c0ed34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb04abaf-9dce-4704-a850-9cc2ebcd699f"
            }
          }
        ]
      },
      {
        "id": "26c5360c-cb22-4061-a715-9f509e6e153f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7925364d-2dd4-4212-a487-686321d2ff3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32f131aa-5a09-49b1-8bc0-8eabed3e5712",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0a426882-455f-4bc4-962c-8640f690b847",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aa9eb3-1cae-4c1a-bc6e-28b55894f12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127e715d-cabc-42d9-8f48-5dc9acecf6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d2e7ca-e4ca-4c0a-b7c4-0cceb241182b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee133971-178f-4cae-abc1-5509a7db92d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a48eba-8fbc-486e-bc54-d5e3549dcb3c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269e4035-f3ca-4d81-bd9c-d7be0b6f0040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5e7a9f-70b9-4fe7-b747-ec9715978061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3cd95b-1ded-4d0c-88c0-86bfddb6102a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ac63f5-a760-4f9e-9f31-51407d172e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10bb194-f191-4374-a506-6f811bcf29a1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e1c12c-6316-45a9-b2a4-450ccab0d138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823cd612-0e30-4b26-adb0-04a8c6a0ce48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f983d660-f2ad-4521-abff-6b7d15909238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6f527b-7354-4636-a7b5-ec5dc432ce40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7431de-c413-404f-a248-4aafa29ada6d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e08c6ee-fc7e-40bd-9e93-13a17cca606c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234c9c77-364d-4d60-9ed7-be8cbef72f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd6cddd-084b-4cfc-bf8f-8e808604215e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb3adc3-5989-4e10-9a94-e52634fce244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9d36fc-3f66-4063-86e2-4044a07f9b2e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254d03df-37b8-42a2-b7af-331f5c4c90ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d7dac7-d0aa-41ec-93ee-ea0a2b9a864b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67375527-bf6b-4cb7-9374-8f69d6feb6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39cfa17b-c71f-435e-b853-66e43ffac26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a26277f-5767-4bf3-94bf-b50f2f4a9a42",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41020543-ebe2-4478-85e5-7fc5cf87cb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba10505-02ec-42f4-b136-b9bd9ab4c054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb07317f-bc1d-4262-acaa-804eb2bc06b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "192d250c-c9f3-4bec-9d8e-5ecc1e4c6fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c9ebe0-375e-4324-8d94-2a59418645c1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c968815b-dfd4-411f-9c94-a779f906a45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf85bf6-f94c-415a-bd52-a3d803686cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf76be79-5264-49a8-8dce-8cdb80613e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc385ce-cd7e-47f3-9c33-1e2d786b15cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051a8ca7-b4f1-477b-a533-49adcbe42e5a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e265c85b-8ae5-4313-bc4d-d92df2ccf05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb939101-cf6e-46ad-a9d4-f70aace0c710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e098fbdb-7f39-4e5f-beb0-47dea7ad9ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f43eb9-8a28-4c19-9b5d-f789ffb3e3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08044a52-508d-4cc9-9b2f-9d4bac58f45a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01950fed-af37-4e2d-856f-56e4da2cfb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e7aa0f-79e9-466e-83e1-c9b7dcffc410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3585b7c8-4d8e-4e06-b7f2-f34847a1c2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f606dca9-d50c-4e87-a071-6e350c955e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626b8cb9-54d3-4de8-85c5-c9921abe8d86",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffca6690-0617-4abd-bff4-cce91e5ce682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830eea2c-1b9e-4ef2-a7d4-07c8448fa0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906f4d2f-21b5-4cbb-9f2f-9999207908b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a18d3b-532f-4578-ba0e-f02a539f787d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c049cfa-6642-4efe-a28a-8cda6c1d22e6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14290f8-7cb4-4ee2-9612-0b62c7c7f7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c173178-7e08-4c83-bdd1-ffe63b8bedf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b4d5cf-b476-426f-9816-1755c2bdf33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6545544b-f240-4be2-93b8-a565440433fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac65de78-ec15-42d7-946a-6ce62295f9a7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4090c355-c4f6-46c1-9b8b-dd0430e1813f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c95e82d-3aa8-41f4-8457-8953d867efa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e90237-23e0-45d2-b78a-96f3efa18a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58bb4502-9257-4acb-b3da-23c54f100f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068f5998-6e85-4817-bedb-d57f175631dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddf6058-d79f-4050-944e-958d656fdbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b5ea3e-ea44-4580-9a40-5977b6bfc54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3527b866-085e-43d8-b60b-003b9d0014a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2145b5ce-72f1-4551-a0fd-139f38bd368f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1107615b-a4ec-42f3-8fe7-a10c9f279daf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba4268d-fbab-4836-bafe-c4959ed8323e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff91b43b-b618-4bae-b8f5-beec639167f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3f57e8-3f79-4843-a816-23528906c494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "37cdd1fb-1d81-4cb6-b25f-1f99d02419e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51743eeb-83c5-4b64-9d22-a7f95d1f7c50",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a252c82d-951b-4ba2-8f1b-88c901681401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08bb58d-5af3-469e-87e1-a0aff94a5368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca7e0e5-8fbe-474a-ac74-9d140db122ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b5ec91-9fca-4bc9-bf2e-eb7f18305f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7349305-ed24-4bcf-bc03-82295f93ce33",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ac481c-3b62-4454-abf4-e2a942f1f6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cee182-d1a8-4ccf-b907-dfee86757b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3a29ea-248b-41c8-ab4d-c30c4892d79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e18c62e-82b7-4c03-8942-4a60b3aa6e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9219a64-39cc-40f6-af4c-dd5055bedb1e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b354e6c1-841a-425b-a889-cb2495968496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9405f88a-017c-49b5-b981-1d3ddc813e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cefd521-137f-4372-91f4-7ca9da93d283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6836add-3e1e-4efd-9acd-cfe271d586fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80da4457-2c98-4c98-abbb-fbc06a3802f8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638bd4ed-eca9-4310-964a-528682aaec80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142e80a8-4e06-4c13-ad44-e3eef00bcf29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a90444-a675-445c-b81d-d5373684b9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bbb66b-b619-499d-ad4f-473d73a47170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe8f1cb-2f7b-46f1-a51f-874320a0abac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee595d2-0ed8-49cd-8716-241c8d346df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a4c810-fad6-4243-b7d4-9d190f8add1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e0e28d-4d6a-43ff-83c7-ea302f10ad1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd942182-5963-440b-8322-45d429b137ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1dd099-0278-46b7-9393-f5e548cddc2a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4746b67f-2d0e-4bb2-9c73-f90008e5a1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5d9ad3-c336-4653-89d5-640c5b1e0ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a728fa2d-e412-4058-b0b7-1f068d386cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cd3f72-8d7b-46ab-9e3b-851c35c2c781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf90bd27-169b-4094-a7be-0605f417730b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc0c4d7-9286-43b2-a9f7-be826dcf8d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74c5f5e-cb15-4da9-bd6d-c54c446ecb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb49052-60d7-4de8-a3ff-2c90059453d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "576a42d7-85b0-42c3-8909-fe7dc5dd0dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2195ec-e618-43c2-9c5b-0c5eb565ab11",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7e01e3-6c90-4f7e-8e9e-1411cb78599c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0722d430-b07a-4904-bd26-63e99453fa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb439fd-e62c-40e1-8d16-a0640fbcda5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f27d1a-1375-4131-9cad-0cf37968a416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38af4008-deee-4b65-ba3d-5262ba67fd89",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adeeef18-4ced-48b0-98b3-8bbc6bb8cfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49785f4-0a49-4270-968a-a8773ee697b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b08469-0f03-4d48-94e1-3bca86996651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0135802a-7892-4eed-823b-beb82336ceb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f502231-637f-4070-9840-94819e2658b4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cbb98a-52f9-456f-9e92-cedd7dd01283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6e7d42-3988-4f4a-9237-2d49407af368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dace03d9-778a-43e2-98f6-24748ea4bdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3617e0a1-00b6-4466-8ed2-a6cbda60d97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6a9722-6cd7-46e6-a110-bba456542c42",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c5395f-5cab-4e6a-8a72-fa92f4773c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadb85a5-7e40-4bee-a275-a14ef884a152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764e2bb9-b0c1-4101-b4c1-7166ad1db528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "963e3939-8ea7-4cb4-b15e-4582e25d4deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd86b0c8-ad7b-4d36-8b21-0f5ef0d78b93",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c598934-6084-4149-99e1-4b795565c1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e441815b-432e-475c-b090-7a71a2a6f8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab8132b-2928-402f-a0e8-6bc2e8751218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bbfdd6-ff2f-46e0-a7d1-507e58c4a012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6676ac-b979-4804-af47-78bd178182b0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d7179c-7aff-4913-85d4-194d370cfb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c16a30-86f1-4f1b-9728-09253ba1b31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b655a1a8-fcab-4410-b25a-7c72f95a4f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4cff8b-23e6-4b65-a6ed-84184b5ef214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76318b74-ca7b-4a38-a069-b1c7192ebdba",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644a83f9-38ad-4fea-99a1-0daac579f352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d16a865-9ea4-47f2-8f77-bd803bf5ad8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297c0503-13b7-4d74-8cec-16a9417b6af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd431fc-070e-45ad-a8ab-939d4d649d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2c37e7-4a82-44a2-bffa-7258f21f7de7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ec6251-d7ce-4598-a89c-33ec3e37454d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310d1e8b-f3ea-427c-aaab-4332c49ead60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751ca8f8-419f-495e-b7ff-dd72c811e5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3d4941-1261-4c6e-9469-d4796e86600b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4454ed26-89a8-4eba-865a-3b0dfa64188e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2181baaa-f91e-4de2-98d5-19217b78bba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8338296f-ce04-4caf-9543-85f8673bebce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240ace0a-ddb8-4b3b-8d78-ca4bfd535a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3001d9fa-646e-430a-9719-2c26fc621347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a0963f-93cd-4f44-927c-a3d7f7439738",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e36dfd-873a-4d3b-ae78-d758364a4c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb8ea56-e0ff-4b7a-a9d7-168a31a7c140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bb710c-cec4-4492-9e44-6395039b5792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da59116-0756-476e-be41-f602bf76669e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed2627b-78c9-44ef-baa0-39f48661fc43",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f5fae4-d79f-44fb-8492-fb07f630aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ccf74c-4610-4f76-b005-1192a6a47230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb3a3a3-4f47-40e2-b853-0d823c2b1798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "290b7c4f-88e0-4e6f-81a9-62260d3661af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a7e4939-5c81-452c-96cb-2382599713ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f57b6f1-a4e4-4be2-ba6c-2db74424cd2c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5805dc-35fe-4169-a3ef-5346ee03354e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a22f18db-16b7-483b-81c1-e1d1b81a4fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc95bdac-d124-424c-ac07-2006004be563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a70d7635-0aac-4084-9fcc-c8cb1163e77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac24a7c9-1b58-42ac-b2f6-9b7d62e9fc3c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de24492-0ea6-47b3-9e4d-eb88cad96694",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0015b1d8-8d62-478d-b493-c01b65514723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ca5e6e-7ca6-4d2e-81d4-596a227e806d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e81c8c03-9a6b-4ca2-8ac9-76fa509e0a72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c200978-bf21-48d7-ae7d-0a6b042481f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13eefdc3-8179-48f6-8c22-e24f08ad63c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3aa5502-9f16-4d9e-976a-626f6a3041e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "532207cb-0eea-4a90-9ac4-59eab6bf72fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2da5f6ab-a281-4f37-a55f-558c3f9de0b6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed8e50e5-90e9-43f7-873b-f279a6e71589"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ab5f029-5a81-4b78-9610-988927fa1ce7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22591585-991e-4c0a-8c3d-e3e112ee4ad7"
            }
          }
        ]
      },
      {
        "id": "6368b843-90be-41b2-b71b-1360900f704d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6c13655a-84db-4871-afca-9fb56bf870ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf3abd76-7f33-4a65-beca-722f22183a68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e917515-bf3a-45a0-a45d-1f0a46fe6835",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc8eda3-1fc0-4fb5-8405-9f12f88f52d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f7b5e4-d886-4669-b378-26c3a1e61df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83e12dc-d75d-4f3a-8700-3ff38ec740b3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedf2a55-270e-4d94-aec3-6c1e2c5d6a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9de0bd-94db-4cd4-859b-192ab1a3f6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94350685-2696-4851-9fe9-b653b244fb2b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f693d65-642f-4cc5-a9c0-c17e526cb25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e90f1c4-cf7b-404b-9bb1-9dfb2989c102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdd94e8-be27-4299-b59b-28e2768fb100",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda9729e-af3e-42b3-8235-c5e38ac73f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534ebbc4-83f7-4b47-8b64-38cf91cba5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d0880e-fc74-4780-b98f-6e61fef83c0b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ada1a5-df0b-4162-97c5-5cf523547d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffac4684-0440-432d-a327-609052fb46b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5d69b4-ef29-4e96-b31c-88b356d47ba3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e042c6fd-a800-4d2d-a82c-15b491b4d8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca4e6f2-3301-453e-8edf-605706db0b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41839798-e3b5-4daa-88e0-b93ee75f8b9d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27a1a95-b98d-4208-a099-0de5878b872f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14cd510-7597-4ee2-b7b9-fac8f7d7733e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83f9cd0-7613-4a97-87ea-33e9016e4eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae27ef3f-f526-43d5-a6be-a476661a2686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e01206c-0acc-44dc-8983-1f55a0e46146",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4933d7-0dbb-46eb-b6c7-83ff5946d189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "204a66b5-5722-4ce3-916c-b489e9b6b4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42951903-f240-41dd-b64d-040eedb25cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491da481-ecf2-4efe-a755-67e75145a32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3115ac3-eaf8-4462-a539-31a13ae5d640",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece3167c-4cb9-4d3c-95c6-cbfbeafff9c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e32f348-ef25-46a9-9a9e-991605a045c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e56bb6-56ba-4798-bbdc-6c93b95bfe4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11d6d51-54a5-4569-815f-c41f9b7d46d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cc4488-51a9-4cc8-ab27-7e24aabacc8e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca25618b-5f5a-4327-945a-9497fec8fbbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d791b7aa-3b1f-49ae-a91a-599d78dcf1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58f6976-9fd5-45ef-a5ea-f682122a6350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c0b7c8-84c0-465f-865e-ebffc4832450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089b2be2-73a9-4cd3-a83d-0e306ed6ac9e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9124f7-2f76-4550-ac02-8cb9c9a757fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a130ea-0c76-495b-84c0-2278b07c8880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42605498-1fb2-43ae-adb2-e14359c9bbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf6dc98-c7c8-49db-9962-4fe1c0a8e8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4688cc-1c81-4e0b-84a8-b5ba404ae8de",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f181513-de5f-43c5-b644-52af02f02c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fc6c0d-c6dd-4de4-8dee-70f0e104247c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a857c6-a728-4481-b244-4e69158f1bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db3c926-4acd-4063-b3db-e5cd147df018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb9ebc7-60f2-45a1-a5e3-5cb164f9b577",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6acff5-0d87-45f4-9ac3-6d7b6d6d82e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea8cd76-874a-44a4-aefc-010b2907a4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98b828f-5a6b-4f36-b217-7a5203833567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce172c3-fcb2-429c-a748-2dd63072b62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a66858-94d0-4cc7-8e96-102aed22011f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1090c1-f4c8-4341-ba9e-95a289fca5a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a332441c-6765-4001-b832-5c542062614c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94a1995-1abc-4da8-b74e-1d74cc870e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a378686c-ec89-435a-a442-169d3a1c34b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac78770c-3f3c-4132-ac4f-6e7dae24b155",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e2d79e-d17a-49e9-9e64-a94fc54b2984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e083d86c-ee53-4fc5-9ab4-d81efe9bee1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7034b1-06f3-443a-8353-ef428075e419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd606b91-c182-4f49-ae12-e3babfd6bf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f65800b-e196-408b-bf3b-45abcd6a6823",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2752d09a-e501-443b-b5d5-a983a9761de0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f016d1e-016f-4d5a-b17f-afd687d33681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b26dbf-40bd-4f41-8e80-59b9550f97db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5226b50-9df8-4ed6-bc02-3ad252ef1d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4f328c-3813-4034-b9f7-9f27bf7b3bbb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48808dac-c174-43ce-98b5-3a19ecf4aa50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2dcb51-1720-44cf-9775-13fef4c60bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a71dd9-bb21-467a-8592-8f4e0ed684f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f613b0-07b4-4116-b963-20aa864cc4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd59667-6407-410a-8530-b1f60e24012a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2db16a-a9b0-4e43-a17b-692bf8e1985a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99898de7-870e-484d-9e63-010300abc0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1807614d-fe4a-424f-80ab-333262d48aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9016bf7-73e8-4597-b0b8-0e163bec2eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b49d88-5338-479c-90ad-f72edf354041",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1526fed-d63a-4a99-a41e-776ef68e40a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e21805-da11-4ea2-8c22-9c6009c6a560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb7a0da-f4d5-466b-a6db-0e2e6317506f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c1f9e6-a796-43a0-ba4f-232894fa3497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcc9f9d-bf2c-4847-81ad-322d24c1ff4d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5b5732-74bf-47b5-8779-25a1e6bcd119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899d73ce-3ebe-4c16-8a85-62ec64e2aaf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae8959-7a8a-4be0-84a5-45610df8e068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a58cced-2fc7-4dc4-aa2b-c312f18bf06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e944dc-a93c-4123-a02f-25514bc04696",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b7b4a2-ef0b-4186-98f5-571b11b86bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be86a36-e04e-4655-b816-9f06fe53414a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665762ed-098e-430f-927b-0c548ec7c0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe589031-dfc4-42eb-811b-5d028a91e3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e143f539-8d63-4d70-9087-56243aa6326f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14a8006-4d7a-499b-a606-120e2e1e9c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe718313-629e-4fc4-9ef5-1ae3e6b7d6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5617441-38b9-4c11-b734-129a83d68128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919ff35e-dfef-4518-9b2e-6a21234a38c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4d10ca-228f-41bd-87dd-16e59b89fb7e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d865efa3-08a8-4cf8-856e-95d48e14d189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aaa0a7e-be93-4191-94a8-1d2b94bbccc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e956a6-9290-4592-8163-c5ec5cb72594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af39db3-1836-4b92-b1e3-b585bb7d6ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea5282d-a542-49a3-92f2-4118ad2e24ab",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7ed6f9-d51e-49a0-93ed-6568aae0d77f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee060c2-3c1d-4428-9214-b10f18bdde84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee020fd-c37d-42f9-8117-ef41da59bb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492100ee-95e7-45ae-b3dd-a01eee823779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d338ba3-6873-4d05-a6d4-ac13548b6ad1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ea9cd2-9ec4-4e6b-b402-c8050dea8688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc7574f-2e49-4e65-8599-20c5c02fca72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c6aeca-1404-4210-bdbb-465025827be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca651b2-fcd7-425e-8b9b-5cd701062039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5926aa4-07a9-44af-be27-1124382c2394",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14307f03-dcfd-4f85-857c-4b5a0e59c084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7cd88a-04ac-447d-84b6-0565957e4627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5cb9c0-b2d7-42ea-bad8-311a2de33f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1706ae7f-02ec-4b3a-a3f2-75a6bab69a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6017ce-23d0-48be-b4f8-0763ccab8546",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff69901-99de-421a-8cab-852bccf415b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c933943a-ff96-4c7c-a75b-ce6ba09b0b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36755b8c-e178-403b-b742-1a7040470984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bfe387-6f6d-47ad-bdf3-bc933c32416d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363c7969-a74e-402a-8ae6-8552000f0b6c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afca17dd-dc3f-479b-91a9-1d44a7d9520c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fab12e-ad69-4e59-a3db-a372f05bb0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d993a0e-a559-401f-8c86-cf18c984d5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f782c85-1ac4-47ae-b15f-9e39cb935201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82447d00-b651-4149-9768-8cac421c3f78",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b99dbf9-1e2c-4fc3-a10f-5d5eae8f9a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b66d83-d809-43a9-b98c-8f8fac18d933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eae37c-48f3-435d-bde4-6cf1b997f76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fcc3ca-a42f-4866-9f92-7ea08c713129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d83e75-5c2b-496d-988b-169036e7d2a4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc0a3ec-89c3-4718-a364-02f7e00531c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617c8457-c424-487b-a89c-6b933ad5adf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e15812f-e0c3-45f0-bba9-ccc854b04a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca813c22-b3ec-4526-b995-17ff05928015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2335336e-6f4b-421f-b547-e5c49c764324",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d425bcea-5281-463c-a809-d66da728170b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e72feb-6107-4b42-afd0-0d283ebf18fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafe30a6-fe40-4911-942a-da93a1e121ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6adccd-d0d4-4057-b97d-ea34b735a477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e49ff4f-c77b-4c8b-b9ec-0befeee92722",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d265ab30-71fa-4552-8d11-ef547a1854bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13fafa38-2085-4bc4-b4d2-7c5315df3728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d06752-6b8d-41ba-aef7-d2ba5bc63052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a376f4d-b3f2-4a17-9e3d-85f7f3ba22ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09ce8a3-f8e7-43af-a794-72c0e372f25a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3fe379-35b9-4830-b8e5-541570a48aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca6e8835-8b9b-44fa-9a74-03ff380b458e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cf5e5b-67a7-4e5a-8b57-7f70a4a7038f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee624478-661c-49f1-88fc-94763bc469ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bf1511-28b9-4473-8807-ffa6c63c9089",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2fb85c-9f43-4132-bff3-616d9abad3cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c900b199-4b2b-4d69-82d3-c464ec1a684d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b694dd7-fd84-4dab-90da-c04c44baff9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de57b796-3878-41fb-bd26-78d4e4f4ff62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da80763-1c10-42ee-8fd0-72f5eb681ea9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb893454-42ad-40ba-959b-d5f85e9a1cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b02bc6d-ec83-420e-a67a-7f918a9c74be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf6ffa0-3ec4-4729-8f2c-2265de3f515f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c89beb-a2eb-4b1e-ba4c-a1e61e6840fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0c9c19-779b-448f-8bdc-87e3d22721b9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaec1f6-5f04-4a57-86f7-d1a3323155ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d1a9e2-b78f-4d2b-8d1a-56cc56474ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3115417-9a9e-4593-bc09-d1df372d57e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a97471-b03b-4274-80c7-c3fa787e34f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18732ca2-0f41-4f89-91f7-fd45aabeea2c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080972ca-1c54-454b-b8b0-06de5ae9b8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30424a8-e632-414a-a7ce-23bd7f73ac1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c262f1c4-c300-4006-9e33-fd8c19780d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f7c52f-bf21-42f4-b0cb-3a46e2cca5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9accf8a2-1ca0-40e4-a1aa-c360f96ed5f7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1860afd8-99f2-4b76-a498-175d91205de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c285e2-e1da-4891-bec2-0be46388b6c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f2a553-2301-43f0-95c6-b10bbc102d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c2a986-2ef8-4f6f-b38e-c5d6a71470c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bef56d9-094b-460b-8000-9c13f4ba97fe",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f96f89-6147-44e5-a718-a5b013cde856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d5600d-8206-4073-8f00-075118c4f459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d7f462-2ee0-4054-a1ae-b5b29df9764e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b448a5-4ad4-4c72-be51-0ea7bbc76357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca34bd6-cc4e-4574-9521-34f45ee2d7fe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c33e32-e45c-4f3d-90bf-315e871128d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977f40bc-0d4e-4fb0-8846-45e4d9431b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4efe443-e9d2-4099-ad28-0263d400cebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4e494f-c271-4a71-a0e2-ba737ff49b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34df0ca-d465-4e81-a207-5343b7f1ee69",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad70733-f984-4997-8aa8-a9ca0a636449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419d5454-aa30-42c1-be3a-32a9f9b42c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0d4e49-1c13-4ddc-aecb-11a292d33152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f13c749-84f1-429f-ae58-4620b76514c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d8846c-8a0d-4f5f-ba2e-1d2baa9b6577",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c9e6fe-b8ab-4e89-b6d1-97dcd89aeb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69906f0d-b2ed-4f27-9cba-f6623673a14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0975b3d-50c6-45b7-8aff-7778f1ddbbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e682b8-3b3a-46a7-8e36-b343e6349a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1225d74b-1494-4e57-8c27-48af5af8d491",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c479580d-632b-41c0-b932-a6ec1e0459fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a248f898-20d8-4039-a9e8-13f451fb5808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9036aea-54c7-42c6-be56-c5a8271de62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a64789-e498-4e56-b08f-84e3fb3bf6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a01739-965e-4c70-8f70-39d199de9cf4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d2581c-a1bd-4202-b5f4-ba6eafea0422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa2fa07-ca7f-411a-9bc2-0ac1240bdfcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edeca9a2-ba59-46f7-b3eb-6d2bc2a603ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2c58f1-e29f-44db-aed5-1e5b3627d222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeae263-6dca-4ac1-bfd4-d322020d7599",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaefa44c-9c17-4e5d-bc31-fab7816d877f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6365b5-3580-4e3d-acba-7f156ae78457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf91d4f-7945-4ea6-ba54-650a22fb0661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f11892-7d67-40d8-8c85-be037e18250f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d997aff0-e542-4fb3-ab94-0cae01918e62",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed24e82-604f-4b75-89ef-e86c883ef76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4aacc2-e857-44ca-b076-9f1dc2bcf9ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44251aba-f35a-4066-a177-8ffc7175eff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc047f7f-dd5d-4f39-b4be-0addb666bce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851a167e-d635-4a6c-a9fb-8240a383129c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c96588f-b16e-46d2-8cbb-bd6e1c7ce0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdde6c5-4b20-469c-be58-41aa52f299e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b0c2a0-c074-4224-aa38-cab9d03a45ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5afafaac-c4d1-4eec-9153-330c02531b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7229e189-6126-47b8-9829-71eb65b0f3ed",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f296d1aa-21be-4314-80dc-496678fb593e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0320cb2e-e5bd-449b-af14-16cd97108345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e266f63-8ae6-4d51-93af-f2db1ee46d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27603601-1c3d-4131-a155-a8bf91a1176e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7b75dc-1eeb-4822-aeff-cde23e01b441",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c691d8-4009-43eb-9f13-03707d673cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42557fd-1d37-4a43-bc0e-6f9e4000e256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699ee929-e9ef-427f-baf9-98345b601579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad3f076-bbff-4108-9303-352951fa74c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c1d325-da79-49d5-9b5e-7170f58e8256",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34444c4-efd8-4388-970b-b8a538c508e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a08a63-094e-473e-b112-46555cc78d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac8f317-460f-4949-a532-e5b5e6ad60ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc44b1c3-6e25-4320-a7b0-03ed2d7ae78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffeca98-7507-48ba-871f-a1612d9ad5b0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eaa0cb-a170-4d5d-9be4-2eb755c9cf8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766a4764-ba89-4a59-bcce-d2d91f9b031a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff2e51c-827e-4680-8a8a-c7ee5c873321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70a9069-ccb3-48cf-b6c7-f60ed12b5712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f254565-3734-4312-9b8a-b78c64c7108d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c2cfb9-125c-49a5-824a-cc74d1a7dbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5056c5d1-d27f-4aa8-82d7-679c3390ab95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda64d83-543f-4a0a-a751-2d229559f5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca220846-9c5b-4330-a454-87dcc3ef0495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746f2b0a-4447-4570-8bae-9d580cb7e90f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e29a9f9-834d-420d-81c4-5f4399d245d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0414877f-b3ff-4ad7-9309-da40fe4d1b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5589eda7-09e4-4e6e-9e45-f64cc21dc7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82f906a-47ae-4fd0-b88d-95a4572a023c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b85df4-1fd7-4e4c-88a3-4f87789ae3e6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451e9cec-4d8e-436c-a3d6-e89a214b742e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f080c0c8-e949-4676-b99e-9992aca3849e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e4cf7d-9a46-4239-918b-d42b944936cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d869c5c-229d-4915-b5cf-5296f1941aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024e73cd-8eb0-40ff-8a12-b838ef655dd9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53eec3c-f090-43ba-8119-ff41942b060f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2141f854-370a-40d3-a8d6-b374c9f72c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13272e0c-7b37-4579-aa6d-8fbda2aaf230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fcf1db-3d68-40bf-a2ba-4f982843550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13eca42a-5487-432f-afb9-ae07876302bd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b093f2-0411-4feb-a02a-f1b8d0fc827f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf9d8bc-e055-4272-8b9f-f8d53b32f67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e69921d-ed0f-48b5-b422-7445379af814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c59a503-38ea-4fb4-83ce-0be79fc056e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00a9aeb-6b0e-4a1b-84a5-26d81c0643e6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25674fd6-f483-4440-ac62-7a8a308aaf8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a64a6d-55c1-42fa-8b60-419dfb2f745b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2b2c4e-d154-41bf-b61c-50be834302e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e723d2ec-855d-4c29-a099-fec4d7dee7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30270f16-3f27-44f0-a4f2-de2c6bc632d5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dbe66a-d0db-437f-89cd-a8af71db568c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97df33a-3acf-4918-9eea-9e22d47496ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c6b911-e7b5-4c44-9541-07fdaf010aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5969308-ea89-4623-bb3f-27a02b9330e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80d862d-f0f7-4a28-a516-80eb1f218fa9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e8b848-3a3c-482d-953c-04f24b060089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4386cd1b-2e03-4002-8eb1-3536dc3b7643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b3ecc9-5e0a-46ee-bca6-deed226e35d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c53564-f34f-403b-a3af-bc99c014d2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439c3da6-67db-4437-bbc8-22ef999ddc55",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859505a8-246d-4ede-9be4-acbae4618716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05a8f14-a293-48f1-923c-bf906642f531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9406838-c2b6-465f-bb72-7c159178c797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38676bb3-d550-4bea-ad0b-b2c1bd504929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a729d2-b9ad-44db-b963-a493d42ae375",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b768015-1981-4cd1-8b07-132d0757085e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f0d6ff-25d5-4e8b-8982-4a459f527ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d766b95-a67a-495d-b49f-bb321aaf8b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5a1d43-8b4e-45cc-95e3-eeacb848c9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e114e2e4-afbc-4848-ada9-3f4cd5809ca5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ac2fc1-7dbb-476e-a2c1-86aabab3cffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be76c520-a0ed-4dc6-9634-30d21953f1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c3c1f4-52c1-4398-b775-7f47852e7a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75eff8af-3dce-4fdb-9322-71e1b3d29a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e708132-90e7-4d54-b13a-aa291ccbec5c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497c7380-2f42-495b-9a6c-75b64897cc02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b4b96a-c29a-4be6-abdb-a67e15618fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135ce404-67ce-45e7-99ef-b11d6d8f7526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1df622-4d04-412e-a8ec-65a208c269ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb27253-58ad-4182-b9ba-437ec6ec22ae",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1d61dc-5f61-4b72-bb55-42306970dc82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587d9b3e-d24e-422a-a196-e99277b0d58d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0ec3ab-aac1-46bb-9ed4-0ce4c1376e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d96e9c-eaa0-4009-8e3a-57f87c34b550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a291df-8e21-49a5-a712-a3f22b164402",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d0e464-e8da-4187-a4fb-b8eeb1cb2174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6077e18-2468-4cd7-b1a3-6723563df74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34e7ca5-3580-4f14-be11-f5c9199a6240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389f88a6-9fb9-48f2-b4a2-b1db7a415f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299672d1-c0ab-4d19-a02d-d0f9aa553187",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251b8f40-f363-440b-aa8f-35eaf58c3812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c7764b-a5f6-41d0-ab14-c99ea3fa40aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32aed314-f301-4566-b0e7-99bcd840e686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aab6f15-f741-454b-80e2-d195615eb751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcd3555-2958-41b9-967b-e21cc0ca1bab",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61895f9e-344a-4ea6-95a0-c6c7ca300d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cdb6033-0cf3-43f4-b54a-a6bca9fa7205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fa5d21-9e16-47a7-871f-528ab75d61ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b4a5b2-f0a4-4e76-8f1a-314767f4c534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6082982-3a86-4527-abda-c1acf251cdfc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b92637-59fd-460f-adf2-8c49ed7695ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b4ed06-4dbd-4b43-b5d2-d894308eed90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcd67bf-32a7-4c85-a393-d83e84ca73a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d168cfa7-a9e3-41b4-b286-3bd8494d1531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61584c59-fd47-4f47-85a5-ea0f770daa1e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11664de5-1b5f-4d6f-8ba0-120afae82605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83388af-6c90-4d20-9534-88236b10ba77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05659c75-c5a9-45f4-81fa-eabfbcf2baf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a5dff9-0905-4e79-91f2-b93f88fe26d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab031e1-85f3-4ace-9ce3-f2481d41279c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a75a9e3-8460-4ea7-953a-3ca6f22e3b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "614134f5-5caf-4bbe-ab0d-180b131b147d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa0e0c4-8fe2-40a2-9697-e3796173b5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055be784-a8f0-41d1-b35a-a15ae047dbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb64333-fed9-4e95-a9f4-7e1147b60150",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbfb5dd-a4f5-4026-a2fd-aff39e6d459b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54180038-19f1-4292-937b-e5331d5ca3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a23f90c-f791-4802-a531-4b8593eef4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c071ab43-78c1-4196-a9ff-381993229155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcc8556-d433-4784-ac7e-e25d83025229",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fab43de-90ac-43b4-ae6c-5a0ae2c72558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d5c93e-e788-4e33-9e43-a48b697e6491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d185a32-c163-4a58-817b-becbbc71b813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea298d37-0d94-47e3-9636-9cb2019c15a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114f1a5a-8909-4388-ab89-b55d399ee9ba",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957fa031-3a9a-4293-88a0-004bade58297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9550d159-d5cf-47d6-b2fb-f9c49d994b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6ebc8c-195b-4ab1-b25c-c3b2a0103974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcdd0c5-ec0b-45e3-b70b-be7d529766d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b0db34-fd4a-4c2c-a273-a6030516dd42",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2e5749-5942-4c0b-8a98-ad2141c7fc48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "183c1419-6751-4454-822b-b4cd9072adda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187e24ed-a22d-4308-b898-dccb2579e2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfa3fa4-cb89-4e7c-8632-6fb967a2b027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb66fcc-0398-43cc-b384-a1fec8f6ff8b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea96b4da-23dd-41ba-b6d0-1039bad9fd6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df4a869-1fce-4835-b953-9d1d73cdaa37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df55d02d-665e-4728-af1f-b73356c0745a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a96bae-fd7a-448e-b197-1336a05a09e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a504ed4c-a7be-4857-ad29-65d78d2bdfbe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c20ddb-9386-412f-b8d3-9729ac0082bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e300c64-2648-4e00-a403-c4bae8bfbbdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a08be6a-b4e0-4903-b818-9c9ad1a9b728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847b46ec-b8bf-4dd7-8931-4475ae5d4649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9067d689-6c7e-42f6-bbda-b535073f7541",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2ab06f-6d76-42fb-a637-2eb9140f343e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b93b1f-22d3-4ae6-9682-058b3f7f14d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78663702-a59f-4a6b-97d1-cd7aa9cf4978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b91535-63db-40ff-a428-8d7b1cf3b664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a796c151-ece2-48a1-ba0e-3f5ce8237f71",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39705b5e-ef5a-47e2-88cd-45cd729349bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0651132f-6927-4012-aef0-72079e327dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312779d6-d29e-4c99-82df-c09c85287e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18955581-1a83-4d64-a9dc-4b5d6f44e5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14167426-9840-4126-8cae-af426a143589",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed26eac8-d60d-4737-a286-3bfda09e39c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b4f7fea-806d-46a7-a90a-d1e2b316bc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bdd7f9-d300-4669-bd69-ec6305fa7d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1429fe-befe-45a1-af76-535f130e95db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a150eba1-3fc5-4afa-9c0d-0ea7b16e2ef7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6a4778-bdbf-4c50-996a-749bc8e48d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa8fd2d6-bde4-401b-a384-bdbb9e8fcae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aace3247-3593-4361-9ee3-48f64e62ec02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42383e65-05fc-45d2-a7f2-c35025aec428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd40a25-9e2c-43f1-b381-33058f6681a8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75563f77-e614-4838-a1d6-05b8c5451cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0c46cb-91e0-4b3f-ac5f-82ae47e9c095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed96ed-44b2-42dc-84f7-df9a4d2471a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98eb882-be63-4f89-88ca-dce25ca5e0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55c58c4-5991-4deb-a128-aeda0c66d73d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5d3499-2854-4396-9fe6-292bf0a3fab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59fb0f1e-558f-4bca-8d91-0d7a1384c50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0a04f5-c58b-44e6-9129-575cd5dee8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196c31da-fb4b-4872-ba1f-2719e2f0ea1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43342cb-4707-4dfb-b9fe-769414ecbbf4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9184ec83-e56e-4292-8f71-23b10fd2485a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c33af25-b3ee-4954-bbc2-0b48e9bc93a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfb645a-6019-4119-a689-06aa9fba9fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3754f96f-d44b-4437-9c93-6b4c7a3c7668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1934442d-5bd3-47f9-a81a-38f0b7d1112d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb1390f-38d7-4de7-8b00-3c593e22c808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db001f94-3c84-4070-9466-584a5fc7016d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88ecad3-1e47-450b-9e31-0e3cabc719a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d0d350-cb87-4992-99f1-2a47e5b7efb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50fdca3-e788-471b-a0c7-0357e730d36b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6237319a-004b-4623-b232-3232cf03d32f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc96a73d-5bf7-4c12-90a7-3434f5b52971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa953c5-2d9a-4cd4-870e-f7e161fc8222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea235ed-af4b-456f-a858-104b621b210b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d98a86c-c9dd-4bf1-91a2-d9ab1ed30b8f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2580c1cb-ed4d-4151-9eea-6fd4bafa8fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ceb266-5f4a-4e69-8745-5cc207c31fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2018f18-ca09-4d65-a103-b7d662305f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d66323-df25-4f4d-822a-b7b5bfb80db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75486882-df90-4d0e-982a-2b6a43ccf2e6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e4beb7-04e3-49d2-9ba0-0deb1c1302ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e7ddf1-7f9c-4594-bb49-cd07f4acf611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24258c9-9a4a-499d-902d-c6e7d15cd654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7715bcc4-88d0-4ee6-a4fe-9b5052e650d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e298521-493f-4954-b976-6235748559fa",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258779ed-a391-4589-80ba-f2172ba2fa80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d020d71f-4ae4-48c1-a67a-0d3828cf82db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e21d08d-dc18-4126-8994-c59d8de6f3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17d05ee-f2db-4078-9ea4-76fb5bbf6501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dca951-47e0-4fd9-8b9b-d45425174164",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a9910b-3c07-4bbd-836f-fee9ce1e2142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f06e2d8-b8de-4dbe-a38d-1826c5a50807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418efcb9-e01f-4fd4-b3d6-325052271e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6967818d-1fd3-4a2b-a127-94dda562b215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3eb8c1-160b-4179-81ed-9ded1f47bf3c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea98e771-e103-49a0-b166-7b77ab7b0999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2237db3-6ce4-4c94-9235-f3b89a51ae81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ad375e-b9b4-4151-95fb-cb5f4b250f90",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6dbd8a-91e7-4757-bfa9-6ab6c3a5b244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6873b2b9-4a7b-463f-9f52-c7638cd58c1f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2425c2b-1eb7-4a45-a24f-5007ba279bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf0ef9d5-8b6d-47ab-b315-addbda4c48b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9314b359-892f-4e7f-8cfd-c63590725ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb967fd-9675-4116-855c-a6e115618041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4ca265-289c-49ca-8c7f-c310fefc93ff",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13d45f0-ea32-400a-b8fd-2baa68b4a31f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b72c92b0-d499-40ba-8dc0-c59625f6726d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ae00dd-e35f-463b-8c95-f2327188aa57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91978200-632b-4d19-b548-6556f30d0561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9cedb6-1fc3-4c41-96a0-10d6a67cee7a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc53bdb3-6a41-479d-a75b-e06e093a7d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e2faa7-2eff-4cfb-bfca-2db69129647d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1edade9-8747-4b4c-8cdf-ddf472515ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9aa315-4db6-468b-9338-60c4af5b1ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4059508-6758-40d3-8152-4dca991ac9b7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5baf45-27ef-4a7a-8edd-a81a703baddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2119d05a-c973-4d5d-b259-dec468e91910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074ddfc7-3854-46aa-bf3c-eb1856460a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0115199f-d733-426b-a992-273e0a53e7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907ae58d-3178-4cb6-a1f6-e7807912579a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c01718-2dd5-4221-9b58-f8935cbb42c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69004585-1d7b-4666-9794-e823a58f2d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0a7afa-2648-4df0-be2f-421def01c6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa32630-6499-4631-96c4-e02b784fdd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05601584-ce95-4496-a792-4510544c15af",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3650aa22-3830-45bb-a05c-dee25613c5c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842b55ec-6e5b-4972-b77f-92f339dea647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87afeb8-f032-4c97-86cb-1f914cbfed85",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2acebed-6046-4316-9e8b-d7f108d821d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0266d2bd-57ae-4797-b609-acb60e45170c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7392809-0b5b-442b-b3e9-9890a4788dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb202f7-13d5-445c-b60f-2bfcbe712552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332353ab-1b1d-4dc9-b9ea-a83c8adf562e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cf5a78-9893-49a6-8c91-55c3db23d6a0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db16145c-1639-4f17-95bd-acf169c85190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "640165d1-64a2-472f-813a-159d2b5d31ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "065a98d3-b54c-44ff-b9ec-21d2dcbe6d2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a13f0d8f-ad14-42c6-aaf5-1900b5bc293b"
                    }
                  }
                ]
              },
              {
                "id": "21449bf6-4fb8-488c-bfdb-ab8238143d63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd7fe291-8117-4751-9438-e6a5e3d29312",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2212dae-2e4a-43de-83ff-8096f5befd7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9473fbcf-71c2-4175-8eb0-310a710729d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c304bef-56cf-4996-a682-6c6420f4342e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2db88105-2df1-4e16-9ca7-2e2cc9abd2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac4cbd7-daee-4596-971b-f18fcd8b818e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67947391-ed05-4b27-91f0-0a36a0085632",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c7238265-6200-4d0b-852a-5bea4ea3829e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df8b91d-b79c-4d57-90e3-2da912c8a502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa149f18-19c2-47c2-aa72-453ec3995cc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1f07d69-a6b2-46f9-8d5f-3155ae5cea25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b7087f4-9482-49c2-a7cc-0d52ed377924"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06c4e42b-d95e-4adf-8a38-70049cf6875e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab7e23d6-3763-4ec0-92c0-3d9c13c03f72"
                    }
                  }
                ]
              },
              {
                "id": "84c7fc80-9dfe-4c02-a9a5-fde52d383fec",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "661feb94-e72a-4535-b5dd-5a0b0ce6247d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fa932f-410a-4a1a-b019-12c1ac4130cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dbbf1807-41d8-467b-aec9-888d8e044b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec84bdbe-5c9b-4b25-8000-95c2f0b48421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61196662-2b8a-4de0-85fc-7441b896f59e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bce45bd3-ff39-4616-9332-caa0dd85b875",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4505664-9e4c-4f62-be61-1398bb886491",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "caffa89d-aa94-4be5-b25d-a5afa8ddf6b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "675ec4f9-0d84-4561-8e4a-a1d0c588627f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "535282e1-4bcf-4d39-9af9-89a039151aa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4f2608a-b752-4850-a856-f838aa5d6f7a"
                    }
                  }
                ]
              },
              {
                "id": "0bf18401-2f6c-46d0-8d44-b916abcc5a7c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df245d3d-dcb9-47ec-92ca-e33581614a4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1c0b2284-460f-4951-9c29-581bcae9011a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e9b4142-b496-4733-8dd9-acbdec9f6eab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb11ae71-2619-452d-8b94-e5ee9da937b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "883a76b7-25b8-41ab-9c9c-b5d39b8acb52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "617f9898-d12d-4127-bd0c-e4bb6560e8c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c8833da-3113-4c3c-a230-0d778355dd15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a831eab4-e32e-450d-b7fd-1bc4b1f7129d"
            }
          }
        ]
      },
      {
        "id": "f397fa33-619f-4a69-8a41-a28983040e76",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d270afc6-f665-46de-83e2-e53fb12c9ee1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c492c894-f11b-4088-bb3c-bc2e4b71e663",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3bee2204-7c49-421d-82ad-cdf32a5d29b2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf09c8be-2f3f-4de9-9bcf-da2caea37436",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "093845e9-f7c3-4706-b08f-2aa6a7c899d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e73e37f-5ddf-4cd6-a7ed-97954756313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1966253c-8458-43dc-b436-5b71aeb98023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dcb51a-57b7-4cb6-9050-f3655389a18e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63c9145-38aa-45e2-9546-901e4147308d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6ea2200b-6bc3-4395-9ab6-19fb440b414d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612d20ae-c48c-40ea-9d4f-313239fd13e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5246659-27cf-4d02-8683-5d08be63b5c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42370fac-797c-484c-bcaa-9f1de5176c7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "485721b9-2079-46f4-9eae-9b2a2dfe419e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd99a966-2f4c-4c12-8f1d-47acd2bbd736",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bf18fc0-ec84-4614-a025-168cf229f407"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c84ccdc-a2d4-401b-bf50-9bf673a07413",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c9aeaf94-4d25-4d04-8f95-92a014731b66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "624d0cdc-7a8b-4dcb-b412-25f009250e25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49de094a-9d48-4a2e-9b38-493c396e53f1"
            }
          }
        ]
      },
      {
        "id": "9bea46b1-fd7d-4e22-99c3-1154405ed389",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "18c6abbd-f6ca-4235-83c0-897b96362be7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5960e409-b8f4-4812-8ae3-d3024081a588",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e97663c8-8fc1-4e79-9643-cea3e0b59dc4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21919186-5dfc-4cd7-9baa-0514037e9635",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bb3d1a2-b076-417a-9803-a0eb5afa88c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2acaa6-4056-43ff-a90e-dfc2cbf7dcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d41deace-1188-425c-97a0-83393f625943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f45087f-e5c7-4cdc-b1d7-99dc5b5093fa",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78714000-b5db-4e37-ac2a-950fd7113f5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c1eac9-0b01-49c2-a0a8-8ae12f93caf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54af9d61-d4f4-4342-84a9-451a91f20ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8466f3a4-d054-4de0-86af-0b754d0ab76d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0b01327-8de2-4ef5-b81d-98c5523bbe8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de457642-cdb3-4ffd-838d-5e2e3d426586"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ed18304-f310-4258-93d4-7dcb519bbcfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78a66f77-8b0a-4ac7-9409-c3b7848a725f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e05b94c-3b97-49e5-99f6-012156bcc822",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4fe9ca94-3480-4f75-8036-fe46ad6bdbca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2aaa4cc4-547c-4252-8de6-fb2310882ea1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7aaf729b-4b15-43ba-9dc8-64ccefef098a"
            }
          }
        ]
      },
      {
        "id": "37d1744b-e38a-43e9-b8ea-7c4bf9e4dc19",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5f43930e-8633-4e83-8631-7498a5957fbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97084c4f-d05e-4bac-add0-75cf995deb67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e2e24a4-83f2-46b2-8cc8-26825dacf34b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccd8f85-997e-44fc-816f-75dca5d2cc5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc434b15-a337-45db-bcc9-9ccbf091ff8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58fedb8-3874-4b25-b012-d0a9241b3631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "181e11b6-e46a-4976-a930-a8e41fbd833f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9b57bd-7a0b-4143-8f30-74b14637f0b8",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988a31a2-f86c-486c-b4e4-cad860e3af61",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "99191655-4df4-4229-b0d6-2a8f859157bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296f58e0-01e6-4acc-ba8f-b95488437f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35d99dec-8254-48db-be48-326f77bc6841"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06ac281a-ff72-4a26-8574-af60b20f4b6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fac0ac84-3802-49e3-8764-c84216ece86d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8a3a827-31db-4c27-8a19-c0da8e8b42a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10f8fe54-0c62-4b39-9b88-a88ebb15c8fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a8dcba3-e432-4501-bd4b-58c3c49cdc66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f8d2e5f-8902-4028-a330-244853db9614"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e38b3a62-ebe3-40d6-ac98-ed731f4c4435",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "baa09aff-2788-41b8-b88b-c5977fa67826"
            }
          }
        ]
      },
      {
        "id": "22fa32bc-b54d-48d8-9890-1f64b650070f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13c1064e-2609-4d77-b66f-64daf443a1be",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90569e27-5dd8-48d3-bce3-3b751c80719c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "528182ca-6a31-4269-8a72-b8e7cef3782d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5ca9de4-d4a9-46fa-9bf4-670d4b339d50",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf034f67-c592-4246-a100-c6df5730449c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 767.2807692307691,
      "responseMin": 6,
      "responseMax": 6363,
      "responseSd": 766.9899119380856,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680309510238,
      "completed": 1680309723658
    },
    "executions": [
      {
        "id": "cffbcfc9-945d-454e-9e56-70bd038e6f72",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b319af91-d466-41fe-a1b6-530f56098520",
          "httpRequestId": "fc7a17d5-6c43-4e19-b373-7da3ca704a90"
        },
        "item": {
          "id": "cffbcfc9-945d-454e-9e56-70bd038e6f72",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "657cc459-c317-408e-86f9-e47e0272c651",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "35c33c4d-83d3-4d7b-924a-9655d030f131",
        "cursor": {
          "ref": "5c5ec6cc-3afd-4223-ad8f-3abe9298562d",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d2826ae2-b1d1-4851-83de-d5e912ce7494"
        },
        "item": {
          "id": "35c33c4d-83d3-4d7b-924a-9655d030f131",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "50f1018f-7ec1-40ad-b9dd-9f48875d940c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "8106d30e-65d2-4466-bc0c-ef5d2157d7e3",
        "cursor": {
          "ref": "6423ff48-eba3-4183-979e-932072dd8aac",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "afccffc2-a397-42d5-961c-92d26c7691a4"
        },
        "item": {
          "id": "8106d30e-65d2-4466-bc0c-ef5d2157d7e3",
          "name": "did_json"
        },
        "response": {
          "id": "ad03d61a-7a7e-476a-ba6b-80347ed2b127",
          "status": "OK",
          "code": 200,
          "responseTime": 1056,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d285275-fe30-44ce-854f-8a51a7270258",
        "cursor": {
          "ref": "93d1ee03-44dc-470e-bc04-6bf4cea19aea",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "83f6fa74-5aca-4291-827d-8043a825de7d"
        },
        "item": {
          "id": "0d285275-fe30-44ce-854f-8a51a7270258",
          "name": "did:invalid"
        },
        "response": {
          "id": "c82ebe5b-fc7d-4317-84f9-815475fdb01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d285275-fe30-44ce-854f-8a51a7270258",
        "cursor": {
          "ref": "93d1ee03-44dc-470e-bc04-6bf4cea19aea",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "83f6fa74-5aca-4291-827d-8043a825de7d"
        },
        "item": {
          "id": "0d285275-fe30-44ce-854f-8a51a7270258",
          "name": "did:invalid"
        },
        "response": {
          "id": "c82ebe5b-fc7d-4317-84f9-815475fdb01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c815d0e-e4f8-4102-b5f2-946628447c13",
        "cursor": {
          "ref": "5dc25570-a2da-4ddb-a5b0-6ee27a0e0b6d",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e437c350-d88f-4587-bf74-b9f683310e8b"
        },
        "item": {
          "id": "3c815d0e-e4f8-4102-b5f2-946628447c13",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7bd6e35b-c591-4c07-aa9a-2a45fa4ab465",
          "status": "Not Found",
          "code": 404,
          "responseTime": 807,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4836a8d2-2ca6-41c0-a362-5df3f5a6e698",
        "cursor": {
          "ref": "37f91748-f4a1-4521-a869-52b3a9b4ece9",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "22bd5b55-206b-41b9-b19d-bdd999b820f3"
        },
        "item": {
          "id": "4836a8d2-2ca6-41c0-a362-5df3f5a6e698",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4de76afd-26cc-4225-ac2f-d513c4300e9a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 648,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568acdc7-379e-4652-9bfa-01ad1ceb442e",
        "cursor": {
          "ref": "cb2e03e2-6a2e-4290-96ad-7ce3c2d70cc1",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "48b9e5c6-66e9-413c-b742-5c76013d2a0b"
        },
        "item": {
          "id": "568acdc7-379e-4652-9bfa-01ad1ceb442e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "360c38ab-56d9-4cb7-84c4-e1de492fd8b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022db34c-e00d-4464-b533-c6ce0f612633",
        "cursor": {
          "ref": "2bda8a85-2061-4900-8f08-6f41aaa77ddf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c9de6ca9-0a17-4185-95fa-8b663fd4994d"
        },
        "item": {
          "id": "022db34c-e00d-4464-b533-c6ce0f612633",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5675d38e-3d49-41a8-8196-d2e3219cfaa2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 641,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022db34c-e00d-4464-b533-c6ce0f612633",
        "cursor": {
          "ref": "2bda8a85-2061-4900-8f08-6f41aaa77ddf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c9de6ca9-0a17-4185-95fa-8b663fd4994d"
        },
        "item": {
          "id": "022db34c-e00d-4464-b533-c6ce0f612633",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5675d38e-3d49-41a8-8196-d2e3219cfaa2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 641,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad41d553-12c2-424f-b701-4b37b782725f",
        "cursor": {
          "ref": "96a729c7-a057-4028-a95d-8d5de9139c4c",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "23779975-8369-4080-a7c0-885cfdb403fb"
        },
        "item": {
          "id": "ad41d553-12c2-424f-b701-4b37b782725f",
          "name": "identifiers"
        },
        "response": {
          "id": "aae8a846-5550-43fe-9b8c-882cd6589ccc",
          "status": "OK",
          "code": 200,
          "responseTime": 1089,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9211b77-c9ae-40c3-a4bf-046cad711f15",
        "cursor": {
          "ref": "c5d98877-2185-4815-a702-4c3609fb24a5",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "36e68597-e5a2-49a3-99ae-974315e8f73c"
        },
        "item": {
          "id": "c9211b77-c9ae-40c3-a4bf-046cad711f15",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b173469a-1ae3-4383-8d7f-450ba1ead500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9211b77-c9ae-40c3-a4bf-046cad711f15",
        "cursor": {
          "ref": "c5d98877-2185-4815-a702-4c3609fb24a5",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "36e68597-e5a2-49a3-99ae-974315e8f73c"
        },
        "item": {
          "id": "c9211b77-c9ae-40c3-a4bf-046cad711f15",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b173469a-1ae3-4383-8d7f-450ba1ead500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78639593-f9e2-4dae-81d8-104d87643a36",
        "cursor": {
          "ref": "d6338d6a-256b-4eaa-9260-677d541385cd",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c5558e9c-2208-4459-847a-a56bf7f451b8"
        },
        "item": {
          "id": "78639593-f9e2-4dae-81d8-104d87643a36",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e9bbffa6-25bf-4ea3-80f4-c75eb0205fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448be9d6-5c31-486b-9986-b157f5a67f93",
        "cursor": {
          "ref": "7a6417b2-08d7-4f5b-a80e-be274f5072e5",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "42b7ded0-f2f5-43b9-9036-d48ff723b73c"
        },
        "item": {
          "id": "448be9d6-5c31-486b-9986-b157f5a67f93",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7419cfec-21d5-40ac-848d-5624b6bc767f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4db672-2e80-4406-b00f-eb7fbc013f23",
        "cursor": {
          "ref": "0b7aea1a-cda4-474f-acc6-9931b2096682",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2ec4e62e-d948-4f31-b5a9-5d1abc6291d4"
        },
        "item": {
          "id": "ce4db672-2e80-4406-b00f-eb7fbc013f23",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d3488451-c689-40bf-8c9d-ecfdc418ec6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fda19af-2927-45a4-a73c-8c893ddbb91a",
        "cursor": {
          "ref": "ef2f85d8-e682-4042-b171-d591480c96b2",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8df46f7c-cb5a-4545-b172-18c333f368e2"
        },
        "item": {
          "id": "3fda19af-2927-45a4-a73c-8c893ddbb91a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c407ddac-a918-4eb3-97ee-21a8fb10e5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dcaf7d-e023-40ba-bb98-87e6e3e73177",
        "cursor": {
          "ref": "8d5031ee-bbeb-47a2-af59-a8f5e584d71c",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c1a73842-7469-45e8-a2c2-fe992ec09001"
        },
        "item": {
          "id": "74dcaf7d-e023-40ba-bb98-87e6e3e73177",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0efefb96-405f-4ca1-a749-3f9262fc78a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84644d5-668c-4075-910f-825e93d439a0",
        "cursor": {
          "ref": "a3c68486-e237-4a84-b3ca-de69bc679ff6",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d1274e19-b59d-444b-9a09-f417d14b09c0"
        },
        "item": {
          "id": "a84644d5-668c-4075-910f-825e93d439a0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "65a13426-0132-4818-a859-24c34f83514d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a775cc52-c58c-4845-909b-b3fce86aa8a9",
        "cursor": {
          "ref": "fee00c7d-abdc-4e0d-93e7-53a38a56f7d3",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "649f7a8b-39d8-4fd6-863a-3962d34a523f"
        },
        "item": {
          "id": "a775cc52-c58c-4845-909b-b3fce86aa8a9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3d09e622-ea41-4a19-b456-a0da554e6950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d778de40-06c6-4e11-ace3-3c6f515a049b",
        "cursor": {
          "ref": "20f79a8e-d4f9-4870-bf5b-47b419a35b29",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "22dce26d-310c-485d-87a0-b3f0999ac8eb"
        },
        "item": {
          "id": "d778de40-06c6-4e11-ace3-3c6f515a049b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4c45c489-072c-4eec-9fab-c3b0380ee147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da099fb1-d47b-4451-baaa-0d32a2d742b2",
        "cursor": {
          "ref": "10b87448-84f0-44f2-8082-ae86f1ba8b93",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "092e3c69-7bdd-4f03-acfe-0c98573277be"
        },
        "item": {
          "id": "da099fb1-d47b-4451-baaa-0d32a2d742b2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1949456b-c24a-4d2f-bf04-1e2067e2e53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8798d06-c132-467f-b5cf-9eacbcb5074c",
        "cursor": {
          "ref": "6c5b86f4-9b77-4f8b-933d-00aa14bab437",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "45ce2b13-e5dc-459e-acb1-e879803da91c"
        },
        "item": {
          "id": "f8798d06-c132-467f-b5cf-9eacbcb5074c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a0fa26aa-b2e1-4cfb-8596-1d3e8a1ebd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605d6397-8b96-4e88-a50b-1352ae9216ec",
        "cursor": {
          "ref": "3420d0d0-b711-4409-bb4a-0dc22230fe18",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f06d7e42-51c0-4162-9794-365bf7b03169"
        },
        "item": {
          "id": "605d6397-8b96-4e88-a50b-1352ae9216ec",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dc417b39-b6e7-4299-83bd-a0a8585c230f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877aee4c-a357-424a-89a1-76141121ab44",
        "cursor": {
          "ref": "9e30f853-b03a-4daf-8fec-733417b84f05",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "01bc66ab-6f6b-4f68-8498-29feeb205040"
        },
        "item": {
          "id": "877aee4c-a357-424a-89a1-76141121ab44",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "312e641d-8384-4348-908f-10adae5fdfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb321ad-c19c-48c3-8b9f-788979f7b0b3",
        "cursor": {
          "ref": "a9895e6d-b8dc-48b9-983b-a7451c68a9ed",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "37c34f80-93a5-4d57-9271-140eeb2d2a5e"
        },
        "item": {
          "id": "0bb321ad-c19c-48c3-8b9f-788979f7b0b3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e903e562-ea34-4991-9009-25edb2637ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cd0565-5d0f-426e-8de3-34ee5efcd184",
        "cursor": {
          "ref": "a038e171-7896-44ca-bcae-874af66ee61e",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "54bcada7-b4e5-4da3-9e39-5972cc7fb714"
        },
        "item": {
          "id": "e3cd0565-5d0f-426e-8de3-34ee5efcd184",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1f80f61f-4b11-409d-b678-6a57d56e4496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8207833-664a-41ad-b0f9-a8379c3f2ab6",
        "cursor": {
          "ref": "333afe7c-3221-42ab-a701-7cc98e1b5c91",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f2134889-e398-4aee-ae90-19c170b20e72"
        },
        "item": {
          "id": "a8207833-664a-41ad-b0f9-a8379c3f2ab6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f16c0efd-f6cc-4914-9479-778a9f725219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e329674-7fd7-478d-b107-3540ee475d2b",
        "cursor": {
          "ref": "ab151bc5-7c6e-4bc5-86b5-c3ad4ec345eb",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e6abd362-59a6-4619-a518-a0d913452e66"
        },
        "item": {
          "id": "9e329674-7fd7-478d-b107-3540ee475d2b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "17df504d-dfb6-43c7-b294-0f296c4f3f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6748f857-88c4-4629-a7ac-86b13369e3d4",
        "cursor": {
          "ref": "635a0138-0e92-44a4-8ff7-1201551c7317",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "83ad5d2b-9589-436c-8fcd-31ed2fc6db56"
        },
        "item": {
          "id": "6748f857-88c4-4629-a7ac-86b13369e3d4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f18b987f-d6d7-4a0e-b5c3-7f420bcbbbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c110bde-b1d9-439b-a84c-908a320e1701",
        "cursor": {
          "ref": "91962271-bd11-415a-9bb7-a7f3c5a6be18",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "66b81dcc-e1f3-4d08-805c-04a75263fcd7"
        },
        "item": {
          "id": "0c110bde-b1d9-439b-a84c-908a320e1701",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e2fa4aab-07de-4bfe-bcdd-e865b63077db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bb336f-bdca-4828-bb1e-c4dff5731b72",
        "cursor": {
          "ref": "6b7b5a3b-e4c3-4154-b830-0569631ba4b8",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a4c75d7e-abbc-4f0f-b61e-91773e9015f4"
        },
        "item": {
          "id": "d7bb336f-bdca-4828-bb1e-c4dff5731b72",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3133506e-4b08-4901-92e2-97cfcff177cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd8989c-4d35-4767-8a61-22f04c622a37",
        "cursor": {
          "ref": "13662ee4-972b-493b-a3f9-fcaef0b0cd69",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "48dca7fa-16fb-4957-b702-d92d77984d71"
        },
        "item": {
          "id": "7fd8989c-4d35-4767-8a61-22f04c622a37",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1b0da75e-83da-4203-a141-3ccadbe1c958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d17878-1eb6-4423-a1bc-974bd2e4f4de",
        "cursor": {
          "ref": "2b5c0668-b27d-4793-b44d-9664c6ac7c75",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0fab7d4e-1455-44a6-80e2-f61e395a529a"
        },
        "item": {
          "id": "73d17878-1eb6-4423-a1bc-974bd2e4f4de",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "10c175a6-6a93-4e13-a40b-13baaa630180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2212743d-950f-471a-a381-fe2df51240c9",
        "cursor": {
          "ref": "c43e8898-e999-4479-b590-2e6ab355b1e6",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f0aa4278-a41a-449c-9abd-8ec59d5d8b0a"
        },
        "item": {
          "id": "2212743d-950f-471a-a381-fe2df51240c9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "32c288d0-a801-4415-ad91-fedf44d39083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1ae2f1-0d99-4d63-bc66-3934a113aa45",
        "cursor": {
          "ref": "4a044c35-59de-42dc-a53e-430d2f56a5b7",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "158187dc-e1d4-4b24-9e92-311595bb8214"
        },
        "item": {
          "id": "9e1ae2f1-0d99-4d63-bc66-3934a113aa45",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0bf8b53f-ce66-4a4f-bf20-2553134ccee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3c3a9b-b545-4351-a47d-aca89226188e",
        "cursor": {
          "ref": "c3ca6d5c-e67a-4600-a972-784dd6c0efa0",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6abcfe2c-405b-45b2-b657-3190acc58420"
        },
        "item": {
          "id": "3f3c3a9b-b545-4351-a47d-aca89226188e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d1cb82ed-8fa6-4d78-bf12-27423c7f6ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544c6451-39f1-4772-9a0a-1270ec182fbe",
        "cursor": {
          "ref": "4c98af1b-f9e2-41bf-a63e-492365444a36",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bb9b6e9e-3648-4a5a-bd8d-f0f7093e3629"
        },
        "item": {
          "id": "544c6451-39f1-4772-9a0a-1270ec182fbe",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ef18780c-837a-4326-9fba-8b53c2e47326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78a9a1f-502b-48c4-87d8-05060c201788",
        "cursor": {
          "ref": "4f314b9b-56a1-48be-a607-2e6e2f2fb0a1",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "139dddfb-7ad9-4909-a0bd-05d0f27d2a4e"
        },
        "item": {
          "id": "d78a9a1f-502b-48c4-87d8-05060c201788",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "38efb389-e508-4693-8e18-5684e6d2ac63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03b7266-8485-4f49-85d6-ed53f3807384",
        "cursor": {
          "ref": "abf46892-ef53-4146-ba11-8e68ce51adf9",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "99ab3905-5950-4abd-8c80-26144ae6f3cd"
        },
        "item": {
          "id": "b03b7266-8485-4f49-85d6-ed53f3807384",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c5ca0ce9-01fe-4e8f-b6cf-451d52de1d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e80f784-13f3-46dc-af80-9c1432ff9bfc",
        "cursor": {
          "ref": "c8ec0471-3976-40ff-ae1b-79452d3cc930",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7d216484-d6bc-4466-9209-2c629f4dce3f"
        },
        "item": {
          "id": "0e80f784-13f3-46dc-af80-9c1432ff9bfc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9b1c4d98-f5a5-4a10-91d7-b50ab7f55a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b91f4d4-2a44-4834-83f9-32a87036a799",
        "cursor": {
          "ref": "1daede7b-6275-435b-8d15-6d737efc9e7b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ab5a2d08-a554-43a0-8b35-5b4f311c3de8"
        },
        "item": {
          "id": "8b91f4d4-2a44-4834-83f9-32a87036a799",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "237802fd-4f5d-4e06-b653-e5a7e6c2cbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af95515-8cd8-443e-be64-fd486c418c96",
        "cursor": {
          "ref": "4ea09b88-8b22-4379-8bc7-2edee51d27b9",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "28d19278-e9f1-4b8b-b518-07e88eb084ba"
        },
        "item": {
          "id": "2af95515-8cd8-443e-be64-fd486c418c96",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "22b85abe-28e9-4534-a3c0-ba4e13715bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc2023f-a6ae-4097-abc8-5040a8af11b2",
        "cursor": {
          "ref": "0b5016e4-5d2c-4ef8-a5b4-8e8c83b19ed2",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8cf6638a-731e-4105-981c-68b426df83ef"
        },
        "item": {
          "id": "3dc2023f-a6ae-4097-abc8-5040a8af11b2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "413879af-b9e6-46f2-a43d-4fcacd627518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbeb227-7e8c-4d77-86d6-8d4b80ce51bc",
        "cursor": {
          "ref": "ad366e8d-00db-418f-95b8-1235801d5bfa",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e562d37f-2b2f-4965-9472-a69ec751a40f"
        },
        "item": {
          "id": "ddbeb227-7e8c-4d77-86d6-8d4b80ce51bc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e4bac11f-2262-4481-932c-9a130bfda7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490bc91a-6184-4fa7-a32f-f816a8087273",
        "cursor": {
          "ref": "f1a8d7fe-cf8c-46a1-9009-fc5c25b75cbc",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3df040e7-ff38-4c5e-b9d7-6468fa904a20"
        },
        "item": {
          "id": "490bc91a-6184-4fa7-a32f-f816a8087273",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "88f8bf6a-088e-4f12-a221-3cdb38f01558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539f9dac-fad6-4001-a32b-d48614e0fb2b",
        "cursor": {
          "ref": "32c32c43-3048-42ff-b1c5-6ded75676dfd",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a0d68c6f-1a8c-43b4-bffd-2c5edf41393b"
        },
        "item": {
          "id": "539f9dac-fad6-4001-a32b-d48614e0fb2b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "70d75aa8-5a2a-44ac-b7a1-c30a8020fb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992c0534-3d13-427f-85fb-fdfc04694ba5",
        "cursor": {
          "ref": "fe7e538e-f707-4ee5-86bf-1ef0c3a697a2",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6cbcf41f-0316-44d2-8764-d3dfdd9b0bcd"
        },
        "item": {
          "id": "992c0534-3d13-427f-85fb-fdfc04694ba5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e89f687d-5a60-4fb8-9e6e-ac45bd98966a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 758,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a7c4ba-8fc0-4005-bdd7-7e723d234521",
        "cursor": {
          "ref": "38fe9220-88b4-4375-93dd-8f6768c5c0f2",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "75912efe-0eaf-438c-b597-ad2c4a3c95c0"
        },
        "item": {
          "id": "f6a7c4ba-8fc0-4005-bdd7-7e723d234521",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b2eda2f9-488e-4856-93dc-4d0173e749b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0494a7-496c-4404-9f2b-b8e0848777a5",
        "cursor": {
          "ref": "2a10e9b3-4c51-4caf-be93-8c01d861b7c9",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "695d3b53-83af-430c-bf91-9b3323057187"
        },
        "item": {
          "id": "8b0494a7-496c-4404-9f2b-b8e0848777a5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "31554382-898c-4ff3-8d10-d4dc0586e51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe011a79-7cfe-4b58-ba6f-c08b542ded7c",
        "cursor": {
          "ref": "f7b37d9f-d851-4098-983e-7fa8ffa7f9a9",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a834497b-48f1-401b-81b5-6a224882e6a0"
        },
        "item": {
          "id": "fe011a79-7cfe-4b58-ba6f-c08b542ded7c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f353d104-da3d-49db-9239-8dfa8c5e6c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb21639-bd66-49b0-9ebd-e8f512ce1e97",
        "cursor": {
          "ref": "f4373560-6238-4777-933a-ca6a08cae179",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e52ca8e9-8cae-49a0-b5cf-1ac2b60e9052"
        },
        "item": {
          "id": "aeb21639-bd66-49b0-9ebd-e8f512ce1e97",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4967a6cd-ce53-499b-8da2-94ae5f9574c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade7f96d-e746-4a08-82de-4d80dd451369",
        "cursor": {
          "ref": "692ff0ac-0d52-46c0-99a0-98a2b1b5f059",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ec558074-3bf6-428b-9f3d-bddb591be367"
        },
        "item": {
          "id": "ade7f96d-e746-4a08-82de-4d80dd451369",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a1616a95-e58e-4abb-b413-89e7420a01a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1083,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adddf8b9-a01f-4db4-ab88-5f701e1fc349",
        "cursor": {
          "ref": "1be43073-f2a3-433c-ac83-72de219c4606",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3e3eb4f6-dba1-4e4a-88da-66a086a55c48"
        },
        "item": {
          "id": "adddf8b9-a01f-4db4-ab88-5f701e1fc349",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c2ed215d-168f-48a7-a0e1-df98c117524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3e3f31-95ea-4d73-8642-6b807396e6a8",
        "cursor": {
          "ref": "59b9fd09-fbed-4340-9298-925df941b687",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "76b59793-6086-4406-96ab-013c01c109a4"
        },
        "item": {
          "id": "da3e3f31-95ea-4d73-8642-6b807396e6a8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c8fe15fe-1e2f-49a3-9cd7-79d83a6d9849",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 936,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ae1cad-4506-499d-ac81-5309d76cf93f",
        "cursor": {
          "ref": "af3524c3-0b42-4762-bde3-8ddd770a6847",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d7148fe6-e990-441b-b755-120196bed7b6"
        },
        "item": {
          "id": "47ae1cad-4506-499d-ac81-5309d76cf93f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "11cdfa47-aa55-42d7-876b-4e8ac7a5eeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c52fa6-869a-41a0-9097-7af89670a423",
        "cursor": {
          "ref": "efdd163c-203f-4850-8909-b83bd642a0eb",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "64af00d3-ae16-4fbe-b4f4-c85a1d06bbcb"
        },
        "item": {
          "id": "50c52fa6-869a-41a0-9097-7af89670a423",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dd0b0995-bbdd-414c-9479-389b8c4d4209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49edd6fc-ce6c-4a19-8d4d-1748c95f1d18",
        "cursor": {
          "ref": "3339e304-6c97-419f-ac96-983f752a03fb",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "aa94ec6e-2630-4f17-a490-c965d62ee9ca"
        },
        "item": {
          "id": "49edd6fc-ce6c-4a19-8d4d-1748c95f1d18",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8de7a61c-73b2-4cb6-9dc1-99cf72163dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1156,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b66dd18-0add-4ed5-80eb-309416b80cd9",
        "cursor": {
          "ref": "b2bd177d-b48e-4585-a210-496b1e9e5166",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "10497b44-b4da-4409-8561-9533b59f0519"
        },
        "item": {
          "id": "3b66dd18-0add-4ed5-80eb-309416b80cd9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "af44278e-e593-44f5-84cb-f9e7edca8a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548ea0c3-5071-4247-85de-3db6b8f6ec63",
        "cursor": {
          "ref": "746f38c9-6468-42db-9da0-d1b1ba577f51",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "74a073d0-38e9-4a22-8f1f-8d027f43be13"
        },
        "item": {
          "id": "548ea0c3-5071-4247-85de-3db6b8f6ec63",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "69a25e05-f38c-4f8d-b1aa-68378d0f6b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1040,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54516b74-2573-4637-9cd7-83cec9b13bfd",
        "cursor": {
          "ref": "f4b5d9d3-513d-4cdf-81d4-0916003b9bf0",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "92328f70-e6cd-471b-a452-b42341a5d679"
        },
        "item": {
          "id": "54516b74-2573-4637-9cd7-83cec9b13bfd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2d09a3d1-63f2-4abd-bf97-da02542e4f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b0dbe7-ec39-484b-ae05-4576b4d4673c",
        "cursor": {
          "ref": "25b820fe-c683-4ac3-af8e-7a815de4fd91",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ee56bd5f-c78a-4f83-9e1a-1793058ac87b"
        },
        "item": {
          "id": "52b0dbe7-ec39-484b-ae05-4576b4d4673c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6a38e214-e7a1-4b15-959f-c6c81cc9a8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad7bf62-d992-4aa3-806e-b74a3707ec5b",
        "cursor": {
          "ref": "3b8c0cfa-394d-4285-9437-0a367be89c27",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "82f40625-e465-462f-97a5-a6c73fdfab6f"
        },
        "item": {
          "id": "aad7bf62-d992-4aa3-806e-b74a3707ec5b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d51cf91b-846e-4162-8743-9ee8b1a7c139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac9193a-49c4-4ba4-b61d-e0782e883662",
        "cursor": {
          "ref": "631ba7f0-0086-4e9d-a31d-013f40a4f66d",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "106766ee-e042-4188-bfe1-4f9c6d83a039"
        },
        "item": {
          "id": "8ac9193a-49c4-4ba4-b61d-e0782e883662",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a5921d3c-7ec9-4844-8ebe-b33fb6e8c05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1920448-d84a-4964-8bb9-a9e76094a08f",
        "cursor": {
          "ref": "ac076a10-34bb-41d7-bd8a-bdb1f71831f0",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f2058751-9e6b-4aba-8b0f-5359f8095674"
        },
        "item": {
          "id": "b1920448-d84a-4964-8bb9-a9e76094a08f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "37dd2598-139b-4574-8dd4-05c468a33d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c74b0a9-f3a9-457f-ae3c-32d83525ff9e",
        "cursor": {
          "ref": "628f29fe-5c87-4170-be65-5414725e7b91",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2c81ce0b-d7de-4991-b102-dc1f87278afe"
        },
        "item": {
          "id": "8c74b0a9-f3a9-457f-ae3c-32d83525ff9e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "95f80f13-2bb0-4765-abe9-d930da794e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd62b7b7-bf92-4fac-ae48-6b0170d7048a",
        "cursor": {
          "ref": "cc86e6f5-f231-409d-aa0e-819abc721767",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "edc00a54-cdbe-455d-a03c-bba9c5cfd92a"
        },
        "item": {
          "id": "dd62b7b7-bf92-4fac-ae48-6b0170d7048a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5967e5f2-fec2-4948-8cf0-006804e7bd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b9ea28-e523-4632-9ede-96a401e1b1d4",
        "cursor": {
          "ref": "e241c45a-c1bb-4a64-a8c7-e5e8a105a95b",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8c408764-8ae8-4412-8a0d-dd7d3fde8d73"
        },
        "item": {
          "id": "90b9ea28-e523-4632-9ede-96a401e1b1d4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6bea4a9a-22bc-4456-82d2-a7316e67c18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1438039-5eb8-4598-a0ea-12f19b61068d",
        "cursor": {
          "ref": "270e7804-33a3-4b1d-9eb2-11fdf6687131",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f1b5e910-7795-4ca9-8995-11d064ce651d"
        },
        "item": {
          "id": "f1438039-5eb8-4598-a0ea-12f19b61068d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0d918356-46de-4470-9679-6f0e9e1a05a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3413d1-6566-4b43-bd5a-67757255d96e",
        "cursor": {
          "ref": "05bf80dd-2c47-4bff-8a38-b9529fc2eb00",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "86ab08c7-9520-4fff-80e2-c813def5dc0a"
        },
        "item": {
          "id": "be3413d1-6566-4b43-bd5a-67757255d96e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3500444f-ad0e-4213-80ae-df2db60c302a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f712bd32-4e41-40bf-bca7-be1ba34fd085",
        "cursor": {
          "ref": "5d1003b8-d8b9-43aa-b7bb-09ba185fb8ce",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e8d8d229-a8a4-4cfa-8fce-53e70659865e"
        },
        "item": {
          "id": "f712bd32-4e41-40bf-bca7-be1ba34fd085",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "86e524ae-fd82-4216-8fa9-66983a3f5257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e8d8ed-7153-4197-a6f2-90109ef024fd",
        "cursor": {
          "ref": "3d5921b7-9746-4c29-9dbb-cd64b2263d0e",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "faab5b84-bbc8-4785-82fb-4bd1154c3b51"
        },
        "item": {
          "id": "b1e8d8ed-7153-4197-a6f2-90109ef024fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1a070bbc-dc38-4f05-8e79-182d36edcd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df36718a-26d3-4b34-8779-b6b4db33925d",
        "cursor": {
          "ref": "6744e73b-d98c-4e16-851b-49617c68bd32",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4a2d593c-c831-4063-9ffa-0d9b30dd6577"
        },
        "item": {
          "id": "df36718a-26d3-4b34-8779-b6b4db33925d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a8e49fe3-8927-42a8-bf37-a3c57ce02504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f813303d-932a-4c77-bac9-279df944b381",
        "cursor": {
          "ref": "50372222-9bf7-48db-84a1-71213e439b71",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e342ba4c-7818-44c1-9daa-868ac6d91324"
        },
        "item": {
          "id": "f813303d-932a-4c77-bac9-279df944b381",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a6de1400-496a-48ba-af14-46ea23142d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ae6fac-e03b-4452-82e4-c4c55ae4a23b",
        "cursor": {
          "ref": "341faab2-e772-4d65-9680-db2ffaf703db",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2816b18e-8390-4008-836d-c40349306937"
        },
        "item": {
          "id": "a5ae6fac-e03b-4452-82e4-c4c55ae4a23b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "37c93a70-8f58-4fa8-b442-f7457b95b1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5b8b1f-4b6c-4f57-9313-a35c3d52b4e8",
        "cursor": {
          "ref": "8f4bf790-cd96-4016-9720-b230f4b15a74",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e15e8d0d-ee7a-436c-8638-6c4128c97f6e"
        },
        "item": {
          "id": "5c5b8b1f-4b6c-4f57-9313-a35c3d52b4e8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "71170d0c-01de-45bc-b2b7-a3ce150b8caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6141004-e8a9-4f73-ae42-9536a77113d8",
        "cursor": {
          "ref": "f9851763-8978-4d5f-9658-9fbc8ef8ec71",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3b44bc6a-0e58-4e9a-beca-24e43f2882ce"
        },
        "item": {
          "id": "e6141004-e8a9-4f73-ae42-9536a77113d8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "adb75d2f-c8d7-4ac5-b2d2-7451df99c807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788c10d2-f5c9-4782-9e9a-467aff749d4b",
        "cursor": {
          "ref": "d477ff33-e7a0-4e3a-856d-9771335fa810",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "382a265e-58fd-4c9a-92a9-8913b66fdb8c"
        },
        "item": {
          "id": "788c10d2-f5c9-4782-9e9a-467aff749d4b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "05ba536e-0399-41b8-888d-a2c23d12addf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a19ef2c-ed22-4443-a189-d12a883a22a7",
        "cursor": {
          "ref": "24ad5f5e-f478-4dd0-b340-9cfa7c5e603d",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3d047acc-4489-4d44-87b9-a3acc3653c39"
        },
        "item": {
          "id": "0a19ef2c-ed22-4443-a189-d12a883a22a7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7f3bff2b-af3f-4070-964f-4dd62dbdf9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f70198-fb6f-4a71-9107-5751bd6f32b2",
        "cursor": {
          "ref": "443fbf7b-7e6f-439b-9f3c-77c230fc5996",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "86f8397b-d702-4f88-bf13-89ce9c13627f"
        },
        "item": {
          "id": "a9f70198-fb6f-4a71-9107-5751bd6f32b2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a4057249-9d73-496e-bb4d-329994ea59b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c05844-0a78-4c78-af97-687b5e5776c5",
        "cursor": {
          "ref": "6f3893ae-6c69-475d-8c44-fa9c7b12ee92",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9fc74af1-c124-490e-9c3e-788ff1f70299"
        },
        "item": {
          "id": "20c05844-0a78-4c78-af97-687b5e5776c5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "42344564-deae-44e9-b990-b91200aebc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625e5d33-eae7-4aef-ad59-498d3d0493b5",
        "cursor": {
          "ref": "9afd9d8b-bc9a-4431-bd4a-837954a80453",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4378be12-ec5e-42ea-8a15-ba78b1c02803"
        },
        "item": {
          "id": "625e5d33-eae7-4aef-ad59-498d3d0493b5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a5efc1a0-e98b-4ea7-a6ce-dc5d2b812940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5aad54-3d72-454b-9664-edec85bd5b19",
        "cursor": {
          "ref": "2b407bbb-4402-4a6c-a582-b747843a5826",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "25ad125f-5345-4f3c-b133-1b1be0108266"
        },
        "item": {
          "id": "9f5aad54-3d72-454b-9664-edec85bd5b19",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "18d23f2d-ad12-4087-a20a-d5bd23596ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180af5f2-ca2a-47bd-85d8-7ecd420acd98",
        "cursor": {
          "ref": "6ca3368c-905c-460d-8156-f4673725b346",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2cbe9582-c498-4edd-9ad4-2c29be9a5c87"
        },
        "item": {
          "id": "180af5f2-ca2a-47bd-85d8-7ecd420acd98",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "08bb9ea9-c1bb-493f-ab5a-a668775f4995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dcfb5b-5041-439e-9c11-4be0082635dd",
        "cursor": {
          "ref": "a8f4889a-0612-44a7-b341-d3cc2b130893",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d57bca24-d039-4f35-977e-dd36b69040fa"
        },
        "item": {
          "id": "39dcfb5b-5041-439e-9c11-4be0082635dd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "991b1669-e344-4809-9538-fd1ac34cf9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32569aff-8068-4377-ae38-b30d134b18f6",
        "cursor": {
          "ref": "677517b7-4b47-4d6a-9816-3f8ba8080989",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c1389111-928b-40e9-827e-9dd023202856"
        },
        "item": {
          "id": "32569aff-8068-4377-ae38-b30d134b18f6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e5500529-844d-44fa-b40c-cc664f4e5736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b814a3-d5eb-44b2-8382-ed4e405d0913",
        "cursor": {
          "ref": "676bd446-9a91-439f-a20d-1f5d990ee4cf",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9be94e47-9b10-44a9-bcc5-c89602ce6b2d"
        },
        "item": {
          "id": "f8b814a3-d5eb-44b2-8382-ed4e405d0913",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b8f7f887-678e-48be-ae06-db942c412211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd5e986-d608-4798-ad80-84fe94698924",
        "cursor": {
          "ref": "8d01bcf6-c20b-453c-90be-e79521b35953",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6bf4e913-5b7a-44cb-b542-cea2e67cb089"
        },
        "item": {
          "id": "edd5e986-d608-4798-ad80-84fe94698924",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "14917591-bef1-4ca9-b56c-c6f6cec2fac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9d7c72-838e-4945-b87a-e9d5ed4c5e56",
        "cursor": {
          "ref": "d3db5d9b-2e8f-48cb-9fd6-667e48a0aad5",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6267361f-ee1f-4b09-a55e-4fb3ebf670f9"
        },
        "item": {
          "id": "af9d7c72-838e-4945-b87a-e9d5ed4c5e56",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "54651810-918c-4b0e-9e38-3fa0138418bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b5777c-a126-4afd-8654-91100c80c914",
        "cursor": {
          "ref": "d5a40660-914e-4cbe-a1a8-d7ae466aa77f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b7e29936-a78e-4d0f-8c04-d4f01babfa50"
        },
        "item": {
          "id": "d1b5777c-a126-4afd-8654-91100c80c914",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a0c3f42f-ca02-43d6-9267-de57e36fd874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fcea0c-e9e9-46c5-b80f-17cfa2703588",
        "cursor": {
          "ref": "0322c8f5-1dd4-4321-98a9-69a2918d61bb",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fb874e6f-9d1a-4a25-aff2-10ffbc71feb9"
        },
        "item": {
          "id": "16fcea0c-e9e9-46c5-b80f-17cfa2703588",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "18cf70a4-9bd2-4c80-95c2-3de625968485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1965,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f332e89-b378-4ebf-b5d3-9115914045eb",
        "cursor": {
          "ref": "13bee32c-eaae-495a-9c41-a70f0682b2ff",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9e5b67bb-dbe0-43ff-802d-a10f45336d3b"
        },
        "item": {
          "id": "4f332e89-b378-4ebf-b5d3-9115914045eb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "03ffa97e-9dc0-4ea7-aed0-b1d5cb12209a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1429,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578b38a0-b5a5-4561-b3b3-fdb659b20a44",
        "cursor": {
          "ref": "6ec80084-8c82-4847-af3a-0f9584135508",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a49df278-64e9-4b6a-b6e3-809d5b1a2d1f"
        },
        "item": {
          "id": "578b38a0-b5a5-4561-b3b3-fdb659b20a44",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "33b4789b-f8be-40a9-bb1b-802f9f799cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1545,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64148b0-3d59-4115-84e9-acfa98042e8c",
        "cursor": {
          "ref": "8f2e72c2-a0ae-438b-9ac6-5b9d39ad9689",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2b2acef6-b692-4b4f-95f6-237012cd3149"
        },
        "item": {
          "id": "b64148b0-3d59-4115-84e9-acfa98042e8c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ab1d16a2-2541-4ff4-8c66-6e7b89fc12ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1123,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b285c754-550d-44fc-a726-13006b4ccc9d",
        "cursor": {
          "ref": "d48d022b-50e7-4415-a9dd-e8f1edcf16c1",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "044d93d8-88ed-466b-ad24-e65581f6f3d4"
        },
        "item": {
          "id": "b285c754-550d-44fc-a726-13006b4ccc9d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1b3c9210-c8d5-4867-bb0c-09103503d744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288f132c-bea9-4727-af55-fba88d380c2f",
        "cursor": {
          "ref": "bf06f4de-eef4-4d8f-a05b-3484ab7fdd90",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "260257c6-be99-4920-84b1-7b506d79b3cd"
        },
        "item": {
          "id": "288f132c-bea9-4727-af55-fba88d380c2f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "30566a8c-8b25-4ae5-8346-9b4752e7a8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b65df7a-eb39-479f-ba1c-3fa2603d8302",
        "cursor": {
          "ref": "85c7993d-f0f0-4c25-b104-c3e6c11521e9",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e64de249-4842-4954-950b-d95980f311c2"
        },
        "item": {
          "id": "3b65df7a-eb39-479f-ba1c-3fa2603d8302",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b2071384-68ab-4826-8fc1-9b9c7150bb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f917636f-6c21-4858-b31e-4ad9a3db4761",
        "cursor": {
          "ref": "bb49b72f-8e92-43c7-bec7-324f9f221ebe",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5384c6e3-ea49-499b-b12c-ce68aa3ddbf8"
        },
        "item": {
          "id": "f917636f-6c21-4858-b31e-4ad9a3db4761",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "174409ad-ef22-41d1-90da-3d2596478e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aaa6a9-4828-4c0d-b030-aeda513a43a5",
        "cursor": {
          "ref": "1c5164ae-f4f4-40f6-941f-66767cdf14b8",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1974a3da-7387-40bc-b918-7d9840d854ec"
        },
        "item": {
          "id": "45aaa6a9-4828-4c0d-b030-aeda513a43a5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "543a6bbc-fcc7-44ad-80c1-d30bb9402063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7c74d1-986e-4161-9864-4aed72de2606",
        "cursor": {
          "ref": "f8ff8d87-edec-4fff-9161-6a924d758da7",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1c42f06e-44aa-4de3-9ace-3594db4cb228"
        },
        "item": {
          "id": "6b7c74d1-986e-4161-9864-4aed72de2606",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f71c9bd9-e7cf-45fe-9ce4-0c9256cd5eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbb36dc-e7bb-468b-a32f-210b117f60b1",
        "cursor": {
          "ref": "be199f25-dc6e-4f6e-b3e6-da28be606a2c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4f19db0f-e605-41ab-901c-0198fbe8df6d"
        },
        "item": {
          "id": "2cbb36dc-e7bb-468b-a32f-210b117f60b1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "11151cf2-2a86-421d-8e24-fd8f857f9a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79819c8-bd55-4dca-bb62-ebe516e7bcc1",
        "cursor": {
          "ref": "c63d7904-6454-4069-95dd-9fdd55891dd7",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "68099784-2fed-44f1-a609-e8fd1e5798a3"
        },
        "item": {
          "id": "a79819c8-bd55-4dca-bb62-ebe516e7bcc1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3524dab5-eea3-43c0-a93d-971bff2f6565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dd1be3-32c8-4eff-976a-58f5fd7a6a5c",
        "cursor": {
          "ref": "097f13aa-9ca5-452d-94cc-ddf7831b1c1d",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "370e26e0-38dd-4f65-a313-e8030467aa6d"
        },
        "item": {
          "id": "59dd1be3-32c8-4eff-976a-58f5fd7a6a5c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3b7b18ca-5905-438f-b75a-fc4f88c80eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014028c9-5537-4df5-b913-18c4b9ccdf90",
        "cursor": {
          "ref": "b149144d-3c97-4c20-9256-8c4b8f42efe0",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "77538d37-572c-4545-b033-643f5c20568f"
        },
        "item": {
          "id": "014028c9-5537-4df5-b913-18c4b9ccdf90",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c3cb9844-847d-4c15-86b0-435f038b4af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1ce7a9-a7d2-4514-8b8f-a5f4cd601d64",
        "cursor": {
          "ref": "b1a8f2c2-5f4c-462c-972e-e136ef2b6557",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f530cbba-1e7b-4206-9625-40cd5e908667"
        },
        "item": {
          "id": "2c1ce7a9-a7d2-4514-8b8f-a5f4cd601d64",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e6025a4c-887d-4b64-905c-25aec3aa226e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b11139a-67cb-4686-afd5-56531e0183ea",
        "cursor": {
          "ref": "5cfa1d5d-f906-4ce1-88b3-e87b91e9a244",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eea77a6b-3cc1-4bc7-8540-ded3b7f67c8f"
        },
        "item": {
          "id": "6b11139a-67cb-4686-afd5-56531e0183ea",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "ba260ff4-b371-42d4-a621-2d145d412262",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 642,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af857d54-64ae-4e1d-8297-53106f693076",
        "cursor": {
          "ref": "118a3e21-b941-45d3-b457-e275744aa3f3",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ef8f14bb-042e-4908-9819-7a51ecf7a5dd"
        },
        "item": {
          "id": "af857d54-64ae-4e1d-8297-53106f693076",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c036c507-32d6-42a5-8081-21fd7dd7928b",
          "status": "Created",
          "code": 201,
          "responseTime": 4983,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3408398-b837-447b-beff-47b9cb012f2e",
        "cursor": {
          "ref": "f108a256-79fc-47b1-bbde-abd8b90890ad",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e32f7491-b47c-4021-ae77-a19a8aebc0c5"
        },
        "item": {
          "id": "f3408398-b837-447b-beff-47b9cb012f2e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3493f389-e7bd-45bb-9395-ed6dc2976d63",
          "status": "Created",
          "code": 201,
          "responseTime": 4748,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4011471-9493-4c42-af1e-e31f77187a91",
        "cursor": {
          "ref": "5079c30e-d394-4a9d-8eec-4f5ce2b81309",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e98335a1-a495-4276-a718-70555760f1c2"
        },
        "item": {
          "id": "d4011471-9493-4c42-af1e-e31f77187a91",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f2fdd4e5-0da6-4cd0-a92a-30be054c53af",
          "status": "Created",
          "code": 201,
          "responseTime": 5547,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af64828-a0d1-4cf4-a37e-8271e3eca04d",
        "cursor": {
          "ref": "36500a76-d683-43fd-a600-f62dc2d0c289",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2445a9c2-ce5e-43cd-a4ec-f1e019d6d7ef"
        },
        "item": {
          "id": "2af64828-a0d1-4cf4-a37e-8271e3eca04d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1c128f9c-3ccd-47fa-ad9d-e12b77ddcb52",
          "status": "Created",
          "code": 201,
          "responseTime": 6082,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3082a3b-02bb-437a-8a78-908df2934bb2",
        "cursor": {
          "ref": "f17d252b-f2fc-4563-b8f1-f97c92dac5b7",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5503a146-d68c-48ca-91b0-38f2ce3bb2a9"
        },
        "item": {
          "id": "f3082a3b-02bb-437a-8a78-908df2934bb2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8d93eb8c-78f5-4370-ac86-f109986a8b5a",
          "status": "Created",
          "code": 201,
          "responseTime": 4795,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a9f006-0a60-44a3-9c17-41d4197e96f0",
        "cursor": {
          "ref": "88e31ad9-655e-4ad2-b537-388f0ab0a92f",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1817e811-44cc-478c-b6f6-6cce39030852"
        },
        "item": {
          "id": "55a9f006-0a60-44a3-9c17-41d4197e96f0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "748fd732-6f38-4a74-b80e-cd701704de88",
          "status": "Created",
          "code": 201,
          "responseTime": 6363,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a426882-455f-4bc4-962c-8640f690b847",
        "cursor": {
          "ref": "da34c3fe-eb9d-426f-96f1-986c4908713f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fda040f6-fd61-49f0-bd30-1796c07a6774"
        },
        "item": {
          "id": "0a426882-455f-4bc4-962c-8640f690b847",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e73dd4d3-15ce-4314-bf16-4d63ef850029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1148,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a426882-455f-4bc4-962c-8640f690b847",
        "cursor": {
          "ref": "da34c3fe-eb9d-426f-96f1-986c4908713f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fda040f6-fd61-49f0-bd30-1796c07a6774"
        },
        "item": {
          "id": "0a426882-455f-4bc4-962c-8640f690b847",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e73dd4d3-15ce-4314-bf16-4d63ef850029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1148,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a48eba-8fbc-486e-bc54-d5e3549dcb3c",
        "cursor": {
          "ref": "90b71a71-d7f3-4a16-87ee-e09b68c70b94",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ffad48a6-e532-4a7e-85c5-4447287b0fb5"
        },
        "item": {
          "id": "01a48eba-8fbc-486e-bc54-d5e3549dcb3c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a2f729af-5f41-4b96-b145-a272240889b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1038,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10bb194-f191-4374-a506-6f811bcf29a1",
        "cursor": {
          "ref": "8674333e-5a24-490d-aabb-6da308e6d71d",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "372aeb72-b471-401b-81ab-142fdb484fb5"
        },
        "item": {
          "id": "e10bb194-f191-4374-a506-6f811bcf29a1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "95810f0e-10b8-4fab-b79e-6bb4803b6161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7431de-c413-404f-a248-4aafa29ada6d",
        "cursor": {
          "ref": "c538e3ac-11a7-4caf-a7c0-90ff97090b5e",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "397a594f-ea25-4a52-a328-3a53c9f74e61"
        },
        "item": {
          "id": "8a7431de-c413-404f-a248-4aafa29ada6d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "10cb3792-0f6b-47df-bb5c-a8f36e211187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9d36fc-3f66-4063-86e2-4044a07f9b2e",
        "cursor": {
          "ref": "189a97ac-3c91-4f6b-b20c-40bf632b608f",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4794a43a-73d6-4cdf-bfb9-28402f4a23ca"
        },
        "item": {
          "id": "0c9d36fc-3f66-4063-86e2-4044a07f9b2e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e8fa26d3-0e8b-41dd-b7f6-8a4e274cb92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a26277f-5767-4bf3-94bf-b50f2f4a9a42",
        "cursor": {
          "ref": "af186315-9f2d-447d-bf4f-07a3a11c7cf9",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aaabb139-5b22-4aea-8b8d-d7aac28453e8"
        },
        "item": {
          "id": "3a26277f-5767-4bf3-94bf-b50f2f4a9a42",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "842b8fe2-ce37-4812-97f6-45559f89e0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c9ebe0-375e-4324-8d94-2a59418645c1",
        "cursor": {
          "ref": "3d216637-bb72-4ced-9373-3738e9b1bf16",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "df406ec3-0b5d-415b-ae69-110209843547"
        },
        "item": {
          "id": "93c9ebe0-375e-4324-8d94-2a59418645c1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "83da77a5-1756-4b77-ba63-4307013b4b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051a8ca7-b4f1-477b-a533-49adcbe42e5a",
        "cursor": {
          "ref": "190250dc-92fc-468c-ab2f-1b49ba5275d3",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b98541b6-c21c-49c4-99ae-52b54f2f8bf6"
        },
        "item": {
          "id": "051a8ca7-b4f1-477b-a533-49adcbe42e5a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "57eb42cc-8558-4151-a693-47ac6994b7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08044a52-508d-4cc9-9b2f-9d4bac58f45a",
        "cursor": {
          "ref": "a9206411-4586-4ca8-9944-91f5e7f39676",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3366dd03-d6d5-426b-afc2-4c252a2c15d7"
        },
        "item": {
          "id": "08044a52-508d-4cc9-9b2f-9d4bac58f45a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5dd89a7e-e90f-4e12-98fe-5a241582362f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626b8cb9-54d3-4de8-85c5-c9921abe8d86",
        "cursor": {
          "ref": "4f81a59e-5268-459f-b6c6-2870267734b5",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f76c15c4-3f58-4efc-aad3-6b095cde88d6"
        },
        "item": {
          "id": "626b8cb9-54d3-4de8-85c5-c9921abe8d86",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "70d0fd78-6209-48da-96ec-3796c3cfd28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c049cfa-6642-4efe-a28a-8cda6c1d22e6",
        "cursor": {
          "ref": "00fb55e2-6761-49e9-b1d8-589e53545746",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a4c7e031-b255-4d53-8ffd-2a1145d401d2"
        },
        "item": {
          "id": "7c049cfa-6642-4efe-a28a-8cda6c1d22e6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "46ea4b63-fba4-4bf3-88b8-06f1b1147d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac65de78-ec15-42d7-946a-6ce62295f9a7",
        "cursor": {
          "ref": "5d0ab499-c7dc-4d50-800a-d85b2d26ced4",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "95878310-2d40-4d8f-b823-d59af317f628"
        },
        "item": {
          "id": "ac65de78-ec15-42d7-946a-6ce62295f9a7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c9cc2076-a067-417b-a5f5-794b222b97c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068f5998-6e85-4817-bedb-d57f175631dc",
        "cursor": {
          "ref": "87b31f1f-612b-4fa1-9ec8-2bc86f5d48f1",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ada6cd9b-072c-4ebd-8a78-96d5090009c2"
        },
        "item": {
          "id": "068f5998-6e85-4817-bedb-d57f175631dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d3e991e6-b653-4395-9d83-33dc4589a40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1107615b-a4ec-42f3-8fe7-a10c9f279daf",
        "cursor": {
          "ref": "916e6ea2-3d0d-4d7a-9bfa-262cdc8dcc62",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d76baa2c-35c4-4ce7-951c-cabf344cd094"
        },
        "item": {
          "id": "1107615b-a4ec-42f3-8fe7-a10c9f279daf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3b9eab45-12a9-47fe-acbd-ac20ebd5b562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51743eeb-83c5-4b64-9d22-a7f95d1f7c50",
        "cursor": {
          "ref": "3a5840ec-65c2-4059-9e29-bd41eecca56b",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1ba01bd5-ffaa-4bfa-a6c4-afaa38a49f90"
        },
        "item": {
          "id": "51743eeb-83c5-4b64-9d22-a7f95d1f7c50",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "95e75354-5c66-43bb-80b9-755249008a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7349305-ed24-4bcf-bc03-82295f93ce33",
        "cursor": {
          "ref": "29eee61f-d83f-4ccb-b0bf-b6fe71190e86",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0f07e154-4980-43fb-bedb-e220c038ec58"
        },
        "item": {
          "id": "d7349305-ed24-4bcf-bc03-82295f93ce33",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4c05c646-0a39-4ed8-8a12-3f83bdcae0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9219a64-39cc-40f6-af4c-dd5055bedb1e",
        "cursor": {
          "ref": "0cb37a75-398a-49f5-a4f4-4b7e86df849d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "20581c6d-9841-4d70-b4a4-c3723f5ed9d4"
        },
        "item": {
          "id": "d9219a64-39cc-40f6-af4c-dd5055bedb1e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1cc6d900-5080-4e34-abac-7c18d39359fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80da4457-2c98-4c98-abbb-fbc06a3802f8",
        "cursor": {
          "ref": "701626f9-29c8-4b7a-a72d-715c50f887e4",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ef214e46-7dd7-4792-96da-fb8ff39ab88d"
        },
        "item": {
          "id": "80da4457-2c98-4c98-abbb-fbc06a3802f8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "39251e1c-a99f-41ea-92fb-570a191a2f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe8f1cb-2f7b-46f1-a51f-874320a0abac",
        "cursor": {
          "ref": "a5e2f2a6-2a5c-4ea3-8a17-50cec9602f6a",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "654db383-a527-4a81-9753-b8d4f9dd9115"
        },
        "item": {
          "id": "bbe8f1cb-2f7b-46f1-a51f-874320a0abac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4aa7dede-8a35-468b-a5a3-f53be433e7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1dd099-0278-46b7-9393-f5e548cddc2a",
        "cursor": {
          "ref": "c24b583f-2f13-4b22-93ee-3d0b2fe916c8",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "042cbdc0-0c38-4065-96fe-97e07b5c727d"
        },
        "item": {
          "id": "1f1dd099-0278-46b7-9393-f5e548cddc2a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d8e6f3a0-e3c2-4d1b-a536-48e89b79726b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf90bd27-169b-4094-a7be-0605f417730b",
        "cursor": {
          "ref": "61dd2af9-6a52-4129-98fc-e27176b390fb",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2116117b-89e6-41b9-ab2f-aa8cec483b4a"
        },
        "item": {
          "id": "bf90bd27-169b-4094-a7be-0605f417730b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "77d2c1e0-9ce4-4559-91ff-99deada0fd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2195ec-e618-43c2-9c5b-0c5eb565ab11",
        "cursor": {
          "ref": "5e8ea721-ad32-4c28-b87f-3d4c975b79cc",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "556c9d7d-11c7-422a-a869-2f617c491fd9"
        },
        "item": {
          "id": "9a2195ec-e618-43c2-9c5b-0c5eb565ab11",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "97ecdecd-2965-4015-bed7-9aa2beca03a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38af4008-deee-4b65-ba3d-5262ba67fd89",
        "cursor": {
          "ref": "e896e026-c3e7-49f4-8f89-2a76cb606633",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2ea57647-ec32-44b1-b2ec-1e640e128877"
        },
        "item": {
          "id": "38af4008-deee-4b65-ba3d-5262ba67fd89",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1df36ec4-1d0f-4f06-9745-54067b7ac75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f502231-637f-4070-9840-94819e2658b4",
        "cursor": {
          "ref": "f5e10880-5b9d-480f-b6a5-588172c90f6c",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6b462597-f636-442e-86c1-11d3b80c69bf"
        },
        "item": {
          "id": "3f502231-637f-4070-9840-94819e2658b4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "94cb147e-1f15-4c84-bee6-d0a89aa6bdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6a9722-6cd7-46e6-a110-bba456542c42",
        "cursor": {
          "ref": "032f5131-5d6a-4ced-b8ea-1483211d62f5",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a5c9159d-ce49-4894-814e-86fc12bb17ed"
        },
        "item": {
          "id": "3e6a9722-6cd7-46e6-a110-bba456542c42",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2407d179-8411-49fa-a79d-267b03aca540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd86b0c8-ad7b-4d36-8b21-0f5ef0d78b93",
        "cursor": {
          "ref": "d665d911-3205-4dbf-ad5c-3330f286af2a",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d3214c61-0989-4b74-adbf-7b0b0b9ec095"
        },
        "item": {
          "id": "bd86b0c8-ad7b-4d36-8b21-0f5ef0d78b93",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "22396cae-0a84-4392-846e-14bdd1ff043e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6676ac-b979-4804-af47-78bd178182b0",
        "cursor": {
          "ref": "50fd8b46-0d6a-4ef3-8bc7-e5ab86f0110c",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7f14fd78-adde-4b44-acef-bf4b2dec4856"
        },
        "item": {
          "id": "6b6676ac-b979-4804-af47-78bd178182b0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "38962b79-e357-4562-b6ca-384898c714de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76318b74-ca7b-4a38-a069-b1c7192ebdba",
        "cursor": {
          "ref": "cc9630fb-00b6-4923-bf7a-19a54bb8a8a9",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6b77674c-e2e3-43e3-aea9-ad6840e7c1c1"
        },
        "item": {
          "id": "76318b74-ca7b-4a38-a069-b1c7192ebdba",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c3951488-418d-449c-8b30-14671a81d3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2c37e7-4a82-44a2-bffa-7258f21f7de7",
        "cursor": {
          "ref": "e9405c1f-3157-4a3f-b2f5-aa0736ed08ac",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0973d027-52f7-4e1d-bca5-e4bb5b53a9ef"
        },
        "item": {
          "id": "bc2c37e7-4a82-44a2-bffa-7258f21f7de7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5676e336-ca81-40f9-b581-fcab839ace61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4454ed26-89a8-4eba-865a-3b0dfa64188e",
        "cursor": {
          "ref": "087c99dd-129e-4b8b-9294-05e2cc577561",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e7802664-5e19-413d-b490-25a593c66b7f"
        },
        "item": {
          "id": "4454ed26-89a8-4eba-865a-3b0dfa64188e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fd470f0b-9a13-4b07-9775-546be07bde87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a0963f-93cd-4f44-927c-a3d7f7439738",
        "cursor": {
          "ref": "66d535d9-91cc-4255-acc8-7d92cb6c90fd",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0f52e8a8-ff7b-46ef-88bf-d194138d20ff"
        },
        "item": {
          "id": "90a0963f-93cd-4f44-927c-a3d7f7439738",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d0489b7-82b3-405f-a1ef-20489878b5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed2627b-78c9-44ef-baa0-39f48661fc43",
        "cursor": {
          "ref": "f831a375-d875-4a51-924f-39183d779449",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "32af44ff-441b-4d1b-954b-ff57a4b53a40"
        },
        "item": {
          "id": "4ed2627b-78c9-44ef-baa0-39f48661fc43",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a94fd429-bb98-45f1-8440-d7cb6fc4d4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f57b6f1-a4e4-4be2-ba6c-2db74424cd2c",
        "cursor": {
          "ref": "f651269e-09c9-4a42-901f-d8131b8e3438",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4ab0c7a6-8fb5-40d9-b2a9-d03668816b95"
        },
        "item": {
          "id": "5f57b6f1-a4e4-4be2-ba6c-2db74424cd2c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "050d93b4-3054-41e6-8e00-34ffef6fae44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac24a7c9-1b58-42ac-b2f6-9b7d62e9fc3c",
        "cursor": {
          "ref": "4a765dff-4404-45b4-8d50-18c6a78da377",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d39f49db-6bd4-405e-9db0-2802ada98976"
        },
        "item": {
          "id": "ac24a7c9-1b58-42ac-b2f6-9b7d62e9fc3c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "82fb8101-a0b0-4b52-936d-7f0fc86839ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 669,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e917515-bf3a-45a0-a45d-1f0a46fe6835",
        "cursor": {
          "ref": "55037437-9bcc-4255-8e00-30e17ad86f69",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d7541ba2-1c64-4701-8b14-d161b079ab3d"
        },
        "item": {
          "id": "5e917515-bf3a-45a0-a45d-1f0a46fe6835",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b0522d54-c8bd-4107-89fa-ce95794631cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e917515-bf3a-45a0-a45d-1f0a46fe6835",
        "cursor": {
          "ref": "55037437-9bcc-4255-8e00-30e17ad86f69",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d7541ba2-1c64-4701-8b14-d161b079ab3d"
        },
        "item": {
          "id": "5e917515-bf3a-45a0-a45d-1f0a46fe6835",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b0522d54-c8bd-4107-89fa-ce95794631cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83e12dc-d75d-4f3a-8700-3ff38ec740b3",
        "cursor": {
          "ref": "9dd60460-8a86-475b-bac3-a2e97c04a31b",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a8732f7a-0dbb-4b38-b8f8-06b75aff35b5"
        },
        "item": {
          "id": "c83e12dc-d75d-4f3a-8700-3ff38ec740b3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4acec04b-d5bd-41bb-bd8b-318a47c31a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94350685-2696-4851-9fe9-b653b244fb2b",
        "cursor": {
          "ref": "493fdbe7-fa43-4a4c-9ada-28e90ffd266b",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7a67af01-7313-4cec-b9e3-d988fc276600"
        },
        "item": {
          "id": "94350685-2696-4851-9fe9-b653b244fb2b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "701c0ecc-7c17-485a-ba3f-a7a8684fea9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdd94e8-be27-4299-b59b-28e2768fb100",
        "cursor": {
          "ref": "b7f15f0b-189f-46a6-9196-76dff9666d57",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6777f4a8-4e39-4ff9-9579-e41c8f1d7a27"
        },
        "item": {
          "id": "7cdd94e8-be27-4299-b59b-28e2768fb100",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "596904f2-fb92-4383-bece-8d911f9b45ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d0880e-fc74-4780-b98f-6e61fef83c0b",
        "cursor": {
          "ref": "02d24dae-39db-4df5-af2a-07f1b76a518e",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ba546db2-3c5e-4ddf-a669-4287f95d5ad9"
        },
        "item": {
          "id": "c3d0880e-fc74-4780-b98f-6e61fef83c0b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7ae9c90c-6310-457c-9cff-99a08457f689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5d69b4-ef29-4e96-b31c-88b356d47ba3",
        "cursor": {
          "ref": "0fc1018e-2de3-47b1-8412-a0eec1f8c616",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "78de2370-75c3-4712-8176-f051cf72dc5a"
        },
        "item": {
          "id": "2e5d69b4-ef29-4e96-b31c-88b356d47ba3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8eaf14b8-eb9a-4849-b475-d0fb478d65a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41839798-e3b5-4daa-88e0-b93ee75f8b9d",
        "cursor": {
          "ref": "3a99e7c2-5017-4b55-b1b2-fab39659cd66",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cace130c-9253-4c86-8916-d12470b73340"
        },
        "item": {
          "id": "41839798-e3b5-4daa-88e0-b93ee75f8b9d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "da9bd0ae-108d-46e5-b6d7-c27ad87f8317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e01206c-0acc-44dc-8983-1f55a0e46146",
        "cursor": {
          "ref": "d3e50e03-ebc9-4f9d-9bbf-18e5021cdb66",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "973cf044-ca36-477f-8626-fa31eda025a2"
        },
        "item": {
          "id": "2e01206c-0acc-44dc-8983-1f55a0e46146",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "edf68edd-0c6d-46ba-accc-a3feb14840b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3115ac3-eaf8-4462-a539-31a13ae5d640",
        "cursor": {
          "ref": "30b3c559-225e-46d3-b99b-f9d62c917ee0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3de1a33a-cfd1-4ac6-886d-b6cc3c41a56d"
        },
        "item": {
          "id": "f3115ac3-eaf8-4462-a539-31a13ae5d640",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e08ab0e7-ed1a-4d20-8dde-6a3cd643c48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cc4488-51a9-4cc8-ab27-7e24aabacc8e",
        "cursor": {
          "ref": "4ed78eae-8ec3-4e16-a4ef-e25ed4feb66a",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "28e41eb7-be23-43de-928a-25f6489de0e8"
        },
        "item": {
          "id": "b7cc4488-51a9-4cc8-ab27-7e24aabacc8e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5a29df0d-b3b6-46fb-be04-251518209add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089b2be2-73a9-4cd3-a83d-0e306ed6ac9e",
        "cursor": {
          "ref": "a74153e6-91a2-489e-bdb3-353d6de99acc",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1dc3cb29-e613-489e-915f-12a37fd599a3"
        },
        "item": {
          "id": "089b2be2-73a9-4cd3-a83d-0e306ed6ac9e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e5d5dcf1-0802-48fe-ba16-12f24a6fefbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4688cc-1c81-4e0b-84a8-b5ba404ae8de",
        "cursor": {
          "ref": "7b11f9b6-3978-4899-a52b-c82bd45fa53f",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c9e099bc-6afc-4b2f-9410-4b3fa42eedc2"
        },
        "item": {
          "id": "ba4688cc-1c81-4e0b-84a8-b5ba404ae8de",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "165dfcc2-ed50-4b49-ac2c-52ffdc7044b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb9ebc7-60f2-45a1-a5e3-5cb164f9b577",
        "cursor": {
          "ref": "677089b3-b80d-48ee-b70f-9d4f206e643b",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "281e8ab0-545b-423b-b203-3896c5c0ddb6"
        },
        "item": {
          "id": "deb9ebc7-60f2-45a1-a5e3-5cb164f9b577",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3ecf8cb5-1331-48d2-8884-dc78558737b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a66858-94d0-4cc7-8e96-102aed22011f",
        "cursor": {
          "ref": "2cccc404-0311-432c-ae00-5311e446961a",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "87643592-7d45-4fbc-a2f8-e65bfb380205"
        },
        "item": {
          "id": "b6a66858-94d0-4cc7-8e96-102aed22011f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "90b508d5-5a01-487d-b288-a4c1ecca26eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac78770c-3f3c-4132-ac4f-6e7dae24b155",
        "cursor": {
          "ref": "b72f0b60-5134-43c9-8bec-8236e003eb87",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e610d976-2b9a-492a-a17c-1f09f5e3eb5f"
        },
        "item": {
          "id": "ac78770c-3f3c-4132-ac4f-6e7dae24b155",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e302a521-cbb2-479b-95a9-e5f60b9aed92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f65800b-e196-408b-bf3b-45abcd6a6823",
        "cursor": {
          "ref": "566280c7-e5a7-46e4-938b-da5bfc876737",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "16dd3f3e-2cb8-4c60-8416-d119a2e9d49e"
        },
        "item": {
          "id": "8f65800b-e196-408b-bf3b-45abcd6a6823",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e680b404-68e5-4d01-bd70-566bef33b442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4f328c-3813-4034-b9f7-9f27bf7b3bbb",
        "cursor": {
          "ref": "1b43c600-6b4f-44c8-b220-54261ab40fe2",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f8628f11-1f86-42fb-8972-dfc66124c54f"
        },
        "item": {
          "id": "3e4f328c-3813-4034-b9f7-9f27bf7b3bbb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0746906c-8af6-4d72-adb5-18d508965bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd59667-6407-410a-8530-b1f60e24012a",
        "cursor": {
          "ref": "63c64ac9-6815-4f3c-9ab6-22583d0010c7",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "92593274-e9d2-4dd9-ab4f-e51e3e7ec180"
        },
        "item": {
          "id": "6cd59667-6407-410a-8530-b1f60e24012a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1f4faaea-1000-4920-a82f-f937ac8973db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b49d88-5338-479c-90ad-f72edf354041",
        "cursor": {
          "ref": "ebb1d228-8754-4a3f-ab0b-76fa9f8eb311",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "44cf6ba4-e69e-4af5-be6a-16a075b7b190"
        },
        "item": {
          "id": "81b49d88-5338-479c-90ad-f72edf354041",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d94ef795-461b-4c85-8053-acf6699ec534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcc9f9d-bf2c-4847-81ad-322d24c1ff4d",
        "cursor": {
          "ref": "16d443e9-a03f-49ed-bee9-0e6f95393682",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a277cc20-c401-4303-ba50-fd35f769cc65"
        },
        "item": {
          "id": "4dcc9f9d-bf2c-4847-81ad-322d24c1ff4d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "db69b982-03a7-476b-ae09-ed2bc5210c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e944dc-a93c-4123-a02f-25514bc04696",
        "cursor": {
          "ref": "fba61a6e-b616-4973-b49f-28d14d83fa6b",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9e7fe382-5857-4ee3-b8bf-cc5e49247c67"
        },
        "item": {
          "id": "b9e944dc-a93c-4123-a02f-25514bc04696",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "faefb13e-63a4-4040-a5a6-73925a3bae78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e143f539-8d63-4d70-9087-56243aa6326f",
        "cursor": {
          "ref": "77f9add3-b202-45e2-9e73-69c6776b1cdc",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "07329c0b-af58-46e9-97af-66bbebf940b1"
        },
        "item": {
          "id": "e143f539-8d63-4d70-9087-56243aa6326f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "185b66a4-f9f7-4404-a814-2a538b2afebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4d10ca-228f-41bd-87dd-16e59b89fb7e",
        "cursor": {
          "ref": "2748f41f-6496-4f8d-9511-12bb5bb11a2e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "245b915d-0bf1-450d-829c-f04292371701"
        },
        "item": {
          "id": "7a4d10ca-228f-41bd-87dd-16e59b89fb7e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "377eebbf-b441-4e5d-a0af-7d3d01ae1f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea5282d-a542-49a3-92f2-4118ad2e24ab",
        "cursor": {
          "ref": "167397e4-ff45-4595-bbfc-dd891989bb20",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6ba3b7d3-5730-4f9a-8754-9aa3aececa9e"
        },
        "item": {
          "id": "5ea5282d-a542-49a3-92f2-4118ad2e24ab",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5facb95a-6cd4-4d4e-9997-6b823ee2cc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d338ba3-6873-4d05-a6d4-ac13548b6ad1",
        "cursor": {
          "ref": "60981e4c-6115-4ee9-a5be-5a0f5158193c",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eb310dcb-3f9b-4110-a61a-4c817053f126"
        },
        "item": {
          "id": "0d338ba3-6873-4d05-a6d4-ac13548b6ad1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5dec0424-870f-4a79-9476-ebbfaf098f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5926aa4-07a9-44af-be27-1124382c2394",
        "cursor": {
          "ref": "45a700b8-6d14-48f1-8996-22c5b3de7b17",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b4f6b577-d775-4d4a-bfa2-209f9f933963"
        },
        "item": {
          "id": "c5926aa4-07a9-44af-be27-1124382c2394",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dfebd511-2b34-4f67-b638-8334c494f28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6017ce-23d0-48be-b4f8-0763ccab8546",
        "cursor": {
          "ref": "fc45ff4b-bf3a-47bd-a021-024f1ce1cdab",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "21b81f77-ea93-4515-b699-65c00a878da1"
        },
        "item": {
          "id": "4f6017ce-23d0-48be-b4f8-0763ccab8546",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b1b04ebf-ee7a-4c38-81a2-0807853d70eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363c7969-a74e-402a-8ae6-8552000f0b6c",
        "cursor": {
          "ref": "198c7944-a73d-46ba-accb-b60a3185519d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b3ee5e3f-7f22-49d9-902a-fa90257f4f16"
        },
        "item": {
          "id": "363c7969-a74e-402a-8ae6-8552000f0b6c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e925eaad-5f5a-402d-83e9-7b842163bfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82447d00-b651-4149-9768-8cac421c3f78",
        "cursor": {
          "ref": "2026f092-d849-4472-89ef-653f10291025",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "89b0793c-aa75-4fea-b149-57405df691f0"
        },
        "item": {
          "id": "82447d00-b651-4149-9768-8cac421c3f78",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "41f32fa9-138a-4366-8004-7a6dca99b91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d83e75-5c2b-496d-988b-169036e7d2a4",
        "cursor": {
          "ref": "903f6dbe-0957-45d3-aa57-a1daa26c7d2c",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ab354655-489f-4458-b362-73bc675fcd2a"
        },
        "item": {
          "id": "76d83e75-5c2b-496d-988b-169036e7d2a4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4a9d088c-758a-4c11-82d3-30706b8a083d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2335336e-6f4b-421f-b547-e5c49c764324",
        "cursor": {
          "ref": "e39d5fbb-7137-4ff4-b2e6-1ef6b3cc62bc",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2f3703b7-baa7-4a8a-8364-28461c4f1e13"
        },
        "item": {
          "id": "2335336e-6f4b-421f-b547-e5c49c764324",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a77bcc08-3b18-46fb-a2c4-def2601d4816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e49ff4f-c77b-4c8b-b9ec-0befeee92722",
        "cursor": {
          "ref": "0fb144e1-6d87-49f8-aa73-7866ab545b53",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "04b2d2ae-c6c1-40e5-8160-4eb79efa2873"
        },
        "item": {
          "id": "0e49ff4f-c77b-4c8b-b9ec-0befeee92722",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5ded3f52-dd1e-402c-8479-037f96e28d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09ce8a3-f8e7-43af-a794-72c0e372f25a",
        "cursor": {
          "ref": "00775678-6e8b-4bad-8472-4bce8b8aef9e",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "45547ed5-9911-48ba-bf2c-bbd29a29d870"
        },
        "item": {
          "id": "a09ce8a3-f8e7-43af-a794-72c0e372f25a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3fbfb555-5d85-4e98-af40-d0caca457cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bf1511-28b9-4473-8807-ffa6c63c9089",
        "cursor": {
          "ref": "67700768-03a3-47e4-a61b-98ff8aad13e2",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "90736b03-7049-43e0-a58c-14f3db7d8268"
        },
        "item": {
          "id": "90bf1511-28b9-4473-8807-ffa6c63c9089",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a8e0c8a9-06e9-49ef-9e3b-04fa08529d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da80763-1c10-42ee-8fd0-72f5eb681ea9",
        "cursor": {
          "ref": "ab444ac3-980c-4a62-9d9f-89db0cae0083",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b917bda0-be14-46e0-bcb2-ddbf871d1a39"
        },
        "item": {
          "id": "0da80763-1c10-42ee-8fd0-72f5eb681ea9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b2431e7b-f578-4f58-a26d-dc354465108c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0c9c19-779b-448f-8bdc-87e3d22721b9",
        "cursor": {
          "ref": "5b8766fe-7b96-4017-9194-0bc2db77aa05",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d462e102-33da-4f53-bc91-c726ab390b04"
        },
        "item": {
          "id": "ec0c9c19-779b-448f-8bdc-87e3d22721b9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "54151464-475b-40fd-92f0-935d71e606f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18732ca2-0f41-4f89-91f7-fd45aabeea2c",
        "cursor": {
          "ref": "264b421e-3eea-4772-a55f-b4f0d4dec01f",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b9e558f9-824f-41e7-92ac-93eb960303ae"
        },
        "item": {
          "id": "18732ca2-0f41-4f89-91f7-fd45aabeea2c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "83ce4c1e-e3ba-44ea-b336-d1878bcfe705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9accf8a2-1ca0-40e4-a1aa-c360f96ed5f7",
        "cursor": {
          "ref": "c5e30c8f-466e-4ebf-894b-d1a1d6609d63",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "39fb24fb-3b9c-407a-a4a1-bdb7526235fb"
        },
        "item": {
          "id": "9accf8a2-1ca0-40e4-a1aa-c360f96ed5f7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "114d7882-14e5-438c-86a4-4702eb99d4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bef56d9-094b-460b-8000-9c13f4ba97fe",
        "cursor": {
          "ref": "d1439888-2e04-4f9a-b10b-773291a33d89",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "16203cd1-0866-480f-a65c-aafb3e7939ec"
        },
        "item": {
          "id": "2bef56d9-094b-460b-8000-9c13f4ba97fe",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "401d9090-a312-49b2-9779-305a60c909e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca34bd6-cc4e-4574-9521-34f45ee2d7fe",
        "cursor": {
          "ref": "a9c4dada-a889-4a31-80d5-7103f0008b91",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9ab2c1ef-94aa-4cc0-8ffd-57367c7a5255"
        },
        "item": {
          "id": "9ca34bd6-cc4e-4574-9521-34f45ee2d7fe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "900e4185-6c27-42f3-8e74-71fe4c554580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34df0ca-d465-4e81-a207-5343b7f1ee69",
        "cursor": {
          "ref": "0bdcac25-161b-4576-88c2-0643cec02bc4",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "05528938-eee2-41bc-bc42-66a7f5456687"
        },
        "item": {
          "id": "a34df0ca-d465-4e81-a207-5343b7f1ee69",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "63d60422-25ed-443f-84ec-e738e4c9a909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d8846c-8a0d-4f5f-ba2e-1d2baa9b6577",
        "cursor": {
          "ref": "c9caf0b8-c63e-4be7-b046-b7a2c00f9705",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "577df9bc-4f8c-4b2f-a7e3-61e91972f45b"
        },
        "item": {
          "id": "c5d8846c-8a0d-4f5f-ba2e-1d2baa9b6577",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b5270d41-2b24-425f-956c-e4288743be4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1225d74b-1494-4e57-8c27-48af5af8d491",
        "cursor": {
          "ref": "b6eb6364-578c-47ae-8754-c17818e29a8f",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "dcbf31b1-1910-413f-a2f3-ac1cf648c54e"
        },
        "item": {
          "id": "1225d74b-1494-4e57-8c27-48af5af8d491",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6981a85f-95cb-48d4-ae41-19404997c219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a01739-965e-4c70-8f70-39d199de9cf4",
        "cursor": {
          "ref": "6d66eb11-2544-4494-9ff8-1f2e37931e86",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ddb99162-d4aa-4afe-9e9e-084ea2c80750"
        },
        "item": {
          "id": "40a01739-965e-4c70-8f70-39d199de9cf4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3f4859c5-9978-48c3-a69b-2a61807cbcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeae263-6dca-4ac1-bfd4-d322020d7599",
        "cursor": {
          "ref": "a92c775e-4747-46c5-9ebe-8d4f189de1b0",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0a943e49-8372-4ce8-be7f-0fa24b122981"
        },
        "item": {
          "id": "bbeae263-6dca-4ac1-bfd4-d322020d7599",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "041c11d4-5cda-4614-8d0d-7d668a2be207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d997aff0-e542-4fb3-ab94-0cae01918e62",
        "cursor": {
          "ref": "5483cf57-868f-4a50-bdff-2034e5c40db9",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "eb39f8fd-1d2b-451f-85fe-47cef429b5b9"
        },
        "item": {
          "id": "d997aff0-e542-4fb3-ab94-0cae01918e62",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2fbd9969-29b5-447a-a8d3-80b422605285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851a167e-d635-4a6c-a9fb-8240a383129c",
        "cursor": {
          "ref": "c8df9cac-94c9-4fd0-ac44-e58de1150c1c",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b4a75730-1596-48c3-9524-2bd77bb1aae2"
        },
        "item": {
          "id": "851a167e-d635-4a6c-a9fb-8240a383129c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "89a339d5-4614-444b-8b00-60cce20e1d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7229e189-6126-47b8-9829-71eb65b0f3ed",
        "cursor": {
          "ref": "c0ef93c3-d902-4f57-b59b-4d09139a6c15",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4f558595-900e-4152-a970-85b55a80856f"
        },
        "item": {
          "id": "7229e189-6126-47b8-9829-71eb65b0f3ed",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4ff73242-abdb-4ee0-aa79-9ad4dd02d721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7b75dc-1eeb-4822-aeff-cde23e01b441",
        "cursor": {
          "ref": "56dd9b13-f96b-4ec0-bbcb-fcda5b2976b2",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a2003394-be19-450a-906d-ebf2df89b678"
        },
        "item": {
          "id": "fb7b75dc-1eeb-4822-aeff-cde23e01b441",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3c7239b5-7ec4-4735-a4b3-7c8d60dd40d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c1d325-da79-49d5-9b5e-7170f58e8256",
        "cursor": {
          "ref": "c1684af3-9738-4753-b9f9-01a979dddb60",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3dbbd9ca-41e8-4c8f-b035-bc0c1c2ad6c4"
        },
        "item": {
          "id": "20c1d325-da79-49d5-9b5e-7170f58e8256",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "aad9a647-450b-4333-8b9b-0c28b172ec28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffeca98-7507-48ba-871f-a1612d9ad5b0",
        "cursor": {
          "ref": "f3085306-22b8-4aea-afd5-14203363e689",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8fbf3e15-53a5-4b43-93bc-f46a46af7384"
        },
        "item": {
          "id": "0ffeca98-7507-48ba-871f-a1612d9ad5b0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "92eac53f-cdea-4099-aa75-1427efb0b851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f254565-3734-4312-9b8a-b78c64c7108d",
        "cursor": {
          "ref": "edff293e-2db8-4770-9ec5-3b57aa7f2084",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "59c0c0c2-0d76-4fdc-a385-75085491ee34"
        },
        "item": {
          "id": "9f254565-3734-4312-9b8a-b78c64c7108d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "74d06849-39d2-4acf-8bf3-f128d9b68e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746f2b0a-4447-4570-8bae-9d580cb7e90f",
        "cursor": {
          "ref": "e3655f26-0223-4a6b-a35b-ad50ec1d76f7",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "176a84ca-bcc9-4703-b057-b033e147b150"
        },
        "item": {
          "id": "746f2b0a-4447-4570-8bae-9d580cb7e90f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8b2f551b-0499-440b-ae81-76e9b84056b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b85df4-1fd7-4e4c-88a3-4f87789ae3e6",
        "cursor": {
          "ref": "c89c70f7-9d5c-4699-be28-3c5665aa511b",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9a9211be-df77-4964-b332-19f942d4e4cd"
        },
        "item": {
          "id": "b4b85df4-1fd7-4e4c-88a3-4f87789ae3e6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cd87c070-5913-48c1-95af-9befbddf0cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024e73cd-8eb0-40ff-8a12-b838ef655dd9",
        "cursor": {
          "ref": "386cf4e3-1d56-4eb1-927e-73df40d1e954",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "08ef7df4-d076-416d-b74b-97e651c776c6"
        },
        "item": {
          "id": "024e73cd-8eb0-40ff-8a12-b838ef655dd9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "656cb8e9-3cf2-4d02-8ec0-396933e8385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13eca42a-5487-432f-afb9-ae07876302bd",
        "cursor": {
          "ref": "61fbf0a1-e126-4674-aede-9b2b269d938a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a0915fbd-ca42-456f-83e2-c99977317229"
        },
        "item": {
          "id": "13eca42a-5487-432f-afb9-ae07876302bd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "adfcfd71-35f7-4f9d-8e70-3f683c7f9c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00a9aeb-6b0e-4a1b-84a5-26d81c0643e6",
        "cursor": {
          "ref": "5a9bb9b0-10d1-457f-9c24-05060f8598bd",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e5283dbc-3d0b-46ca-9e3d-c2b85aebf23a"
        },
        "item": {
          "id": "a00a9aeb-6b0e-4a1b-84a5-26d81c0643e6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1f7826e0-9c25-4be0-8a21-24c8304b6567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30270f16-3f27-44f0-a4f2-de2c6bc632d5",
        "cursor": {
          "ref": "c9160717-7177-4f53-8942-5a91a511a0e5",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bb8c02dd-1f4e-4d44-a8e2-b46e0455344a"
        },
        "item": {
          "id": "30270f16-3f27-44f0-a4f2-de2c6bc632d5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6c1c64ca-6f48-44f2-978c-30c3321244f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80d862d-f0f7-4a28-a516-80eb1f218fa9",
        "cursor": {
          "ref": "2e885efa-67f4-40e8-89e8-395008e9b0e6",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "74c7c189-59b4-4db5-ba83-da051ec91cb1"
        },
        "item": {
          "id": "b80d862d-f0f7-4a28-a516-80eb1f218fa9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a0ce737-1801-403b-9813-3c7aa2b2bca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439c3da6-67db-4437-bbc8-22ef999ddc55",
        "cursor": {
          "ref": "cc6391b9-4f37-4747-b8cb-4e9fe0bbf11e",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "49a65bda-921d-4295-9f80-6ca215d43bfd"
        },
        "item": {
          "id": "439c3da6-67db-4437-bbc8-22ef999ddc55",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0c58e42b-49a7-430f-a532-6daf9e0b4ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a729d2-b9ad-44db-b963-a493d42ae375",
        "cursor": {
          "ref": "d6a6130c-9227-4ad2-8e1c-33df42e478df",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "982aedff-5370-4d92-8209-6dd1a2133328"
        },
        "item": {
          "id": "f5a729d2-b9ad-44db-b963-a493d42ae375",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3076593f-c88c-4959-9016-1f4294ab597b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e114e2e4-afbc-4848-ada9-3f4cd5809ca5",
        "cursor": {
          "ref": "8af36864-a167-4b1d-ac35-e0fd3e8b782b",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3daab4fa-ca55-43d4-bda5-a76f5079ff6e"
        },
        "item": {
          "id": "e114e2e4-afbc-4848-ada9-3f4cd5809ca5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1794417d-8158-418c-9e4d-0e6527096b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e708132-90e7-4d54-b13a-aa291ccbec5c",
        "cursor": {
          "ref": "622e2523-f6e0-4e15-bfe7-8cc606e1a8f2",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "55f70d79-a240-4801-a160-981bb3b560aa"
        },
        "item": {
          "id": "3e708132-90e7-4d54-b13a-aa291ccbec5c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "08b24fe4-bd7c-4b3a-ac5c-4759985bec36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb27253-58ad-4182-b9ba-437ec6ec22ae",
        "cursor": {
          "ref": "c43e7927-9f9a-46b0-879d-18dfd34643e1",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fa0f7e47-3d0a-4c50-a509-3e475d3f7325"
        },
        "item": {
          "id": "7bb27253-58ad-4182-b9ba-437ec6ec22ae",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "88a7b3c4-f4ec-41ce-8e83-a72a9d956837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a291df-8e21-49a5-a712-a3f22b164402",
        "cursor": {
          "ref": "c3138e13-4408-415e-aeb5-7682a17d3add",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "67cdf55a-b712-4c19-bf5a-37f77d232d40"
        },
        "item": {
          "id": "49a291df-8e21-49a5-a712-a3f22b164402",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2c5e34e6-d31b-4722-be78-911f6526c5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299672d1-c0ab-4d19-a02d-d0f9aa553187",
        "cursor": {
          "ref": "70030a48-6049-4764-885a-518261f71600",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d2dba2cb-4ae6-4358-9b9f-f80af0f6112e"
        },
        "item": {
          "id": "299672d1-c0ab-4d19-a02d-d0f9aa553187",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e5f9890e-f45a-4d85-b746-8bd9b5de8fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcd3555-2958-41b9-967b-e21cc0ca1bab",
        "cursor": {
          "ref": "2e0a02b0-6ee6-4d9a-8493-5b1d87a0a090",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dbbe52aa-7e8d-4f4e-8a0f-c8996197d1ca"
        },
        "item": {
          "id": "bbcd3555-2958-41b9-967b-e21cc0ca1bab",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a4a90c68-df23-41e5-9143-9a7a51001243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6082982-3a86-4527-abda-c1acf251cdfc",
        "cursor": {
          "ref": "d529ae5d-2be7-4af6-828e-6043929bda51",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4bcf338b-b90d-4a3e-b311-49bef7b0d9c3"
        },
        "item": {
          "id": "b6082982-3a86-4527-abda-c1acf251cdfc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "11f49cf3-dbf4-4d5f-8bcd-0a081c8d8eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61584c59-fd47-4f47-85a5-ea0f770daa1e",
        "cursor": {
          "ref": "e47bbb94-a8c8-48e8-b6f5-99d158d794a8",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f97f918b-aeb2-4550-993f-32a72765933f"
        },
        "item": {
          "id": "61584c59-fd47-4f47-85a5-ea0f770daa1e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "568c472f-e9a2-4117-be71-ce8b376c138d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab031e1-85f3-4ace-9ce3-f2481d41279c",
        "cursor": {
          "ref": "d6ef24f1-6751-4ecb-8350-23210bc689b1",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2b2c4591-a4cd-4810-a0d6-c2954b4714cb"
        },
        "item": {
          "id": "eab031e1-85f3-4ace-9ce3-f2481d41279c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d4d22eda-d2c5-4ac1-898b-b44a066b9c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb64333-fed9-4e95-a9f4-7e1147b60150",
        "cursor": {
          "ref": "7aa6914b-ee51-45fd-a30c-104eb5e20fb8",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f759fd27-3806-41f0-86e7-34cce99739bf"
        },
        "item": {
          "id": "3eb64333-fed9-4e95-a9f4-7e1147b60150",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cc2b1e0f-19dd-42d1-b050-61a1a1da79eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1127,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcc8556-d433-4784-ac7e-e25d83025229",
        "cursor": {
          "ref": "68ef539b-dd0a-41d7-a370-3c6a048d470f",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "abe0b798-6779-471d-bbcc-1b56cf396679"
        },
        "item": {
          "id": "afcc8556-d433-4784-ac7e-e25d83025229",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b0c90816-ee37-437d-92a1-9cb3c35045b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1679,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114f1a5a-8909-4388-ab89-b55d399ee9ba",
        "cursor": {
          "ref": "bf5eedba-576e-4b66-8b36-62156ee4b41c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ec52f5e5-5625-4ad0-bf6d-bac9a19a533c"
        },
        "item": {
          "id": "114f1a5a-8909-4388-ab89-b55d399ee9ba",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "78675ac1-1e05-415e-b22f-e90dd6cfc973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1521,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b0db34-fd4a-4c2c-a273-a6030516dd42",
        "cursor": {
          "ref": "0d2a2b3f-a03d-4bdf-a33a-ede758a63dc7",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ee77eaa5-16b5-40d1-a5e1-9924111d9488"
        },
        "item": {
          "id": "f5b0db34-fd4a-4c2c-a273-a6030516dd42",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "21f4b734-6f58-41fd-9951-286be346a694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb66fcc-0398-43cc-b384-a1fec8f6ff8b",
        "cursor": {
          "ref": "fedee267-0140-49ed-a15f-162a5227b4a5",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fc107fd3-7e2d-40bc-8276-8092572064b9"
        },
        "item": {
          "id": "9eb66fcc-0398-43cc-b384-a1fec8f6ff8b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dce6c2e9-5a1c-4316-83c8-cc9c0ca05a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a504ed4c-a7be-4857-ad29-65d78d2bdfbe",
        "cursor": {
          "ref": "e8db6809-10d0-407f-9cda-cedc2e395534",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f9a57f3b-4679-43b9-b0d5-55fed8a6af3a"
        },
        "item": {
          "id": "a504ed4c-a7be-4857-ad29-65d78d2bdfbe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b445d147-58dc-4338-910d-f08379cff10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9067d689-6c7e-42f6-bbda-b535073f7541",
        "cursor": {
          "ref": "0c20f2e5-c89e-48f2-836c-74e541d25f31",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4905b529-d052-4576-b702-5f305b0bcef6"
        },
        "item": {
          "id": "9067d689-6c7e-42f6-bbda-b535073f7541",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "71b4673f-4982-41a8-9812-9c346fa3e687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a796c151-ece2-48a1-ba0e-3f5ce8237f71",
        "cursor": {
          "ref": "0bb991b8-25ba-44fa-bcc7-acaf824b8477",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0b211fc3-d9d2-4c13-b7a9-39c73f1b7a75"
        },
        "item": {
          "id": "a796c151-ece2-48a1-ba0e-3f5ce8237f71",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "90c4275b-d2f7-412a-8927-c62a5bbaa31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14167426-9840-4126-8cae-af426a143589",
        "cursor": {
          "ref": "1c124cb1-c319-41ff-ac05-f34cb3e42e90",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9f717ef7-e5a3-4318-9950-05269a421230"
        },
        "item": {
          "id": "14167426-9840-4126-8cae-af426a143589",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b392d71c-f1dd-4c41-885f-299dc86bf059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a150eba1-3fc5-4afa-9c0d-0ea7b16e2ef7",
        "cursor": {
          "ref": "9a63c846-026b-4687-a712-6850af3fd78f",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3a10e5df-4733-4e6e-9b93-889228e921f2"
        },
        "item": {
          "id": "a150eba1-3fc5-4afa-9c0d-0ea7b16e2ef7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "18ac825e-915c-4ccc-beee-56db33123e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd40a25-9e2c-43f1-b381-33058f6681a8",
        "cursor": {
          "ref": "b588be32-6f50-4b2f-8960-a1868459f54f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d6fe7d11-c347-4ae0-9026-531240250913"
        },
        "item": {
          "id": "4bd40a25-9e2c-43f1-b381-33058f6681a8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "98dc829f-b749-4991-9e04-8b5cdb3113e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55c58c4-5991-4deb-a128-aeda0c66d73d",
        "cursor": {
          "ref": "710c1750-33bf-4bf1-9e2f-e0777c3f649c",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "81b7e1c2-1a57-4d85-b81b-856cdb6eff64"
        },
        "item": {
          "id": "e55c58c4-5991-4deb-a128-aeda0c66d73d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e656b128-87b8-4823-9dc8-cbc12c18a2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43342cb-4707-4dfb-b9fe-769414ecbbf4",
        "cursor": {
          "ref": "faf6ec13-0be1-4d91-abcf-06cc9a311f87",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6ed284ec-a10d-4b1d-8944-0390d5be63f8"
        },
        "item": {
          "id": "e43342cb-4707-4dfb-b9fe-769414ecbbf4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bb5c4932-d6e4-42ec-926f-33d41d6a6359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1934442d-5bd3-47f9-a81a-38f0b7d1112d",
        "cursor": {
          "ref": "a5786c1c-9137-4beb-ad06-84ac4be4fc24",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eb69c237-4c09-47cd-8c18-3c465211439e"
        },
        "item": {
          "id": "1934442d-5bd3-47f9-a81a-38f0b7d1112d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a55b77c3-6283-4439-9bcc-507c8241cca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50fdca3-e788-471b-a0c7-0357e730d36b",
        "cursor": {
          "ref": "84d88ec3-c77f-4c67-bd1f-8d61deee1689",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de18c51a-4e24-4099-9257-f92bcb1b36a6"
        },
        "item": {
          "id": "f50fdca3-e788-471b-a0c7-0357e730d36b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5f50a125-1a7a-4095-b15e-8af611e8c561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d98a86c-c9dd-4bf1-91a2-d9ab1ed30b8f",
        "cursor": {
          "ref": "5aa1e748-fec0-4061-92fb-fa2e268c2063",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b941db46-5758-4826-b45b-8ca6221af1ce"
        },
        "item": {
          "id": "8d98a86c-c9dd-4bf1-91a2-d9ab1ed30b8f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e6dcfa51-52fe-4655-bd6d-bc1936bd18bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75486882-df90-4d0e-982a-2b6a43ccf2e6",
        "cursor": {
          "ref": "e210d101-18a8-4fdc-b6bc-588b973ba132",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "091bf2c2-36a9-458b-957c-c0b0c90c4e87"
        },
        "item": {
          "id": "75486882-df90-4d0e-982a-2b6a43ccf2e6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fbb92197-53d7-4b62-a50c-bb7bb520cdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e298521-493f-4954-b976-6235748559fa",
        "cursor": {
          "ref": "2edef677-97d6-4f4b-990d-9db4d0a3f33f",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3ac89490-9f66-4449-a799-230fc875bc91"
        },
        "item": {
          "id": "4e298521-493f-4954-b976-6235748559fa",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ae80fe2a-badb-45b0-8eac-fd1282cfd631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dca951-47e0-4fd9-8b9b-d45425174164",
        "cursor": {
          "ref": "1b4b81e9-396f-4009-8481-3206e04efaa4",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "17ab20a7-f9bd-4c31-bdf4-c3aee7bf1fa2"
        },
        "item": {
          "id": "26dca951-47e0-4fd9-8b9b-d45425174164",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f1aba7c3-2aa6-419f-ac70-99699cf849fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3eb8c1-160b-4179-81ed-9ded1f47bf3c",
        "cursor": {
          "ref": "0788f199-025f-49d2-bc4c-f5692b9c1339",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9b79c8a6-26a5-4298-8756-4a1cd2279ea4"
        },
        "item": {
          "id": "3f3eb8c1-160b-4179-81ed-9ded1f47bf3c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e45146b7-fc54-48dd-8b6c-a6c11cb40842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6873b2b9-4a7b-463f-9f52-c7638cd58c1f",
        "cursor": {
          "ref": "ad9ac21b-18f6-4b25-8899-80a5bdc6be36",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bc27fddf-d0c8-4b55-8958-76fddf76b94e"
        },
        "item": {
          "id": "6873b2b9-4a7b-463f-9f52-c7638cd58c1f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aa78244a-b81b-4e9a-b8ca-29722b120b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4ca265-289c-49ca-8c7f-c310fefc93ff",
        "cursor": {
          "ref": "21e7b042-c4b5-4e83-ae14-5e4a4700b7cb",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "568c3afa-a40f-4286-98b1-45c762eea3c6"
        },
        "item": {
          "id": "ba4ca265-289c-49ca-8c7f-c310fefc93ff",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "23980b06-bd1a-4201-ac2e-30f02e558af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9cedb6-1fc3-4c41-96a0-10d6a67cee7a",
        "cursor": {
          "ref": "a863fd68-a0d5-44ae-96e1-2bd2a4ae728e",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0047b390-fba8-4719-bc33-dd4f3e2324de"
        },
        "item": {
          "id": "0c9cedb6-1fc3-4c41-96a0-10d6a67cee7a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3320aafd-470d-4819-bb22-90d1ab56fa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4059508-6758-40d3-8152-4dca991ac9b7",
        "cursor": {
          "ref": "fb8505ef-d65c-4803-97f4-78662adb41de",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c37512fe-e7c4-40e1-84a0-37a7b6130874"
        },
        "item": {
          "id": "e4059508-6758-40d3-8152-4dca991ac9b7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2b741a7c-165c-46b3-bc6a-f5b636995491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907ae58d-3178-4cb6-a1f6-e7807912579a",
        "cursor": {
          "ref": "1bd21153-cdfe-4e3d-b4d0-eababbe6c701",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "30c494e3-7b22-4266-a96a-9c2a138c065a"
        },
        "item": {
          "id": "907ae58d-3178-4cb6-a1f6-e7807912579a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "18d651de-c937-4c5b-94cb-a629c205362f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05601584-ce95-4496-a792-4510544c15af",
        "cursor": {
          "ref": "ed1847f2-fd8c-42f6-ba0b-f29718447a2e",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3ea34385-789c-4dce-ab5d-30f2e38dc6da"
        },
        "item": {
          "id": "05601584-ce95-4496-a792-4510544c15af",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "419adfc8-21bc-46ee-a6f8-d2113b367552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0266d2bd-57ae-4797-b609-acb60e45170c",
        "cursor": {
          "ref": "4fd19f5f-26c9-47c6-b115-75d0275a365b",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "20363dbb-8762-4fa3-9f0a-5a18ca61ff31"
        },
        "item": {
          "id": "0266d2bd-57ae-4797-b609-acb60e45170c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ecdedec7-047d-45be-9edc-d62855dfcc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7fe291-8117-4751-9438-e6a5e3d29312",
        "cursor": {
          "ref": "1688742a-b7c5-4107-9222-28c828d746e7",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d59c1fb8-550e-463d-813f-2bc5ea79b4e4"
        },
        "item": {
          "id": "bd7fe291-8117-4751-9438-e6a5e3d29312",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "30d293e1-b43e-41f6-b84b-2c637dcb3c79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac4cbd7-daee-4596-971b-f18fcd8b818e",
        "cursor": {
          "ref": "2927f4c7-3c3e-4519-bafe-a6635909ad2e",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4e0c05cb-9e64-451b-8d23-41b2b08904ce"
        },
        "item": {
          "id": "dac4cbd7-daee-4596-971b-f18fcd8b818e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c49d5885-3eff-4963-800d-f20723b61022",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 438,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661feb94-e72a-4535-b5dd-5a0b0ce6247d",
        "cursor": {
          "ref": "5ef23254-4496-4ef8-be31-d1ccf9e9509a",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ce003de1-376c-4d48-b9a1-28ccc27a7dab"
        },
        "item": {
          "id": "661feb94-e72a-4535-b5dd-5a0b0ce6247d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ab3fd5ea-7763-45ef-9a31-de13a9ddefaa",
          "status": "OK",
          "code": 200,
          "responseTime": 501,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4505664-9e4c-4f62-be61-1398bb886491",
        "cursor": {
          "ref": "b430750d-55a9-48ae-93f7-8ca0190560f7",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5e461678-269a-4b14-a2b2-2e4c8fd32e0d"
        },
        "item": {
          "id": "a4505664-9e4c-4f62-be61-1398bb886491",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1679ebdd-d89e-4299-af92-c0268ed45e0f",
          "status": "OK",
          "code": 200,
          "responseTime": 2189,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf18401-2f6c-46d0-8d44-b916abcc5a7c",
        "cursor": {
          "ref": "d7ad9b79-e316-4c5d-806b-dd02be3ac2f0",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fee97819-3b24-4ef8-8185-b96f1520089c"
        },
        "item": {
          "id": "0bf18401-2f6c-46d0-8d44-b916abcc5a7c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "60250954-6569-46b3-b614-e4cfbc9db572",
          "status": "OK",
          "code": 200,
          "responseTime": 1849,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bee2204-7c49-421d-82ad-cdf32a5d29b2",
        "cursor": {
          "ref": "886bced7-faf9-4acc-af47-db41c47a9246",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "46516dac-a542-42ec-8882-1835a762f7bb"
        },
        "item": {
          "id": "3bee2204-7c49-421d-82ad-cdf32a5d29b2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5288b040-76fc-43d9-b140-5dc7b95c0f67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bee2204-7c49-421d-82ad-cdf32a5d29b2",
        "cursor": {
          "ref": "886bced7-faf9-4acc-af47-db41c47a9246",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "46516dac-a542-42ec-8882-1835a762f7bb"
        },
        "item": {
          "id": "3bee2204-7c49-421d-82ad-cdf32a5d29b2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5288b040-76fc-43d9-b140-5dc7b95c0f67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bee2204-7c49-421d-82ad-cdf32a5d29b2",
        "cursor": {
          "ref": "886bced7-faf9-4acc-af47-db41c47a9246",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "46516dac-a542-42ec-8882-1835a762f7bb"
        },
        "item": {
          "id": "3bee2204-7c49-421d-82ad-cdf32a5d29b2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5288b040-76fc-43d9-b140-5dc7b95c0f67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dcb51a-57b7-4cb6-9050-f3655389a18e",
        "cursor": {
          "ref": "6a2a611f-e701-4914-88a9-ad89cb485196",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "32408cfa-9baf-45cb-8425-a5df54df168f"
        },
        "item": {
          "id": "67dcb51a-57b7-4cb6-9050-f3655389a18e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "0e29f793-7bbb-44e9-a9b2-4af6f452f92f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 450,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97663c8-8fc1-4e79-9643-cea3e0b59dc4",
        "cursor": {
          "ref": "6f378c78-a27c-423f-b6c3-692b6055b352",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8fecface-9016-440d-8e49-8e21b8c6643b"
        },
        "item": {
          "id": "e97663c8-8fc1-4e79-9643-cea3e0b59dc4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "520380f9-48ae-41b1-bc95-06fb15bb496f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97663c8-8fc1-4e79-9643-cea3e0b59dc4",
        "cursor": {
          "ref": "6f378c78-a27c-423f-b6c3-692b6055b352",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8fecface-9016-440d-8e49-8e21b8c6643b"
        },
        "item": {
          "id": "e97663c8-8fc1-4e79-9643-cea3e0b59dc4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "520380f9-48ae-41b1-bc95-06fb15bb496f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f45087f-e5c7-4cdc-b1d7-99dc5b5093fa",
        "cursor": {
          "ref": "38039e7d-5e11-4485-b82f-60a284fdc59f",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c0d3f371-e808-4f7e-a360-e446ca71456c"
        },
        "item": {
          "id": "7f45087f-e5c7-4cdc-b1d7-99dc5b5093fa",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "fc27dd2d-7bb9-4049-b05f-ece365fa8627",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 717,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2e24a4-83f2-46b2-8cc8-26825dacf34b",
        "cursor": {
          "ref": "6e078434-58b1-44bf-946c-6b5a703f24fa",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f89ebc70-59d0-47a9-bc27-ea8db7ff51f7"
        },
        "item": {
          "id": "6e2e24a4-83f2-46b2-8cc8-26825dacf34b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "06f3aa69-7630-461b-90fe-2e508c086ba6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2e24a4-83f2-46b2-8cc8-26825dacf34b",
        "cursor": {
          "ref": "6e078434-58b1-44bf-946c-6b5a703f24fa",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f89ebc70-59d0-47a9-bc27-ea8db7ff51f7"
        },
        "item": {
          "id": "6e2e24a4-83f2-46b2-8cc8-26825dacf34b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "06f3aa69-7630-461b-90fe-2e508c086ba6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9b57bd-7a0b-4143-8f30-74b14637f0b8",
        "cursor": {
          "ref": "bca89481-897d-450f-811f-3bc276141a7e",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2553eaf8-e1eb-4959-9b60-3e836a740ae7"
        },
        "item": {
          "id": "be9b57bd-7a0b-4143-8f30-74b14637f0b8",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "708a0c15-9cc4-4cbf-a657-89bd9138269a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1046,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}