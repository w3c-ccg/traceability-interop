{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1b277cb8-e626-4c7c-a10f-60a67fd845aa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "23d984df-f9e6-45fb-b823-11c9b6348041",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8815cdb1-6734-42dd-ac00-ba3bb25a37e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f4d5f4d-c7bd-486f-854c-2ca17927cd7a"
                }
              }
            ]
          },
          {
            "id": "32b90549-35a8-4fb9-b05c-732b6414ff18",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3148b62-0790-4c25-8710-3243c08c20c4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c0a44003-9442-48ef-ac1e-caf4647f7f8f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4aa52f6c-59d3-4f1a-a265-088bdd62fe20",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "31420582-b463-405c-9cae-1ca153ef0022",
            "name": "Positive Testing",
            "item": [
              {
                "id": "982d46f6-19ea-4556-8dd9-c568876f452e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c12ca16f-4b32-430c-a1e0-48b2708d56c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c5af40b-4185-4b58-a837-2d021eb9773f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b6a3fa3-72a1-494f-932f-264bffa092f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98d1dfad-2af4-49e3-a943-33eb261a65c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f74a084e-be7c-4edc-917a-878b9be15e31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d183db86-1919-42e3-8204-08f9848ad0fc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "942f8c60-a136-4708-9097-2229ed69c57c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3280ee02-f24c-45eb-98e0-dbfe140993f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7fc0faf-a73a-40f4-ab21-e4b831818b92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28f449ad-fb41-4baa-ada0-0d539ad5ab01"
            }
          }
        ]
      },
      {
        "id": "2af4dad0-6276-4222-b977-153fe4fb45c1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0890920c-daa1-4e73-8155-f879ffd58db2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e4c4081-7b6f-44de-9282-abaff449c161",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5aa3717a-4114-4d09-a2fa-796287da593b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efa1e02-835d-4080-9a70-26b47fd80dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef35f9d0-9c78-4fe7-b93f-45148c198828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03565265-fa20-4989-8fba-602e24b04bca",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d1203d-921a-4e2f-b174-9adcd3c10b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d3d4a71-7f67-43e3-93ae-d5f6201c1fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8e2d6d-99a9-42f6-bae0-b4ae41b58034",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e41684-e6da-47d0-9865-fe7052c8c20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "752db2b2-e8cb-464a-b73d-d2db705b8591"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4de88857-ff53-490c-85b9-9479c4292c3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20057ac8-453f-4fd4-aed6-1f271bde34ed",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7af55be-db28-4be3-8937-0bb35175c3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "333b5033-b695-46e0-8263-4da2ee8c5033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db76c2ba-aabd-4ec0-931b-75130c71cdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8270f6-247e-419d-a05b-005aa93dd49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00f0ee4-0b50-4f97-b090-e2a280bc2bcf",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f45bf9a-cc7d-4ab1-9698-9aed30bc729e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7491faa4-629e-44c7-bc16-9c2459a869e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5188787-c395-4c1f-b54c-999348f01404",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "b9c22644-d502-407c-a5f3-28315a1829f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "062d6c30-9960-4a25-8ba1-1b422e795273",
            "name": "Positive Testing",
            "item": [
              {
                "id": "935adac5-d1ab-474d-a04d-675b252ca4ac",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aee5fc85-62f7-41f8-bd8c-a17762fbc21e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d44fca19-9642-4e8c-a35e-f5ee1b1b3f57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03f53169-2ce6-4e38-8c9d-1fbc75b51078",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "20c170f2-b7a6-4cda-b85b-305561d60232"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8c297cb-f507-4efb-b1d5-945c44c4cc8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d572488-cf35-4ace-83b4-03dd8c7f75bc"
            }
          }
        ]
      },
      {
        "id": "7368d515-1376-4138-bca5-c950d3eb5ba7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e93dfb09-847e-4b68-a862-27615f03bb3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cbb462e-7efe-4d6a-86dc-d61fafaefd63",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0d74784c-8e67-4782-b46c-b7fcb0b2bff7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8b1e06-cd7f-45ca-ab6a-3a5aec9c6990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79d01c4-292e-41e0-b7a2-7b99cd5f18b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b48a9a2-c394-48b0-8f58-8142d3d28dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e43f9f12-e5f5-4aef-8f4c-bbf51b67645d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede858c7-e7e6-4d7c-81f5-dc1a87290578",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61d75e2-73be-4c0f-8b0c-e55e574bf326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e9a1e2-5e10-4ba3-860f-f6d0f3c50499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2949ff05-03f6-4dc9-81b0-f4b0d2530c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dd56fac-d3d2-40a6-9819-3ff06b6aa08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a7d2e2-1a4c-4400-b289-58e2ace5e494",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228af091-cae8-4ed8-abea-2ba6f6ce6207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabc5f69-b6f7-4b65-b2f5-6465c5eb16db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afdbe52-1e95-4ca6-ab9e-92fb9e6045ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f37318ae-2227-4a75-be31-0d63ea04cfea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21ded3f-c888-46bc-b780-fbee9092abf6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8145b66-c273-470c-acb8-990969aba258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d549b7-d07e-4dac-8f60-56b9f2f26ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8932c0-df0c-40a3-9a14-a29ec37c4270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53035149-cee1-4a7d-ad32-803fd0e9901e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cd1767-31d2-41ce-856d-747aa19f8d51",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27240442-4e40-4871-8a11-3a9c315ad630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c025a0c-626c-49dc-b252-19c0ded35ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7097b54-6e4c-4328-af5c-56e50c84357f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ab11cb7-bccf-425a-b086-bd1f2e12f49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1bd026-fcad-42ac-88bc-2c29a7e30ea4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1830ee-7dd2-47ae-9ed8-f2e1d83dcb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db32712-34c4-4375-b4b7-2c0f3bbc99be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b7f788-1c8b-4199-9130-aa9acb0752d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07cc6687-b9da-4e17-9fca-ff9a70df28d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b22b183-378f-4bb9-80df-d20f611c40b7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90d3796-8a1b-4a3e-ab19-058abcf10d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36491c68-7737-4829-8bde-390596380650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a85c46-88d6-4a88-894b-ed311ab63fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da312a6e-d740-4db7-9c6a-36f775a97eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e0767b-0492-4f61-8efb-beda298494cf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd19cb4b-825f-4d7d-8092-d6593d94a4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c657ad26-4bff-4491-9464-67f48ab3eca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8eb9ad-5b6a-40bb-9383-90481a2d10fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e603978d-7009-48eb-a04f-7b5f80fff477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5517e239-aeab-4751-9e55-ea12bb69d08e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d03859-7185-49fb-ac9c-6cc2183960a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535a57ab-2974-460e-968b-5204d77b3022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e447d5-5371-4198-a34d-9a04efa0fe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eb4f9cd-2ff3-494f-82e8-c0920e7bac5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a1e0ea-cfd0-4a14-8c79-50d36e3c79ba",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edddeaad-5a28-4cb9-b1af-a704d90c1795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58721108-6ce2-447d-a16c-63611ef9b0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29669bfa-6fc9-4840-a408-959a48a4d9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c02e129d-4695-486b-94be-7bc8f59c46a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1536bc-cda3-40ee-ac81-011944a6616c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af27bc16-fe1a-4c20-939a-6c899e3aff41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9172f80c-88b9-4175-b56f-15bbbd53d448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c25ca0c-ce4a-4c7b-98fe-904d65a4a0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ae5c037-feab-42bc-a2ed-3c2dd756c1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d6e399-b084-4150-bcde-3ee30f89e412",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f801d1-4473-4f4b-baa2-fd8a9ece8bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1035935c-4b3e-4b7f-b24e-22dd665561bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8187ba4-01dd-4244-ac73-94217a0a267a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "842052cf-444d-4810-9b2f-af0c8d0615f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efede0dc-4398-46bb-ba2a-60ab92873f26",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f21f34-1e1f-4282-aee8-ef769ec29da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2375c5a-25a3-49ea-86cb-cc70c97392eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e10667-a0d5-4902-81ad-4a3af7798179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce27f3d9-7a81-4399-a5ee-7e46c1d6a009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd341bbe-ae4c-4feb-9fc1-2dcbdbcffd0d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3561888-aac5-4e09-b14e-d94abb8fbdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bb7bb6-d70b-471b-b171-d0a10096fdef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b0fd2f-403e-4df8-955c-2588da00eff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e318b8a-2a11-4ea0-b9bb-0d3d04114da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5825c2-9ff0-48b1-8241-d7c8bd05fcbe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352b095f-2ed5-4b82-a1f1-198af709af10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89faf244-20d6-4d06-9408-19aa0519db65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b43d0d0-04fa-4a90-88ea-ec329e5f69f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b00fd9a9-4f93-4f1a-9ebd-6c89da278965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5ad421-9deb-44a5-9159-027b40e132b7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0a27c3-0810-4b1c-9634-eff5315bbd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af778941-0ea6-4270-b74e-85c520863194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed15078-e771-46d3-ac7c-b1945c8c4cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e35a3bd6-a384-4188-8539-217b3c2791f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4507b4ab-fad8-43d0-aed9-6ce80b12a74c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4d6d7a-9ddc-4019-870f-03983df975c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac14bcf-2511-425e-a5bb-d05162fc4408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b94aeee-da48-4a69-bd25-a678cb1783a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e62c873-ffc4-48ce-97e1-c5bcf79aa383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f76551e-dd45-47ad-b85e-b8452efe04b2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadef47a-f744-4661-8d08-71e0a06f1017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b23a46-71ee-4c54-8b05-a41680a53dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37f8d61-b2bd-4d8a-8fc1-f25af2f2ff6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d53c536-5f1d-4b56-9de9-ee4461c3364a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fe6cce-5854-4179-b059-a7311f8b93ac",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98c4afb-9218-4c41-be14-7e53591031a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26311b37-1c7f-44b7-9bd6-339d5b2f461e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa778d8e-786e-4e58-ae80-c0fb2c804efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94778661-e88d-4a48-a9e2-9c7784c1cc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d71dbf-8c16-485d-bb43-faf26c4b3d50",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d346778-f5d1-4d59-af0b-78268112a274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66522544-e25a-472c-99af-823d2b628f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708303f2-a509-458e-bd0f-5dfa2d28da4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf27f9a-d887-4269-a6a9-d97ae3a187b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8041d781-beb1-4852-9d49-e5b0d1feba05",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c4267f-e31d-4ccb-8c53-3a6e627129e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a17cb96-b6ea-4caa-9bb7-e17d0ac22240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ad0d4a-df7a-470f-9da2-49562be14f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca04ec25-6670-4c56-b58e-ba25b5c24681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37eb9891-9c50-4ee3-a270-cfe8534cf677",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b7fdc0-45bf-4fa8-9d38-ba33c0f42bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74db52c9-d03f-4949-9644-f3e1f45a908c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241810ac-91a5-41b6-b01e-32593c210bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "01e4370e-a8d2-4b3d-95f9-e56e78c74051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cdf43c-3909-4303-9cff-803644c3f46a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3bb58b-3bb0-4c04-af12-82b5c8cb6c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e36185-6fcd-4b56-b0e5-d6cb30779c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730c742f-af62-4ebe-b957-7dcfe408b76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "284b771d-cc71-4eb6-9be8-33d653916b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c228e5-0af9-402e-88e7-5def590d857f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb967cfd-545a-4554-a957-6a7a934398c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d4fbd0-8308-46f1-8ddc-e0b868eeb197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da0d407-64e0-440a-ae4a-620b07867990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb4f788-79d9-412f-b03a-24b7978b8d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e366adfb-f907-4e5b-a196-10c4df7f2e4b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44822fa-1ad3-4db7-a792-0e92b6914892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ab51ca-2f9e-4ab5-a568-98a565cf3688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6df144-80a4-4a10-8c75-fe323877586b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "653dfbe7-afad-462d-8045-47dbeddfd06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9efd535-8733-4ce2-920b-b5f6a0a8212c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b64671-6c1b-4bbe-b826-025791b19b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4526d65b-8d01-4d10-99db-7eaa3db4f81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97c65a6-bef6-4f3d-bc30-e9a5d6d6b689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aedc6b6-b161-4077-afcb-0442d89922a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d07cdcc-7234-4979-8756-115dd0fd8b5a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883b7ac2-70a7-45e2-965b-bbbc4b5e1875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ca899e-4549-4086-97db-be470b342b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405b9bcd-dfee-423f-9559-7859900ffb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0927cac2-2b79-4e0c-ac0a-bee26a8ab835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe78403-a14f-4dac-af75-75bc931066ad",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcec13a-88e9-4b02-8417-c3b6464fd3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b636c7f2-64dd-489a-b35d-234cc48c3c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b02240-d179-4255-a996-a82d240906d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c5f752-cad1-4816-95d2-1314fab42293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1dcb4d-e891-4fa7-a1a9-e5b0dfa2a12e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a3d74b-b599-492e-9882-7f9b5d71c829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bcb716-d8b4-49f1-af74-8416ce97161b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866029fa-bf20-4191-be5c-3d658feb099c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebe2781-9a25-449d-91a1-5a23cd564de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4afab9f-cc35-457f-9a7d-828613fd7131",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6532706d-9697-4e26-bc20-09e7c4d07249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2403fc99-b734-40b2-8f1e-9d26282f13fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2ead44-5f16-4aef-bac2-6fb3566fea0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8413a9f7-09d8-4105-91b4-26a3029105ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bacd21-0e8d-4d13-a99c-8c74374d60b8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50678562-da87-4124-ab3a-e592d6d1ae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402388b7-285d-4921-a914-26a3a8bcf676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa4d3f3-4c22-4337-97a8-5081481ff2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "709d94e7-0360-42a3-b08b-5eeda2f7b723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b250d2c-d99f-4e3f-a637-ddb664f4d45d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3fc30e-7216-4b84-ae23-6a7255a5419f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cbafe7-515a-4c85-a126-248299bd96bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cf6a67-ad6d-4e00-a5c0-dc394b6c248d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf572cc-3d32-418e-80c7-993dde8c3e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce6acb9-9fb6-496b-bf35-82f9c40428be",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509f9ee3-4b44-4a06-8d78-6f461cde31bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cc65a1-c922-4ab0-a7f4-228030825ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fcc5dc-464e-4699-8274-d9bd9c9b4142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c279898d-ead8-42cd-8a9d-ef29c8c9b5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ec6f93-08f7-455e-8cf5-09d112d8d8e2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb4186f-206f-4a11-a446-c6398aa33ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d172a68-00be-40c0-8c64-4e43dfcd94c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4333bd-b4ce-4305-9e38-3c7a09a6f2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52af6f5f-97fc-412d-b46b-d00d6d4e4616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11915e7-0e7a-4ce3-858a-e76e51661ccd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e8c6df-2c40-4925-835f-592823e6c438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5118e3-dc46-452a-a382-214383f2b848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2800430d-b852-4e74-b57d-01c30539963b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "70770d1f-4e2b-42ad-ad97-901a349f70f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e60482-37f2-47f2-bcf1-3de0ccd12ea9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b3a371-a9ce-4ef8-89b2-a7377d9227fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91cbb337-c2f5-46ee-9e7e-508c58a48843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a8fd68-c1d1-436c-98b5-9dfdb0f0a6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99ba217e-7912-4e6e-8d0a-da60071d8234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0b920d-fe84-474e-858e-95be683425b4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a97db97-5730-43e5-ae68-3a504924940a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0182e4e-0f6f-42dc-b36a-3dd5e4e76c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42460836-1c39-4e0f-88bc-ee82cc837851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2019771-2c46-4670-aaac-2063c8556334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867f0bd8-126e-41b7-bb03-b50bc904ce28",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d352e7e-1b24-464d-9a8f-3cc95efefe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e21338-c8e0-4247-98fd-f60e355f88fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026ed579-1ee9-4144-8a87-5c9365b6f13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "232a7116-95bf-44ee-a396-a7c889bdfaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43e41f3-7c0d-4e76-9c45-3c4754d5d39d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecc8815-18a8-4394-9982-a9ce9a10fbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc14f764-41af-4f78-a30d-2bb366ded63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216249fa-8f3b-401d-b50d-f027c42d16cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a9ae09-5c79-46b7-860a-a0d6b623535e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204462b6-9e24-4ea4-87ae-6a37f1d66b5c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3833b4c-10d5-451d-ae56-3a2691ed71eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2b00c0-3946-4753-8ead-bb62221b3920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee792bf9-a0f0-4dd0-add2-653a0a97d915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "997d4bf4-b421-4696-ad18-e47a79c4b856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f638a61-d9e0-4d06-864e-58de30c29990",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c610cfd3-13ca-4d1f-9a8d-c4cf53d86d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd30617a-bea1-48dd-985a-d5c1999d7a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43af3b2-fc89-4399-ba0a-e72d5798b228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "712ac4db-cfaa-4d88-ac84-70fe0316e98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea295a44-10ed-4841-8ca7-dd6f72b5f61e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d49f6d-8cae-4ae8-bbb8-f467acc7f7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522ce69a-04e8-4688-8923-c948e089c60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9d2a83-e445-49ea-92a1-34b53d931428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "27eca31e-12bb-4773-bb0c-704fa2863f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97665e44-61d3-4b62-96a7-d01020d23646",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa538bb6-dce7-411c-b397-c93641a3df4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198dae62-dcd6-4699-bbd6-662cd9b1bafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc96846-1ad6-466c-baf7-be984184fa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "75b7ba6c-2fdb-49db-b6b5-88b23a6524d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf04e37a-cf9b-4df3-b974-f5499e9738ef",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853afc99-9d4e-47e2-aca4-1ac9958d3d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f726852-653f-4e1a-9520-5f096c5cc9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae327af-abfe-4ed8-b64a-7ffc1d27d464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d7ea37-a976-468e-ac1c-746644415c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bf48d7-7e8e-44c4-851c-db3fc0665d96",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d9f286-23d9-476c-a700-cd23d5e89def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33d47d8-2c1e-4743-8437-b3d9d337ae2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d616fcf-334f-485e-9c62-7e6ee648616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9e663d-ddd2-4778-8490-b58b9eaa5e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb9fe66-2d61-432b-a00e-e23ff6f0d6b5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1ad0ff-8a69-4d11-926d-09b36d8fae0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53fbf85-5525-4840-8919-51c3a623d71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78c0913-ff08-4311-bc01-dc35babb5d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97e5abbf-1a53-4930-8221-cdbc5148ef7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1777c235-c9c8-4b44-b419-dc004af63450",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91cd866-238b-4a72-990b-34e6f5e56ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a543fa7-8321-4081-a515-70fb28f2322e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acbeca5-fe3a-4274-8739-7ff72bf09a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef4247c-b7e9-4758-9db9-a687d8fdfd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361c2137-ac76-4ff3-86c0-649661b10203",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe019ed-c83d-4af7-801c-61a0741434d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdfe0c5-e6d0-4f32-bf73-3225cfbf74e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75c2d6f-643c-4edc-b0af-a27832bda61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86ec736a-47f6-413a-9677-7814b4d13371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e576eb-f3bf-4d04-82f5-09fdeb458ea9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703dddd5-dca2-49cf-bccf-102d286ebaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ac8c85-17a9-4e02-b0a9-9e67478f325d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8b8ec2-942c-46a7-b861-36c54f2e78e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5823c08a-fea6-4cac-9acb-a9c1582a0dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8f2155-a1ce-4c36-9bbc-e8a42702e19c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d43974-52c0-4a14-9fa6-e8b2568fc5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0259be-afd0-4365-aaf6-272fae62bbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f9be47-7ab7-40c4-86da-df62826d6774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f75e753-bf26-4fb3-8f96-386db8b08fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b50b7b-b0d3-4259-ace4-cddcbdd5fdb3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49246c71-60fd-4a7a-a041-c1bf9928a820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b354e243-283d-4a8f-85fd-e7c8ce6c5267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0662069-c826-4d13-be81-8d3d4a887c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "db4a7b0b-5026-4a6a-96b1-a36716c57dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32078776-d494-4153-b012-9f5fe2972627",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f431b974-ebf0-4c41-8bbb-a310d2f880d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ffd781-75f8-419a-baa2-f7ed3e651a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596acbaa-57b1-4ada-8116-1b9592bec243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e83f0252-57b0-45b6-8c35-287735ed9fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e96268-2db1-41ce-a4a6-1165e3c4c5fc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d560efb5-4c69-47fe-98b0-a422f0e9fb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fc6b10-ce27-4ccc-9dbb-353001ae8bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b261cf1-af29-441a-9740-e508cf80774e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cad2f7cb-1650-40ac-b3d9-4358376436f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8dadcf-e989-4ada-811d-183c673a9c65",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23aa4442-0346-4f91-9625-2a1254651fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d3855c-1284-4e74-baba-a110b32a52f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd1532f-551c-44ee-8a9b-eef2055f320a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "315e60a2-cc12-47a1-8375-578fb51b797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b05eb0e-0007-494c-9bff-6a13ba2b9791",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69236902-59a4-4c2e-a79e-464358338fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1331dc7f-1887-4b0b-9ac5-8d568143957a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465f867b-10e5-4301-ada3-58b22d20feba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee79ef3-a358-4958-8343-701f93f6a65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e46e826-0006-43a9-a04b-5d8848c1c7a5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf79660-acb9-432b-916e-1cc3fbdfbf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ece8fe4-9e58-437e-84f2-4ca75916ff04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7c58a1-907a-45df-b164-bfc43777a46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "196d139b-addf-485a-bede-fabe0a081c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde6fd99-61b5-496c-b5cc-f650f4517cf3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffae91f-d7f3-429e-bdd4-ca92f13bf6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2705227a-9f88-4356-9bef-9f42c4b3a719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad815e76-9156-42eb-994a-9e5e63e212c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "69f43794-1952-442b-a4c2-066d40466a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b6ad2a-f07e-45a5-951e-98a1d1a37eab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d32457e-b854-45b7-9c82-3918a59cfbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4622ab1-0b3f-4aac-b41e-f21d0a332dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978467a1-d338-4a65-ad79-bf3ceb46eed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "17349e66-0d15-4fef-8ee7-4a8d5137bdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaf629b-55af-49fb-8c57-f97c99392b82",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2569689c-11a3-4cd4-8cb4-c3def2dbf68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c1a2c6-e80f-4315-89fe-ede79476f932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6628e85d-7ba3-4374-b0f6-197e1bd2b5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f76afe70-d2e5-4181-b9bc-b28f059d3ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc3c42a-ad52-4d34-b385-6dc3d6ea6808",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555f039a-509c-4204-b234-76212d4f4ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e606b0-58b5-4f67-a427-c7f6b7817c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd971df4-c032-485d-b376-08c713853232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62cb0d53-f7b1-490a-b5c9-0969338f2585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbca384-6f66-42ff-8746-61e38ae89d11",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8b1109-ca7e-45a1-893e-ec7f433245fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff917d56-0c8f-4c57-9fbd-3e0bf4206694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e9c201-7661-42aa-a91a-916a4b8e0dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e051e16-c427-415d-891b-06ea8fcf66c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9412de3-0a49-4d5a-a7d5-662e6ca9e275",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd94f443-65a1-496c-8e66-5fedb8d36126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fc967b-8aea-409f-a004-dfc1713ab37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dd34b8-7130-4e58-bb85-0cd59bd4752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb11e134-6dcf-45b6-ac69-9c0b9cf349fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270c3247-b8fb-49fc-a7e8-cadedb10393f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541b7beb-b7b1-4b38-b943-ba6a289446a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37830ab8-5ac8-4d11-b59c-1e2735e8adf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fae1bb5-3fba-43ef-a39b-9260da23a467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8fd1cd-0322-47ab-b9f7-83ec0f36acef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d400f6-5b6a-4d81-9c15-dd405fcf5560",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1e69da-0390-46f2-a9c6-8e70d2867a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15c3c64-4d7d-4e70-8cf4-8aca669ebefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dff57f-109b-4add-86ab-365620260139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b521dbed-f603-4439-a97f-7c7f9c0a01ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba805414-4cac-4dd1-963f-dfb1077c4ca1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae02d64-fb18-4850-9b61-84312765b72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f26639-4a88-434c-aea1-1477d8fe3b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a0f165-2cfb-44de-9d03-10b53e28319b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c25691f5-d331-4187-85f7-3e695f3d43af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e3a94b-5071-43bb-9f44-bf272ed92663",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309052a3-a95d-4405-ab32-b7f122451f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb589fbb-5700-401b-a7df-64708234750a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f93b1bf-6c95-4512-be87-c14ea61b2554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad06bec-fc22-4c24-b6b2-4c51728a1491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd929a5-ea3c-48d1-bfcd-dcaa1e0e87cd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc51e946-523a-435c-aa05-79b830c4c78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9083ed-c137-49ca-8bdc-e2fc07c3a8bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83743e9d-72ff-43c3-9433-f07254135f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58d58ebf-7f2e-40af-97b9-12d233fe5335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749a2959-cebd-4b5e-9866-dd7c876fc4dd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374b9341-0c44-45b9-8279-258293b89f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094adfac-0927-4019-872c-d4f5d9d3d494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb88857-14ad-4ea7-adf4-6548dee6eae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdaece14-284d-4462-87ff-11ae08f45ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41437590-a101-4bf3-9cc4-5ca70c7ec313",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ae8e1b-7221-494c-a3b2-5bfbb174f4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936d8825-fb6d-4438-bf4f-81adfa65532f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090c138f-c0d0-4da5-bf87-4853b881a724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86bcd752-08bd-4e08-9e3f-0f9f41aeca20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd91f09-7499-48ee-b374-80b7929166b7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d05d54-8dbb-4db3-87e8-63c7165d2543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6199ad-0507-495d-9933-eb9a5821db0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a16c201-86dc-43d8-b19b-b30198278249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e56b19e-e204-4d0a-875e-9305d33fbda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5baa555-99e2-4ac3-901b-b21260e79593",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f373c588-9a53-4c73-93ec-e5f5478f4dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a454e0a6-903b-4550-9f3a-2dca57f49af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d661c3-72ee-498e-bbd9-fe77b7130156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff48163-0fef-4b49-935b-87cae5d9f29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62d0c6a-12d8-4eb9-b20f-3c5d92fedc93",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8646187b-d32d-4182-bf17-9abe7aac7bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f6d9a7-b1a9-4ccc-aacb-dc0d8b329fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67167f6-5e11-4338-8f69-8f51f079c7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "149bf4c1-fb0e-489b-b267-261db9c04083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa03ce67-693f-473a-a9c7-33c898566025",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50f66f9-432e-43c3-8e85-3d25cbaa8f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d1b561-eb16-481b-b7a6-ce87ba54f36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afe4a6f-8b30-44f7-a6c1-b69dbace4bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30e27944-6f16-4afe-929c-0df8e7203dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a20dce2-6e57-4c9f-b313-95aba2ff9708",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c5adc6-9ca4-4188-8260-e442e60a7cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde2c0cc-6a79-476a-9646-c4da98aa83b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58102c37-b937-499f-bea5-4fe1a582c3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "194136de-a55e-4b5e-8d68-2247eda3cf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff66d741-5875-444f-bdb6-b23495fe8251",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3632f33-516a-4321-a264-e4636cafee23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e4d8dd-5e1f-4588-9f2c-c22533ac1450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20766f1d-9f3d-47f9-a257-55f7d008e177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab643c2-bbe2-4185-8073-71a328877665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afb9ff5-2a87-4d48-8319-2a2317f64bef",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb685fc0-1b87-4dd7-986d-905fd9cb3c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edd2ef9-8e6b-4db7-8a89-1b93c76108fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef18dbe4-8507-4990-9e1f-a902d68e1d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9440185f-aaf9-4b96-8c31-2fdb6f4d4b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdf3a16-63b5-4bb2-874f-56e68f21701a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deac55e7-feb1-4979-8e1a-be782fe53e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9a2aec-2d66-4eb8-8ceb-d96a7eb392d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee009497-cea1-4548-86c1-14bb937a5487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b466f325-986a-4067-b334-555305bc6718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c6ac52-18cd-4885-9bbb-88bf8f9ed9ae",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cf59ff-69c4-4462-b84b-4216d4f09b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7767b406-7c88-4f5a-b12b-d38941639ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e432f5ea-f86b-48b4-9c42-d7b9fe835be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78090975-bc8c-4334-9097-87c73f538b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7074e91-76d1-4531-95bc-2853e6ea8c54",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96f9ffb-945c-4dd0-bbd5-3580f0ff720d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21b78c6-4273-4557-bd84-5006e84f9b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0ec71a-a472-4c34-a575-d2430daf58c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b45a458-eeb8-401c-b64e-5da976174017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9a8fad-6c3a-4a5a-bc6a-80d744f8dc23",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfb7df1-81c9-4f5c-9669-986d3af4c393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1335e0-f0ff-47ed-9467-b7e51422ab61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08525bad-40c0-42f6-b300-e03eb344c8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1df8290-c1d1-4dd8-b2be-8eb14dcbeac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aa0be5-b76b-4793-8eb7-9c618eaeb884",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0754ab-865d-4b36-8d2a-8b3eb4cbc44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1674ba-ea4a-4340-87d5-5e767c19eb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7253e40-ad13-4b3d-980b-48ae50745e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f52f1d-951c-4723-aa6e-60ec8bb4f979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3979162f-a77d-4396-a5a4-ba29d2002912",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3db62d-e977-4e3b-a83c-43fa7c47cc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37535652-84ff-4de0-ab14-c1b11eea90ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8d96f9-5735-4363-bd59-2d59f0bcb9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86c1c992-ab94-4b7e-bde7-1c4da2fba864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1675f049-31b6-4213-974f-b309f26ab287",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd166d05-89bd-4fbd-8a3c-f343d116a60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e1ce93-4869-47e5-a9c0-b32f0aae6ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cae071-36ff-4f97-8c3c-e753bbb41171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d69785d-340c-45d9-9d11-93100020c4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea07931b-18e5-41a5-8229-33f041301bfb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d22c1bc-86cc-4f62-87ae-224c3ca6ee65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784877ff-4feb-4065-b332-8eea3fe84a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e490ad8-abc0-4d27-948d-cedca3a4605e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d9de66-4a57-44c6-af79-b97bd6f2f4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa78a77-35ab-4b82-ae98-b1be40b2bbd4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6353166-8f78-4923-afbe-a7aca7314056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0af2321-e032-4cae-9cf4-5c16771aa175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8848577c-739d-4676-899e-e5aeff4e4bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0bd715-ab2c-4e1f-8cc3-38aaaf140d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1436b9f3-46cd-4d71-8f8e-1b679c4e76f0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb9362a-f73b-4c40-8b10-3ac48fd3cd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e802f547-7098-4c9c-bddc-1b390e112ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d64e80-6dff-4c89-a200-ee4b5b3b427f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35f5e96e-81e1-4687-ba57-3ebf419492a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e2f007-38e6-4b80-973b-a2a498af7520",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed4b5e4-bcf5-4215-b093-6a4024b3f713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2d69f2-dcbc-4bc7-98d1-4201e7c1a289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86f746d-3e97-4506-8d10-a2e8dfada314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e574f1ee-01f6-48be-81c6-24136f29f7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003a5545-c799-441e-91a7-66659899f760",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2827a65-3aa8-48f5-8738-3cd60d938625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ba9163-cd33-4770-a35c-7a86919a1aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b57c1a7-3440-4ae4-ab2e-92f9ed8d2438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36be201b-c680-4378-83ad-c8b3a255cdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5fa9a4-d462-40ff-a12e-6aef850b6008",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c36d342-0b6d-4209-918c-0ae65f1cf6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d05f77-5166-4f6d-92df-93f49db0c8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b08eec-9bfc-4466-b525-5ec1fe9f20e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce98225-486f-43b5-9d6a-3015fc0659ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fde533-a3e3-4e01-9684-edd2f8ad7386",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaab569-0af8-4c7c-8d96-85729f1bd183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33255c0f-a0ba-4b2f-89e6-5c36c2563478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a4f1d1-6755-4b4e-a500-dfc417cfb8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ab6e52-e9df-4c29-a8ca-6cbfce7b9d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9a3b6d-cea1-4464-a5da-4c21bf296a46",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39abf2f-3a4c-49df-866f-a6750a0ff819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c2db78-66d6-4531-aaf4-3a4b70183a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e9dfdf-d725-4aa8-b240-20e29ed0ca61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4ff932-0365-401f-8dc8-b75ad329536c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afdbb0d-b62d-41cf-a1c7-17b445446faf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc7fb3b-7c99-4342-9d48-b8be7f101b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8b0feb9d-09e0-4b68-a72d-6cd89eefbfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4566da62-95b2-4580-aa1c-bf5b3a6b47fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "50fffcd7-5096-4b02-badb-6e17ac210439"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f0f040c-8a4c-4efb-a31c-94712796a337",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3980a42e-7214-46d2-be98-1fe5c64d9546",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea763ab-6acf-4ee6-8728-ecdbc6224c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac6bf5c1-dbda-482b-ac4d-3be8b6301c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9ec016-c1f8-4c9c-823a-13c1679180e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2225feb4-f442-4182-bf9c-b50ce13837eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5b965d-5fec-4f20-8053-2191b1978f8d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07241e04-a5df-46be-b629-7cbbe7d57e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d10c374d-aa93-43ab-a030-1e0638f93248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a41da3b-5bad-4b32-b16d-23f14f68d1a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "214411be-0920-46d4-9390-07d4d5b0b987"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80d5a742-a3a0-411c-a500-586ef3c2c2cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51d1f579-1a99-4154-afd3-3f3c99c88262"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2303008a-160a-4a09-8713-0f39baa2a420",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "390d78fd-a3b4-426a-bfea-9c1439231712"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f37ac9c4-bf73-4c82-bc47-34d845244f95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f35e6ff-ca45-4138-842d-f41ac7e97e55"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "85ee3189-206c-4684-8537-0b9beda71d21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7af8910-45dc-4c1f-b9bc-efa647c08388"
                }
              }
            ]
          },
          {
            "id": "caf92398-3b10-46c3-bfc8-a2b37b2f2850",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8abc837-38c2-49af-894b-6d487f9e74b5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5854411e-68b5-4501-b4d4-c7d391181d6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4d11e10-2f11-4987-bef8-35f162779d42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdc9dfd4-c5fd-49c7-b42e-9af745a45353",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ecc2aa9-9e9b-40c9-a7f2-0bc1243ff5b2"
                    }
                  }
                ]
              },
              {
                "id": "62374bfe-fb1f-4ba9-b460-90be4ba0f7f0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a1fb0a1-b61b-4662-aa67-51d477fc66a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1771367b-e40a-4f69-a39b-d0eb5ddcaa0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d83f7b9-4c9f-4d02-8a35-ff36651e236e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57c104cb-ed9e-4822-bda8-66fdb56aaca0"
                    }
                  }
                ]
              },
              {
                "id": "e9a08c9e-03a5-4d0e-95d6-0301ef871261",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05b36e25-53f7-465d-a95f-dd9225dcd202",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b0caef8-b547-49b3-afe9-4641fc3817b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86431b92-b7c4-4683-aee0-85074dcd208c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c403f938-e2df-4c18-999b-e5fd37fed2f3"
                    }
                  }
                ]
              },
              {
                "id": "c333064a-032e-4349-8601-23f5bab3489b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a20b9d6-5c20-49c6-9041-c4396fe76824",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "577aec9d-4310-446a-b9b2-5bb8fa8864d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48c92325-6c71-4a6a-9dd6-1c69dda4b176",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7cd20ec4-806d-4492-b272-ecee3244b2ee"
                    }
                  }
                ]
              },
              {
                "id": "6d5e107c-2be0-402e-95cb-159958a7af5c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33c04caa-4f99-47b8-a362-b16d5603d259",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d06d0de-937d-4771-8373-d378bccd58c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13bd2549-0da0-4f0d-9c9e-28a6d3d66f74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0ea515b8-cddf-4e87-b234-563be997a88b"
                    }
                  }
                ]
              },
              {
                "id": "a47008c7-d9ea-4f9e-b031-31b2bb368ff1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fd5c916-d631-4052-84b3-0aec6adc155e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e638356-bb15-49d8-a581-b893fcc7b0f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c3ef267-be11-41a8-847d-50fd4a411b92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b77826a7-355c-4f63-a184-c8073c71404f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c059113-62c7-4c25-a589-0c8c4d41ea91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ebe4fbb7-898f-4911-ae16-ab93dbf6886b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abf79366-b51f-473b-9b96-18bc38d1f1cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ea38e02-95e6-4775-be5a-da524c4f4f34"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e019688-6a80-42a7-bd97-9e2c50b5fc82",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d38b2735-3c97-4c8a-87aa-5b25d7561d59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a547fa58-a4f1-4e00-8ff3-d1ce63fd3277",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6892e4f1-8632-4127-baca-2f87df29333f"
            }
          }
        ]
      },
      {
        "id": "85d34d3b-3bef-4f8a-b603-1f6c6ccda07e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "eb070017-bb56-43b0-b60a-b04cb74529d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5288a460-2704-499b-98f2-eb2bc4d9fda7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79632f5e-1740-4fa2-8a14-1dfb7eb632bc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba998a3f-10d1-4de9-a480-68361fa454d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e431bfe-40d3-4226-8915-d29e672b6486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b2f08b-9306-4138-a1d5-df24877a0e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7feb59-eb28-42f9-a89c-326d11ccfeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcd294e-1de7-4c55-a4e0-0d6caa837fe8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea52a662-ba44-4dfc-be4f-7d770b6da4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a09fe9-b1eb-4c86-b6dd-2502d4177074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16f9094-8cfb-4485-aedd-511ef01b6bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c92ec376-6a6c-411b-97dc-7e1665f03771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c062fe-e324-4d05-a87e-60ecd89ee0c3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e90bf88-4626-4d38-9e76-90c15b118f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b4def4-c1b2-4bd9-8de9-7df460a3a0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f919f0-0679-47a0-bbae-1bc3e881ba1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6344e084-f3e5-4197-a3d5-06fd06f7f7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290929ed-179d-47fa-9747-9f81169d6f60",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df07caaf-35c8-411f-8a43-8a8666d86eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cee3372-4671-431a-ac10-12073af82f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39953422-ada7-42a4-b248-1d68a67431b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48a2642e-02c7-4624-a050-abba4cee2b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b83a0b-09b4-40d2-bce1-1ca7f76bb56a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cddfc0-c352-4365-a77d-104b37e613fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b79b61-8f99-4fd0-bd25-50d896eaf86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9299765d-f6c7-4d6c-80a4-15466638ac0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99cf055d-f424-4980-b5c2-975c1b2d71a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fbd8bc-728b-49de-8655-267acb7076a6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f057458e-5668-42cd-9c23-88830d71f6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87093556-45af-40e6-93b7-24fecd5404c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce933f3e-3b1c-4b0f-842a-0defb2478134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a592a84-382b-444d-81fb-c0969625e5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21a28cb-d348-4a60-ab4a-e12c39800811",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab14b578-5131-4951-97c8-fc07aa31bc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f5d84e-2186-42c5-bc66-91bde3720795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113add11-25d0-40e5-8c55-c6086085c58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b3e410-8c91-455f-a905-d3a1262d2522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6437bc73-897a-453c-8e3d-f6337b003a56",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700bcc85-d79b-4810-84b0-41dd7eaac54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe82f99-6fd8-4186-9045-0288a96e3c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ec07a9-c968-4ae7-8509-59ee4488e271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06c8f97c-9807-4e10-8910-3f3e628e595e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db934b5f-273f-46c8-8198-cb056ba4e159",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dffa9ac-07c1-484b-b7a1-ad56d7af4730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b19b79-bff4-4ed7-ba58-123db1394da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7238a0-900a-424c-8cf9-a67a511d2928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b14419-359a-41eb-b0f4-f5702b734803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deec2f72-7bca-43bb-8dda-6934ffe0362f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fb5204-77a9-40cc-b9c6-dc2cd0020fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d9b713-632c-4d09-9459-937a8b1dec43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd11847-f897-4bf1-ab14-f4ad5b402ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0100195-3396-4e3d-87b7-cbab47a86913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544059ce-db5a-41aa-b871-7cf2ae2cb2ea",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626adb8b-9fcb-41af-8d77-6fc5f0c7829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432f1eec-0163-41c4-bdb9-7444d823d8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798cceee-11e8-4f9c-9461-8f73109fe479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b86900e8-98fb-4bd1-83a5-72098c254dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95294036-a300-4dc5-ad1a-ad087a54d283",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a427f62c-405d-496a-806d-4f24435a5541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec34087-b1ef-4f7f-ab3c-a6ae9814339c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59716dae-2082-432d-9583-42a84ea3f4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9dd36a7-4356-4149-97b6-2b1618d05c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8b0b42-5df5-40eb-9c64-e8f784620ce1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef32995c-dacc-465d-94ab-6397392c7fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041e23dd-4e7f-4fce-bf71-8235cf8232a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0066dc4-8d75-4c10-bde9-a61caeff4777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2d41cc-7813-4fe1-8eda-a892f97ec0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00391c78-bb59-45f6-9c12-a244c5662932",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af828ae4-fc73-4a07-8079-dff18b00b968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8dd0db-801f-4c6a-a6dc-9b437b6c5bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedd5ec8-9e19-42d2-a04b-5e49f8bfefb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a8000b-5001-43d7-9be3-f3e8d50c6d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9358cf0-c46a-4063-83ce-1493c5bd65ce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2d5c11-51e9-482a-960e-9491e369e528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e075a270-1d4b-4805-8eb8-49f9e4af506a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e166ed7e-71be-4d3d-a4c3-914c9180acd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f3f439-1e2b-4d6f-b30f-d4659607cf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d5bd8b-71ec-4202-9873-db8c82ca6842",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b172377-f769-4df0-a79d-f4b76697c251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3719ea7a-a8a0-499e-9ae9-2e492712e73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5b5982-4943-435f-968a-9ae2f38477a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5804764-e251-4fda-b4ea-9687f318a853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa1abf6-a8a1-46f2-88d5-70ac26dd3870",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74310ae4-28c1-4342-9867-9c68e5209c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3c4ab1-8c28-4dbf-8d21-7eecf573f5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a1aadc-7bb0-4816-b20d-7f2485f6e81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "84bbee9a-994e-4120-98e9-e98584da4c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af933767-f8ad-4d46-96c3-d29713fb16b5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c987a1c-b1d8-4755-8836-83430249cbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108705f1-51dc-4117-9e3d-fdafa1384e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c9be6a-7e94-4898-9273-7fa458730c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7ad5ce-839b-41a0-b37e-f46721d06e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1778621b-d0c8-4657-b3ac-687e3bd6b739",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8515cb3-f65f-40a5-9027-d3205e31ec5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46557ac6-415b-4814-9ce9-f1919af21ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d3777d-b700-45d0-b41f-b30f1c58b5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ee29cb-76e5-4775-b5ed-ef1f001b07a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2fb9e6-5610-49f6-b54f-de9a4aed6a7b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1669cc37-5988-4248-959a-0b0044d81d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1fffe6-829c-49ea-a18b-849b93ee062d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf3cf1a-7f25-4300-ad23-f87eee84407e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff50da0-5c86-4107-be41-a729521e472f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd48913b-8016-41aa-a24b-0dbc640ea450",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a54e47e-7be1-48f1-8367-499bb6c55ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4762842e-2fa6-415e-9399-266b56e418e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdfa798-9cdc-4516-8ad9-c8dab9da8463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc44e9f0-9570-44f8-b554-282a4bfa6a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b5aae1-2a8e-4077-9e5c-bea99004a023",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43d2d8b-a09a-4e36-8021-15be392ba19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6d870a-d9d8-4990-a788-495ae2b20f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87227b7e-2d2b-40de-a6c7-9fb8aecc36b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fe57fe-1e7a-48e7-a79f-4a660d022826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79185b86-2da1-4487-bd2e-3b39a3ac0bf5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0347b1d-0eca-4b7c-8d79-00605a7c6118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0a9e95-e282-4c4f-8cb3-e19289a71605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7479e54d-b5fb-4c34-9af2-37f310a8cc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5745f9-1f58-482f-b0f2-ce047954d13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9338cd7-4787-4867-9c29-fa66b3e2f9c1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe81fa8-4d4f-4ba5-b40f-70dd7ad1ca33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1916bb54-2f62-43b6-8710-94a3ded05ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e589e0d-a72f-4a24-978e-90db8b77ce9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f3897f-c389-4b7b-879d-954203d753b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a66006a-06c9-4614-a99d-eb9ffad386c4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45a77dc-50d7-4d9b-a2d3-ac3429d3701b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbf87ff-02d2-40da-b171-67ef6bc19456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89802ab5-c8c0-402c-b3d7-16117a975a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bde68e-b731-4609-8587-e80916320709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91587735-1c4f-43e7-ab5f-0a4130e398a3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dc269d-7bf8-462e-8043-7581f0b6e1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cf3ec8-c1c3-4bdb-ba3e-507005f9fe8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3ace0b-3868-41b9-a1a7-743b87ffd941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48886dd4-a7c9-4abe-899c-24830e438879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340808f6-31b7-41c1-97f8-31784a98a0e5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d580f59a-6748-49d3-ab1a-83154b81f545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ba2e08-a3f4-4b1d-9493-e938ac9dc00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf6c7ae-86df-4c2a-bf81-c769677f6643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "166528f5-fee4-4960-8a23-0eac7247358a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc681ba-824b-468b-9d6e-4906c9c0bc08",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010fd359-9fc0-4418-9eb4-c33f5feba42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e11b4e-c4cc-471b-946d-f850a904328d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb20c0bc-387f-4456-aa27-40382d0c1658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "719a41c2-1f5a-4e15-a491-cfd90a7db2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e309f23-1004-46ee-8491-301633c07489",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448bc2ff-edd0-49ad-8ae0-8e933f940090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9b49d3-937f-437c-aacd-48fe2d8848ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed913e7-fe9d-49a6-b00d-1eb9a48721c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3167f9f9-4120-4aca-b98c-309385fef2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b486a860-330d-46e7-8bad-873db655d2ba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e765e4f-981d-431f-98b0-b3c9834cdd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13eaa768-fa15-4202-ab32-3b9dacc8ec80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8038c0f-6aeb-4397-b462-185ff5f1f408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0224473a-cdec-4e7f-9885-2a88b3046507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4f2615-a453-4e06-b898-c6a32c45b61f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7c81f6-d65b-40c8-97c0-3f274cc99bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e1eb1e-f348-4d7b-b809-90db3582488d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7ee899-773c-4c2b-a9bc-64b364acef7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf0e00f-6274-41a8-94e5-08a01f8bc908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf83c63-f2b9-4c75-afae-003a7d24170f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f02a626-0e1a-4b86-a9d6-d4bb666e6f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea22ded-5d4e-4cf7-adc9-0dca1859b8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b50d0ba-526f-4473-8506-f97a0e861467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a321cf6-7b0b-49e1-8851-5f49dbeff3e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "980d2d8c-3142-4491-b822-b73282c350e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30285f5c-a4db-459c-a521-85727c542629",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9592a00d-e43a-4ba7-84e2-c6b44a2a4983",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2f41a6-2bf5-47c8-9464-58b0ea957ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de424b8-64d9-426f-ae11-da574df0bf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1915e3fd-bb44-4d8e-a454-317721ff2629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661e3ab5-1b53-4826-ba6b-53f7e9aa689c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81214f1-5589-417c-8f76-b3520b54437d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "477b7899-7060-4da6-88e2-b9df565e5b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321c6d85-fd92-4615-a7ec-b346ef5039d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0ef9b5a-3d37-4ebb-8b16-11d3f8f28917"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ffcc6b9-fc19-42a6-9b7e-bbd7278bbfff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a8a77bd-9c29-487c-ae74-a8b6a4023cc4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "056c6893-bf2a-4f76-90e8-1ca759fae1ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "276a45eb-5b29-4d15-89d0-578d0b142a86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fa5274c-720b-463d-a2ae-7d17695a77a0",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "acc9dd66-4ce6-4d8f-a8d1-1bfe5a1d3c33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09f89dee-aecb-4eda-966f-693617422d1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ab317eb-cb71-44a3-8fcd-4083ce29cb52"
            }
          }
        ]
      },
      {
        "id": "fb3dbfb3-cb78-4a0c-ad02-9a22960e8890",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c498a557-01b7-4bf1-88e7-f8134ef71391",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80f80f46-98b5-40f1-a938-6ec6315a6816",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90bdd0a0-62e1-42c8-9452-3b59751e51d4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127e311a-daa3-4250-b163-c19ee5d477ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a86802-3c50-4f5e-aee9-bd47c4b657a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75db2a31-103c-4589-a2d8-bb2ac7d1e2d9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2871a422-585e-4a39-9657-aeee22e417aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143eb9af-ef23-465e-8beb-a0988e391232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b3b201-5a1e-4aba-92ef-e37ca7278960",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecacf140-a02f-4983-82cc-442f0e08f2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3bf2da-aa48-46af-be61-295e936427b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e581e58-a17b-4221-98b6-a46120431447",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ae68ef-d1f6-44f3-8403-02588846aed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37896d79-21a8-42a5-967d-d6c6134a6475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b52ea26-19c3-4fef-bc19-d4abf355bf3f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f6d1e3-7f44-4ce0-9da7-0a871acbcc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097572d1-4a87-40f4-9e27-3d4bc156c977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219676ac-366c-4881-a1f4-bd4afb2e1348",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b979fe-5fa7-447e-beaf-6b5651c4c750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68621f4f-5b5c-49ca-9cd2-3fc082cb28c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38829eb7-b2e8-4555-bf94-c42745a97c09",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c15b25-02e9-43ae-9962-6aad3ca3f241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c376c9-0f0e-4fdd-9050-82ebd86689bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0e514e-2e6c-4bf9-b14b-098615fa2061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23fee30-10fb-44dc-89bb-6d7d7a16dd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2147b66f-8406-4fa3-b180-ee70d6d76170",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d984c6-0a47-4626-b5a7-f895bd6b453e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "186ee1a0-67e3-4f92-bce4-63fcee58858f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803c9ab7-dae5-44e9-b5a6-932a07ad3162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a00955-4539-41f6-9bca-3365b478e176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b19ce0-bddd-40e5-882d-5b55391cbe40",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c6524a-0be9-4462-ac75-e141d6c654e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b9799b-c71f-45f5-ab41-19c88910c23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "facb0be6-89c9-4655-a482-b07a07c48148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7d7b15-ba4e-4c0f-92d9-17a9b90ffd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d32c7c-1aaa-4ad2-a5bc-89b891f883bf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45ce47a-9fd8-46e3-b5b3-7ccae9958346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae35427d-12e3-4335-9c73-1aef83edc247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd223646-2113-4843-b9da-2ec3092c972a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f9d738-20d8-4a56-85eb-38f5b7167e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2910f3-759e-442e-8460-5073b3cfa8c2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90c1874-f8d1-4862-ae2d-17b570907ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f115998d-df9d-4965-9567-14f739940ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d9dbd8-2b43-4958-8519-6ef73bc70c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a59cb8-4938-46fa-b4d1-19a9f15b2b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9eb0a0-89d2-4834-9178-2a13ac8582f1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5382588b-7b8b-4a7d-a3cb-b7563e373825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0862bc94-b890-47e3-a9db-cc3d8adeacb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1ac948-c0e0-4e12-b162-4b80dca43228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9ded2e-c93a-4eda-b173-f4d3d4467b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b7d3c6-3195-4c12-b89e-cbafb1bb6b7d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6befb501-5259-447f-8715-a598ae785574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6d8424-07cc-49c1-b618-25b4ee60ea72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077a54ba-d57b-4675-9a51-adf977980e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406a25c9-b0be-4d34-ac85-967812b8f80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebade802-9f15-4375-aef2-8e1e4e6f0bca",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edf83e7-9f24-465c-9b53-387883f80d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "220dbd74-c0c5-4a77-b93a-7634f918f128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5f1fa0-6e76-4ce1-8934-03678024d8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e61464-beef-4c50-a63c-0af235ee0530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c24391-3c89-42cf-be63-3cfe3fca5111",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dced77d-db41-4a7b-835c-3472f8685a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "406b115a-a6ff-4c34-a0a5-af2326594f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fc3b1b-ce07-435f-9b9f-3155cb458671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ee9776-bd64-4edd-98de-835473e1ae01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e85936-8766-4129-af7d-9df8deaec389",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9d0e0e-65c0-4456-8b35-b831f919ecad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e99f4d1-951e-4b96-af6b-61633396cb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090e0e25-b204-4b76-9501-ca2cdcb8ee57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1c6e49-c699-44be-806b-bde527d155eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bfeea9-9ad1-4df0-abfc-6699a70dbcd6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f813e217-6450-449b-94a4-f97bc3ebd7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd860d1a-30c5-4cc6-a498-ff50ebdbee1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd185d5-9197-472d-adda-d0aee084e7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d55d02-52ab-403d-8f01-27559f1091ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2de66c-6a76-46b5-967a-a5525e658717",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1852ef2-1153-42a8-9256-0489330f2275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591c96cb-68b7-4c95-a948-6606ae1300c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4079962c-2998-41a0-b721-1baf81d2f77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b416b957-966d-4ccd-9714-da4443974e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24e40a5-202a-4097-8e63-50e5f21c0baa",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b774e8dd-f77e-4534-bada-3bc0ceb7c3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbe6ecd-46eb-48ca-9785-5d0d39ddcde4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0413ed94-b0fb-47e0-be3f-a682ea47cbc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38c0b69-7660-4efd-bd6a-5fb0667a0a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae6b68c-6ecb-4b96-a0c7-38236a3f684f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf66ae3-8f20-4ab5-bcf4-e33f4dfad1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287cc485-da2b-43f5-929b-7bb2c3f7f298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f042fd4-ed5b-4c92-8e21-43f4a12a50f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdaa87d6-4da0-4489-814e-5599f3eb2b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041a7f37-5530-4165-877c-ffb09ac111dc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5debed-793e-4aeb-9012-27a15c1eea41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd47915-4f00-4753-8e48-283cf9eff07e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d3f7fa-e38a-4d1c-84c3-6234418eb2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e37048-a718-42a0-acd7-ef8063b3ceb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d82bb4-99fc-4301-ae13-e268d747ba79",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3faaaf6-40a1-4bf3-92b3-23b578f4d8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ac3c71-0d81-47d2-abdb-e61adcc4a9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4915feb0-21fd-4832-9090-2fc4fe63276c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e71e090-2b00-4d3e-b270-61edd59e3573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e41fd9-ac0f-4513-8785-deb792c9c285",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879f09f5-1a27-46c3-832d-0a0ea5e46cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433d4b18-b7ae-48e0-8fa6-ef613ca844d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15124f3-0731-4656-8ad8-e73a4e72da7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d00fb62-7c3d-414d-9d4f-c44578a9f3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867035ab-2ba7-4dad-b55c-3cff4cd58f41",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d97fa89-c988-421e-a7ae-adba119cf415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1ed806-5f37-4748-93a2-f881ab942905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1334ae57-7ceb-4aae-82f7-ed8f43c3fe2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3f35ff-301a-48d3-b5bb-a0321cb7ec72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72988bf9-e10f-4c9a-8683-ad8e4eecfcce",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6962e84-96fa-4c4d-9434-edca8608d84d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3caa8663-6845-4d98-b449-66f3e8bf6470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abec313-7e89-4520-bd75-8822414c3133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35dd4532-a8de-4b0e-bec4-51b0357ba876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edc20b9-13bf-47ef-a20f-34e2b9d19a87",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d835dd-e63b-47e3-8acb-26497a08c3d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d778fd-2971-40eb-89fe-147a779a83a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f81a291-8a56-43ae-a77d-c71aafabca1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22abbef-0d9c-4e3e-add7-dadb6edb1e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f8da07-8b5a-4f58-bc97-3c8cf282f4c1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67faff39-ceef-42be-89d0-3e7e682b17f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf1d0e1-1231-43aa-9833-b534718c7cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd57be5-993c-4950-ad5d-e238bde23412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab1f5e4-9bf3-419f-be40-86a227e4bfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f6e1ec-d988-4d35-a369-e36aa4b765d4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cfcb5e-a168-433e-8999-7760dcb72a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd89c67-28d6-4a07-9be8-55095760d5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c802919-b285-4cd2-a87b-922e420a634a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0e3470-0e69-4bbc-a3e9-a2e4753033b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3671faa-7ab1-4430-a830-ad2aa9c4bad5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8b10a7-83c1-46a1-9776-74bae9b7daf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c2ae956-2d5f-420f-b77b-8fd4a8bc05db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6172c1b-dbb9-462a-9cbd-2f976a4154e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e8c64d-9f56-4569-a54a-13dcb8ae3f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6495c81-6e7c-4f7d-871f-2cef4b743980",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a09c1e-f775-4ddb-b975-b8e3c58540f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fadb1b2-3d75-4a7e-9773-059802076543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d62f7fe-2419-40fc-8def-a9d153f7d19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bf541e-89d9-4fd2-a8e3-beb48bc88d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac5e80c-7474-4017-b6b5-f286ddc49bf4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a3e17f-668a-4e0c-88e5-7405c45e0efc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e79255cb-1a02-40b2-a6d5-671063f888d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a35707-1315-40fd-be01-fe2c0d3526ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fced75-bf99-496e-906d-534dfa3d82f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d4b7c1-d3e5-4c55-8a49-ff41d86513fa",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2141a2-7a2e-4cc9-909a-06aa574d9f65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ddc6965-8b4a-43aa-8c09-ad22ceb293d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0beedde-e31b-4b02-9f6b-f6152d67a367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfc73f8-7d03-4d08-8987-510840d29ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4f0299-673b-4ebb-9e68-43f993ee2a3e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2bfa58-e0f1-41ca-bbf2-af2b1bbcb4f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832bf6f3-928b-456c-a568-074ec1c59c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed4d619-06da-48a5-ac07-2627ee247d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592dc27e-4a8a-493b-bbf2-2dd4fba23186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf25f4e-2123-4f62-8260-ba7c4f4c5277",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5207b18e-d3e0-47f9-83a3-20162168433d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6175157-9db5-44a9-910f-7ea2854ee29f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610d1b70-b893-45a9-b4f5-148c8cc1a53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73ccb11-c430-470c-a321-f97ca2a32bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4328b5da-4a2f-47af-b2d6-71e38897001d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5a9edf-5b45-4674-98aa-bf8585f45894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e77daf-d7f9-43d1-99cc-9a43ae0986af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1448aa5-69c5-4125-a923-29d25a0404d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27f3941-aace-476c-9c66-86c4cf7d0af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e31fcc-ef98-40b7-a918-778b3b65a8a2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fe05b7-048c-4a53-907d-f10e5e8b72d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0037f4a9-c97a-40ff-9bcd-42346ca154ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3327992-46b3-4a49-bbc8-2ba29d9795a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188f5f53-7a6a-428d-9016-ccb596333dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec1ff67-1120-431e-aa80-ebe53b6e6d06",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb2ae8a-6eea-4c38-8fa8-c20f03dfa8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d34199-5e13-45e2-a94e-50043e040cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305341ba-338a-46f6-972b-d5fbe1ad8b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec026d14-56ed-4255-b840-450ffd28e311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb068d8e-eec8-48ce-ba6b-abc57257acfd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f768826e-2034-4fe0-89e7-68f630875e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcd7706-0b16-496d-b672-60612e3712ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9196515-95c3-47ca-9845-78732149a546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c591bdc7-29f8-4e09-97af-64e8c7ba70da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83871b12-9816-46ed-b5e3-1b7170e85f0d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd7cb57-cf86-4773-8e7a-6e451467d21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f068e42-16ec-4a01-83b4-e76d2cd648f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06329857-5564-4e24-99ce-4e9970a137b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd7dc05-bd99-45c8-873b-d3b478a422a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1314173a-2717-4189-91bc-547fd3618d1a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14f0681-eaed-4b53-a103-c315eb8f1168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f472f2aa-df38-466b-980e-0e07d3704676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66972760-ede7-4f02-b749-ab5bc50b90bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d86f5d-51b4-4152-9c98-48da35304d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33e93d8-baaa-423a-a294-5d06fd9a1c60",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da0865a-2cdf-44af-b4a2-86291825f7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a321fcf1-c2d6-4ef5-8464-5152606b77a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f62e96-e157-45f3-8a08-42c591d395ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f1d37e-377d-49fe-8b08-49203e795a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd364b4e-b0ff-4208-b02d-0705e947c6fe",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07abf20b-e91d-47e2-be6a-a2429b0f281f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6c7ea6-a07c-4437-a320-5dbdfce92714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d20c478-46d8-439e-bbd7-0855b5dced09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94557fc8-7200-4126-8cd0-3c87abf3c229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1237cb60-9c1a-4149-8cfe-73721a3e1b16",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31ff6fd-d035-4fc3-aa1b-1864e16fbbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e1c073-48b8-4acd-a805-2eaf8e281643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8cbd94-f53e-4141-99dd-616a6f091dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7a206b-c3be-439a-8cc7-08f751a5bdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e3461a-4f01-4efc-bb89-138ea106c956",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ab5437-69d2-434f-92c6-e113f4418629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895745c9-e00f-4371-b0ba-567d23c14d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1251eefe-f862-48ae-bb52-d8811b084120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f2fd36-5908-4403-8401-be7b4bf775bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c99747-d919-494c-ae03-de247dfe5665",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5c7901-8c56-4474-98e2-a423ce4de7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5191bc1-71d6-4883-a470-d80c0267e263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c522577-1675-42b5-ab81-77bd0d4c708c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a2bf28-dfea-4bf7-a39a-318e174a94d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfb2ea5-4fdb-4b30-a46b-f339145e183e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7022836e-2dc5-48f2-9069-e9fa7fee0117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4614b679-563e-4a89-8549-cb54b1857099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86e4b6a-a5bc-4cfb-9844-c87b6c8af3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cedad3-fa1d-4053-a576-90f05250cf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9853a24d-dc05-47ca-98c2-28547ab3c1f8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d50ecb1-614c-46f4-ac62-fdcc02b9651e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667e52ae-82ba-4a6d-a270-25dfdea07d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399a90f7-6409-4af1-8f5c-c9c4e8828386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa810c6b-eee0-437f-b428-50715703a75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656650cc-9075-4531-b058-b3a9b67c6d9b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c629915-318b-4717-9c0f-519bc0cac382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19443cf4-ddc1-4bc8-8158-a23b564d537e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c948ad-f89f-4de2-8850-91ea9ef59ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e36ee3-3f14-43f3-9208-d52d02ff2c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754043ba-0f05-445a-a1d3-3b7191863184",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc723c8d-1637-4ab7-978e-293fe7bdb47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fabe94-0d25-4c4d-81bf-64b14a35ec11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a528939-0813-47d8-856a-d12c9353c070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f515851c-7fb9-4173-baa0-ddfcba23cdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bd328a-ae8c-4046-8851-87943b3cbb4a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f1dacf-36aa-4f45-aea7-2a015b5ccaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543375ba-0b45-419e-a28b-0adfb6c7a523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bdc433-3751-498c-9f11-8f158ea028f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b020942-85de-49f7-a7a0-199489b1921a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31983447-2ad6-45e6-aee2-9f24bc8f02c4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e649fb-7bc8-46fb-9e81-8c5cfcdbe551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a570ba31-8562-48b6-b75d-0a7139dcdd76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e2d236-7278-4b7f-a425-93467054b18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d74d35d-669e-4626-9710-3e00074ab80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c6784f-98a2-4e66-a3a9-17f85f5fd91e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a22775f-08cc-4654-916c-0eef1a84965a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f944513f-74e8-4fda-bdfb-d6d302c813c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef7c22d-7d1b-4330-b1a7-8ecbd9dbd0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac466b0-025f-4fe8-91e3-e853bef88b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6a3cb8-2c45-446a-82d1-7f8221c0ad8c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0908c55e-bcc1-489b-9646-c1461eea44a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deae2ba6-2422-4ac2-b2d3-5abd414404a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7725f349-eb76-4909-859d-8ef158d3b1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8885d601-b31c-438c-9f02-a9a91640ec59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b714110-8a2e-4c6e-a05a-1523e8e89244",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c03a1a7-b3b9-4069-ad67-0925a71d7cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c57e8a-680a-4178-9071-64662a040479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d06fca-1983-4d48-9dfa-019e1af0b0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928fc2f5-e14f-4862-8c9f-612410032b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f877924-be4f-483e-a9c7-349c31691241",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e7f224-3dc8-43b2-b55d-2527858341bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff53dd1-6726-4095-b71b-2a4570a78ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee886a4-bbd9-4de1-b470-3c4efe46d193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef35832c-f88e-41d5-b92b-ff8305849481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3eb94ab-aebd-4bbb-82a5-60067b2c8c82",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068f0464-ab9a-45e5-84fe-43284df80fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26a1e72-d9ea-47cc-872f-1450f78285ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3581d9-e54a-416c-a20f-6e17daed1aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba809f23-005c-4b2c-b1b1-c43a2a1cabad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4a8193-df1e-4238-af18-d708933b4bd0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22876a84-9a10-4acd-890b-8cf651dc0472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae7b2e2-dd7a-4f94-bef4-69accb955214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16064542-beb9-47c7-b095-7cf09dbb1e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7f6be1-8ba6-4789-9269-12500f644d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744f3a83-25b6-47e5-a8a6-3dc764eb93e0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3a23b7-8c53-47b9-9e8c-da6ad06aebca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56c0008-531a-49aa-9405-642edbd7112d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2a4eb0-11ba-4f3f-be62-11dae4742d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4696ec38-e7e5-4f44-8975-b894acfcef97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad43818d-c7c1-438a-a8d6-5e3283704f74",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5e64bf-9f81-4f80-8a4c-17c58fd7b8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ee3015-d105-4191-821c-27bdc3648a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad4784c-49dc-45ca-acd6-13a405cb5deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91917bd0-8588-4a9a-97b3-e40cd89d9ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e91e65b-42da-455e-9525-f9257290ad1e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05450fef-e004-4191-a3be-0b1cadb1f75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbab33a8-8e72-481e-86b3-a3915335f407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf44c36-a4d2-483c-a067-9f3109ffb849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0198e5-8dcf-4c2e-bf5f-ee121e23a8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658ab321-711e-46e4-81d5-c4ad0b72efc7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6e7af8-c545-4f58-8b3a-74105470ae55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ae4330-93b2-4cf0-a488-1cfdfc6462bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b001113e-9914-45b9-8522-46116657a71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e6298d-fa7a-40ef-82ce-8e3cddcc2e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dc3f42-d40b-413c-a565-d5e6c2e9e43e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3ae0b6-96a6-4463-b005-957f68bca0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50da5b8-2746-4e32-a0c2-6f0b80327cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db57807-0bb5-491c-b25a-0d3eaeb1118c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403609e7-c624-4b67-9711-cf1a76e6911f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6adaee-034a-4271-b47c-72fbfa9152b6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7075359-7071-4b6b-af94-471b4ecfceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ee7ac1-4880-42f3-9424-1c989b6562c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568fddad-6852-4fa4-8076-71998325bd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713fff9b-97ae-4c87-bd12-a6e3f19e4177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648a9252-35cd-481c-895c-4ba73194aa91",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab37859-a627-41af-8f2c-8adf93526623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ee6ad9-5c44-48aa-9832-48075afa681d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5d6285-c7e4-49cb-93d8-55bf84930ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6078dda9-bc78-4e9d-959e-81603b2baa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcd69a1-f3df-4a8d-9677-6eb917416ce9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a79e6d0-07a3-43ea-b6db-b13343f65a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b86307-3e26-4a72-88a3-bb4e6636b29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b4c473-258c-4f94-889c-81fa9ef040a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545ec9f8-ebb8-473d-9509-c00c0067d592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af8ecda-c955-4ecb-8613-a183817dbb5c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c581a7f-4808-4bca-a5da-bf07a0283ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9020212d-d670-4249-8ddf-ad314fdecfe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67713130-ab07-4e3e-8905-d84ecaf846b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbc8b84-3101-4c31-9086-4c61fd22f574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbe72b9-f668-45eb-b90d-0113d0d2a139",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83b85c4-26d2-49fa-923f-380dad1d796a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f9ed15-2a56-4447-b48d-c2a3ba484a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4b7005-0aa0-4a19-8c6e-9b08627c3dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eef8074-3609-4de3-ad39-4ffe9aefd466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721a12d4-8301-4686-99c4-775ade601cc9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463ddc4d-44d3-4364-909f-0999b8b163dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af9932d0-e068-44f8-b14c-15b3a125b134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773156be-283a-4013-8a5f-3f8cf34c6fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f75fcc-e357-4d7c-af95-4c8e3fc14775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e089a82-dfd6-456f-89b3-7a0d20899204",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17717f3-7e41-4d4a-893e-c28fd425ec45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55cd536f-8bdd-4078-b5d1-003153722fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440d67ec-2013-45dd-8836-0e40e870115a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3e9d69-4186-4afa-a40a-490e96c54338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15155ec-e0be-48c5-ac60-33b6b5109f65",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7440a1b2-6edc-41d8-be2f-32b5f10f2e38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "679a3f4e-ba73-4d2d-b051-286bdca18f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b1c528-68c6-4c35-82cc-c808b4c85ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43772a8c-d6d5-4791-95ba-79b20f2c2ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46363a98-bbca-4384-bacd-4bf632aa2376",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f719e1-eeb1-481e-a69d-c87c7f93be82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10f7714c-b877-4036-ae6c-1827bd063cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152538bf-a2c2-4ef6-88c1-8402b82ef732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05759abd-405d-49de-b0b6-6d06e6989cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e19b18-411e-400b-b040-740b8250b7b9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caacdf9-1c0c-43c8-9643-ea9dd7fb64ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d8ebc5d-75a7-4824-9dd3-d1e71249c043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799d88f0-105a-425a-ba4d-82ed732544a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85195fe3-036a-4a6e-8b25-de7e405b5c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b40be8e-2fbf-4af6-b0e3-1bae58364ec4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778dd937-3e68-4162-8cea-a70382cea2fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9770bdd-5cb0-4fec-9788-dfabdd6031aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d519884-a18c-4cdb-9ac4-5a1dd6aaa279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd4564a-8487-413c-858c-c5336436a452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c587a9-2484-4b46-9845-0efa09ac0b38",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a475fcf3-27e0-499b-a4bb-3a24e0480e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c234b7-e6ce-4a6b-b5fa-7b6c5c3162d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f85c3e-92d8-4141-b3be-d3771ce42dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30444197-047a-4c29-a010-80c4be103378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254bc56a-302a-4d3c-85fd-cc105c479928",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6741730c-2949-442b-9119-f810fe11e5f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf00b780-7e69-4b01-924f-db59868edf27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce64a07-5b5c-43d3-b2fb-f08ba0296ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2d724a-64d0-492a-9897-055650a0c565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd83624-a8a9-402d-89d8-1f0a4907c2a5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c646e1-610d-42ec-aa0c-ae22f91e5797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eafbf8b-5752-4654-8e0b-d8ff27c5e46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c2f1cc-1410-4a8a-bb67-ea60e16ee2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c300fb9-e452-4eb2-a98e-7c411665d283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc93510c-94bf-4d85-9eb0-862d48d1158d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666c67f6-ffbf-4ec0-8fbe-6684c8d374fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fdbfa34-6d9e-48ef-bbef-dae27987c7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a60aa4-1cdb-49d4-a7c2-55f1436180c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b02bfa-e11b-4a95-8b4b-db1ff713da07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7559a9d7-e0db-42da-9b73-00d648bf8170",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a97103-40dc-4e53-8621-c47e0ce6d1f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45531549-7939-4743-9b53-74622996612c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ac46d5-c74c-4e38-9092-9594228c35cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a06f5f-3e93-49da-bcfb-17d9089873b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeaa9f4-2ea9-4662-9d4b-95926a07d37c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78adc711-02d0-4d61-b551-e6c4122830a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "718f99b7-6fd4-4edf-90aa-032c0d69f992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c428cfc-d25a-4a92-899e-046fdaf836f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be90d17b-1dad-4ec9-82a8-487afe3c7670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05762249-1ad0-4e2e-ad6e-4eb7c5db179b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf75bd57-e68f-4dcc-90a9-870d3a8d2418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e62b37-d5c3-401c-82b6-58f57c8b137a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af79430e-d390-4c16-accb-a75765aae1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f7db3b-dcb5-47a4-b7eb-a052583e1b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625bd8b8-25f6-4a04-8c64-b80a1d5f5bbf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb45229-c145-434e-8a06-62da64405a5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "605c80b0-785e-42bb-975a-fa6ad52d9f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e872d237-3f9c-4ba8-9f1e-919031033943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f029047-7bf0-42cc-b11d-803ecfdfcb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1429971-df2d-46e6-8316-e4d0dce31fc1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b16987-9ffd-4569-b688-5a84f1d3ec28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47735b0f-fc40-4554-9adc-7627f239d998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f923d966-4fff-44fb-939b-b495b5b0be49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4a11d3-f383-4e1c-9431-49d4f40223f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e107ef5f-abee-449a-8dbf-6e05a428aa8f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5bc2aa-d847-48bd-b30a-c64d68e78545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7189a625-a09a-489e-b53e-b460ab75c253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8d5849-bca6-4efc-8228-6ef298ee6200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b0fd16-65c1-4e15-87d8-43d9fa27dcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccf0a13-d09b-4f26-9894-f744dc6e87aa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd9996a-4e95-4318-8803-feea93f0da5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29aeca9f-644c-48d2-a4a3-17e7761e4ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577d0eca-ab83-4e2b-ad68-6d01e5ba313b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b60b44-000f-4a71-9c87-137b162cb148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaefc5e-a514-4f3d-b4e8-b7bb1c6108f4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78253507-95ec-47eb-9709-3264e128151b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "157546cb-7006-4892-9812-aba657062eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d15fad-ccad-47cf-9f2e-ec2bb05c7619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7281b515-c13e-45af-b4ec-c9c193479221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169e2d50-17fb-4b17-a120-73a1c8a9b75e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979067a3-41f1-4853-aba9-0ed8e8e55d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0efe7a9-bdfe-4d1c-b3bb-88c2842c32d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcbcec7-a0a2-4435-908e-fe5ce3a22b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b73d09-c0f3-4d21-9b7d-c32a847ced75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5640f62-4135-4beb-a965-11a640080426",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c86e2ef-5f16-42fb-9100-8460899b92ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40b6f1f3-98de-4649-af3d-a7a97738e0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b85619-2792-4eca-92f5-a757c93f76c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab0bf74-d2ef-4555-88b7-be7972e2caf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5595ca6-f08c-4026-9c09-a2816d664d57",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ca2f5d-d5a9-464f-a1cb-f46d35ae15cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e4c892-7686-4500-b8e3-ae4c91c25045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8da3a86-ead6-48f7-a2a7-8f903e6d4a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b97e9c8-ed90-4dd9-adc3-127da65c4ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe63ae4-be4b-4f97-a196-92179d25361f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b8eae4-7359-42d9-9da9-b17a173565f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a61565f5-34ef-47f0-bb84-f2b2bc0f062a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8835eb7c-fd93-4485-a4f8-2bf9f65ca29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7a3250-2ada-4a5a-94c6-b20a28fd959c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c964c2ad-3621-4648-8596-a604b5ffc63d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3aacfc3-6c78-4bcc-ab8c-8064f17360e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "752f69c3-460a-4bb8-b19b-527d4917c3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d19a16a-94fb-442d-ae82-19b85e93bf0e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f8b068-587b-498c-a8d6-f8712c516cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f87eac-d2d0-4250-8342-ec481f1162a4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3717bd-b823-44f6-a638-17a2b4960693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "141b05ae-f4d9-44d4-a695-58908765a750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee903d5-879f-488d-914c-9d48f244e30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbd7c4e-f06e-4215-a828-c83d3a0c1bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77185dbc-86ed-4ebd-b030-dba350859c39",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0414f3ff-feaa-4cc4-8db9-070a469c24fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51cd1a98-0ddd-44fa-a327-919999a6a677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d6f7ad-2b77-461b-90cf-7ece080fd108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ca95f8-3720-47a6-81fe-1c6369753898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d05e924-f92b-4183-9231-f96bdf5f9ff8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4c7f2e-1626-4f7e-801f-18afcebe46e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe32a85-4aa9-4caf-85e4-103f4bfde171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff985cb7-524b-4946-aab0-900bb55966c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48db72b5-ce88-45fd-8ffc-96652939853f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505cbc84-d1ee-45e4-8dd6-f40185fbb493",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84791198-e70a-4df3-a0eb-6bbaed564004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb322388-64cd-453c-ba0a-582bc6e7ee11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b73c901-56f9-43d1-aec4-76f834257676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438a3a47-814c-4bd8-80bc-8fe0bc4110ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa48d16-94cf-4810-b8b3-458555b00909",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a104b8f-f380-429a-a04a-b0948ef2ec9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80fe40c-3bc1-4bf7-936e-2e84d6fc1a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4024e2-2fb7-4d9c-9092-e6947ba4d581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3816591-0c4a-455b-a23d-69b059471d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d955dc-e445-419a-b534-74d6a08bee3f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9a1d74-03f8-4fad-b2f7-01d867180716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff6885c-b04b-48ac-a29f-a82d5d13c54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96245ba0-e52b-4fb6-a980-a041dc7ab4df",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78a3199-98e5-45f6-9e4c-b70b66407a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f5831f-5bbe-43ae-833d-483744f67a30",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98aaa7f3-026f-45ce-8aaf-c68d00bc4f1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b76c326-308f-49bf-850f-1bb88940c0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a1a8a4-bf20-4216-92d1-b64cd99af454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbb0c3c-0554-43d3-93b0-c4db5cd552d2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c313b8-d5ca-4304-8849-c41c73d6ee8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d3db7c2-0888-437e-97a0-aed3189b6ab1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c468c4fb-932e-4cd6-8be3-e69b4217c9c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b58e93d3-90bd-444b-8d74-5593293fe64a"
                    }
                  }
                ]
              },
              {
                "id": "d7e0f91b-8d9d-44e2-845b-f8a7fefcc6a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5e7e834-7d5b-41c8-85f0-24e1730a942a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db04d3e-5dbd-4e0c-8ede-b968dd484cd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "00b0eb90-2841-4e7d-86ef-f228879c42c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48f9232-aeb2-4478-891b-488ab226b914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "052a8ab3-172f-4c23-9f3c-0845df1fd0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbde37f-536f-444f-ab95-a19a91870098",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c806aa32-40f8-47b8-8d4b-72e2d5f31220",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "99aa8b09-e672-4da2-a5af-d63004726846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc21db9e-bef6-4563-b2b2-c0f8af12a21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "166cd527-779c-4554-9b05-396ea491d6e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4f319e0-03c5-436d-a1ba-f0df53a670ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f98413c9-956c-4900-a01b-fa9ec8cdee2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42abff53-2dc1-4445-98cb-5e855d92c07d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50dc30d0-87f5-4ce8-b19f-227a3b069fdf"
                    }
                  }
                ]
              },
              {
                "id": "bc7ba7b2-972b-43dc-930c-8667faff4a15",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fe227d00-043d-4a86-8d1d-04cf7b94bf0a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141f8625-eb3b-48e6-aab0-486969750173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2daec434-d10c-4efb-aaee-fe0bc3389e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f60ffb-d6b5-41f1-b4a1-a440f25cc7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e02aff-ccf4-4e2f-8276-f682227acf30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b3eabd16-692a-4b5a-a877-addec26d918f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0f178ef-66b7-4799-8d46-53e27cb7e2b1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4e92708-8265-438c-92cb-04ebec3a87d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8ba8a98d-eae8-443e-a962-24216ddb0639"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e214f4d3-c4db-486b-b214-6f56ab3b7e49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52ea165f-1747-4417-abb3-06c92d1af569"
                    }
                  }
                ]
              },
              {
                "id": "6a8ad477-1ae2-423b-87e5-4b1cba9cf2a5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c2e3d20-4153-46cc-8041-3847f83be984",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c3995d60-2f05-4a82-9dd2-3613eda3e98b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15c509b7-b45a-4fb6-901c-a8701d54d068",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3088accf-eb5d-4e98-9d46-e973611db015"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64e05a99-2482-4ad9-b723-322d8ac8ffe4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f03241fe-bfe0-4acc-92f3-b39daf3ae527"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc094d66-0fd3-4b99-b818-8c86fa4881c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a166f539-e789-4b3e-8550-f44919ac840c"
            }
          }
        ]
      },
      {
        "id": "fcc94b69-40ee-49f5-a27a-cff48fb3649f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "45f0274b-2c4e-4ef3-875d-09c337ffd9f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2053ae78-55dd-45a8-9955-eca278c18276",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5db9df1c-dac3-4e32-9e80-89975cc70644",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0abcbe1-d936-4190-aae9-f3b6e671c769",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "52486295-3c31-423a-8ce0-e95e7613afaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1262de-984a-4e78-9aec-bb36c6d103a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e1bcb1e-6724-44ac-8b0e-60d80db5ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472c2eb3-5aa7-4b80-be23-5bd78b185e76",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a78f5e5-ebfd-4ec2-a649-986987d212b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "43524041-3180-4eda-8156-4fd9ac25cd0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f87a5d-984b-4d33-bfb7-7524b7da434e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a94e34a0-5f76-47da-883d-cee06a2b70b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39fcfec4-036d-49b2-b139-e2bb610b40ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ebc7e2b-7a9d-4cbf-b499-85fc1f237caa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85f8faf8-c9b0-4d5a-a3da-a9df691e94a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b86bf7fc-56ec-412c-86b2-df1efb6b9fc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "260c2d10-f50f-4dc3-bc1b-9adddec2cb6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b3cf4ad6-32d1-4718-be2d-9e06d6236399"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95e9f2a9-095b-4786-a805-e67515427cca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0db06243-6e0e-4abc-8b1d-120c65f5c8e2"
            }
          }
        ]
      },
      {
        "id": "231bb5ee-691f-4753-a050-8a8544ab6732",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3c13f367-59da-4ea8-b279-8b131fb175c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72d80c3e-398c-423b-9592-1d491c5a615b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1123d132-8def-49e9-b809-c8e6cdafefcd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be37a30d-c451-425b-a4ad-60cf398f3a26",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e81ce6da-5874-4014-80a6-0b9c2a96a4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c03135b-2098-4baf-89d6-03cdab734338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c30e691-0b24-4850-8c1c-4461821c04e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7dd922-4f6a-4374-9f55-d107f92436e0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced562ea-180a-4f1c-bb55-12468a2656e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c3818d-a163-4e01-bdf2-c5c489098e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5643991-fdb5-4470-8206-090dc1504766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7562d665-a5ff-46b5-9b8d-50b864c0ec9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b3a89fc-7f1d-4a66-8f2c-c2f418bf7037",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c7f5200-27ea-405f-93be-f2290fcbb81c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78f3f8d1-00c8-46b8-af94-65d74bbb9883",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "298d7bf7-5a76-4df3-bebf-5cb0fb3ef6d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd33ddc9-e771-4f95-91e4-91549a043846",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "951cf3a9-b420-4ba1-b268-dd1dc1a7dad3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "679d7ab0-eb6f-44ed-b05d-3d1c1cc1e1fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34d7e86d-8dd4-411d-b390-56c4f6a380b0"
            }
          }
        ]
      },
      {
        "id": "e65d7e73-f9f0-4171-84bb-a95a15848108",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1eb6c639-92e1-448c-a522-1a72dc3a0df9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6b9e303-5294-4b9f-8920-ab6b1c52f07d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51c2838f-f493-4941-99fa-f15aa09031fa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f253ab-04c1-4c0c-b83b-6017bd8f9ad9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a8f5da5-d815-487a-a8a2-7a1fcf126e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f56a7bc-a770-4128-8487-ae605e6acb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0070507-60cd-4a3e-8fde-a741d0eb0975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91baa4b8-04ae-46c9-8102-f46d73444711",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddda234a-892a-46be-8a9a-86b3cc484d58",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5b374542-f94c-410a-8709-42cfefe3cf29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d5800e-92ce-4aa3-9bc7-00d2e4034694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3984856-a66b-43a9-bfd2-dc48e1e2ba3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b06c943b-bccf-44a1-b99e-bddc08bac65b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5262ba6f-3e78-4889-b32e-3d34dfa2a7c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "991e9bba-7cab-45e1-a518-20e2f4d93e42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "780f6992-eb07-4b4e-9c00-fd653f3f5835"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98f0ccae-8819-4521-bce2-07798976ac76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "873948c8-c966-495a-a0a6-9e523942fa28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eaf3b438-d29a-4548-8635-23d7d6189116",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d31cca59-2d8e-4fa9-a634-218dbdfd3f39"
            }
          }
        ]
      },
      {
        "id": "e015bd5c-090b-4ce3-a6e9-ce366af7c978",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4d8de5b-3171-4d69-88ea-32cb83113524",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c055156-6c04-41f7-be2f-e7cf9a4bebb7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3ba54909-6ec4-49f8-b8bd-97e4384a2510",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b0331f4-56ab-4574-aae3-d8aeb1cf646b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e236df1-be2d-4cd3-850c-3d92372e0acd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 772.5692307692308,
      "responseMin": 10,
      "responseMax": 10190,
      "responseSd": 1204.9050293788673,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681691872224,
      "completed": 1681692083605
    },
    "executions": [
      {
        "id": "23d984df-f9e6-45fb-b823-11c9b6348041",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "304490a7-5a10-42fa-97fc-74820ad4c9ae",
          "httpRequestId": "3732323b-7396-4bec-89b1-d6a36bfc8686"
        },
        "item": {
          "id": "23d984df-f9e6-45fb-b823-11c9b6348041",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "850d5fe8-e7f7-4f46-990a-9a53c101b6b6",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 0
        }
      },
      {
        "id": "32b90549-35a8-4fb9-b05c-732b6414ff18",
        "cursor": {
          "ref": "c56490cb-b52e-4084-ad5c-1eae399777d8",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "962586f0-376b-439b-a3c6-5b603b15eace"
        },
        "item": {
          "id": "32b90549-35a8-4fb9-b05c-732b6414ff18",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "01094073-c1df-406e-8abd-ad6aa12d82fd",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "982d46f6-19ea-4556-8dd9-c568876f452e",
        "cursor": {
          "ref": "71f35db0-9ba9-49d2-8c11-45063e438608",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4aa36832-e0bb-4d27-8bd0-510970c1f010"
        },
        "item": {
          "id": "982d46f6-19ea-4556-8dd9-c568876f452e",
          "name": "did_json"
        },
        "response": {
          "id": "8e765bc5-d168-416b-bea3-7602547fce87",
          "status": "OK",
          "code": 200,
          "responseTime": 848,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa3717a-4114-4d09-a2fa-796287da593b",
        "cursor": {
          "ref": "0d542d84-4188-420c-a798-9dd787ad7a29",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ccdd9228-5523-4723-8123-86656a315f93"
        },
        "item": {
          "id": "5aa3717a-4114-4d09-a2fa-796287da593b",
          "name": "did:invalid"
        },
        "response": {
          "id": "57b0ca26-f5b4-4317-ba42-cabd6ca026aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa3717a-4114-4d09-a2fa-796287da593b",
        "cursor": {
          "ref": "0d542d84-4188-420c-a798-9dd787ad7a29",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ccdd9228-5523-4723-8123-86656a315f93"
        },
        "item": {
          "id": "5aa3717a-4114-4d09-a2fa-796287da593b",
          "name": "did:invalid"
        },
        "response": {
          "id": "57b0ca26-f5b4-4317-ba42-cabd6ca026aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03565265-fa20-4989-8fba-602e24b04bca",
        "cursor": {
          "ref": "8d1ac58a-e6c3-43d3-9b81-1c68f0da12a4",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "021a83a9-3fe9-4ff3-ba76-625e70eef5ef"
        },
        "item": {
          "id": "03565265-fa20-4989-8fba-602e24b04bca",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "075704ed-0c7e-4122-b86d-451865315c54",
          "status": "Not Found",
          "code": 404,
          "responseTime": 788,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8e2d6d-99a9-42f6-bae0-b4ae41b58034",
        "cursor": {
          "ref": "1d6ce7ee-08f8-4c16-8dd2-e1ce8346994f",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "492c5d71-630d-459f-b0b1-31363b14e09e"
        },
        "item": {
          "id": "5d8e2d6d-99a9-42f6-bae0-b4ae41b58034",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "64792e7b-ce99-413e-8157-04935593b215",
          "status": "Not Found",
          "code": 404,
          "responseTime": 578,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20057ac8-453f-4fd4-aed6-1f271bde34ed",
        "cursor": {
          "ref": "b3baab0c-175f-4899-9157-5b399784c115",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d0e858e5-49c4-48a9-9926-230a3bf82be9"
        },
        "item": {
          "id": "20057ac8-453f-4fd4-aed6-1f271bde34ed",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9e1d0029-a87b-45db-a3c4-febf69c2d32f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00f0ee4-0b50-4f97-b090-e2a280bc2bcf",
        "cursor": {
          "ref": "ab666d85-e14e-4b2e-8e0a-22db5aec7fa7",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4c4bf15a-3829-4393-a0c4-be5d702048e1"
        },
        "item": {
          "id": "c00f0ee4-0b50-4f97-b090-e2a280bc2bcf",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "22602d41-c289-4da6-98d7-1449979a4430",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 582,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00f0ee4-0b50-4f97-b090-e2a280bc2bcf",
        "cursor": {
          "ref": "ab666d85-e14e-4b2e-8e0a-22db5aec7fa7",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4c4bf15a-3829-4393-a0c4-be5d702048e1"
        },
        "item": {
          "id": "c00f0ee4-0b50-4f97-b090-e2a280bc2bcf",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "22602d41-c289-4da6-98d7-1449979a4430",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 582,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935adac5-d1ab-474d-a04d-675b252ca4ac",
        "cursor": {
          "ref": "8d497e3e-be76-4aa6-966b-157f190e21ef",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f4cd6ebc-ff35-4b69-bfe1-9a6237b680a3"
        },
        "item": {
          "id": "935adac5-d1ab-474d-a04d-675b252ca4ac",
          "name": "identifiers"
        },
        "response": {
          "id": "e818819c-8fbb-4a61-8325-9dd290a4f7be",
          "status": "OK",
          "code": 200,
          "responseTime": 1038,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d74784c-8e67-4782-b46c-b7fcb0b2bff7",
        "cursor": {
          "ref": "f5eb76bb-580c-4470-be2f-e193b8c10447",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6840093e-37c5-4381-97d2-2853b2409257"
        },
        "item": {
          "id": "0d74784c-8e67-4782-b46c-b7fcb0b2bff7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fe1d2fab-93c8-43da-a03b-e08ea71ab998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d74784c-8e67-4782-b46c-b7fcb0b2bff7",
        "cursor": {
          "ref": "f5eb76bb-580c-4470-be2f-e193b8c10447",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6840093e-37c5-4381-97d2-2853b2409257"
        },
        "item": {
          "id": "0d74784c-8e67-4782-b46c-b7fcb0b2bff7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fe1d2fab-93c8-43da-a03b-e08ea71ab998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede858c7-e7e6-4d7c-81f5-dc1a87290578",
        "cursor": {
          "ref": "42035adb-6b72-4075-b278-f905dc192cdd",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cea804d6-dbac-4cbe-90a8-4c8c889f94b3"
        },
        "item": {
          "id": "ede858c7-e7e6-4d7c-81f5-dc1a87290578",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f8c62f2b-7cb4-4a1d-a795-61331351fcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a7d2e2-1a4c-4400-b289-58e2ace5e494",
        "cursor": {
          "ref": "a9803faa-cde4-4b5f-bb85-151b12f16e50",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5181cb98-d8cb-41b7-ab80-5d17731f7730"
        },
        "item": {
          "id": "e8a7d2e2-1a4c-4400-b289-58e2ace5e494",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8a5c3bee-9231-4f1c-b8a3-cfdbc6dae7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21ded3f-c888-46bc-b780-fbee9092abf6",
        "cursor": {
          "ref": "eed9af79-857a-45c1-b687-9675bc98dc28",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6d590ff4-0e40-4037-8ce3-cda721d18767"
        },
        "item": {
          "id": "c21ded3f-c888-46bc-b780-fbee9092abf6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ae48b9a6-e4b0-4463-af81-2918a841c58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cd1767-31d2-41ce-856d-747aa19f8d51",
        "cursor": {
          "ref": "fb1fbf0c-43ec-4942-a4e5-6711b1505409",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3aa163a8-3229-480d-8bbd-c5ed3621e01c"
        },
        "item": {
          "id": "d7cd1767-31d2-41ce-856d-747aa19f8d51",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0a2886a6-d514-4801-86da-b1777e355c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 921,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1bd026-fcad-42ac-88bc-2c29a7e30ea4",
        "cursor": {
          "ref": "8b1aba6b-e28e-4e04-8ee3-19752487a54a",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "19a12f78-49e6-47e9-8154-c7a44bf0b9f4"
        },
        "item": {
          "id": "6f1bd026-fcad-42ac-88bc-2c29a7e30ea4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "caaf6cd9-097f-4af0-949a-748772927cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b22b183-378f-4bb9-80df-d20f611c40b7",
        "cursor": {
          "ref": "2aa1e29d-46fc-4f83-aadb-f56efc8e3e8a",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ba23a0fa-7999-4776-bdb8-c75be0448bfb"
        },
        "item": {
          "id": "8b22b183-378f-4bb9-80df-d20f611c40b7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "323e42ff-627c-4e56-be61-75f2d759383f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e0767b-0492-4f61-8efb-beda298494cf",
        "cursor": {
          "ref": "a3221ca2-808a-4da8-8252-694e10626801",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3d702b7e-5f77-4f84-8efc-21e4f0424262"
        },
        "item": {
          "id": "78e0767b-0492-4f61-8efb-beda298494cf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7181cde6-c43c-4bf0-a0b4-23237ce3fe48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5517e239-aeab-4751-9e55-ea12bb69d08e",
        "cursor": {
          "ref": "c440dc93-9762-4d95-9909-d11199733a51",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "16d1de41-9caf-47c5-87c7-185320492992"
        },
        "item": {
          "id": "5517e239-aeab-4751-9e55-ea12bb69d08e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "317f8af2-52b2-4712-b917-aae6ff11cc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a1e0ea-cfd0-4a14-8c79-50d36e3c79ba",
        "cursor": {
          "ref": "dddf4008-fe74-4e5e-a680-e40d93672f01",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "772bcf75-7217-4f01-ba44-8ef3735edf2c"
        },
        "item": {
          "id": "17a1e0ea-cfd0-4a14-8c79-50d36e3c79ba",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "403ca0ab-71f9-4bd0-8751-1af86d7d0e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1101,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1536bc-cda3-40ee-ac81-011944a6616c",
        "cursor": {
          "ref": "aa1cdd49-3be5-458b-ac7c-5beae7700201",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6a787f63-a7a0-4918-9756-51a084337d81"
        },
        "item": {
          "id": "8a1536bc-cda3-40ee-ac81-011944a6616c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "847c1dc4-e414-4426-a476-3249e69da16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1000,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d6e399-b084-4150-bcde-3ee30f89e412",
        "cursor": {
          "ref": "74b7ebaa-fb88-4161-90b9-9a2beaa8ce29",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "df3197f1-7b6f-4ae4-a732-ca5cf2e32684"
        },
        "item": {
          "id": "b2d6e399-b084-4150-bcde-3ee30f89e412",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "619e4c3f-94fa-4899-8ef9-95034da488ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efede0dc-4398-46bb-ba2a-60ab92873f26",
        "cursor": {
          "ref": "7076d1ad-5c4c-40fd-bfb2-cca6a7e74c55",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c2549b0d-4d0d-4a1c-9d6c-254c39d73531"
        },
        "item": {
          "id": "efede0dc-4398-46bb-ba2a-60ab92873f26",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "efb94b24-b98b-4e92-8754-de4aa0e0583a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd341bbe-ae4c-4feb-9fc1-2dcbdbcffd0d",
        "cursor": {
          "ref": "aa26f0e5-3e16-4cdb-a5f4-3b2d39a1ffc0",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a0018d4d-3f25-457e-a1ff-98dd3fa1d040"
        },
        "item": {
          "id": "dd341bbe-ae4c-4feb-9fc1-2dcbdbcffd0d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9da3af5e-7521-4af1-bff3-b7c2265ec1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5825c2-9ff0-48b1-8241-d7c8bd05fcbe",
        "cursor": {
          "ref": "61b4530c-2e11-4cc1-983d-291a7e8fc8e2",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7351102e-0f8b-46d2-8398-227c992dc7d0"
        },
        "item": {
          "id": "da5825c2-9ff0-48b1-8241-d7c8bd05fcbe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a19ab5ff-9fc2-4c4a-aeb0-b7b26643378d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5ad421-9deb-44a5-9159-027b40e132b7",
        "cursor": {
          "ref": "3de82a4d-9356-4bb9-bc8f-fed1dda1c55e",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b4f23e1f-48f8-4d44-9c22-41e049c21959"
        },
        "item": {
          "id": "9c5ad421-9deb-44a5-9159-027b40e132b7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "813611d1-8f6b-435b-948d-3dda9105b70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4507b4ab-fad8-43d0-aed9-6ce80b12a74c",
        "cursor": {
          "ref": "a7e5ff9b-86e2-40f1-a5b4-f246947a8d60",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9fd1165a-bae1-4bf9-a6e3-c339ae30ea49"
        },
        "item": {
          "id": "4507b4ab-fad8-43d0-aed9-6ce80b12a74c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "050b4cd3-a9e7-419b-bf86-ee2c497181c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f76551e-dd45-47ad-b85e-b8452efe04b2",
        "cursor": {
          "ref": "8a8d1481-b344-4c7a-ac9a-d63b701b1079",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "774b926d-49c8-45c0-a167-36d3baf5d1c9"
        },
        "item": {
          "id": "3f76551e-dd45-47ad-b85e-b8452efe04b2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "04544aab-d204-47f9-9bea-f15cb822fc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1138,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fe6cce-5854-4179-b059-a7311f8b93ac",
        "cursor": {
          "ref": "c281961b-fe74-4bc0-8603-abf70b612dfe",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8d0ffe02-90d2-404a-8ccb-12d466252b6a"
        },
        "item": {
          "id": "e0fe6cce-5854-4179-b059-a7311f8b93ac",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5ebfab56-06fa-4f43-b402-253e82fb628f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d71dbf-8c16-485d-bb43-faf26c4b3d50",
        "cursor": {
          "ref": "a0a7471d-d951-433e-b4d4-1cbcf62f72dd",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0483a628-c699-4781-a6a8-5e69ae989f50"
        },
        "item": {
          "id": "05d71dbf-8c16-485d-bb43-faf26c4b3d50",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "de0fdb1f-dfc3-483c-bc66-0b1a0fd2b177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1048,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8041d781-beb1-4852-9d49-e5b0d1feba05",
        "cursor": {
          "ref": "41bb174f-0c5e-486d-97a9-88677f69027f",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9ee9bb72-15f8-437b-bc2a-aa7128fab4fe"
        },
        "item": {
          "id": "8041d781-beb1-4852-9d49-e5b0d1feba05",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1fe5367a-161b-4b78-9cfa-e01a94c9ad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37eb9891-9c50-4ee3-a270-cfe8534cf677",
        "cursor": {
          "ref": "8259a220-dc49-42d8-a86d-0c18fd3069cc",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a7f9076a-338b-48aa-ad9b-953e2aa52a86"
        },
        "item": {
          "id": "37eb9891-9c50-4ee3-a270-cfe8534cf677",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "912b7bc8-c3c4-4e11-ad48-eea02b6568dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cdf43c-3909-4303-9cff-803644c3f46a",
        "cursor": {
          "ref": "c929386c-b4f3-49c4-8836-d2d7475070a3",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e2fb692c-1ae0-4a0d-94bf-65e87853293c"
        },
        "item": {
          "id": "16cdf43c-3909-4303-9cff-803644c3f46a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e620df46-aa45-4ef6-9aad-c599fa5a6e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1083,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c228e5-0af9-402e-88e7-5def590d857f",
        "cursor": {
          "ref": "bace3a4d-a7a0-4805-bb15-82c8bb7f8efb",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "70a5a254-b1b4-4b75-8ae1-98fae0f95f49"
        },
        "item": {
          "id": "f2c228e5-0af9-402e-88e7-5def590d857f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c3ba3a24-ec8e-4046-a086-d781e24c13a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1047,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e366adfb-f907-4e5b-a196-10c4df7f2e4b",
        "cursor": {
          "ref": "37818954-894b-4f57-9407-03d0cc004ebd",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5113b6df-78a1-4567-beb5-e19d404709b0"
        },
        "item": {
          "id": "e366adfb-f907-4e5b-a196-10c4df7f2e4b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ecbc0e9c-7d8e-4615-8d7e-2cedd4ad1777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9efd535-8733-4ce2-920b-b5f6a0a8212c",
        "cursor": {
          "ref": "0f5caa1c-c5ab-4aa4-bd74-b5fe69efb782",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e983587c-213c-4a07-b761-e6a08ad46993"
        },
        "item": {
          "id": "c9efd535-8733-4ce2-920b-b5f6a0a8212c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9671ea12-2184-4185-9f15-0171e70d6eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d07cdcc-7234-4979-8756-115dd0fd8b5a",
        "cursor": {
          "ref": "bac0b423-f191-4a7b-a98a-2fb9fcc1f77e",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "15f7f448-55e3-45b4-a622-ee61a5c5eeb7"
        },
        "item": {
          "id": "9d07cdcc-7234-4979-8756-115dd0fd8b5a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "64cb1c29-209d-45e5-8b85-5937fb1ee9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe78403-a14f-4dac-af75-75bc931066ad",
        "cursor": {
          "ref": "f6d6cdef-c977-4771-975f-0db2b0fcdaa1",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "812909cf-4f75-40ac-8bde-dc6ea1a892b3"
        },
        "item": {
          "id": "dfe78403-a14f-4dac-af75-75bc931066ad",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bb335c7d-0156-4506-943f-182123a8db13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1dcb4d-e891-4fa7-a1a9-e5b0dfa2a12e",
        "cursor": {
          "ref": "08adf6a4-8a10-404a-bc4e-8f49dea9cf61",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "84e224f8-260d-4aa5-9b23-d61524335b43"
        },
        "item": {
          "id": "fc1dcb4d-e891-4fa7-a1a9-e5b0dfa2a12e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0cabd404-6954-468f-9016-43b4ed40bae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4afab9f-cc35-457f-9a7d-828613fd7131",
        "cursor": {
          "ref": "af87b906-af06-41b6-bc61-5b3b9d75ae5e",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e5af5a41-f32d-4fa4-9d20-53e30b0fcabe"
        },
        "item": {
          "id": "c4afab9f-cc35-457f-9a7d-828613fd7131",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "47860d77-92d3-4816-9475-bb9a8749d5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bacd21-0e8d-4d13-a99c-8c74374d60b8",
        "cursor": {
          "ref": "7949b748-430a-4541-83c8-9380b587d1a3",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4bf19689-b7db-43de-b4f7-54390944a403"
        },
        "item": {
          "id": "b5bacd21-0e8d-4d13-a99c-8c74374d60b8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a83bb036-c486-4a9d-927c-87acd0219247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b250d2c-d99f-4e3f-a637-ddb664f4d45d",
        "cursor": {
          "ref": "5649b18a-0a33-4f75-9628-4aea64f83c6b",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a4272922-bc5b-494d-b9e0-946c45c6b83c"
        },
        "item": {
          "id": "7b250d2c-d99f-4e3f-a637-ddb664f4d45d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "36d3367b-55e1-47e5-9bc0-749d218b59da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce6acb9-9fb6-496b-bf35-82f9c40428be",
        "cursor": {
          "ref": "9725cc82-a89d-419b-bd86-8392cbb452e6",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e0fd2727-1231-4352-afbd-272ead60b08c"
        },
        "item": {
          "id": "9ce6acb9-9fb6-496b-bf35-82f9c40428be",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8a92fe70-fb0b-46c7-a13f-8938c70f544b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ec6f93-08f7-455e-8cf5-09d112d8d8e2",
        "cursor": {
          "ref": "90280aea-8456-4ed1-8602-8a1b98e0c643",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "af11644e-cec2-4617-be28-fe228c89d44b"
        },
        "item": {
          "id": "d4ec6f93-08f7-455e-8cf5-09d112d8d8e2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "01c4d428-3a27-49dc-9719-b81809166cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11915e7-0e7a-4ce3-858a-e76e51661ccd",
        "cursor": {
          "ref": "0824cb51-2fc8-4c37-a3ab-d0753c23d31b",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d690b2ac-f812-4992-94c9-0c42f4a17aca"
        },
        "item": {
          "id": "a11915e7-0e7a-4ce3-858a-e76e51661ccd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4fc6d949-b4a2-4d18-82c4-bab99c808adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e60482-37f2-47f2-bcf1-3de0ccd12ea9",
        "cursor": {
          "ref": "161516eb-365c-4182-a3ab-5e397e4d1aed",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "61d51aa8-5621-4b46-a10d-d3b4f60def13"
        },
        "item": {
          "id": "03e60482-37f2-47f2-bcf1-3de0ccd12ea9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "63843f01-115f-4ae5-b369-44702cd46ed7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 695,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0b920d-fe84-474e-858e-95be683425b4",
        "cursor": {
          "ref": "c7b91b4e-2278-4e75-82a5-4312828ad5bb",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a6e13857-59d6-4ce3-810d-3692077ad98c"
        },
        "item": {
          "id": "fa0b920d-fe84-474e-858e-95be683425b4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d72f2fad-4a7b-4415-abbd-1ab801b34867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867f0bd8-126e-41b7-bb03-b50bc904ce28",
        "cursor": {
          "ref": "144a7707-d31d-4962-a6c2-c0a66e029ecc",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8ca9f6cc-f5b3-4bbe-afb1-878d26331408"
        },
        "item": {
          "id": "867f0bd8-126e-41b7-bb03-b50bc904ce28",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0278f32d-e0ba-42a3-a89d-7821d42eb75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43e41f3-7c0d-4e76-9c45-3c4754d5d39d",
        "cursor": {
          "ref": "97b0593d-f2d6-4255-8223-51c4f479a065",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ce64593d-3527-4546-8c32-f4e2063dd31b"
        },
        "item": {
          "id": "c43e41f3-7c0d-4e76-9c45-3c4754d5d39d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cbea05c8-fa66-499a-a4fa-8bdb362998af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204462b6-9e24-4ea4-87ae-6a37f1d66b5c",
        "cursor": {
          "ref": "fb1c42a3-0356-4477-9018-b95d2f0b0267",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "34cdc7b5-389d-48ab-8123-f4d688d6d5c1"
        },
        "item": {
          "id": "204462b6-9e24-4ea4-87ae-6a37f1d66b5c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b6ef4507-4b5c-446f-8398-037bef12fad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f638a61-d9e0-4d06-864e-58de30c29990",
        "cursor": {
          "ref": "3e3b71cc-3c20-4aba-830c-16b0c708562e",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "03dca06c-c4ac-44ac-80ab-6982f9a5cbc1"
        },
        "item": {
          "id": "8f638a61-d9e0-4d06-864e-58de30c29990",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c15a0a07-50ac-4c2b-b28b-583b1730d91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea295a44-10ed-4841-8ca7-dd6f72b5f61e",
        "cursor": {
          "ref": "8f427f7e-0391-4696-a0ce-b5e187434a25",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "44b85b37-dca5-4042-a8c0-1983441ff6b8"
        },
        "item": {
          "id": "ea295a44-10ed-4841-8ca7-dd6f72b5f61e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cbbd289e-78ca-4e32-8c93-1d67f51c4b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97665e44-61d3-4b62-96a7-d01020d23646",
        "cursor": {
          "ref": "1e0a58ce-6c17-4893-8d0e-8055063f51b4",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e8b488b-0fc7-4a48-8357-5e00d5ee7b05"
        },
        "item": {
          "id": "97665e44-61d3-4b62-96a7-d01020d23646",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0261deec-9b8d-410b-a454-b8a762e91480",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 693,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf04e37a-cf9b-4df3-b974-f5499e9738ef",
        "cursor": {
          "ref": "da8bb2fe-1f0d-4123-a566-b3e7bb2c481f",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1ab0244f-331b-4749-a2ea-8955577cdd21"
        },
        "item": {
          "id": "bf04e37a-cf9b-4df3-b974-f5499e9738ef",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3562613b-e21f-4654-a69a-b14a78db321e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bf48d7-7e8e-44c4-851c-db3fc0665d96",
        "cursor": {
          "ref": "f125a61b-1ace-4ad8-b969-3e5adb0c6456",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "345dc1f8-1261-4c09-86b1-c13e215b1ed0"
        },
        "item": {
          "id": "b1bf48d7-7e8e-44c4-851c-db3fc0665d96",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f54573b4-bae7-4faa-be1a-e1ad52ab6991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb9fe66-2d61-432b-a00e-e23ff6f0d6b5",
        "cursor": {
          "ref": "566d6582-0526-4ca5-a6b2-7554760ee39a",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "55231efd-9d71-46eb-88a0-126c71f79e4c"
        },
        "item": {
          "id": "0bb9fe66-2d61-432b-a00e-e23ff6f0d6b5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dbfa7236-63e1-4f34-b4c8-12e2aa42337b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1777c235-c9c8-4b44-b419-dc004af63450",
        "cursor": {
          "ref": "fe34d1b1-4acc-43f4-aac8-65d8a0809c99",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "46cd3dc4-ae79-42cb-8747-8b4004443c1b"
        },
        "item": {
          "id": "1777c235-c9c8-4b44-b419-dc004af63450",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8fdf66a1-919e-45c9-978a-19d916bf9da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361c2137-ac76-4ff3-86c0-649661b10203",
        "cursor": {
          "ref": "31d9e358-1eba-43a4-9e77-1c1819bb1a84",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7d793b1c-62ed-446f-99d6-ccb1bad3d3a1"
        },
        "item": {
          "id": "361c2137-ac76-4ff3-86c0-649661b10203",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7f0fe46a-297f-4340-b8fb-26f2a3fe0647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e576eb-f3bf-4d04-82f5-09fdeb458ea9",
        "cursor": {
          "ref": "402613f9-2f83-4ce8-811e-b18c16b5d84c",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "20c1de77-574e-497d-a426-bd2ef8972655"
        },
        "item": {
          "id": "50e576eb-f3bf-4d04-82f5-09fdeb458ea9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fc68f4e3-e2b2-4f97-acb4-75f3fed189aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8f2155-a1ce-4c36-9bbc-e8a42702e19c",
        "cursor": {
          "ref": "bcc82a20-1e3c-44b9-be66-9fa4f50855e4",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2aa0d7d7-9bac-462b-994c-982f2c01b46d"
        },
        "item": {
          "id": "1f8f2155-a1ce-4c36-9bbc-e8a42702e19c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0d6a4a2b-cc3e-4d34-b4c3-5781347a9720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b50b7b-b0d3-4259-ace4-cddcbdd5fdb3",
        "cursor": {
          "ref": "6543d171-73d8-4ed8-93c1-c69ed3f57092",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ebf09a8d-e6c6-4444-92da-77e22bbbb5a9"
        },
        "item": {
          "id": "38b50b7b-b0d3-4259-ace4-cddcbdd5fdb3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1a9dbc4f-b15b-40f2-8ba3-b8395f435b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32078776-d494-4153-b012-9f5fe2972627",
        "cursor": {
          "ref": "47d7b690-26f2-4ab5-b109-4e1164fbf4b1",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7913d3c2-52b6-439d-8fb6-37efce7a10bd"
        },
        "item": {
          "id": "32078776-d494-4153-b012-9f5fe2972627",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "15a22ab4-28b4-4c6c-b84d-870aeb4cec38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e96268-2db1-41ce-a4a6-1165e3c4c5fc",
        "cursor": {
          "ref": "8f43b4d5-978a-4011-9a4c-a5a447fd4eb0",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ada2ae5d-1f3d-4105-8d0c-de764fccfed5"
        },
        "item": {
          "id": "c5e96268-2db1-41ce-a4a6-1165e3c4c5fc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c5ddc050-c43e-403b-a72b-35c84486caf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8dadcf-e989-4ada-811d-183c673a9c65",
        "cursor": {
          "ref": "dd76110a-9f3a-4d65-8d5f-2eb6efcc5ad4",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a8aec83d-60b2-4160-8a18-db780c0c5e94"
        },
        "item": {
          "id": "cf8dadcf-e989-4ada-811d-183c673a9c65",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "641d25a0-6483-4385-8c94-070fa2888ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b05eb0e-0007-494c-9bff-6a13ba2b9791",
        "cursor": {
          "ref": "886e8fe7-28f8-4d6f-83ad-920ab0382f19",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7dccba8b-1799-4b3e-8803-a0484f8c34d3"
        },
        "item": {
          "id": "1b05eb0e-0007-494c-9bff-6a13ba2b9791",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "38abfe40-d6c6-4287-86ee-bc2e4d6fe502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e46e826-0006-43a9-a04b-5d8848c1c7a5",
        "cursor": {
          "ref": "56b3089f-0171-4ac0-96ab-c0d8ed90eba2",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9482d149-22a4-429c-a346-13dbc85f9e34"
        },
        "item": {
          "id": "4e46e826-0006-43a9-a04b-5d8848c1c7a5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "460d7ec8-fbac-4207-978e-a2d4fbfc9730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde6fd99-61b5-496c-b5cc-f650f4517cf3",
        "cursor": {
          "ref": "1bf079a3-aa1b-45e6-976b-3feaa64c689d",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2a5a2838-4ed5-4ee9-90b7-5a907a5fcb09"
        },
        "item": {
          "id": "fde6fd99-61b5-496c-b5cc-f650f4517cf3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a455b56a-318d-48a2-b08c-494c6649ca83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b6ad2a-f07e-45a5-951e-98a1d1a37eab",
        "cursor": {
          "ref": "7ec6e1fa-19aa-47af-abb5-3626d8840624",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2e11b36c-7471-4dec-8718-7afcd145141f"
        },
        "item": {
          "id": "a7b6ad2a-f07e-45a5-951e-98a1d1a37eab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5cfe32f2-7de0-4769-9423-012efd09b326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaf629b-55af-49fb-8c57-f97c99392b82",
        "cursor": {
          "ref": "6efbd8c6-78cc-4961-a9fc-e6477cb9392a",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0fdda810-5b8c-4215-8f75-8b4eeb0d5132"
        },
        "item": {
          "id": "aaaf629b-55af-49fb-8c57-f97c99392b82",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9b3671c2-396d-4d87-ba08-a053edd80246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc3c42a-ad52-4d34-b385-6dc3d6ea6808",
        "cursor": {
          "ref": "84aa85aa-5573-4f9f-a8ad-e57500f54d62",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "59400562-f321-4cfe-a23d-bb1e3e9d0417"
        },
        "item": {
          "id": "2fc3c42a-ad52-4d34-b385-6dc3d6ea6808",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "020ab961-c5b1-4950-acde-528c6f50fc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbca384-6f66-42ff-8746-61e38ae89d11",
        "cursor": {
          "ref": "1a183656-71c7-49a2-bbb4-31646b7f62d7",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6dff4b67-ef58-41d9-b08c-aa60c28f112e"
        },
        "item": {
          "id": "2bbca384-6f66-42ff-8746-61e38ae89d11",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "753c7f7c-e9f7-4a60-ac6b-b6f047fb20ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9412de3-0a49-4d5a-a7d5-662e6ca9e275",
        "cursor": {
          "ref": "2c5467eb-b4f8-437b-98fd-58a3d5181675",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8728359e-6dda-4e6f-9429-cf9947adb76a"
        },
        "item": {
          "id": "a9412de3-0a49-4d5a-a7d5-662e6ca9e275",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c7738bc2-15ed-4789-a144-1fcaa371f488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270c3247-b8fb-49fc-a7e8-cadedb10393f",
        "cursor": {
          "ref": "aee2ffa9-710d-4e57-9d6b-38b6a94ff9c2",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ad2a5ad5-a579-45c6-a29a-b2c6f9ea7daf"
        },
        "item": {
          "id": "270c3247-b8fb-49fc-a7e8-cadedb10393f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f1436d21-0731-476b-bf94-9e175a5b67de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d400f6-5b6a-4d81-9c15-dd405fcf5560",
        "cursor": {
          "ref": "9986fd98-6e43-4def-82f8-e3a9794f5cd9",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3fec758e-7075-4ac3-9290-b4bf04249e21"
        },
        "item": {
          "id": "67d400f6-5b6a-4d81-9c15-dd405fcf5560",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "639b8c30-8a2d-4f6f-8fd2-7fc6711f552b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba805414-4cac-4dd1-963f-dfb1077c4ca1",
        "cursor": {
          "ref": "693b0e1a-6d53-423b-a31f-30b127cd0970",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9d1cfecc-07b0-497f-8df8-90e4e049879f"
        },
        "item": {
          "id": "ba805414-4cac-4dd1-963f-dfb1077c4ca1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5b3bb371-b3b9-46e3-8ac9-0476c940cee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e3a94b-5071-43bb-9f44-bf272ed92663",
        "cursor": {
          "ref": "2b5e63ba-2277-47bf-9b62-1225f57d2426",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "42a24a22-e032-48d9-8444-5486f58b7849"
        },
        "item": {
          "id": "16e3a94b-5071-43bb-9f44-bf272ed92663",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f63a45c0-8aca-4ec4-b3bf-d252dd88133b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd929a5-ea3c-48d1-bfcd-dcaa1e0e87cd",
        "cursor": {
          "ref": "46aed3cb-2c3c-4b2b-a905-7a478d158756",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "279c9c16-3c3b-4be2-920c-48b7e016aa21"
        },
        "item": {
          "id": "9cd929a5-ea3c-48d1-bfcd-dcaa1e0e87cd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5fb7be45-4ec0-4a10-96c1-1e3284e40050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749a2959-cebd-4b5e-9866-dd7c876fc4dd",
        "cursor": {
          "ref": "e0405d90-b630-4f60-a8c8-01c1a37adbad",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd8743b8-9c84-4957-99d2-a1e04a24f5e9"
        },
        "item": {
          "id": "749a2959-cebd-4b5e-9866-dd7c876fc4dd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d593d179-7053-47f6-b01e-ec24fe668838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41437590-a101-4bf3-9cc4-5ca70c7ec313",
        "cursor": {
          "ref": "01c66f0c-529d-44f9-8605-de597453157e",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e68e8473-0750-4f07-83fd-b62c9aaee577"
        },
        "item": {
          "id": "41437590-a101-4bf3-9cc4-5ca70c7ec313",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0aa76a93-e181-4f1a-9180-50a21b6fd703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd91f09-7499-48ee-b374-80b7929166b7",
        "cursor": {
          "ref": "8bb2969d-ee1b-4708-99b2-25ed8f28635b",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d4bbc64f-ba85-4249-ac24-0ba21b677e8f"
        },
        "item": {
          "id": "cdd91f09-7499-48ee-b374-80b7929166b7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "971bd8b7-1317-49bf-bce0-6494095098a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5baa555-99e2-4ac3-901b-b21260e79593",
        "cursor": {
          "ref": "a5ae69b8-0f3e-452a-a91d-a32516e1b710",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e334c4ed-407a-4d8d-9385-dba80be60079"
        },
        "item": {
          "id": "a5baa555-99e2-4ac3-901b-b21260e79593",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2113d1d9-9182-4873-a91a-0b433ce2ea46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62d0c6a-12d8-4eb9-b20f-3c5d92fedc93",
        "cursor": {
          "ref": "ca84f4e6-481b-4f20-be1e-b1072dfd1853",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cd66aa0d-1ab5-4571-8bb5-a92c8d0c11be"
        },
        "item": {
          "id": "f62d0c6a-12d8-4eb9-b20f-3c5d92fedc93",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "884f28e5-e14d-4c90-a55d-0e435f6b412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa03ce67-693f-473a-a9c7-33c898566025",
        "cursor": {
          "ref": "1c014e17-a8cd-4c75-9913-1f576fe173e6",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7f1b3c39-b29c-4741-bc27-3df34b8cd861"
        },
        "item": {
          "id": "aa03ce67-693f-473a-a9c7-33c898566025",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e8826a46-68cf-4bfa-ad6e-783e629df3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a20dce2-6e57-4c9f-b313-95aba2ff9708",
        "cursor": {
          "ref": "8ca8c1c1-3240-4b7d-b545-171191a6031c",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "db563a92-3145-4bae-9bf4-0c08c50e9dc6"
        },
        "item": {
          "id": "4a20dce2-6e57-4c9f-b313-95aba2ff9708",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "478991e3-3322-4413-a568-6128784fb5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff66d741-5875-444f-bdb6-b23495fe8251",
        "cursor": {
          "ref": "f42d8848-8b0b-4e75-94bb-67ea624cd68d",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "865528e5-73f3-4784-9101-cfc5f7c0b6a4"
        },
        "item": {
          "id": "ff66d741-5875-444f-bdb6-b23495fe8251",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4e427c6d-8ab8-43ce-8548-9c7c34b9e8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afb9ff5-2a87-4d48-8319-2a2317f64bef",
        "cursor": {
          "ref": "bb6e190c-bbe2-46d5-9379-c0ad8ece2be1",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bce40250-3025-4715-91dd-eb6cc069a9da"
        },
        "item": {
          "id": "3afb9ff5-2a87-4d48-8319-2a2317f64bef",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2a821fc1-b554-4ad3-b5d9-f6dc3158b993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 925,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdf3a16-63b5-4bb2-874f-56e68f21701a",
        "cursor": {
          "ref": "c624e3a2-7ccd-47c0-924b-db195de41b51",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e893ae56-17b9-40e2-b39f-c9667dbe5ccf"
        },
        "item": {
          "id": "8fdf3a16-63b5-4bb2-874f-56e68f21701a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "90c7dea1-6b66-425c-a061-1b5853a16e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c6ac52-18cd-4885-9bbb-88bf8f9ed9ae",
        "cursor": {
          "ref": "7e89c3ee-c1ff-423a-80ae-3e7764bebd61",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "13b763b4-01aa-4493-851f-9c80dc8d5e6a"
        },
        "item": {
          "id": "72c6ac52-18cd-4885-9bbb-88bf8f9ed9ae",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d2d5d446-f540-470c-859b-5763d51a30dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7074e91-76d1-4531-95bc-2853e6ea8c54",
        "cursor": {
          "ref": "759d9583-53d2-447b-9016-07fcb6f52b63",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "be0b3b9b-6a76-41ec-9dbf-d776131d7def"
        },
        "item": {
          "id": "e7074e91-76d1-4531-95bc-2853e6ea8c54",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "12e26705-9529-4fcb-958d-20d10427006d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9a8fad-6c3a-4a5a-bc6a-80d744f8dc23",
        "cursor": {
          "ref": "8692182e-86b9-431d-935d-b3c485809a79",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3cfc307b-90c9-4fc6-ae0d-cb6cc9123702"
        },
        "item": {
          "id": "dc9a8fad-6c3a-4a5a-bc6a-80d744f8dc23",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "eaec22e3-5819-4b3f-bf08-c2c330bfdace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aa0be5-b76b-4793-8eb7-9c618eaeb884",
        "cursor": {
          "ref": "5179a154-a04a-4c5d-b46a-eb8fb594b5a3",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e4ccb71e-c09d-4032-8b37-f38fc6f75817"
        },
        "item": {
          "id": "89aa0be5-b76b-4793-8eb7-9c618eaeb884",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5ae11774-91fa-4f60-a6f5-8ddb60a58812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3979162f-a77d-4396-a5a4-ba29d2002912",
        "cursor": {
          "ref": "9c863beb-1aa1-4c75-8384-7304afae61cd",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "33b3a62c-363f-4db2-a78c-e9a137af074e"
        },
        "item": {
          "id": "3979162f-a77d-4396-a5a4-ba29d2002912",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "53d727a2-14a8-49a3-a542-ea72b6393e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1675f049-31b6-4213-974f-b309f26ab287",
        "cursor": {
          "ref": "58af8f56-88ba-4239-96a9-029e3b236170",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a8f505fe-7f68-4f3d-b7c1-d2dbe7f0a39f"
        },
        "item": {
          "id": "1675f049-31b6-4213-974f-b309f26ab287",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "75e4716d-1dc6-413e-a226-305e387cbfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea07931b-18e5-41a5-8229-33f041301bfb",
        "cursor": {
          "ref": "e4ef07a1-cb1f-45dd-aa80-9018c944599e",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c9aa1fc5-0110-456f-bbc8-0b6dcac64bb7"
        },
        "item": {
          "id": "ea07931b-18e5-41a5-8229-33f041301bfb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c7023526-5dfb-4257-97ec-cf05301eb282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa78a77-35ab-4b82-ae98-b1be40b2bbd4",
        "cursor": {
          "ref": "6e78be39-9621-467d-b8f8-711f896afaef",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "12db20fa-b32c-4fc7-aca2-465140e0be1f"
        },
        "item": {
          "id": "5fa78a77-35ab-4b82-ae98-b1be40b2bbd4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4d437454-81da-4943-ae6b-02fc2f2bb7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1436b9f3-46cd-4d71-8f8e-1b679c4e76f0",
        "cursor": {
          "ref": "ff8e74a1-b2cd-4947-9fab-503276658417",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e138c888-80df-49cf-b439-a01951847189"
        },
        "item": {
          "id": "1436b9f3-46cd-4d71-8f8e-1b679c4e76f0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2afe38be-9cbd-4078-a7cb-e3caa6f060f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e2f007-38e6-4b80-973b-a2a498af7520",
        "cursor": {
          "ref": "47380421-f2f3-4a23-a42c-81cc861390d4",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "edac8281-2bf9-4d1b-a633-5bf25c2351ac"
        },
        "item": {
          "id": "19e2f007-38e6-4b80-973b-a2a498af7520",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9ee2b86f-d18d-4b2e-9c2a-b409d5625045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003a5545-c799-441e-91a7-66659899f760",
        "cursor": {
          "ref": "c5b0f244-6b95-424e-aea0-d422be8a09fd",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "28ba578a-aa99-4d45-8c7c-16189271f6d0"
        },
        "item": {
          "id": "003a5545-c799-441e-91a7-66659899f760",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "84ab50f1-7705-4918-bc25-6d39801b2807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5fa9a4-d462-40ff-a12e-6aef850b6008",
        "cursor": {
          "ref": "5a361ef7-7a9b-42cb-8ada-5fbc8779d45a",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1dbbe613-0eb9-4f09-8bce-fb4dcc11f3d6"
        },
        "item": {
          "id": "8c5fa9a4-d462-40ff-a12e-6aef850b6008",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e135fef9-916d-48c3-819e-c0502451bf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fde533-a3e3-4e01-9684-edd2f8ad7386",
        "cursor": {
          "ref": "c709b1af-9cbd-41f5-aa77-ea562d9df29f",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d6cb1575-a00a-4060-954b-38dc3c47fa3a"
        },
        "item": {
          "id": "98fde533-a3e3-4e01-9684-edd2f8ad7386",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c273cc66-7aa7-4945-ba95-dfa9fd310289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9a3b6d-cea1-4464-a5da-4c21bf296a46",
        "cursor": {
          "ref": "cfe1bf5f-e16a-42ee-ba34-8116de0a199d",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0189495c-0963-49c1-b9b8-c0a0613268c6"
        },
        "item": {
          "id": "fa9a3b6d-cea1-4464-a5da-4c21bf296a46",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b7b23a55-eb40-4624-a8bc-c68ae5512557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afdbb0d-b62d-41cf-a1c7-17b445446faf",
        "cursor": {
          "ref": "7db84467-18d0-4e3c-8678-d9dc51aff7d4",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1525ab71-b1bc-48e4-9f3b-9cfdfc7f23b7"
        },
        "item": {
          "id": "8afdbb0d-b62d-41cf-a1c7-17b445446faf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "266ba5a2-2f09-48b6-8efe-58dfab7ff1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1073,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3980a42e-7214-46d2-be98-1fe5c64d9546",
        "cursor": {
          "ref": "a0454ba9-9f0b-418e-af2a-06670be8d5d8",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a06071ac-cd1b-4fe3-96f5-1407ccb1d14c"
        },
        "item": {
          "id": "3980a42e-7214-46d2-be98-1fe5c64d9546",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "228cb216-fa89-466e-adfb-e4b167f3d2d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5b965d-5fec-4f20-8053-2191b1978f8d",
        "cursor": {
          "ref": "8b627acd-d158-4e45-bd3d-ca51a2ee1b92",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "65d14462-230e-499d-bd51-a56cf7237e74"
        },
        "item": {
          "id": "cc5b965d-5fec-4f20-8053-2191b1978f8d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "ea2345c6-cac6-4a2c-a39a-f59fdf45a5a2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1255,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8abc837-38c2-49af-894b-6d487f9e74b5",
        "cursor": {
          "ref": "880aee65-5df7-4005-81b0-aad99dd47b4a",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9fe51e34-e469-4264-8059-b1fe245a6f5c"
        },
        "item": {
          "id": "c8abc837-38c2-49af-894b-6d487f9e74b5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "df90451b-2cc1-4980-a84e-68c3e10c406a",
          "status": "Created",
          "code": 201,
          "responseTime": 6424,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "62374bfe-fb1f-4ba9-b460-90be4ba0f7f0",
        "cursor": {
          "ref": "05a72ddf-cf0e-4bbf-bc03-908d29dbfc9b",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c866f4a7-5b52-4694-b517-32d283695b30"
        },
        "item": {
          "id": "62374bfe-fb1f-4ba9-b460-90be4ba0f7f0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b52d6f5e-da72-40f2-ae47-3618f87db4f1",
          "status": "Created",
          "code": 201,
          "responseTime": 6592,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a08c9e-03a5-4d0e-95d6-0301ef871261",
        "cursor": {
          "ref": "cd26f633-4114-4d6f-9902-a4b15e10e6a0",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d1c51b5a-614d-4ed0-be28-a445a321d7e6"
        },
        "item": {
          "id": "e9a08c9e-03a5-4d0e-95d6-0301ef871261",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dbaadb86-28b3-4e11-9a28-27af4df63b38",
          "status": "Created",
          "code": 201,
          "responseTime": 10190,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c333064a-032e-4349-8601-23f5bab3489b",
        "cursor": {
          "ref": "7659c687-e934-47b5-8a30-8291a4aedc23",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "124c33ca-f6f5-4511-adc3-a20615e7324b"
        },
        "item": {
          "id": "c333064a-032e-4349-8601-23f5bab3489b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8931f701-e06b-42dc-9a7b-b8a4a246dfe1",
          "status": "Created",
          "code": 201,
          "responseTime": 10127,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5e107c-2be0-402e-95cb-159958a7af5c",
        "cursor": {
          "ref": "1adf674f-a3ff-4a48-b52f-fb0451fb8669",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9169ec27-771e-4239-ba1c-8fc01530f786"
        },
        "item": {
          "id": "6d5e107c-2be0-402e-95cb-159958a7af5c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e45dd3ce-32de-42da-a8a7-7755f4f36783",
          "status": "Created",
          "code": 201,
          "responseTime": 7558,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47008c7-d9ea-4f9e-b031-31b2bb368ff1",
        "cursor": {
          "ref": "20612267-c1d5-4021-8496-16aef3a4882d",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "047fc998-6816-4a9e-a6e8-1e1f96d88662"
        },
        "item": {
          "id": "a47008c7-d9ea-4f9e-b031-31b2bb368ff1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9afacd67-a3c7-4a35-9fd2-651e9a66e627",
          "status": "Created",
          "code": 201,
          "responseTime": 8606,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79632f5e-1740-4fa2-8a14-1dfb7eb632bc",
        "cursor": {
          "ref": "cf355ab6-b4d1-46ec-a25b-9b78fbe190b9",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "77c9b939-aeb0-4e55-85a3-ebe14e0f8ea2"
        },
        "item": {
          "id": "79632f5e-1740-4fa2-8a14-1dfb7eb632bc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "228410fb-d054-45b9-bffa-8018d14a9deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79632f5e-1740-4fa2-8a14-1dfb7eb632bc",
        "cursor": {
          "ref": "cf355ab6-b4d1-46ec-a25b-9b78fbe190b9",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "77c9b939-aeb0-4e55-85a3-ebe14e0f8ea2"
        },
        "item": {
          "id": "79632f5e-1740-4fa2-8a14-1dfb7eb632bc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "228410fb-d054-45b9-bffa-8018d14a9deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcd294e-1de7-4c55-a4e0-0d6caa837fe8",
        "cursor": {
          "ref": "1382b9b8-6333-4fa2-8924-b2791e54b927",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f2291e48-d19c-49e2-80fa-b507afa0621a"
        },
        "item": {
          "id": "2fcd294e-1de7-4c55-a4e0-0d6caa837fe8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "01748912-e9d2-471f-837b-2ddfc5e869ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c062fe-e324-4d05-a87e-60ecd89ee0c3",
        "cursor": {
          "ref": "42dd46bd-1d46-4bb3-9243-546fd054fa35",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bf9f6d81-3f31-47db-be5a-cd9f36eae89a"
        },
        "item": {
          "id": "39c062fe-e324-4d05-a87e-60ecd89ee0c3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2ce63af2-5fae-4ca7-9ec5-53ef39982a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290929ed-179d-47fa-9747-9f81169d6f60",
        "cursor": {
          "ref": "cf8c4630-b06c-4b48-a322-a3e35f06738b",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "47611e5d-01f5-4279-948a-184faea577b1"
        },
        "item": {
          "id": "290929ed-179d-47fa-9747-9f81169d6f60",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "40cc51b0-2b0b-452a-9d5c-00bde7f9ceb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b83a0b-09b4-40d2-bce1-1ca7f76bb56a",
        "cursor": {
          "ref": "6234fc43-3be1-4e0c-b5a0-e700dd6353ea",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "00564d40-497d-47db-865c-28ff41faf69d"
        },
        "item": {
          "id": "54b83a0b-09b4-40d2-bce1-1ca7f76bb56a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2cdafc7a-ce93-4dd0-82c8-36fca3c370fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fbd8bc-728b-49de-8655-267acb7076a6",
        "cursor": {
          "ref": "61521e20-2710-48df-845a-9e6f85f29951",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "18b44713-1508-443b-93de-be648917bee6"
        },
        "item": {
          "id": "12fbd8bc-728b-49de-8655-267acb7076a6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "56ddfe76-4105-4268-831d-d2bad6a33e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21a28cb-d348-4a60-ab4a-e12c39800811",
        "cursor": {
          "ref": "b8db4201-4f86-4c09-9961-9fb813997b83",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f3978d9a-1f4b-4a60-9dd8-74c1d331cb15"
        },
        "item": {
          "id": "d21a28cb-d348-4a60-ab4a-e12c39800811",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7f60a2f9-fe2c-42f5-b637-284d61cfd6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6437bc73-897a-453c-8e3d-f6337b003a56",
        "cursor": {
          "ref": "9443d622-1d62-4535-bd99-8447ff69531c",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "da45f12b-deb0-453b-8e7a-98f0eb891b7f"
        },
        "item": {
          "id": "6437bc73-897a-453c-8e3d-f6337b003a56",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b87b614-d506-4ffb-abaa-20bb94b88f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1023,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db934b5f-273f-46c8-8198-cb056ba4e159",
        "cursor": {
          "ref": "524e35ae-b2e1-4c20-9960-0e1ecf8cd75b",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "202e309a-839c-4753-938f-9c75bbecabde"
        },
        "item": {
          "id": "db934b5f-273f-46c8-8198-cb056ba4e159",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f0e849c0-50e4-43fd-b0b6-5f3d8291c2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1288,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deec2f72-7bca-43bb-8dda-6934ffe0362f",
        "cursor": {
          "ref": "43832bc4-b266-4ebb-add4-765f23fa58fe",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dffb2582-8b90-470c-8e2a-7aa3255fd412"
        },
        "item": {
          "id": "deec2f72-7bca-43bb-8dda-6934ffe0362f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "204871d2-a244-4e5d-a828-8cacd92f2579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1281,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544059ce-db5a-41aa-b871-7cf2ae2cb2ea",
        "cursor": {
          "ref": "f5e09a5c-aad8-482e-bd02-a867b6990119",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1bc6ce4b-e6a4-4935-9bfa-54684a7b07e5"
        },
        "item": {
          "id": "544059ce-db5a-41aa-b871-7cf2ae2cb2ea",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9fca9ce2-cc06-4bb7-9833-f192775aa2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1522,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95294036-a300-4dc5-ad1a-ad087a54d283",
        "cursor": {
          "ref": "6ae3e978-205c-498a-b91d-46956bdc370f",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "71b7b03d-cc4f-4275-8858-26a987144bc9"
        },
        "item": {
          "id": "95294036-a300-4dc5-ad1a-ad087a54d283",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "31d5c30a-7da0-4c76-9798-f095363b2e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1338,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8b0b42-5df5-40eb-9c64-e8f784620ce1",
        "cursor": {
          "ref": "2309056b-a729-4e41-ab2f-0ef4622e61ae",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a7655c22-4b7d-4376-bc17-f67610794e8c"
        },
        "item": {
          "id": "dd8b0b42-5df5-40eb-9c64-e8f784620ce1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "75302f37-3eba-4199-b2c4-26d9207015ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00391c78-bb59-45f6-9c12-a244c5662932",
        "cursor": {
          "ref": "3ecf7081-cdb7-436d-83f3-6d34346df698",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "88baccc6-34d8-4fbf-a9c1-7a0ece17d96b"
        },
        "item": {
          "id": "00391c78-bb59-45f6-9c12-a244c5662932",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5b619de8-50d8-4d2e-a25a-cf36a14318c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9358cf0-c46a-4063-83ce-1493c5bd65ce",
        "cursor": {
          "ref": "12f24698-4d67-41f4-af37-70b76e0f7b7e",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c533b684-d37c-491e-91c2-1afd557dcc09"
        },
        "item": {
          "id": "b9358cf0-c46a-4063-83ce-1493c5bd65ce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "be72728e-8009-483d-8a60-749cccdca620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d5bd8b-71ec-4202-9873-db8c82ca6842",
        "cursor": {
          "ref": "bc777bc5-5b6c-4e78-a453-d21354186207",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a6f45e71-4644-49c1-8da0-fbe9c66b1573"
        },
        "item": {
          "id": "03d5bd8b-71ec-4202-9873-db8c82ca6842",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bc0f2c29-dccc-4c32-8347-b483fb22d2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa1abf6-a8a1-46f2-88d5-70ac26dd3870",
        "cursor": {
          "ref": "57c43370-6abd-4018-888c-a353dac28e8c",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1bace84e-f88d-4260-863f-fd279dd74171"
        },
        "item": {
          "id": "9aa1abf6-a8a1-46f2-88d5-70ac26dd3870",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "be235499-92a5-42c5-a3d3-3c9f897bf7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af933767-f8ad-4d46-96c3-d29713fb16b5",
        "cursor": {
          "ref": "8c27617d-5fc3-40c8-a5d9-945127bf4640",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "44f239bb-a23c-4fb0-ad6b-c016644889b0"
        },
        "item": {
          "id": "af933767-f8ad-4d46-96c3-d29713fb16b5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c05ae17a-f2e3-44f1-a7e7-14fe5326d582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1778621b-d0c8-4657-b3ac-687e3bd6b739",
        "cursor": {
          "ref": "499d6fda-8599-4a43-8989-6f668248d4d6",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9df0dd59-4091-465b-ad6b-c21a51975e31"
        },
        "item": {
          "id": "1778621b-d0c8-4657-b3ac-687e3bd6b739",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "46de3ce8-0f28-4415-aafd-10f35909be65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2fb9e6-5610-49f6-b54f-de9a4aed6a7b",
        "cursor": {
          "ref": "30350393-db51-40f9-80f8-477b9d024e96",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ab7be8af-b8d6-4e94-b4fc-38d1152f02dd"
        },
        "item": {
          "id": "6d2fb9e6-5610-49f6-b54f-de9a4aed6a7b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6e841196-4631-47bc-bd80-bb2c473a0346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd48913b-8016-41aa-a24b-0dbc640ea450",
        "cursor": {
          "ref": "c002b984-8974-4d2f-82f4-ac36eda4ee38",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4363e20d-325f-4f35-a033-63b58563ff4a"
        },
        "item": {
          "id": "cd48913b-8016-41aa-a24b-0dbc640ea450",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "15df71b9-12b5-459f-b717-2512216e9267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b5aae1-2a8e-4077-9e5c-bea99004a023",
        "cursor": {
          "ref": "7bee9da4-67b8-4fcd-8c7c-8c12ab418d78",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bea06a72-9109-416c-9fe5-1aea9feff4fc"
        },
        "item": {
          "id": "84b5aae1-2a8e-4077-9e5c-bea99004a023",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "74b598c9-0793-487d-b843-5c7029b03c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79185b86-2da1-4487-bd2e-3b39a3ac0bf5",
        "cursor": {
          "ref": "426cdd01-083a-4af7-938f-a30b2d84d8a6",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "43d26a9a-887a-415d-9c5b-533f9fe8417a"
        },
        "item": {
          "id": "79185b86-2da1-4487-bd2e-3b39a3ac0bf5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1c61a347-deb9-43f3-973e-1a6848723d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9338cd7-4787-4867-9c29-fa66b3e2f9c1",
        "cursor": {
          "ref": "8cbcd88f-db47-47cf-801e-5675d4fa03c5",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "12665f3e-408f-4620-aed1-629f132327ae"
        },
        "item": {
          "id": "a9338cd7-4787-4867-9c29-fa66b3e2f9c1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "df1d0ff6-73b5-46b1-a277-033552f89ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a66006a-06c9-4614-a99d-eb9ffad386c4",
        "cursor": {
          "ref": "ac4b92a2-3a38-402d-a8e8-56b7aa0e0938",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d5ef86bc-6d06-43fd-9fa1-280cf7c35ec0"
        },
        "item": {
          "id": "1a66006a-06c9-4614-a99d-eb9ffad386c4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "501b1240-129a-46f4-9190-9dc924c93b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91587735-1c4f-43e7-ab5f-0a4130e398a3",
        "cursor": {
          "ref": "73eb3b00-bac4-43fb-9c9b-e3a61af987c6",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "818540aa-e662-4330-b749-81d41c1af7f3"
        },
        "item": {
          "id": "91587735-1c4f-43e7-ab5f-0a4130e398a3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b77da99e-825f-4c01-86c9-c84372f1f0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340808f6-31b7-41c1-97f8-31784a98a0e5",
        "cursor": {
          "ref": "07d1dce0-8829-4464-ab8f-ee1dc794dc08",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "de3047f9-c36f-42a8-b1c3-f16aed072cb9"
        },
        "item": {
          "id": "340808f6-31b7-41c1-97f8-31784a98a0e5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "115e517d-029e-406a-8940-e040e4100a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc681ba-824b-468b-9d6e-4906c9c0bc08",
        "cursor": {
          "ref": "c97ff8d8-d74f-4c72-84f2-c6ad59bf5592",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0200b706-d2f7-427b-b435-05810fa4cf35"
        },
        "item": {
          "id": "ffc681ba-824b-468b-9d6e-4906c9c0bc08",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7dc68fc6-fd1a-4d1d-925b-392af821d682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e309f23-1004-46ee-8491-301633c07489",
        "cursor": {
          "ref": "cb24f0b6-0e2c-4bf8-9a22-6a46e5f3810b",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7dc2ce60-32aa-4f52-8104-c0fe5bcd44bd"
        },
        "item": {
          "id": "1e309f23-1004-46ee-8491-301633c07489",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ebf8ca6a-ca5b-4fbe-88c6-e84d4de9c521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b486a860-330d-46e7-8bad-873db655d2ba",
        "cursor": {
          "ref": "ba5b51c4-97ae-4a85-aebd-c76a5ce9e6ed",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "01845efd-b7bb-48c8-a9c2-cb29ee51bbee"
        },
        "item": {
          "id": "b486a860-330d-46e7-8bad-873db655d2ba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "37b6db62-b069-46b4-b674-ca1b2159b05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4f2615-a453-4e06-b898-c6a32c45b61f",
        "cursor": {
          "ref": "774ba1e0-9a8b-4d03-8ad8-dcc480432597",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "de58c82a-5a09-46ba-a151-9e21789f3d88"
        },
        "item": {
          "id": "ca4f2615-a453-4e06-b898-c6a32c45b61f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8372e057-a88a-40fa-a79c-574fc89fdf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf83c63-f2b9-4c75-afae-003a7d24170f",
        "cursor": {
          "ref": "8f438eab-2a8e-4520-ab05-178903f2e29d",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "31943184-31b3-4ccb-8483-74163a8b842f"
        },
        "item": {
          "id": "daf83c63-f2b9-4c75-afae-003a7d24170f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "aa48f22e-75fa-42a6-a7ea-7f8d1402bf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30285f5c-a4db-459c-a521-85727c542629",
        "cursor": {
          "ref": "bc8bda51-ed9f-46e8-8d41-ef10316fc9c0",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "174af780-e797-4c45-a1cf-4461f3e5205c"
        },
        "item": {
          "id": "30285f5c-a4db-459c-a521-85727c542629",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f581f16e-e038-4a9f-8903-bdca17cb7287",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661e3ab5-1b53-4826-ba6b-53f7e9aa689c",
        "cursor": {
          "ref": "f68187e9-e9f9-4ef6-89a8-5aea2067a390",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0f8204c9-9fee-4f73-8586-d4948a4a9f36"
        },
        "item": {
          "id": "661e3ab5-1b53-4826-ba6b-53f7e9aa689c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "60fce841-1167-46d5-a4ee-54dcc0581675",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 634,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bdd0a0-62e1-42c8-9452-3b59751e51d4",
        "cursor": {
          "ref": "e3b2f6de-e0bf-4dd5-bb1d-a110ac999b3a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "84981332-7ba5-47eb-a154-85e4e99d67f4"
        },
        "item": {
          "id": "90bdd0a0-62e1-42c8-9452-3b59751e51d4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9a5245c9-ee29-45b0-b06a-d7fe0a904234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bdd0a0-62e1-42c8-9452-3b59751e51d4",
        "cursor": {
          "ref": "e3b2f6de-e0bf-4dd5-bb1d-a110ac999b3a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "84981332-7ba5-47eb-a154-85e4e99d67f4"
        },
        "item": {
          "id": "90bdd0a0-62e1-42c8-9452-3b59751e51d4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9a5245c9-ee29-45b0-b06a-d7fe0a904234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75db2a31-103c-4589-a2d8-bb2ac7d1e2d9",
        "cursor": {
          "ref": "07e38038-7ac1-4f08-8152-4961d6541508",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "702efe90-4bdc-494a-a3ba-b337d6c52fd4"
        },
        "item": {
          "id": "75db2a31-103c-4589-a2d8-bb2ac7d1e2d9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4db4597e-541b-49bc-9791-108c1086e352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b3b201-5a1e-4aba-92ef-e37ca7278960",
        "cursor": {
          "ref": "5112cb70-0db5-44f7-8538-d6729a0a2f30",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ef13d4fc-fe3f-40c4-becc-348d9cb54205"
        },
        "item": {
          "id": "32b3b201-5a1e-4aba-92ef-e37ca7278960",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5964e54e-e725-45e1-a46e-5633654fc438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e581e58-a17b-4221-98b6-a46120431447",
        "cursor": {
          "ref": "560d3af9-0763-4342-ac26-fabc287c5a15",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "70ff7345-03af-40bf-93ce-aad57139bf86"
        },
        "item": {
          "id": "8e581e58-a17b-4221-98b6-a46120431447",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6b4c1e96-38ca-4faf-b1ed-c82e7bbc970f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b52ea26-19c3-4fef-bc19-d4abf355bf3f",
        "cursor": {
          "ref": "906c9b4c-8da2-43ac-8c38-4a925d2b97b3",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e06d04da-63b1-4c4d-8abf-560e403afc58"
        },
        "item": {
          "id": "9b52ea26-19c3-4fef-bc19-d4abf355bf3f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "58bd132f-5ed5-4cc9-bf65-c727d1c78da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219676ac-366c-4881-a1f4-bd4afb2e1348",
        "cursor": {
          "ref": "f88f7f50-5d72-4c5e-aa6b-4ae717ac34b9",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9dd4e6f6-d93e-4899-85cc-0eabf5a4cb73"
        },
        "item": {
          "id": "219676ac-366c-4881-a1f4-bd4afb2e1348",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "df434418-5184-48e1-906c-73e5549780fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38829eb7-b2e8-4555-bf94-c42745a97c09",
        "cursor": {
          "ref": "2ba0db3d-83fa-4b75-a507-448f62db3d76",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ce6de930-7684-44a0-9dea-c20565a08975"
        },
        "item": {
          "id": "38829eb7-b2e8-4555-bf94-c42745a97c09",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "be9bf740-c58b-41e5-bb34-0cdbb3642b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2147b66f-8406-4fa3-b180-ee70d6d76170",
        "cursor": {
          "ref": "99e98d63-fe51-471d-a517-3989bfcebe41",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "476045b7-9721-4233-be55-fa5c997d303c"
        },
        "item": {
          "id": "2147b66f-8406-4fa3-b180-ee70d6d76170",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fd1506df-59e9-4821-a286-f69b7fa6ff67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b19ce0-bddd-40e5-882d-5b55391cbe40",
        "cursor": {
          "ref": "4730e9b0-d286-4922-be43-a983a4ab4178",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "14a9c3f9-a428-4a25-a3ad-0e71907f1c0a"
        },
        "item": {
          "id": "80b19ce0-bddd-40e5-882d-5b55391cbe40",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f408a9dc-0e8a-4c7d-ad18-f51762cdadae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d32c7c-1aaa-4ad2-a5bc-89b891f883bf",
        "cursor": {
          "ref": "853194b0-9495-4daf-a9a6-d383aed703fc",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1875c5d2-5707-4415-b8bc-0cdcc1d94e39"
        },
        "item": {
          "id": "a5d32c7c-1aaa-4ad2-a5bc-89b891f883bf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6e0867be-2b26-4d24-92fd-82566549da8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2910f3-759e-442e-8460-5073b3cfa8c2",
        "cursor": {
          "ref": "b0c52679-7e4f-423d-862f-b40e6d416e11",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "76b49c53-b746-4e31-b362-ddf049bc1363"
        },
        "item": {
          "id": "8f2910f3-759e-442e-8460-5073b3cfa8c2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6bf59517-e0e7-4378-85d5-1c315f795863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9eb0a0-89d2-4834-9178-2a13ac8582f1",
        "cursor": {
          "ref": "347819f8-479e-4cd6-a646-5e6f36e27e95",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "046f80ae-8c8f-49ab-8ca2-c3d2cb609a0e"
        },
        "item": {
          "id": "5a9eb0a0-89d2-4834-9178-2a13ac8582f1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e2ad912b-35b9-464b-b39d-77c2ebf085df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b7d3c6-3195-4c12-b89e-cbafb1bb6b7d",
        "cursor": {
          "ref": "ff2dfbc0-6983-4ac3-891c-3cf5bd0d0332",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2c3fce58-a183-4e05-ba21-75e1976122d7"
        },
        "item": {
          "id": "77b7d3c6-3195-4c12-b89e-cbafb1bb6b7d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "81761311-3c0b-493d-8459-59141687042d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebade802-9f15-4375-aef2-8e1e4e6f0bca",
        "cursor": {
          "ref": "7092f075-823a-43f8-8f27-fcd9898e022c",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "06252098-efe3-4d31-a643-50d0a6c8248f"
        },
        "item": {
          "id": "ebade802-9f15-4375-aef2-8e1e4e6f0bca",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ad671c8f-747f-457f-85c8-963fca316b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c24391-3c89-42cf-be63-3cfe3fca5111",
        "cursor": {
          "ref": "a009ecc4-492d-4f53-82fb-ae329015bf09",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "002c1581-1264-49ad-8ff7-5e4c370b3d83"
        },
        "item": {
          "id": "a0c24391-3c89-42cf-be63-3cfe3fca5111",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5ea09dd2-0e54-4574-8a78-0e67481784aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e85936-8766-4129-af7d-9df8deaec389",
        "cursor": {
          "ref": "33b59974-0000-4270-8a25-d186795153bf",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "33b5e8ef-ed28-4b0e-970d-2d8577dc9c1b"
        },
        "item": {
          "id": "39e85936-8766-4129-af7d-9df8deaec389",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "90a2efbf-0f35-4af2-9dca-a037fa7672e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bfeea9-9ad1-4df0-abfc-6699a70dbcd6",
        "cursor": {
          "ref": "5ee5cd71-cc49-40cb-b7b0-4d0b942eceab",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "46b8e45c-18c5-4855-9648-463ac563f3c6"
        },
        "item": {
          "id": "54bfeea9-9ad1-4df0-abfc-6699a70dbcd6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "929709e4-399d-4654-92de-8c4cf98df9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2de66c-6a76-46b5-967a-a5525e658717",
        "cursor": {
          "ref": "58d5e2fc-72bd-4dbd-8753-e4aee062d863",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d45ce88c-d19f-4e9b-b56d-dca7b17b0443"
        },
        "item": {
          "id": "bf2de66c-6a76-46b5-967a-a5525e658717",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "76a84750-3f0b-4d88-ba93-35a550dbd030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24e40a5-202a-4097-8e63-50e5f21c0baa",
        "cursor": {
          "ref": "7b4a997c-a9ae-4f3a-a5da-871588fc4851",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dea5e457-b355-4d0b-872e-34945d89b29f"
        },
        "item": {
          "id": "b24e40a5-202a-4097-8e63-50e5f21c0baa",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9b4d0c12-6811-40d3-aa59-59eabf221623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae6b68c-6ecb-4b96-a0c7-38236a3f684f",
        "cursor": {
          "ref": "c16395fc-3219-4d9d-bb08-4098ff01601e",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a88dbbf1-dd69-4e54-ac7c-34f18fc75cc5"
        },
        "item": {
          "id": "6ae6b68c-6ecb-4b96-a0c7-38236a3f684f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e9e9125c-6946-4eb7-a8bc-96c3891b5535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041a7f37-5530-4165-877c-ffb09ac111dc",
        "cursor": {
          "ref": "41a24ecb-ea55-4d72-95e4-925f58cc5984",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0f4e75cf-ce6d-4acf-9e1a-d99627fa60ae"
        },
        "item": {
          "id": "041a7f37-5530-4165-877c-ffb09ac111dc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "172e54b8-43b9-4232-ba38-481eb7f35e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d82bb4-99fc-4301-ae13-e268d747ba79",
        "cursor": {
          "ref": "a36ff1f0-eb9f-46a2-bc0b-1b2f42f13a6f",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9275897c-7bec-450e-9b21-8d428c3818e6"
        },
        "item": {
          "id": "45d82bb4-99fc-4301-ae13-e268d747ba79",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cd025ba4-0a0b-4f76-a798-fbc2ef4d7f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e41fd9-ac0f-4513-8785-deb792c9c285",
        "cursor": {
          "ref": "963cab5f-38eb-4330-b612-f6003e7b158a",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e2577de4-f517-428d-b4b5-484ee4c5e415"
        },
        "item": {
          "id": "49e41fd9-ac0f-4513-8785-deb792c9c285",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "41b05efb-701b-4481-a575-62af1a869c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867035ab-2ba7-4dad-b55c-3cff4cd58f41",
        "cursor": {
          "ref": "1d652406-384b-4b42-8bd0-39fedf66fbaf",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "44596445-3011-4455-9194-efe4435c1cdd"
        },
        "item": {
          "id": "867035ab-2ba7-4dad-b55c-3cff4cd58f41",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2a1f1f61-387a-406c-85d2-8e442ecd27fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72988bf9-e10f-4c9a-8683-ad8e4eecfcce",
        "cursor": {
          "ref": "bd2a3f30-5b0e-4d17-818a-8f12061ce950",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4f8a70b3-3ca4-49dd-8c98-e96493c0e30f"
        },
        "item": {
          "id": "72988bf9-e10f-4c9a-8683-ad8e4eecfcce",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7a4efc4f-b56b-44ae-8d93-064b0daaaaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edc20b9-13bf-47ef-a20f-34e2b9d19a87",
        "cursor": {
          "ref": "d74a3b4b-6f81-4d91-840f-d8d2fe3af483",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b2fdb8f3-4ebd-4572-b9fb-6d174ccdf56f"
        },
        "item": {
          "id": "7edc20b9-13bf-47ef-a20f-34e2b9d19a87",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cc377ac9-69de-4798-a637-959054e742dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f8da07-8b5a-4f58-bc97-3c8cf282f4c1",
        "cursor": {
          "ref": "21e01a07-5e96-40c7-b4a9-987ed17b0616",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a873c411-1fcb-4b17-986c-881968a766ca"
        },
        "item": {
          "id": "29f8da07-8b5a-4f58-bc97-3c8cf282f4c1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "066c43a5-9c6c-4164-826f-63185c398dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f6e1ec-d988-4d35-a369-e36aa4b765d4",
        "cursor": {
          "ref": "19ff23fc-6662-4fbf-b8d5-966169b80e72",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "57b0bc4e-051e-4094-84b9-fe5a968757c7"
        },
        "item": {
          "id": "35f6e1ec-d988-4d35-a369-e36aa4b765d4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0c51282c-5aca-4537-a2ca-cba19d1c3d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3671faa-7ab1-4430-a830-ad2aa9c4bad5",
        "cursor": {
          "ref": "2b835cfe-e68d-4e66-a07a-a5cc21bff95f",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b4f0839e-de09-4c9d-8c67-6f9ddf6f5be6"
        },
        "item": {
          "id": "b3671faa-7ab1-4430-a830-ad2aa9c4bad5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "28dc1831-9973-4c80-a246-7c65dbed4d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6495c81-6e7c-4f7d-871f-2cef4b743980",
        "cursor": {
          "ref": "11e54a84-968e-4ecf-8221-dbbcd6319d3e",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6b38c3f3-6cc8-45f7-8d80-b30b20e54b82"
        },
        "item": {
          "id": "c6495c81-6e7c-4f7d-871f-2cef4b743980",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "34529eb7-cbb7-4ca4-8fdd-4339be146beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac5e80c-7474-4017-b6b5-f286ddc49bf4",
        "cursor": {
          "ref": "80180ae8-9d5c-4fee-9281-8676014b362f",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d2ef7227-2a7d-4fb8-aece-bf2492875b65"
        },
        "item": {
          "id": "cac5e80c-7474-4017-b6b5-f286ddc49bf4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1d63ee67-877c-4f44-af9b-3af35d97b83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d4b7c1-d3e5-4c55-8a49-ff41d86513fa",
        "cursor": {
          "ref": "d6356f33-85d9-435c-b291-c9bb5d5b6a5e",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "22f5c480-649f-4316-a2c9-088ad0d1be79"
        },
        "item": {
          "id": "55d4b7c1-d3e5-4c55-8a49-ff41d86513fa",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ef379c77-bf9f-4df7-af44-6090685bd83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4f0299-673b-4ebb-9e68-43f993ee2a3e",
        "cursor": {
          "ref": "249409a8-7090-4e4b-a970-9deaf9184c88",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7061fd79-ac22-42f2-bc26-c82a2a109015"
        },
        "item": {
          "id": "ba4f0299-673b-4ebb-9e68-43f993ee2a3e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "afe1d1d8-99dd-4e38-bcce-27051f7cb8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf25f4e-2123-4f62-8260-ba7c4f4c5277",
        "cursor": {
          "ref": "6958b36c-d02b-4e11-bdba-1c218ff73240",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bb49cb03-ccb8-462a-b14c-2a976cdca81e"
        },
        "item": {
          "id": "2bf25f4e-2123-4f62-8260-ba7c4f4c5277",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cf62949e-3ed6-4407-8cb6-2776e84312ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4328b5da-4a2f-47af-b2d6-71e38897001d",
        "cursor": {
          "ref": "4c5b7a41-fc70-42be-b2a1-1892e970f08e",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ecf05116-fe61-4c7c-8ea6-f33e5aa6cc0f"
        },
        "item": {
          "id": "4328b5da-4a2f-47af-b2d6-71e38897001d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d4c46c18-5029-4db0-a765-c9b570a0d2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e31fcc-ef98-40b7-a918-778b3b65a8a2",
        "cursor": {
          "ref": "8e2acbd9-2a7f-45b7-8b37-5c8be52f579b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "244f73e1-2ac1-44c0-825c-a8de854dd3c3"
        },
        "item": {
          "id": "02e31fcc-ef98-40b7-a918-778b3b65a8a2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "89f0f6b6-e277-4889-aa96-5e61b8df3258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec1ff67-1120-431e-aa80-ebe53b6e6d06",
        "cursor": {
          "ref": "5c0a1fdf-f2a1-4c7e-bf03-084d960eec1c",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1f58726e-aece-4ee0-a487-0ba86d267f29"
        },
        "item": {
          "id": "0ec1ff67-1120-431e-aa80-ebe53b6e6d06",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "08e58785-6f2a-40f6-a1ca-00312358f882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb068d8e-eec8-48ce-ba6b-abc57257acfd",
        "cursor": {
          "ref": "56918c42-74e8-4dec-9745-bab3f38ce4ba",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0b111819-dfe5-458c-9a5c-c4b2baf0af47"
        },
        "item": {
          "id": "bb068d8e-eec8-48ce-ba6b-abc57257acfd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "23d08d59-fef9-4e6d-97b9-98db1463f409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83871b12-9816-46ed-b5e3-1b7170e85f0d",
        "cursor": {
          "ref": "8410bff6-59ad-49d4-95ff-93119a67b02e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8743307a-c93a-40fa-9703-10721bc14942"
        },
        "item": {
          "id": "83871b12-9816-46ed-b5e3-1b7170e85f0d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6c9da4d5-e728-4ae8-9c20-8fb5e7d4363d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1314173a-2717-4189-91bc-547fd3618d1a",
        "cursor": {
          "ref": "ebcf4284-c11f-45fa-90c8-ce2d0aee2f3f",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9e7bc24a-09d9-4d92-886f-cab15f45d313"
        },
        "item": {
          "id": "1314173a-2717-4189-91bc-547fd3618d1a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "622292a2-36ac-4a2d-a393-e5002763bbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33e93d8-baaa-423a-a294-5d06fd9a1c60",
        "cursor": {
          "ref": "675dbf9f-ee91-48c0-a01b-cf2464a54255",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9110d599-9844-4fb2-adfb-ccaacff278e7"
        },
        "item": {
          "id": "d33e93d8-baaa-423a-a294-5d06fd9a1c60",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8a465dc6-3caa-46b1-a79e-303abd31b923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd364b4e-b0ff-4208-b02d-0705e947c6fe",
        "cursor": {
          "ref": "78f652af-9321-44c5-a630-0c2841525ed7",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5462ade7-6627-45df-a82a-234ac48d1320"
        },
        "item": {
          "id": "fd364b4e-b0ff-4208-b02d-0705e947c6fe",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fc84d70b-721c-42a5-94eb-2feeabca13e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1237cb60-9c1a-4149-8cfe-73721a3e1b16",
        "cursor": {
          "ref": "e3b82815-cca0-4954-a132-ffca4321703b",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8d54f094-fa4e-446a-b83d-172226798840"
        },
        "item": {
          "id": "1237cb60-9c1a-4149-8cfe-73721a3e1b16",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b8e90621-00bb-4155-a544-d1ed88ac1f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e3461a-4f01-4efc-bb89-138ea106c956",
        "cursor": {
          "ref": "3a09b3b5-eba4-47c9-856b-fb559d6813fe",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4eaa9e0b-ea51-413a-942c-c80f275e0ada"
        },
        "item": {
          "id": "26e3461a-4f01-4efc-bb89-138ea106c956",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "01e39a35-3c23-4de9-a179-6f4c08baa9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c99747-d919-494c-ae03-de247dfe5665",
        "cursor": {
          "ref": "5c38abcd-3289-4719-aae4-a2792998ead5",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e02f0898-d10a-4608-b26d-9f784e8a15d9"
        },
        "item": {
          "id": "38c99747-d919-494c-ae03-de247dfe5665",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "27750aec-71ff-4e99-8be3-0d5f4f6787a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfb2ea5-4fdb-4b30-a46b-f339145e183e",
        "cursor": {
          "ref": "0f5d6362-ede0-436a-9e29-c496e287c9e0",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6e530364-0fcb-4d81-b608-6fe35f6897cf"
        },
        "item": {
          "id": "5dfb2ea5-4fdb-4b30-a46b-f339145e183e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7202b00a-0967-4af0-a042-263deacf5d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9853a24d-dc05-47ca-98c2-28547ab3c1f8",
        "cursor": {
          "ref": "1ba6f2ea-0b07-45e0-a68e-073528c99a2a",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "df38ebd6-9d73-4bfd-a5bd-c048137b416c"
        },
        "item": {
          "id": "9853a24d-dc05-47ca-98c2-28547ab3c1f8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e9c62b68-a3de-4ecb-b648-04bb2fbb1a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656650cc-9075-4531-b058-b3a9b67c6d9b",
        "cursor": {
          "ref": "9a7c07b8-95b0-4853-bd6a-7bcf5b154d1f",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fa69be25-04c3-4c57-83aa-1c2de05c6c90"
        },
        "item": {
          "id": "656650cc-9075-4531-b058-b3a9b67c6d9b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "86beba68-5bb0-440b-aa12-aa2f3a59acb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754043ba-0f05-445a-a1d3-3b7191863184",
        "cursor": {
          "ref": "81ee48c2-fe73-442e-b550-162129c2f35e",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5433a21c-cc4b-4fa2-8de6-8b3562dd410e"
        },
        "item": {
          "id": "754043ba-0f05-445a-a1d3-3b7191863184",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "df8efbd0-4744-4c87-b7cf-07a22c7ab880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bd328a-ae8c-4046-8851-87943b3cbb4a",
        "cursor": {
          "ref": "e0292d3a-4ee5-46c3-8622-e27d81eb0d9c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bef04112-a2aa-4a17-acc5-8f46b02a45bd"
        },
        "item": {
          "id": "c2bd328a-ae8c-4046-8851-87943b3cbb4a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "73be9511-2aa3-4f7e-b75c-aa9ec97f0822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31983447-2ad6-45e6-aee2-9f24bc8f02c4",
        "cursor": {
          "ref": "7433c102-2332-4428-91a1-f4d491738f75",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "39825d9f-027d-45bb-8e5e-9b60110cbb15"
        },
        "item": {
          "id": "31983447-2ad6-45e6-aee2-9f24bc8f02c4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "34e9a3e9-475a-4890-a045-431e5e5d1e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c6784f-98a2-4e66-a3a9-17f85f5fd91e",
        "cursor": {
          "ref": "76e6b820-85ca-4a01-989a-143fbd5d3aad",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d3873a3c-cf22-454e-a11d-a89a560c630a"
        },
        "item": {
          "id": "80c6784f-98a2-4e66-a3a9-17f85f5fd91e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fb72b5eb-34d5-4f76-b792-d67b20303abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6a3cb8-2c45-446a-82d1-7f8221c0ad8c",
        "cursor": {
          "ref": "aabf6daa-1963-4557-8f50-f2736eb9716a",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "47c699ba-74bf-44de-9267-1d1e4cded79b"
        },
        "item": {
          "id": "bf6a3cb8-2c45-446a-82d1-7f8221c0ad8c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "34ee77e3-29a3-40ab-bdc8-8b1a47b940af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b714110-8a2e-4c6e-a05a-1523e8e89244",
        "cursor": {
          "ref": "617d3d98-3318-4eaf-a353-a0aefbb39789",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b7bb9a97-4790-4ebf-8572-30efa658f3c0"
        },
        "item": {
          "id": "8b714110-8a2e-4c6e-a05a-1523e8e89244",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "70204dda-2bf4-4115-8a66-a5fb1fe41adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f877924-be4f-483e-a9c7-349c31691241",
        "cursor": {
          "ref": "aedbd244-6c6a-438e-bb90-924f2fa567e3",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3d6aeee3-bf69-4c39-bd53-acab54e1eb93"
        },
        "item": {
          "id": "2f877924-be4f-483e-a9c7-349c31691241",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b7eb595a-7553-4f1d-b40e-a1dc382cdce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3eb94ab-aebd-4bbb-82a5-60067b2c8c82",
        "cursor": {
          "ref": "8e3ef9e5-f3e9-46f7-8667-122a49f1d5ea",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2a8e2f92-6f6d-4f70-8736-22cab1f5c619"
        },
        "item": {
          "id": "d3eb94ab-aebd-4bbb-82a5-60067b2c8c82",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "45e24c88-98d6-4260-9ce2-24cf0c938a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4a8193-df1e-4238-af18-d708933b4bd0",
        "cursor": {
          "ref": "62f56791-7111-4f69-887d-ed2ecd0cb080",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2fd44120-21d9-46e2-8819-e90f8598940c"
        },
        "item": {
          "id": "cd4a8193-df1e-4238-af18-d708933b4bd0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f63bf23e-683b-4bc0-806d-1920f5807449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744f3a83-25b6-47e5-a8a6-3dc764eb93e0",
        "cursor": {
          "ref": "db29edcd-6f69-4fa6-8e55-8c846566f2fa",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d24c0c1e-2c7b-49fa-83b4-90104788a433"
        },
        "item": {
          "id": "744f3a83-25b6-47e5-a8a6-3dc764eb93e0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "584adac4-19d9-4e72-8c57-805153255083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad43818d-c7c1-438a-a8d6-5e3283704f74",
        "cursor": {
          "ref": "cc259d37-5f6b-4ff9-990d-d7f6d9d6feab",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0437e0d5-f8ed-480e-bfbf-3cedacbc41e9"
        },
        "item": {
          "id": "ad43818d-c7c1-438a-a8d6-5e3283704f74",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4008d30d-7634-4cd4-b4e4-4c8ffd1dd5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e91e65b-42da-455e-9525-f9257290ad1e",
        "cursor": {
          "ref": "ca4e48e3-7f85-4420-8316-d93a0b8eebdb",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4667d454-83d6-41f5-83eb-4301231ac212"
        },
        "item": {
          "id": "1e91e65b-42da-455e-9525-f9257290ad1e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "37bdd91b-577e-4ae9-850e-74363edf5d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658ab321-711e-46e4-81d5-c4ad0b72efc7",
        "cursor": {
          "ref": "570c026b-a736-4537-a4bf-909f63588fbe",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7b84d189-f631-408a-afe9-7c77936a4401"
        },
        "item": {
          "id": "658ab321-711e-46e4-81d5-c4ad0b72efc7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "84b72225-1952-400b-ac9a-122dbbc9dac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dc3f42-d40b-413c-a565-d5e6c2e9e43e",
        "cursor": {
          "ref": "4bc38764-7722-4b26-a592-e63330d2b206",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f8f7e1dd-973b-41c1-99fe-f4190def3cba"
        },
        "item": {
          "id": "33dc3f42-d40b-413c-a565-d5e6c2e9e43e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5fb991d5-ff1d-4468-b301-a94d540082ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6adaee-034a-4271-b47c-72fbfa9152b6",
        "cursor": {
          "ref": "aee0cae3-6576-49b0-b0d5-59fe1b521b13",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f9d59e13-86f7-45e4-b823-2d0858590d92"
        },
        "item": {
          "id": "aa6adaee-034a-4271-b47c-72fbfa9152b6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8bdcc356-3e7a-4e8d-88bb-b6e3acebe987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648a9252-35cd-481c-895c-4ba73194aa91",
        "cursor": {
          "ref": "7b0daff8-6be0-4ab8-a1c7-b06f09692231",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "152ac86a-96d2-460f-9303-d8e118615ea1"
        },
        "item": {
          "id": "648a9252-35cd-481c-895c-4ba73194aa91",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3c7a7b5f-e36e-4f88-8c8f-0a8c982505ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcd69a1-f3df-4a8d-9677-6eb917416ce9",
        "cursor": {
          "ref": "d9dd57a1-77d5-4947-9a0e-1e6a08b48753",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e42d030b-c711-47ea-9774-906cb5ee54d7"
        },
        "item": {
          "id": "cfcd69a1-f3df-4a8d-9677-6eb917416ce9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "00a31bb4-00ef-4ac2-a873-d3299a7850fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af8ecda-c955-4ecb-8613-a183817dbb5c",
        "cursor": {
          "ref": "a6df61ab-c1ab-4725-ada9-b81db8454555",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2edad8cb-6f87-43a8-bdac-3f5d0e0422fa"
        },
        "item": {
          "id": "6af8ecda-c955-4ecb-8613-a183817dbb5c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c453e889-3dfd-44b5-88bc-dc3f70542389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbe72b9-f668-45eb-b90d-0113d0d2a139",
        "cursor": {
          "ref": "d22f9336-8ce4-42d4-a192-f15fe3f80896",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b7469f8e-9b3a-414a-beb4-abd7e79a41b2"
        },
        "item": {
          "id": "9dbe72b9-f668-45eb-b90d-0113d0d2a139",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c1a7f9d9-934b-49ed-aeae-6a9289e4d079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721a12d4-8301-4686-99c4-775ade601cc9",
        "cursor": {
          "ref": "05615ce9-8360-42ec-a275-4f1db9997066",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8579392f-72dd-4c74-8086-ceb29820721d"
        },
        "item": {
          "id": "721a12d4-8301-4686-99c4-775ade601cc9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ea3d865e-8f2c-4231-8eec-73723601fa94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e089a82-dfd6-456f-89b3-7a0d20899204",
        "cursor": {
          "ref": "fb9496bf-5cde-4313-8019-051ac67c4286",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3c05bcb1-8982-4f32-8b4e-9bafcc95994d"
        },
        "item": {
          "id": "0e089a82-dfd6-456f-89b3-7a0d20899204",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7aadb7f8-f3d8-4dde-a420-b0cdbe794127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15155ec-e0be-48c5-ac60-33b6b5109f65",
        "cursor": {
          "ref": "cbecaf31-5a76-495c-9e17-00c5a632f94f",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "34971c84-419d-4187-8748-805975181be5"
        },
        "item": {
          "id": "a15155ec-e0be-48c5-ac60-33b6b5109f65",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9ecd7e10-318c-4989-9d47-b2205e21d86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46363a98-bbca-4384-bacd-4bf632aa2376",
        "cursor": {
          "ref": "556441ae-db27-4a25-bb14-fdb097fa96d2",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "aadec192-e062-42b5-8e12-1b469bd260d1"
        },
        "item": {
          "id": "46363a98-bbca-4384-bacd-4bf632aa2376",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6f8fd0fd-303f-4eed-8769-4c3c85afc49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e19b18-411e-400b-b040-740b8250b7b9",
        "cursor": {
          "ref": "d07529eb-ce29-4be9-99ff-100cb87ad4fa",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "77ca58f8-c5c1-48b7-8451-2c8c466acf8c"
        },
        "item": {
          "id": "e5e19b18-411e-400b-b040-740b8250b7b9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b978e0f1-5185-4018-9292-7dbfb607219c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b40be8e-2fbf-4af6-b0e3-1bae58364ec4",
        "cursor": {
          "ref": "97fffa06-770a-4885-bab1-409a903e97bf",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e3256c40-2a2f-453f-956b-f378d3b0cc02"
        },
        "item": {
          "id": "9b40be8e-2fbf-4af6-b0e3-1bae58364ec4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eaea7afc-7a19-4b2e-991f-a92f6be30fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c587a9-2484-4b46-9845-0efa09ac0b38",
        "cursor": {
          "ref": "08bd4593-c392-4a7e-aa6e-80e698d21366",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d4ef7c57-0343-40a4-bf70-7257c4a5a9a0"
        },
        "item": {
          "id": "b8c587a9-2484-4b46-9845-0efa09ac0b38",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b33c3954-8772-40d2-85d1-f92b20a56977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254bc56a-302a-4d3c-85fd-cc105c479928",
        "cursor": {
          "ref": "f4f23a22-78cd-426d-b4de-7d95128cf33b",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ed043057-6c43-494b-866f-5980a8b4007f"
        },
        "item": {
          "id": "254bc56a-302a-4d3c-85fd-cc105c479928",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5f837ee8-6966-40d6-b26c-c53d1e13f46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd83624-a8a9-402d-89d8-1f0a4907c2a5",
        "cursor": {
          "ref": "12c6710d-36dd-4fb2-afe7-d6b3600f7951",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "73b927a2-8253-4959-846e-a0610f148226"
        },
        "item": {
          "id": "1bd83624-a8a9-402d-89d8-1f0a4907c2a5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7506852c-cd44-4e62-b519-a20122ef3af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc93510c-94bf-4d85-9eb0-862d48d1158d",
        "cursor": {
          "ref": "4aeca6d3-abe6-4381-b84e-56d62a4644ad",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2bd85c7c-3f28-4a3e-82b1-b40fbbcbcc3a"
        },
        "item": {
          "id": "bc93510c-94bf-4d85-9eb0-862d48d1158d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "db52dbb2-04c1-4e2a-9974-e9d51130cebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7559a9d7-e0db-42da-9b73-00d648bf8170",
        "cursor": {
          "ref": "45e48617-8125-4c8d-9695-4d3b60503611",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2256e3c9-6477-49cf-8b98-2b9198ede375"
        },
        "item": {
          "id": "7559a9d7-e0db-42da-9b73-00d648bf8170",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "acb5261f-ec91-4877-9570-b636d8131a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeaa9f4-2ea9-4662-9d4b-95926a07d37c",
        "cursor": {
          "ref": "fa293951-dd99-46b9-94da-7a2ecb551c59",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c2ef7f78-9e0b-4788-bfc7-7bc8d293dc0e"
        },
        "item": {
          "id": "adeaa9f4-2ea9-4662-9d4b-95926a07d37c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1b6916c6-4ffa-4427-ab66-d8e2cebb3651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05762249-1ad0-4e2e-ad6e-4eb7c5db179b",
        "cursor": {
          "ref": "7b7bad00-06b0-448a-8006-2467877aa1a9",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0398b13f-50f9-4055-82f1-74d3d54ba6d2"
        },
        "item": {
          "id": "05762249-1ad0-4e2e-ad6e-4eb7c5db179b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ca2bced5-22a2-4cd2-b234-e63cda2051c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625bd8b8-25f6-4a04-8c64-b80a1d5f5bbf",
        "cursor": {
          "ref": "801818b7-72ea-4100-97b0-b42f4902b155",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cbac58b0-8b5a-4c5e-bf9c-81c4cdeda7fe"
        },
        "item": {
          "id": "625bd8b8-25f6-4a04-8c64-b80a1d5f5bbf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a2c58caf-7c14-408e-b2b6-32e4bed5b082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1429971-df2d-46e6-8316-e4d0dce31fc1",
        "cursor": {
          "ref": "696ad53a-4d7d-419f-ba52-eea9cf8144d5",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b0e41c7a-4151-4fb7-a229-3aea2d9df609"
        },
        "item": {
          "id": "f1429971-df2d-46e6-8316-e4d0dce31fc1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "be5112c0-39c0-4b5c-a165-ad224dede12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e107ef5f-abee-449a-8dbf-6e05a428aa8f",
        "cursor": {
          "ref": "1b682a07-9c71-43c5-8dd6-4f3f689abdbb",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "149961b7-b57e-4bc7-bad7-06390b463245"
        },
        "item": {
          "id": "e107ef5f-abee-449a-8dbf-6e05a428aa8f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7cb82cc6-3c13-42bb-a9f0-f27806317d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 939,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccf0a13-d09b-4f26-9894-f744dc6e87aa",
        "cursor": {
          "ref": "e7bf47ba-9aea-403b-9de7-cfb5c2c658f0",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b658b4f4-ddab-436f-89f5-b39096050050"
        },
        "item": {
          "id": "5ccf0a13-d09b-4f26-9894-f744dc6e87aa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7d3584da-010b-4787-adc0-d907594701f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaefc5e-a514-4f3d-b4e8-b7bb1c6108f4",
        "cursor": {
          "ref": "0ff127c0-3ee1-46e8-ab78-375663985755",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "570cde7f-ddd0-475a-b5fb-1a3e3961c731"
        },
        "item": {
          "id": "daaefc5e-a514-4f3d-b4e8-b7bb1c6108f4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f5adaf05-4f55-4169-8212-42309ed79f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169e2d50-17fb-4b17-a120-73a1c8a9b75e",
        "cursor": {
          "ref": "8b1ee1f3-e1d6-4891-a40a-648abb983702",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f1eae09f-1b95-4d96-bb01-e0df3eda0da1"
        },
        "item": {
          "id": "169e2d50-17fb-4b17-a120-73a1c8a9b75e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2bb8228d-6baf-4d9f-ab99-d076f5830792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5640f62-4135-4beb-a965-11a640080426",
        "cursor": {
          "ref": "61d6f62d-23be-472b-b82b-418bf3cee877",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "73690311-60ea-4967-9b8d-34242d3cef86"
        },
        "item": {
          "id": "d5640f62-4135-4beb-a965-11a640080426",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9f83398a-93ae-40cc-ab02-2fb525120db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5595ca6-f08c-4026-9c09-a2816d664d57",
        "cursor": {
          "ref": "83ee8bc7-6c75-4b9c-a15f-867565db54e9",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "65a4a112-bcd0-41a2-a59a-3d699029ca96"
        },
        "item": {
          "id": "f5595ca6-f08c-4026-9c09-a2816d664d57",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "00a3b8be-f086-4fb8-99f9-ff7447277dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe63ae4-be4b-4f97-a196-92179d25361f",
        "cursor": {
          "ref": "76ce40de-86a7-423b-8862-eaf08e60bcac",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "927fa2ff-ad1a-4fc1-ae36-fabe741cf74e"
        },
        "item": {
          "id": "6fe63ae4-be4b-4f97-a196-92179d25361f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9afe7485-5258-4c17-ba95-424966f6f09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c964c2ad-3621-4648-8596-a604b5ffc63d",
        "cursor": {
          "ref": "08f3570a-bed2-498a-b9c8-606f6221a53f",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3fc186e1-2c98-4d74-b40a-37dc6de5f16e"
        },
        "item": {
          "id": "c964c2ad-3621-4648-8596-a604b5ffc63d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "90313f9e-1bc8-4872-96b0-36f81f757db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f87eac-d2d0-4250-8342-ec481f1162a4",
        "cursor": {
          "ref": "e5442c16-14ca-4f1b-af49-add25fe0e33c",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "77e72b0d-ed0c-4014-a8ad-1ee2a9cb604b"
        },
        "item": {
          "id": "28f87eac-d2d0-4250-8342-ec481f1162a4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dd175e66-51ae-4fef-9670-1674ada86d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77185dbc-86ed-4ebd-b030-dba350859c39",
        "cursor": {
          "ref": "f33c4e66-b828-4775-8046-0b7560d84d39",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e26ea0c5-26aa-4140-ab37-003b51c53fe8"
        },
        "item": {
          "id": "77185dbc-86ed-4ebd-b030-dba350859c39",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "436cdd10-04ba-4ae8-863c-c6a6e8181f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d05e924-f92b-4183-9231-f96bdf5f9ff8",
        "cursor": {
          "ref": "0038005b-e0a9-4d29-bcd3-4acac0da1e8a",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6e33d696-7bbf-457e-a764-3e7f37b1dcea"
        },
        "item": {
          "id": "2d05e924-f92b-4183-9231-f96bdf5f9ff8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "82be18b7-27ba-4f38-9b74-f8ad6c4298b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505cbc84-d1ee-45e4-8dd6-f40185fbb493",
        "cursor": {
          "ref": "6c76e94e-15c9-4148-9ed7-9c63f6bc34b9",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9b993063-21c9-481f-bdcf-2a719f4a4569"
        },
        "item": {
          "id": "505cbc84-d1ee-45e4-8dd6-f40185fbb493",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e7291b9b-aa79-4dd8-ab7a-c469a62038c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa48d16-94cf-4810-b8b3-458555b00909",
        "cursor": {
          "ref": "48b2d8ff-a874-4881-a09f-2c2a61678496",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0baf3f56-9dc4-4cfe-b1d0-b3969fe956d9"
        },
        "item": {
          "id": "2fa48d16-94cf-4810-b8b3-458555b00909",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "242b48a9-c60d-4854-86b7-7300094c268d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d955dc-e445-419a-b534-74d6a08bee3f",
        "cursor": {
          "ref": "b8a44b17-1398-4d93-8853-0d644b866d8e",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0bd88eed-e932-4736-914e-c054e1b65e89"
        },
        "item": {
          "id": "b1d955dc-e445-419a-b534-74d6a08bee3f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "95de7984-ed24-46c2-ade9-fafcbfb511dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f5831f-5bbe-43ae-833d-483744f67a30",
        "cursor": {
          "ref": "a04b458c-3d42-48c8-a3ce-06409486afbe",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b26b961b-068f-4d0b-beab-145c29cd06af"
        },
        "item": {
          "id": "77f5831f-5bbe-43ae-833d-483744f67a30",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "028a5845-2b58-4930-b363-ab5c2435c3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e7e834-7d5b-41c8-85f0-24e1730a942a",
        "cursor": {
          "ref": "599d0418-e857-4d21-8040-c2eca93971ff",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6318de49-e828-4ce7-8d5d-73bba5a6dd0b"
        },
        "item": {
          "id": "a5e7e834-7d5b-41c8-85f0-24e1730a942a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "33f41e24-14bf-4477-878a-6b1549eae107",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbde37f-536f-444f-ab95-a19a91870098",
        "cursor": {
          "ref": "81e8a774-5f60-474f-ad68-3bbfc5c92599",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "863bd8b9-4f14-4c57-aaa9-fa8dc238d2e9"
        },
        "item": {
          "id": "efbde37f-536f-444f-ab95-a19a91870098",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "eacfbdf5-9ec1-4011-9a3b-e8c290fd0156",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 399,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe227d00-043d-4a86-8d1d-04cf7b94bf0a",
        "cursor": {
          "ref": "51e21121-8d8f-4b64-8bbc-4cbe1e1f401a",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1925d3a9-b60b-4b9c-b291-88ab8713b54f"
        },
        "item": {
          "id": "fe227d00-043d-4a86-8d1d-04cf7b94bf0a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "050dac24-c774-40b8-bd9d-0984177013f5",
          "status": "OK",
          "code": 200,
          "responseTime": 476,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f178ef-66b7-4799-8d46-53e27cb7e2b1",
        "cursor": {
          "ref": "e6e68a2a-4c2a-4f59-971e-9254ca2c9b58",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bd11a778-7118-4ddc-9e34-8ca21fc090da"
        },
        "item": {
          "id": "d0f178ef-66b7-4799-8d46-53e27cb7e2b1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3dc1113d-2618-4ed9-9bbc-eb6f85a4eb4c",
          "status": "OK",
          "code": 200,
          "responseTime": 2170,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8ad477-1ae2-423b-87e5-4b1cba9cf2a5",
        "cursor": {
          "ref": "e83c2bd3-cb75-4dcc-9fab-70d9e7680774",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5dbcff35-b96e-4826-ba70-b97226ed9edf"
        },
        "item": {
          "id": "6a8ad477-1ae2-423b-87e5-4b1cba9cf2a5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fd3792dc-da70-48e3-a3f4-1fb8f929e2cd",
          "status": "OK",
          "code": 200,
          "responseTime": 2263,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db9df1c-dac3-4e32-9e80-89975cc70644",
        "cursor": {
          "ref": "d7186868-9b69-453f-beda-fbc766ff09c7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5663c32c-bcae-4a80-bfe9-6eec83908ef3"
        },
        "item": {
          "id": "5db9df1c-dac3-4e32-9e80-89975cc70644",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50233926-9c21-4874-9bfb-a4adaa857f4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db9df1c-dac3-4e32-9e80-89975cc70644",
        "cursor": {
          "ref": "d7186868-9b69-453f-beda-fbc766ff09c7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5663c32c-bcae-4a80-bfe9-6eec83908ef3"
        },
        "item": {
          "id": "5db9df1c-dac3-4e32-9e80-89975cc70644",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50233926-9c21-4874-9bfb-a4adaa857f4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db9df1c-dac3-4e32-9e80-89975cc70644",
        "cursor": {
          "ref": "d7186868-9b69-453f-beda-fbc766ff09c7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5663c32c-bcae-4a80-bfe9-6eec83908ef3"
        },
        "item": {
          "id": "5db9df1c-dac3-4e32-9e80-89975cc70644",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50233926-9c21-4874-9bfb-a4adaa857f4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472c2eb3-5aa7-4b80-be23-5bd78b185e76",
        "cursor": {
          "ref": "d74f7595-aa1b-43c3-8cc9-3f1e1887c715",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "86d3e40f-51ee-4e57-8720-df6d0649b54e"
        },
        "item": {
          "id": "472c2eb3-5aa7-4b80-be23-5bd78b185e76",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c9e32792-71dc-4a41-a53e-fecd75e37f90",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 750,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1123d132-8def-49e9-b809-c8e6cdafefcd",
        "cursor": {
          "ref": "7ce9d3cd-c2e1-4937-996c-8f6ef319ff51",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "287b203c-14fd-45e9-b390-4b5e39789916"
        },
        "item": {
          "id": "1123d132-8def-49e9-b809-c8e6cdafefcd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7a88591c-ab6f-4544-820c-68f22a281700",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1123d132-8def-49e9-b809-c8e6cdafefcd",
        "cursor": {
          "ref": "7ce9d3cd-c2e1-4937-996c-8f6ef319ff51",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "287b203c-14fd-45e9-b390-4b5e39789916"
        },
        "item": {
          "id": "1123d132-8def-49e9-b809-c8e6cdafefcd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7a88591c-ab6f-4544-820c-68f22a281700",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7dd922-4f6a-4374-9f55-d107f92436e0",
        "cursor": {
          "ref": "3d0f134f-3b47-4946-a45e-2cf2e697e1c9",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bfd7342c-b307-441b-9d3b-1080cf851921"
        },
        "item": {
          "id": "7c7dd922-4f6a-4374-9f55-d107f92436e0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "56357129-3531-4740-ac1d-1e7c710f30d6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 851,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c2838f-f493-4941-99fa-f15aa09031fa",
        "cursor": {
          "ref": "b9effff1-248a-4fe3-ae80-f0dbc7a82626",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ebb0e354-747f-4902-a3e0-04dd12cf3d55"
        },
        "item": {
          "id": "51c2838f-f493-4941-99fa-f15aa09031fa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aa9cb237-5518-47e6-bb33-d37a19a85dec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c2838f-f493-4941-99fa-f15aa09031fa",
        "cursor": {
          "ref": "b9effff1-248a-4fe3-ae80-f0dbc7a82626",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ebb0e354-747f-4902-a3e0-04dd12cf3d55"
        },
        "item": {
          "id": "51c2838f-f493-4941-99fa-f15aa09031fa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aa9cb237-5518-47e6-bb33-d37a19a85dec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91baa4b8-04ae-46c9-8102-f46d73444711",
        "cursor": {
          "ref": "2bbe997d-214a-4550-84c8-25e73e162770",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9eb7ae4e-a3ba-4ee5-a4a1-0a1ec1b84d54"
        },
        "item": {
          "id": "91baa4b8-04ae-46c9-8102-f46d73444711",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "cca4bd7a-b61b-41e3-a642-8f0f92d3881e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 637,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}